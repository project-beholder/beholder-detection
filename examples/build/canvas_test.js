/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/complex.js/complex.js":
/*!*********************************************!*\
  !*** ../node_modules/complex.js/complex.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license Complex.js v2.0.11 11/02/2016
 *
 * Copyright (c) 2016, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/

/**
 *
 * This class allows the manipulation of complex numbers.
 * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.
 *
 * Object form
 * { re: <real>, im: <imaginary> }
 * { arg: <angle>, abs: <radius> }
 * { phi: <angle>, r: <radius> }
 *
 * Array / Vector form
 * [ real, imaginary ]
 *
 * Double form
 * 99.3 - Single double value
 *
 * String form
 * '23.1337' - Simple real number
 * '15+3i' - a simple complex number
 * '3-i' - a simple complex number
 *
 * Example:
 *
 * var c = new Complex('99.3+8i');
 * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);
 *
 */

(function(root) {

  'use strict';

  var cosh = function(x) {
    return (Math.exp(x) + Math.exp(-x)) * 0.5;
  };

  var sinh = function(x) {
    return (Math.exp(x) - Math.exp(-x)) * 0.5;
  };

  /**
   * Calculates cos(x) - 1 using Taylor series if x is small.
   *
   * @param {number} x
   * @returns {number} cos(x) - 1
   */

  var cosm1 = function(x) {
    var limit = Math.PI/4;
    if (x < -limit || x > limit) {
      return (Math.cos(x) - 1.0);
    }

    var xx = x * x;
    return xx *
      (-0.5 + xx *
        (1/24 + xx *
          (-1/720 + xx *
            (1/40320 + xx *
              (-1/3628800 + xx *
                (1/4790014600 + xx *
                  (-1/87178291200 + xx *
                    (1/20922789888000)
                  )
                )
              )
            )
          )
        )
      )
  };

  var hypot = function(x, y) {

    var a = Math.abs(x);
    var b = Math.abs(y);

    if (a < 3000 && b < 3000) {
      return Math.sqrt(a * a + b * b);
    }

    if (a < b) {
      a = b;
      b = x / y;
    } else {
      b = y / x;
    }
    return a * Math.sqrt(1 + b * b);
  };

  var parser_exit = function() {
    throw SyntaxError('Invalid Param');
  };

  /**
   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows
   *
   * @param {number} a
   * @param {number} b
   * @returns {number}
   */
  function logHypot(a, b) {

    var _a = Math.abs(a);
    var _b = Math.abs(b);

    if (a === 0) {
      return Math.log(_b);
    }

    if (b === 0) {
      return Math.log(_a);
    }

    if (_a < 3000 && _b < 3000) {
      return Math.log(a * a + b * b) * 0.5;
    }

    /* I got 4 ideas to compute this property without overflow:
     *
     * Testing 1000000 times with random samples for a,b âˆˆ [1, 1000000000] against a big decimal library to get an error estimate
     *
     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)

     Math.log(a * a + b * b) / 2

     *
     *
     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)

     var fn = function(a, b) {
     a = Math.abs(a);
     b = Math.abs(b);
     var t = Math.min(a, b);
     a = Math.max(a, b);
     t = t / a;

     return Math.log(a) + Math.log(1 + t * t) / 2;
     };

     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)

     Math.log(a / Math.cos(Math.atan2(b, a)))

     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)

     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))

     */

    return Math.log(a / Math.cos(Math.atan2(b, a)));
  }

  var parse = function(a, b) {

    var z = {'re': 0, 'im': 0};

    if (a === undefined || a === null) {
      z['re'] =
              z['im'] = 0;
    } else if (b !== undefined) {
      z['re'] = a;
      z['im'] = b;
    } else
      switch (typeof a) {

        case 'object':

          if ('im' in a && 're' in a) {
            z['re'] = a['re'];
            z['im'] = a['im'];
          } else if ('abs' in a && 'arg' in a) {
            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
              return Complex['INFINITY'];
            }
            z['re'] = a['abs'] * Math.cos(a['arg']);
            z['im'] = a['abs'] * Math.sin(a['arg']);
          } else if ('r' in a && 'phi' in a) {
            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
              return Complex['INFINITY'];
            }
            z['re'] = a['r'] * Math.cos(a['phi']);
            z['im'] = a['r'] * Math.sin(a['phi']);
          } else if (a.length === 2) { // Quick array check
            z['re'] = a[0];
            z['im'] = a[1];
          } else {
            parser_exit();
          }
          break;

        case 'string':

          z['im'] = /* void */
                  z['re'] = 0;

          var tokens = a.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g);
          var plus = 1;
          var minus = 0;

          if (tokens === null) {
            parser_exit();
          }

          for (var i = 0; i < tokens.length; i++) {

            var c = tokens[i];

            if (c === ' ' || c === '\t' || c === '\n') {
              /* void */
            } else if (c === '+') {
              plus++;
            } else if (c === '-') {
              minus++;
            } else if (c === 'i' || c === 'I') {

              if (plus + minus === 0) {
                parser_exit();
              }

              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
                i++;
              } else {
                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
              }
              plus = minus = 0;

            } else {

              if (plus + minus === 0 || isNaN(c)) {
                parser_exit();
              }

              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
                i++;
              } else {
                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
              }
              plus = minus = 0;
            }
          }

          // Still something on the stack
          if (plus + minus > 0) {
            parser_exit();
          }
          break;

        case 'number':
          z['im'] = 0;
          z['re'] = a;
          break;

        default:
          parser_exit();
      }

    if (isNaN(z['re']) || isNaN(z['im'])) {
      // If a calculation is NaN, we treat it as NaN and don't throw
      //parser_exit();
    }

    return z;
  };

  /**
   * @constructor
   * @returns {Complex}
   */
  function Complex(a, b) {

    if (!(this instanceof Complex)) {
      return new Complex(a, b);
    }

    var z = parse(a, b);

    this['re'] = z['re'];
    this['im'] = z['im'];
  }

  Complex.prototype = {

    're': 0,
    'im': 0,

    /**
     * Calculates the sign of a complex number, which is a normalized complex
     *
     * @returns {Complex}
     */
    'sign': function() {

      var abs = this['abs']();

      return new Complex(
              this['re'] / abs,
              this['im'] / abs);
    },

    /**
     * Adds two complex numbers
     *
     * @returns {Complex}
     */
    'add': function(a, b) {

      var z = new Complex(a, b);

      // Infinity + Infinity = NaN
      if (this['isInfinite']() && z['isInfinite']()) {
        return Complex['NAN'];
      }

      // Infinity + z = Infinity { where z != Infinity }
      if (this['isInfinite']() || z['isInfinite']()) {
        return Complex['INFINITY'];
      }

      return new Complex(
              this['re'] + z['re'],
              this['im'] + z['im']);
    },

    /**
     * Subtracts two complex numbers
     *
     * @returns {Complex}
     */
    'sub': function(a, b) {

      var z = new Complex(a, b);

      // Infinity - Infinity = NaN
      if (this['isInfinite']() && z['isInfinite']()) {
        return Complex['NAN'];
      }

      // Infinity - z = Infinity { where z != Infinity }
      if (this['isInfinite']() || z['isInfinite']()) {
        return Complex['INFINITY'];
      }

      return new Complex(
              this['re'] - z['re'],
              this['im'] - z['im']);
    },

    /**
     * Multiplies two complex numbers
     *
     * @returns {Complex}
     */
    'mul': function(a, b) {

      var z = new Complex(a, b);

      // Infinity * 0 = NaN
      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
        return Complex['NAN'];
      }

      // Infinity * z = Infinity { where z != 0 }
      if (this['isInfinite']() || z['isInfinite']()) {
        return Complex['INFINITY'];
      }

      // Short circuit for real values
      if (z['im'] === 0 && this['im'] === 0) {
        return new Complex(this['re'] * z['re'], 0);
      }

      return new Complex(
              this['re'] * z['re'] - this['im'] * z['im'],
              this['re'] * z['im'] + this['im'] * z['re']);
    },

    /**
     * Divides two complex numbers
     *
     * @returns {Complex}
     */
    'div': function(a, b) {

      var z = new Complex(a, b);

      // 0 / 0 = NaN and Infinity / Infinity = NaN
      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {
        return Complex['NAN'];
      }

      // Infinity / 0 = Infinity
      if (this['isInfinite']() || z['isZero']()) {
        return Complex['INFINITY'];
      }

      // 0 / Infinity = 0
      if (this['isZero']() || z['isInfinite']()) {
        return Complex['ZERO'];
      }

      a = this['re'];
      b = this['im'];

      var c = z['re'];
      var d = z['im'];
      var t, x;

      if (0 === d) {
        // Divisor is real
        return new Complex(a / c, b / c);
      }

      if (Math.abs(c) < Math.abs(d)) {

        x = c / d;
        t = c * x + d;

        return new Complex(
                (a * x + b) / t,
                (b * x - a) / t);

      } else {

        x = d / c;
        t = d * x + c;

        return new Complex(
                (a + b * x) / t,
                (b - a * x) / t);
      }
    },

    /**
     * Calculate the power of two complex numbers
     *
     * @returns {Complex}
     */
    'pow': function(a, b) {

      var z = new Complex(a, b);

      a = this['re'];
      b = this['im'];

      if (z['isZero']()) {
        return Complex['ONE'];
      }

      // If the exponent is real
      if (z['im'] === 0) {

        if (b === 0 && a >= 0) {

          return new Complex(Math.pow(a, z['re']), 0);

        } else if (a === 0) { // If base is fully imaginary

          switch ((z['re'] % 4 + 4) % 4) {
            case 0:
              return new Complex(Math.pow(b, z['re']), 0);
            case 1:
              return new Complex(0, Math.pow(b, z['re']));
            case 2:
              return new Complex(-Math.pow(b, z['re']), 0);
            case 3:
              return new Complex(0, -Math.pow(b, z['re']));
          }
        }
      }

      /* I couldn't find a good formula, so here is a derivation and optimization
       *
       * z_1^z_2 = (a + bi)^(c + di)
       *         = exp((c + di) * log(a + bi)
       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))
       * =>...
       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))
       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))
       *
       * =>...
       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))
       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))
       *
       * =>
       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))
       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))
       *
       */

      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {
        return Complex['ZERO'];
      }

      var arg = Math.atan2(b, a);
      var loh = logHypot(a, b);

      a = Math.exp(z['re'] * loh - z['im'] * arg);
      b = z['im'] * loh + z['re'] * arg;
      return new Complex(
              a * Math.cos(b),
              a * Math.sin(b));
    },

    /**
     * Calculate the complex square root
     *
     * @returns {Complex}
     */
    'sqrt': function() {

      var a = this['re'];
      var b = this['im'];
      var r = this['abs']();

      var re, im;

      if (a >= 0) {

        if (b === 0) {
          return new Complex(Math.sqrt(a), 0);
        }

        re = 0.5 * Math.sqrt(2.0 * (r + a));
      } else {
        re = Math.abs(b) / Math.sqrt(2 * (r - a));
      }

      if (a <= 0) {
        im = 0.5 * Math.sqrt(2.0 * (r - a));
      } else {
        im = Math.abs(b) / Math.sqrt(2 * (r + a));
      }

      return new Complex(re, b < 0 ? -im : im);
    },

    /**
     * Calculate the complex exponent
     *
     * @returns {Complex}
     */
    'exp': function() {

      var tmp = Math.exp(this['re']);

      if (this['im'] === 0) {
        //return new Complex(tmp, 0);
      }
      return new Complex(
              tmp * Math.cos(this['im']),
              tmp * Math.sin(this['im']));
    },

    /**
     * Calculate the complex exponent and subtracts one.
     *
     * This may be more accurate than `Complex(x).exp().sub(1)` if
     * `x` is small.
     *
     * @returns {Complex}
     */
    'expm1': function() {

      /**
       * exp(a + i*b) - 1
       = exp(a) * (cos(b) + j*sin(b)) - 1
       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)
       */

      var a = this['re'];
      var b = this['im'];

      return new Complex(
              Math.expm1(a) * Math.cos(b) + cosm1(b),
              Math.exp(a) * Math.sin(b));
    },

    /**
     * Calculate the natural log
     *
     * @returns {Complex}
     */
    'log': function() {

      var a = this['re'];
      var b = this['im'];

      if (b === 0 && a > 0) {
        //return new Complex(Math.log(a), 0);
      }

      return new Complex(
              logHypot(a, b),
              Math.atan2(b, a));
    },

    /**
     * Calculate the magnitude of the complex number
     *
     * @returns {number}
     */
    'abs': function() {

      return hypot(this['re'], this['im']);
    },

    /**
     * Calculate the angle of the complex number
     *
     * @returns {number}
     */
    'arg': function() {

      return Math.atan2(this['im'], this['re']);
    },

    /**
     * Calculate the sine of the complex number
     *
     * @returns {Complex}
     */
    'sin': function() {

      // sin(c) = (e^b - e^(-b)) / (2i)

      var a = this['re'];
      var b = this['im'];

      return new Complex(
              Math.sin(a) * cosh(b),
              Math.cos(a) * sinh(b));
    },

    /**
     * Calculate the cosine
     *
     * @returns {Complex}
     */
    'cos': function() {

      // cos(z) = (e^b + e^(-b)) / 2

      var a = this['re'];
      var b = this['im'];

      return new Complex(
              Math.cos(a) * cosh(b),
              -Math.sin(a) * sinh(b));
    },

    /**
     * Calculate the tangent
     *
     * @returns {Complex}
     */
    'tan': function() {

      // tan(c) = (e^(ci) - e^(-ci)) / (i(e^(ci) + e^(-ci)))

      var a = 2 * this['re'];
      var b = 2 * this['im'];
      var d = Math.cos(a) + cosh(b);

      return new Complex(
              Math.sin(a) / d,
              sinh(b) / d);
    },

    /**
     * Calculate the cotangent
     *
     * @returns {Complex}
     */
    'cot': function() {

      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))

      var a = 2 * this['re'];
      var b = 2 * this['im'];
      var d = Math.cos(a) - cosh(b);

      return new Complex(
              -Math.sin(a) / d,
              sinh(b) / d);
    },

    /**
     * Calculate the secant
     *
     * @returns {Complex}
     */
    'sec': function() {

      // sec(c) = 2 / (e^(ci) + e^(-ci))

      var a = this['re'];
      var b = this['im'];
      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);

      return new Complex(
              Math.cos(a) * cosh(b) / d,
              Math.sin(a) * sinh(b) / d);
    },

    /**
     * Calculate the cosecans
     *
     * @returns {Complex}
     */
    'csc': function() {

      // csc(c) = 2i / (e^(ci) - e^(-ci))

      var a = this['re'];
      var b = this['im'];
      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);

      return new Complex(
              Math.sin(a) * cosh(b) / d,
              -Math.cos(a) * sinh(b) / d);
    },

    /**
     * Calculate the complex arcus sinus
     *
     * @returns {Complex}
     */
    'asin': function() {

      // asin(c) = -i * log(ci + sqrt(1 - c^2))

      var a = this['re'];
      var b = this['im'];

      var t1 = new Complex(
              b * b - a * a + 1,
              -2 * a * b)['sqrt']();

      var t2 = new Complex(
              t1['re'] - b,
              t1['im'] + a)['log']();

      return new Complex(t2['im'], -t2['re']);
    },

    /**
     * Calculate the complex arcus cosinus
     *
     * @returns {Complex}
     */
    'acos': function() {

      // acos(c) = i * log(c - i * sqrt(1 - c^2))

      var a = this['re'];
      var b = this['im'];

      var t1 = new Complex(
              b * b - a * a + 1,
              -2 * a * b)['sqrt']();

      var t2 = new Complex(
              t1['re'] - b,
              t1['im'] + a)['log']();

      return new Complex(Math.PI / 2 - t2['im'], t2['re']);
    },

    /**
     * Calculate the complex arcus tangent
     *
     * @returns {Complex}
     */
    'atan': function() {

      // atan(c) = i / 2 log((i + x) / (i - x))

      var a = this['re'];
      var b = this['im'];

      if (a === 0) {

        if (b === 1) {
          return new Complex(0, Infinity);
        }

        if (b === -1) {
          return new Complex(0, -Infinity);
        }
      }

      var d = a * a + (1.0 - b) * (1.0 - b);

      var t1 = new Complex(
              (1 - b * b - a * a) / d,
              -2 * a / d).log();

      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);
    },

    /**
     * Calculate the complex arcus cotangent
     *
     * @returns {Complex}
     */
    'acot': function() {

      // acot(c) = i / 2 log((c - i) / (c + i))

      var a = this['re'];
      var b = this['im'];

      if (b === 0) {
        return new Complex(Math.atan2(1, a), 0);
      }

      var d = a * a + b * b;
      return (d !== 0)
              ? new Complex(
                      a / d,
                      -b / d).atan()
              : new Complex(
                      (a !== 0) ? a / 0 : 0,
                      (b !== 0) ? -b / 0 : 0).atan();
    },

    /**
     * Calculate the complex arcus secant
     *
     * @returns {Complex}
     */
    'asec': function() {

      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))

      var a = this['re'];
      var b = this['im'];

      if (a === 0 && b === 0) {
        return new Complex(0, Infinity);
      }

      var d = a * a + b * b;
      return (d !== 0)
              ? new Complex(
                      a / d,
                      -b / d).acos()
              : new Complex(
                      (a !== 0) ? a / 0 : 0,
                      (b !== 0) ? -b / 0 : 0).acos();
    },

    /**
     * Calculate the complex arcus cosecans
     *
     * @returns {Complex}
     */
    'acsc': function() {

      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))

      var a = this['re'];
      var b = this['im'];

      if (a === 0 && b === 0) {
        return new Complex(Math.PI / 2, Infinity);
      }

      var d = a * a + b * b;
      return (d !== 0)
              ? new Complex(
                      a / d,
                      -b / d).asin()
              : new Complex(
                      (a !== 0) ? a / 0 : 0,
                      (b !== 0) ? -b / 0 : 0).asin();
    },

    /**
     * Calculate the complex sinh
     *
     * @returns {Complex}
     */
    'sinh': function() {

      // sinh(c) = (e^c - e^-c) / 2

      var a = this['re'];
      var b = this['im'];

      return new Complex(
              sinh(a) * Math.cos(b),
              cosh(a) * Math.sin(b));
    },

    /**
     * Calculate the complex cosh
     *
     * @returns {Complex}
     */
    'cosh': function() {

      // cosh(c) = (e^c + e^-c) / 2

      var a = this['re'];
      var b = this['im'];

      return new Complex(
              cosh(a) * Math.cos(b),
              sinh(a) * Math.sin(b));
    },

    /**
     * Calculate the complex tanh
     *
     * @returns {Complex}
     */
    'tanh': function() {

      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)

      var a = 2 * this['re'];
      var b = 2 * this['im'];
      var d = cosh(a) + Math.cos(b);

      return new Complex(
              sinh(a) / d,
              Math.sin(b) / d);
    },

    /**
     * Calculate the complex coth
     *
     * @returns {Complex}
     */
    'coth': function() {

      // coth(c) = (e^c + e^-c) / (e^c - e^-c)

      var a = 2 * this['re'];
      var b = 2 * this['im'];
      var d = cosh(a) - Math.cos(b);

      return new Complex(
              sinh(a) / d,
              -Math.sin(b) / d);
    },

    /**
     * Calculate the complex coth
     *
     * @returns {Complex}
     */
    'csch': function() {

      // csch(c) = 2 / (e^c - e^-c)

      var a = this['re'];
      var b = this['im'];
      var d = Math.cos(2 * b) - cosh(2 * a);

      return new Complex(
              -2 * sinh(a) * Math.cos(b) / d,
              2 * cosh(a) * Math.sin(b) / d);
    },

    /**
     * Calculate the complex sech
     *
     * @returns {Complex}
     */
    'sech': function() {

      // sech(c) = 2 / (e^c + e^-c)

      var a = this['re'];
      var b = this['im'];
      var d = Math.cos(2 * b) + cosh(2 * a);

      return new Complex(
              2 * cosh(a) * Math.cos(b) / d,
              -2 * sinh(a) * Math.sin(b) / d);
    },

    /**
     * Calculate the complex asinh
     *
     * @returns {Complex}
     */
    'asinh': function() {

      // asinh(c) = log(c + sqrt(c^2 + 1))

      var tmp = this['im'];
      this['im'] = -this['re'];
      this['re'] = tmp;
      var res = this['asin']();

      this['re'] = -this['im'];
      this['im'] = tmp;
      tmp = res['re'];

      res['re'] = -res['im'];
      res['im'] = tmp;
      return res;
    },

    /**
     * Calculate the complex asinh
     *
     * @returns {Complex}
     */
    'acosh': function() {

      // acosh(c) = log(c + sqrt(c^2 - 1))

      var res = this['acos']();
      if (res['im'] <= 0) {
        var tmp = res['re'];
        res['re'] = -res['im'];
        res['im'] = tmp;
      } else {
        var tmp = res['im'];
        res['im'] = -res['re'];
        res['re'] = tmp;
      }
      return res;
    },

    /**
     * Calculate the complex atanh
     *
     * @returns {Complex}
     */
    'atanh': function() {

      // atanh(c) = log((1+c) / (1-c)) / 2

      var a = this['re'];
      var b = this['im'];

      var noIM = a > 1 && b === 0;
      var oneMinus = 1 - a;
      var onePlus = 1 + a;
      var d = oneMinus * oneMinus + b * b;

      var x = (d !== 0)
              ? new Complex(
                      (onePlus * oneMinus - b * b) / d,
                      (b * oneMinus + onePlus * b) / d)
              : new Complex(
                      (a !== -1) ? (a / 0) : 0,
                      (b !== 0) ? (b / 0) : 0);

      var temp = x['re'];
      x['re'] = logHypot(x['re'], x['im']) / 2;
      x['im'] = Math.atan2(x['im'], temp) / 2;
      if (noIM) {
        x['im'] = -x['im'];
      }
      return x;
    },

    /**
     * Calculate the complex acoth
     *
     * @returns {Complex}
     */
    'acoth': function() {

      // acoth(c) = log((c+1) / (c-1)) / 2

      var a = this['re'];
      var b = this['im'];

      if (a === 0 && b === 0) {
        return new Complex(0, Math.PI / 2);
      }

      var d = a * a + b * b;
      return (d !== 0)
              ? new Complex(
                      a / d,
                      -b / d).atanh()
              : new Complex(
                      (a !== 0) ? a / 0 : 0,
                      (b !== 0) ? -b / 0 : 0).atanh();
    },

    /**
     * Calculate the complex acsch
     *
     * @returns {Complex}
     */
    'acsch': function() {

      // acsch(c) = log((1+sqrt(1+c^2))/c)

      var a = this['re'];
      var b = this['im'];

      if (b === 0) {

        return new Complex(
                (a !== 0)
                ? Math.log(a + Math.sqrt(a * a + 1))
                : Infinity, 0);
      }

      var d = a * a + b * b;
      return (d !== 0)
              ? new Complex(
                      a / d,
                      -b / d).asinh()
              : new Complex(
                      (a !== 0) ? a / 0 : 0,
                      (b !== 0) ? -b / 0 : 0).asinh();
    },

    /**
     * Calculate the complex asech
     *
     * @returns {Complex}
     */
    'asech': function() {

      // asech(c) = log((1+sqrt(1-c^2))/c)

      var a = this['re'];
      var b = this['im'];

      if (this['isZero']()) {
        return Complex['INFINITY'];
      }

      var d = a * a + b * b;
      return (d !== 0)
              ? new Complex(
                      a / d,
                      -b / d).acosh()
              : new Complex(
                      (a !== 0) ? a / 0 : 0,
                      (b !== 0) ? -b / 0 : 0).acosh();
    },

    /**
     * Calculate the complex inverse 1/z
     *
     * @returns {Complex}
     */
    'inverse': function() {

      // 1 / 0 = Infinity and 1 / Infinity = 0
      if (this['isZero']()) {
        return Complex['INFINITY'];
      }

      if (this['isInfinite']()) {
        return Complex['ZERO'];
      }

      var a = this['re'];
      var b = this['im'];

      var d = a * a + b * b;

      return new Complex(a / d, -b / d);
    },

    /**
     * Returns the complex conjugate
     *
     * @returns {Complex}
     */
    'conjugate': function() {

      return new Complex(this['re'], -this['im']);
    },

    /**
     * Gets the negated complex number
     *
     * @returns {Complex}
     */
    'neg': function() {

      return new Complex(-this['re'], -this['im']);
    },

    /**
     * Ceils the actual complex number
     *
     * @returns {Complex}
     */
    'ceil': function(places) {

      places = Math.pow(10, places || 0);

      return new Complex(
              Math.ceil(this['re'] * places) / places,
              Math.ceil(this['im'] * places) / places);
    },

    /**
     * Floors the actual complex number
     *
     * @returns {Complex}
     */
    'floor': function(places) {

      places = Math.pow(10, places || 0);

      return new Complex(
              Math.floor(this['re'] * places) / places,
              Math.floor(this['im'] * places) / places);
    },

    /**
     * Ceils the actual complex number
     *
     * @returns {Complex}
     */
    'round': function(places) {

      places = Math.pow(10, places || 0);

      return new Complex(
              Math.round(this['re'] * places) / places,
              Math.round(this['im'] * places) / places);
    },

    /**
     * Compares two complex numbers
     *
     * **Note:** new Complex(Infinity).equals(Infinity) === false
     *
     * @returns {boolean}
     */
    'equals': function(a, b) {

      var z = new Complex(a, b);

      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
              Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];
    },

    /**
     * Clones the actual object
     *
     * @returns {Complex}
     */
    'clone': function() {

      return new Complex(this['re'], this['im']);
    },

    /**
     * Gets a string of the actual complex number
     *
     * @returns {string}
     */
    'toString': function() {

      var a = this['re'];
      var b = this['im'];
      var ret = '';

      if (this['isNaN']()) {
        return 'NaN';
      }

      if (this['isZero']()) {
        return '0';
      }

      if (this['isInfinite']()) {
        return 'Infinity';
      }

      if (a !== 0) {
        ret += a;
      }

      if (b !== 0) {

        if (a !== 0) {
          ret += b < 0 ? ' - ' : ' + ';
        } else if (b < 0) {
          ret += '-';
        }

        b = Math.abs(b);

        if (1 !== b) {
          ret += b;
        }
        ret += 'i';
      }

      if (!ret)
        return '0';

      return ret;
    },

    /**
     * Returns the actual number as a vector
     *
     * @returns {Array}
     */
    'toVector': function() {

      return [this['re'], this['im']];
    },

    /**
     * Returns the actual real value of the current object
     *
     * @returns {number|null}
     */
    'valueOf': function() {

      if (this['im'] === 0) {
        return this['re'];
      }
      return null;
    },

    /**
     * Determines whether a complex number is not on the Riemann sphere.
     *
     * @returns {boolean}
     */
    'isNaN': function() {
      return isNaN(this['re']) || isNaN(this['im']);
    },

    /**
     * Determines whether or not a complex number is at the zero pole of the
     * Riemann sphere.
     *
     * @returns {boolean}
     */
    'isZero': function() {
      return (
              (this['re'] === 0 || this['re'] === -0) &&
              (this['im'] === 0 || this['im'] === -0)
              );
    },

    /**
     * Determines whether a complex number is not at the infinity pole of the
     * Riemann sphere.
     *
     * @returns {boolean}
     */
    'isFinite': function() {
      return isFinite(this['re']) && isFinite(this['im']);
    },

    /**
     * Determines whether or not a complex number is at the infinity pole of the
     * Riemann sphere.
     *
     * @returns {boolean}
     */
    'isInfinite': function() {
      return !(this['isNaN']() || this['isFinite']());
    }
  };

  Complex['ZERO'] = new Complex(0, 0);
  Complex['ONE'] = new Complex(1, 0);
  Complex['I'] = new Complex(0, 1);
  Complex['PI'] = new Complex(Math.PI, 0);
  Complex['E'] = new Complex(Math.E, 0);
  Complex['INFINITY'] = new Complex(Infinity, Infinity);
  Complex['NAN'] = new Complex(NaN, NaN);
  Complex['EPSILON'] = 1e-16;

  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return Complex;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

})(this);


/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/cssWithMappingToString.js":
/*!*************************************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/cssWithMappingToString.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function cssWithMappingToString(item) {
  var _item = _slicedToArray(item, 4),
      content = _item[1],
      cssMapping = _item[3];

  if (typeof btoa === "function") {
    // eslint-disable-next-line no-undef
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "../node_modules/decimal.js/decimal.js":
/*!*********************************************!*\
  !*** ../node_modules/decimal.js/decimal.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;;(function (globalScope) {
  'use strict';


  /*
   *  decimal.js v10.2.0
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js
   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Licence
   */


  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //


    // The maximum exponent magnitude.
    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.
  var EXP_LIMIT = 9e15,                      // 0 to 9e15

    // The limit on the value of `precision`, and on the value of the first argument to
    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.
    MAX_DIGITS = 1e9,                        // 0 to 1e9

    // Base conversion alphabet.
    NUMERALS = '0123456789abcdef',

    // The natural logarithm of 10 (1025 digits).
    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',

    // Pi (1025 digits).
    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',


    // The initial configuration properties of the Decimal constructor.
    DEFAULTS = {

      // These values must be integers within the stated ranges (inclusive).
      // Most of these values can be changed at run-time using the `Decimal.config` method.

      // The maximum number of significant digits of the result of a calculation or base conversion.
      // E.g. `Decimal.config({ precision: 20 });`
      precision: 20,                         // 1 to MAX_DIGITS

      // The rounding mode used when rounding to `precision`.
      //
      // ROUND_UP         0 Away from zero.
      // ROUND_DOWN       1 Towards zero.
      // ROUND_CEIL       2 Towards +Infinity.
      // ROUND_FLOOR      3 Towards -Infinity.
      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
      //
      // E.g.
      // `Decimal.rounding = 4;`
      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
      rounding: 4,                           // 0 to 8

      // The modulo mode used when calculating the modulus: a mod n.
      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
      // The remainder (r) is calculated as: r = a - n * q.
      //
      // UP         0 The remainder is positive if the dividend is negative, else is negative.
      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).
      // FLOOR      3 The remainder has the same sign as the divisor (Python %).
      // HALF_EVEN  6 The IEEE 754 remainder function.
      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.
      //
      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian
      // division (9) are commonly used for the modulus operation. The other rounding modes can also
      // be used, but they may not give useful results.
      modulo: 1,                             // 0 to 9

      // The exponent value at and beneath which `toString` returns exponential notation.
      // JavaScript numbers: -7
      toExpNeg: -7,                          // 0 to -EXP_LIMIT

      // The exponent value at and above which `toString` returns exponential notation.
      // JavaScript numbers: 21
      toExpPos:  21,                         // 0 to EXP_LIMIT

      // The minimum exponent value, beneath which underflow to zero occurs.
      // JavaScript numbers: -324  (5e-324)
      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT

      // The maximum exponent value, above which overflow to Infinity occurs.
      // JavaScript numbers: 308  (1.7976931348623157e+308)
      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT

      // Whether to use cryptographically-secure random number generation, if available.
      crypto: false                          // true/false
    },


  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //


    Decimal, inexact, noConflict, quadrant,
    external = true,

    decimalError = '[DecimalError] ',
    invalidArgument = decimalError + 'Invalid argument: ',
    precisionLimitExceeded = decimalError + 'Precision limit exceeded',
    cryptoUnavailable = decimalError + 'crypto unavailable',

    mathfloor = Math.floor,
    mathpow = Math.pow,

    isBinary = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,
    isHex = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,
    isOctal = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,
    isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,

    BASE = 1e7,
    LOG_BASE = 7,
    MAX_SAFE_INTEGER = 9007199254740991,

    LN10_PRECISION = LN10.length - 1,
    PI_PRECISION = PI.length - 1,

    // Decimal.prototype object
    P = { name: '[object Decimal]' };


  // Decimal prototype methods


  /*
   *  absoluteValue             abs
   *  ceil
   *  comparedTo                cmp
   *  cosine                    cos
   *  cubeRoot                  cbrt
   *  decimalPlaces             dp
   *  dividedBy                 div
   *  dividedToIntegerBy        divToInt
   *  equals                    eq
   *  floor
   *  greaterThan               gt
   *  greaterThanOrEqualTo      gte
   *  hyperbolicCosine          cosh
   *  hyperbolicSine            sinh
   *  hyperbolicTangent         tanh
   *  inverseCosine             acos
   *  inverseHyperbolicCosine   acosh
   *  inverseHyperbolicSine     asinh
   *  inverseHyperbolicTangent  atanh
   *  inverseSine               asin
   *  inverseTangent            atan
   *  isFinite
   *  isInteger                 isInt
   *  isNaN
   *  isNegative                isNeg
   *  isPositive                isPos
   *  isZero
   *  lessThan                  lt
   *  lessThanOrEqualTo         lte
   *  logarithm                 log
   *  [maximum]                 [max]
   *  [minimum]                 [min]
   *  minus                     sub
   *  modulo                    mod
   *  naturalExponential        exp
   *  naturalLogarithm          ln
   *  negated                   neg
   *  plus                      add
   *  precision                 sd
   *  round
   *  sine                      sin
   *  squareRoot                sqrt
   *  tangent                   tan
   *  times                     mul
   *  toBinary
   *  toDecimalPlaces           toDP
   *  toExponential
   *  toFixed
   *  toFraction
   *  toHexadecimal             toHex
   *  toNearest
   *  toNumber
   *  toOctal
   *  toPower                   pow
   *  toPrecision
   *  toSignificantDigits       toSD
   *  toString
   *  truncated                 trunc
   *  valueOf                   toJSON
   */


  /*
   * Return a new Decimal whose value is the absolute value of this Decimal.
   *
   */
  P.absoluteValue = P.abs = function () {
    var x = new this.constructor(this);
    if (x.s < 0) x.s = 1;
    return finalise(x);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the
   * direction of positive Infinity.
   *
   */
  P.ceil = function () {
    return finalise(new this.constructor(this), this.e + 1, 2);
  };


  /*
   * Return
   *   1    if the value of this Decimal is greater than the value of `y`,
   *  -1    if the value of this Decimal is less than the value of `y`,
   *   0    if they have the same value,
   *   NaN  if the value of either Decimal is NaN.
   *
   */
  P.comparedTo = P.cmp = function (y) {
    var i, j, xdL, ydL,
      x = this,
      xd = x.d,
      yd = (y = new x.constructor(y)).d,
      xs = x.s,
      ys = y.s;

    // Either NaN or Â±Infinity?
    if (!xd || !yd) {
      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;
    }

    // Either zero?
    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;

    // Signs differ?
    if (xs !== ys) return xs;

    // Compare exponents.
    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;

    xdL = xd.length;
    ydL = yd.length;

    // Compare digit by digit.
    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {
      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;
    }

    // Compare lengths.
    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;
  };


  /*
   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-1, 1]
   *
   * cos(0)         = 1
   * cos(-0)        = 1
   * cos(Infinity)  = NaN
   * cos(-Infinity) = NaN
   * cos(NaN)       = NaN
   *
   */
  P.cosine = P.cos = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.d) return new Ctor(NaN);

    // cos(0) = cos(-0) = 1
    if (!x.d[0]) return new Ctor(1);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
    Ctor.rounding = 1;

    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);
  };


  /*
   *
   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   *  cbrt(0)  =  0
   *  cbrt(-0) = -0
   *  cbrt(1)  =  1
   *  cbrt(-1) = -1
   *  cbrt(N)  =  N
   *  cbrt(-I) = -I
   *  cbrt(I)  =  I
   *
   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))
   *
   */
  P.cubeRoot = P.cbrt = function () {
    var e, m, n, r, rep, s, sd, t, t3, t3plusx,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite() || x.isZero()) return new Ctor(x);
    external = false;

    // Initial estimate.
    s = x.s * mathpow(x.s * x, 1 / 3);

     // Math.cbrt underflow/overflow?
     // Pass x to Math.pow as integer, then adjust the exponent of the result.
    if (!s || Math.abs(s) == 1 / 0) {
      n = digitsToString(x.d);
      e = x.e;

      // Adjust n exponent so it is a multiple of 3 away from x exponent.
      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');
      s = mathpow(n, 1 / 3);

      // Rarely, e may be one less than the result exponent value.
      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));

      if (s == 1 / 0) {
        n = '5e' + e;
      } else {
        n = s.toExponential();
        n = n.slice(0, n.indexOf('e') + 1) + e;
      }

      r = new Ctor(n);
      r.s = x.s;
    } else {
      r = new Ctor(s.toString());
    }

    sd = (e = Ctor.precision) + 3;

    // Halley's method.
    // TODO? Compare Newton's method.
    for (;;) {
      t = r;
      t3 = t.times(t).times(t);
      t3plusx = t3.plus(x);
      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);

      // TODO? Replace with for-loop and checkRoundingDigits.
      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
        n = n.slice(sd - 3, sd + 1);

        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999
        // , i.e. approaching a rounding boundary, continue the iteration.
        if (n == '9999' || !rep && n == '4999') {

          // On the first iteration only, check to see if rounding up gives the exact result as the
          // nines may infinitely repeat.
          if (!rep) {
            finalise(t, e + 1, 0);

            if (t.times(t).times(t).eq(x)) {
              r = t;
              break;
            }
          }

          sd += 4;
          rep = 1;
        } else {

          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.
          // If not, then there are further digits and m will be truthy.
          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

            // Truncate to the first rounding digit.
            finalise(r, e + 1, 1);
            m = !r.times(r).times(r).eq(x);
          }

          break;
        }
      }
    }

    external = true;

    return finalise(r, e, Ctor.rounding, m);
  };


  /*
   * Return the number of decimal places of the value of this Decimal.
   *
   */
  P.decimalPlaces = P.dp = function () {
    var w,
      d = this.d,
      n = NaN;

    if (d) {
      w = d.length - 1;
      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;

      // Subtract the number of trailing zeros of the last word.
      w = d[w];
      if (w) for (; w % 10 == 0; w /= 10) n--;
      if (n < 0) n = 0;
    }

    return n;
  };


  /*
   *  n / 0 = I
   *  n / N = N
   *  n / I = 0
   *  0 / n = 0
   *  0 / 0 = N
   *  0 / N = N
   *  0 / I = 0
   *  N / n = N
   *  N / 0 = N
   *  N / N = N
   *  N / I = N
   *  I / n = I
   *  I / 0 = I
   *  I / N = N
   *  I / I = N
   *
   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   */
  P.dividedBy = P.div = function (y) {
    return divide(this, new this.constructor(y));
  };


  /*
   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal
   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.
   *
   */
  P.dividedToIntegerBy = P.divToInt = function (y) {
    var x = this,
      Ctor = x.constructor;
    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);
  };


  /*
   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.
   *
   */
  P.equals = P.eq = function (y) {
    return this.cmp(y) === 0;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the
   * direction of negative Infinity.
   *
   */
  P.floor = function () {
    return finalise(new this.constructor(this), this.e + 1, 3);
  };


  /*
   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return
   * false.
   *
   */
  P.greaterThan = P.gt = function (y) {
    return this.cmp(y) > 0;
  };


  /*
   * Return true if the value of this Decimal is greater than or equal to the value of `y`,
   * otherwise return false.
   *
   */
  P.greaterThanOrEqualTo = P.gte = function (y) {
    var k = this.cmp(y);
    return k == 1 || k === 0;
  };


  /*
   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [1, Infinity]
   *
   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...
   *
   * cosh(0)         = 1
   * cosh(-0)        = 1
   * cosh(Infinity)  = Infinity
   * cosh(-Infinity) = Infinity
   * cosh(NaN)       = NaN
   *
   *  x        time taken (ms)   result
   * 1000      9                 9.8503555700852349694e+433
   * 10000     25                4.4034091128314607936e+4342
   * 100000    171               1.4033316802130615897e+43429
   * 1000000   3817              1.5166076984010437725e+434294
   * 10000000  abandoned after 2 minute wait
   *
   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))
   *
   */
  P.hyperbolicCosine = P.cosh = function () {
    var k, n, pr, rm, len,
      x = this,
      Ctor = x.constructor,
      one = new Ctor(1);

    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);
    if (x.isZero()) return one;

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
    Ctor.rounding = 1;
    len = x.d.length;

    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1
    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))

    // Estimate the optimum number of times to use the argument reduction.
    // TODO? Estimation reused from cosine() and may not be optimal here.
    if (len < 32) {
      k = Math.ceil(len / 3);
      n = (1 / tinyPow(4, k)).toString();
    } else {
      k = 16;
      n = '2.3283064365386962890625e-10';
    }

    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);

    // Reverse argument reduction
    var cosh2_x,
      i = k,
      d8 = new Ctor(8);
    for (; i--;) {
      cosh2_x = x.times(x);
      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));
    }

    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);
  };


  /*
   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-Infinity, Infinity]
   *
   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...
   *
   * sinh(0)         = 0
   * sinh(-0)        = -0
   * sinh(Infinity)  = Infinity
   * sinh(-Infinity) = -Infinity
   * sinh(NaN)       = NaN
   *
   * x        time taken (ms)
   * 10       2 ms
   * 100      5 ms
   * 1000     14 ms
   * 10000    82 ms
   * 100000   886 ms            1.4033316802130615897e+43429
   * 200000   2613 ms
   * 300000   5407 ms
   * 400000   8824 ms
   * 500000   13026 ms          8.7080643612718084129e+217146
   * 1000000  48543 ms
   *
   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))
   *
   */
  P.hyperbolicSine = P.sinh = function () {
    var k, pr, rm, len,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite() || x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
    Ctor.rounding = 1;
    len = x.d.length;

    if (len < 3) {
      x = taylorSeries(Ctor, 2, x, x, true);
    } else {

      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))
      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))
      // 3 multiplications and 1 addition

      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))
      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))
      // 4 multiplications and 2 additions

      // Estimate the optimum number of times to use the argument reduction.
      k = 1.4 * Math.sqrt(len);
      k = k > 16 ? 16 : k | 0;

      x = x.times(1 / tinyPow(5, k));
      x = taylorSeries(Ctor, 2, x, x, true);

      // Reverse argument reduction
      var sinh2_x,
        d5 = new Ctor(5),
        d16 = new Ctor(16),
        d20 = new Ctor(20);
      for (; k--;) {
        sinh2_x = x.times(x);
        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));
      }
    }

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(x, pr, rm, true);
  };


  /*
   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-1, 1]
   *
   * tanh(x) = sinh(x) / cosh(x)
   *
   * tanh(0)         = 0
   * tanh(-0)        = -0
   * tanh(Infinity)  = 1
   * tanh(-Infinity) = -1
   * tanh(NaN)       = NaN
   *
   */
  P.hyperbolicTangent = P.tanh = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(x.s);
    if (x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 7;
    Ctor.rounding = 1;

    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);
  };


  /*
   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of
   * this Decimal.
   *
   * Domain: [-1, 1]
   * Range: [0, pi]
   *
   * acos(x) = pi/2 - asin(x)
   *
   * acos(0)       = pi/2
   * acos(-0)      = pi/2
   * acos(1)       = 0
   * acos(-1)      = pi
   * acos(1/2)     = pi/3
   * acos(-1/2)    = 2*pi/3
   * acos(|x| > 1) = NaN
   * acos(NaN)     = NaN
   *
   */
  P.inverseCosine = P.acos = function () {
    var halfPi,
      x = this,
      Ctor = x.constructor,
      k = x.abs().cmp(1),
      pr = Ctor.precision,
      rm = Ctor.rounding;

    if (k !== -1) {
      return k === 0
        // |x| is 1
        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)
        // |x| > 1 or x is NaN
        : new Ctor(NaN);
    }

    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);

    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3

    Ctor.precision = pr + 6;
    Ctor.rounding = 1;

    x = x.asin();
    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return halfPi.minus(x);
  };


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the
   * value of this Decimal.
   *
   * Domain: [1, Infinity]
   * Range: [0, Infinity]
   *
   * acosh(x) = ln(x + sqrt(x^2 - 1))
   *
   * acosh(x < 1)     = NaN
   * acosh(NaN)       = NaN
   * acosh(Infinity)  = Infinity
   * acosh(-Infinity) = NaN
   * acosh(0)         = NaN
   * acosh(-0)        = NaN
   * acosh(1)         = 0
   * acosh(-1)        = NaN
   *
   */
  P.inverseHyperbolicCosine = P.acosh = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);
    if (!x.isFinite()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;
    Ctor.rounding = 1;
    external = false;

    x = x.times(x).minus(1).sqrt().plus(x);

    external = true;
    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.ln();
  };


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value
   * of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-Infinity, Infinity]
   *
   * asinh(x) = ln(x + sqrt(x^2 + 1))
   *
   * asinh(NaN)       = NaN
   * asinh(Infinity)  = Infinity
   * asinh(-Infinity) = -Infinity
   * asinh(0)         = 0
   * asinh(-0)        = -0
   *
   */
  P.inverseHyperbolicSine = P.asinh = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite() || x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;
    Ctor.rounding = 1;
    external = false;

    x = x.times(x).plus(1).sqrt().plus(x);

    external = true;
    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.ln();
  };


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the
   * value of this Decimal.
   *
   * Domain: [-1, 1]
   * Range: [-Infinity, Infinity]
   *
   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))
   *
   * atanh(|x| > 1)   = NaN
   * atanh(NaN)       = NaN
   * atanh(Infinity)  = NaN
   * atanh(-Infinity) = NaN
   * atanh(0)         = 0
   * atanh(-0)        = -0
   * atanh(1)         = Infinity
   * atanh(-1)        = -Infinity
   *
   */
  P.inverseHyperbolicTangent = P.atanh = function () {
    var pr, rm, wpr, xsd,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(NaN);
    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    xsd = x.sd();

    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);

    Ctor.precision = wpr = xsd - x.e;

    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);

    Ctor.precision = pr + 4;
    Ctor.rounding = 1;

    x = x.ln();

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.times(0.5);
  };


  /*
   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-pi/2, pi/2]
   *
   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))
   *
   * asin(0)       = 0
   * asin(-0)      = -0
   * asin(1/2)     = pi/6
   * asin(-1/2)    = -pi/6
   * asin(1)       = pi/2
   * asin(-1)      = -pi/2
   * asin(|x| > 1) = NaN
   * asin(NaN)     = NaN
   *
   * TODO? Compare performance of Taylor series.
   *
   */
  P.inverseSine = P.asin = function () {
    var halfPi, k,
      pr, rm,
      x = this,
      Ctor = x.constructor;

    if (x.isZero()) return new Ctor(x);

    k = x.abs().cmp(1);
    pr = Ctor.precision;
    rm = Ctor.rounding;

    if (k !== -1) {

      // |x| is 1
      if (k === 0) {
        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
        halfPi.s = x.s;
        return halfPi;
      }

      // |x| > 1 or x is NaN
      return new Ctor(NaN);
    }

    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6

    Ctor.precision = pr + 6;
    Ctor.rounding = 1;

    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.times(2);
  };


  /*
   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value
   * of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-pi/2, pi/2]
   *
   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...
   *
   * atan(0)         = 0
   * atan(-0)        = -0
   * atan(1)         = pi/4
   * atan(-1)        = -pi/4
   * atan(Infinity)  = pi/2
   * atan(-Infinity) = -pi/2
   * atan(NaN)       = NaN
   *
   */
  P.inverseTangent = P.atan = function () {
    var i, j, k, n, px, t, r, wpr, x2,
      x = this,
      Ctor = x.constructor,
      pr = Ctor.precision,
      rm = Ctor.rounding;

    if (!x.isFinite()) {
      if (!x.s) return new Ctor(NaN);
      if (pr + 4 <= PI_PRECISION) {
        r = getPi(Ctor, pr + 4, rm).times(0.5);
        r.s = x.s;
        return r;
      }
    } else if (x.isZero()) {
      return new Ctor(x);
    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {
      r = getPi(Ctor, pr + 4, rm).times(0.25);
      r.s = x.s;
      return r;
    }

    Ctor.precision = wpr = pr + 10;
    Ctor.rounding = 1;

    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);

    // Argument reduction
    // Ensure |x| < 0.42
    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))

    k = Math.min(28, wpr / LOG_BASE + 2 | 0);

    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));

    external = false;

    j = Math.ceil(wpr / LOG_BASE);
    n = 1;
    x2 = x.times(x);
    r = new Ctor(x);
    px = x;

    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...
    for (; i !== -1;) {
      px = px.times(x2);
      t = r.minus(px.div(n += 2));

      px = px.times(x2);
      r = t.plus(px.div(n += 2));

      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);
    }

    if (k) r = r.times(2 << (k - 1));

    external = true;

    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);
  };


  /*
   * Return true if the value of this Decimal is a finite number, otherwise return false.
   *
   */
  P.isFinite = function () {
    return !!this.d;
  };


  /*
   * Return true if the value of this Decimal is an integer, otherwise return false.
   *
   */
  P.isInteger = P.isInt = function () {
    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;
  };


  /*
   * Return true if the value of this Decimal is NaN, otherwise return false.
   *
   */
  P.isNaN = function () {
    return !this.s;
  };


  /*
   * Return true if the value of this Decimal is negative, otherwise return false.
   *
   */
  P.isNegative = P.isNeg = function () {
    return this.s < 0;
  };


  /*
   * Return true if the value of this Decimal is positive, otherwise return false.
   *
   */
  P.isPositive = P.isPos = function () {
    return this.s > 0;
  };


  /*
   * Return true if the value of this Decimal is 0 or -0, otherwise return false.
   *
   */
  P.isZero = function () {
    return !!this.d && this.d[0] === 0;
  };


  /*
   * Return true if the value of this Decimal is less than `y`, otherwise return false.
   *
   */
  P.lessThan = P.lt = function (y) {
    return this.cmp(y) < 0;
  };


  /*
   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.
   *
   */
  P.lessThanOrEqualTo = P.lte = function (y) {
    return this.cmp(y) < 1;
  };


  /*
   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * If no base is specified, return log[10](arg).
   *
   * log[base](arg) = ln(arg) / ln(base)
   *
   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'
   * otherwise:
   *
   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen
   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error
   * between the result and the correctly rounded result will be one ulp (unit in the last place).
   *
   * log[-b](a)       = NaN
   * log[0](a)        = NaN
   * log[1](a)        = NaN
   * log[NaN](a)      = NaN
   * log[Infinity](a) = NaN
   * log[b](0)        = -Infinity
   * log[b](-0)       = -Infinity
   * log[b](-a)       = NaN
   * log[b](1)        = 0
   * log[b](Infinity) = Infinity
   * log[b](NaN)      = NaN
   *
   * [base] {number|string|Decimal} The base of the logarithm.
   *
   */
  P.logarithm = P.log = function (base) {
    var isBase10, d, denominator, k, inf, num, sd, r,
      arg = this,
      Ctor = arg.constructor,
      pr = Ctor.precision,
      rm = Ctor.rounding,
      guard = 5;

    // Default base is 10.
    if (base == null) {
      base = new Ctor(10);
      isBase10 = true;
    } else {
      base = new Ctor(base);
      d = base.d;

      // Return NaN if base is negative, or non-finite, or is 0 or 1.
      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);

      isBase10 = base.eq(10);
    }

    d = arg.d;

    // Is arg negative, non-finite, 0 or 1?
    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {
      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);
    }

    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an
    // integer power of 10.
    if (isBase10) {
      if (d.length > 1) {
        inf = true;
      } else {
        for (k = d[0]; k % 10 === 0;) k /= 10;
        inf = k !== 1;
      }
    }

    external = false;
    sd = pr + guard;
    num = naturalLogarithm(arg, sd);
    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);

    // The result will have 5 rounding digits.
    r = divide(num, denominator, sd, 1);

    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,
    // calculate 10 further digits.
    //
    // If the result is known to have an infinite decimal expansion, repeat this until it is clear
    // that the result is above or below the boundary. Otherwise, if after calculating the 10
    // further digits, the last 14 are nines, round up and assume the result is exact.
    // Also assume the result is exact if the last 14 are zero.
    //
    // Example of a result that will be incorrectly rounded:
    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...
    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it
    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so
    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal
    // place is still 2.6.
    if (checkRoundingDigits(r.d, k = pr, rm)) {

      do {
        sd += 10;
        num = naturalLogarithm(arg, sd);
        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);
        r = divide(num, denominator, sd, 1);

        if (!inf) {

          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.
          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {
            r = finalise(r, pr + 1, 0);
          }

          break;
        }
      } while (checkRoundingDigits(r.d, k += 10, rm));
    }

    external = true;

    return finalise(r, pr, rm);
  };


  /*
   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.
   *
   * arguments {number|string|Decimal}
   *
  P.max = function () {
    Array.prototype.push.call(arguments, this);
    return maxOrMin(this.constructor, arguments, 'lt');
  };
   */


  /*
   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.
   *
   * arguments {number|string|Decimal}
   *
  P.min = function () {
    Array.prototype.push.call(arguments, this);
    return maxOrMin(this.constructor, arguments, 'gt');
  };
   */


  /*
   *  n - 0 = n
   *  n - N = N
   *  n - I = -I
   *  0 - n = -n
   *  0 - 0 = 0
   *  0 - N = N
   *  0 - I = -I
   *  N - n = N
   *  N - 0 = N
   *  N - N = N
   *  N - I = N
   *  I - n = I
   *  I - 0 = I
   *  I - N = N
   *  I - I = N
   *
   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   */
  P.minus = P.sub = function (y) {
    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,
      x = this,
      Ctor = x.constructor;

    y = new Ctor(y);

    // If either is not finite...
    if (!x.d || !y.d) {

      // Return NaN if either is NaN.
      if (!x.s || !y.s) y = new Ctor(NaN);

      // Return y negated if x is finite and y is Â±Infinity.
      else if (x.d) y.s = -y.s;

      // Return x if y is finite and x is Â±Infinity.
      // Return x if both are Â±Infinity with different signs.
      // Return NaN if both are Â±Infinity with the same sign.
      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);

      return y;
    }

    // If signs differ...
    if (x.s != y.s) {
      y.s = -y.s;
      return x.plus(y);
    }

    xd = x.d;
    yd = y.d;
    pr = Ctor.precision;
    rm = Ctor.rounding;

    // If either is zero...
    if (!xd[0] || !yd[0]) {

      // Return y negated if x is zero and y is non-zero.
      if (yd[0]) y.s = -y.s;

      // Return x if y is zero and x is non-zero.
      else if (xd[0]) y = new Ctor(x);

      // Return zero if both are zero.
      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.
      else return new Ctor(rm === 3 ? -0 : 0);

      return external ? finalise(y, pr, rm) : y;
    }

    // x and y are finite, non-zero numbers with the same sign.

    // Calculate base 1e7 exponents.
    e = mathfloor(y.e / LOG_BASE);
    xe = mathfloor(x.e / LOG_BASE);

    xd = xd.slice();
    k = xe - e;

    // If base 1e7 exponents differ...
    if (k) {
      xLTy = k < 0;

      if (xLTy) {
        d = xd;
        k = -k;
        len = yd.length;
      } else {
        d = yd;
        e = xe;
        len = xd.length;
      }

      // Numbers with massively different exponents would result in a very high number of
      // zeros needing to be prepended, but this can be avoided while still ensuring correct
      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.
      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;

      if (k > i) {
        k = i;
        d.length = 1;
      }

      // Prepend zeros to equalise exponents.
      d.reverse();
      for (i = k; i--;) d.push(0);
      d.reverse();

    // Base 1e7 exponents equal.
    } else {

      // Check digits to determine which is the bigger number.

      i = xd.length;
      len = yd.length;
      xLTy = i < len;
      if (xLTy) len = i;

      for (i = 0; i < len; i++) {
        if (xd[i] != yd[i]) {
          xLTy = xd[i] < yd[i];
          break;
        }
      }

      k = 0;
    }

    if (xLTy) {
      d = xd;
      xd = yd;
      yd = d;
      y.s = -y.s;
    }

    len = xd.length;

    // Append zeros to `xd` if shorter.
    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.
    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;

    // Subtract yd from xd.
    for (i = yd.length; i > k;) {

      if (xd[--i] < yd[i]) {
        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;
        --xd[j];
        xd[i] += BASE;
      }

      xd[i] -= yd[i];
    }

    // Remove trailing zeros.
    for (; xd[--len] === 0;) xd.pop();

    // Remove leading zeros and adjust exponent accordingly.
    for (; xd[0] === 0; xd.shift()) --e;

    // Zero?
    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);

    y.d = xd;
    y.e = getBase10Exponent(xd, e);

    return external ? finalise(y, pr, rm) : y;
  };


  /*
   *   n % 0 =  N
   *   n % N =  N
   *   n % I =  n
   *   0 % n =  0
   *  -0 % n = -0
   *   0 % 0 =  N
   *   0 % N =  N
   *   0 % I =  0
   *   N % n =  N
   *   N % 0 =  N
   *   N % N =  N
   *   N % I =  N
   *   I % n =  N
   *   I % 0 =  N
   *   I % N =  N
   *   I % I =  N
   *
   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * The result depends on the modulo mode.
   *
   */
  P.modulo = P.mod = function (y) {
    var q,
      x = this,
      Ctor = x.constructor;

    y = new Ctor(y);

    // Return NaN if x is Â±Infinity or NaN, or y is NaN or Â±0.
    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);

    // Return x if y is Â±Infinity or x is Â±0.
    if (!y.d || x.d && !x.d[0]) {
      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);
    }

    // Prevent rounding of intermediate calculations.
    external = false;

    if (Ctor.modulo == 9) {

      // Euclidian division: q = sign(y) * floor(x / abs(y))
      // result = x - q * y    where  0 <= result < abs(y)
      q = divide(x, y.abs(), 0, 3, 1);
      q.s *= y.s;
    } else {
      q = divide(x, y, 0, Ctor.modulo, 1);
    }

    q = q.times(y);

    external = true;

    return x.minus(q);
  };


  /*
   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,
   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   */
  P.naturalExponential = P.exp = function () {
    return naturalExponential(this);
  };


  /*
   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,
   * rounded to `precision` significant digits using rounding mode `rounding`.
   *
   */
  P.naturalLogarithm = P.ln = function () {
    return naturalLogarithm(this);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by
   * -1.
   *
   */
  P.negated = P.neg = function () {
    var x = new this.constructor(this);
    x.s = -x.s;
    return finalise(x);
  };


  /*
   *  n + 0 = n
   *  n + N = N
   *  n + I = I
   *  0 + n = n
   *  0 + 0 = 0
   *  0 + N = N
   *  0 + I = I
   *  N + n = N
   *  N + 0 = N
   *  N + N = N
   *  N + I = N
   *  I + n = I
   *  I + 0 = I
   *  I + N = N
   *  I + I = I
   *
   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   */
  P.plus = P.add = function (y) {
    var carry, d, e, i, k, len, pr, rm, xd, yd,
      x = this,
      Ctor = x.constructor;

    y = new Ctor(y);

    // If either is not finite...
    if (!x.d || !y.d) {

      // Return NaN if either is NaN.
      if (!x.s || !y.s) y = new Ctor(NaN);

      // Return x if y is finite and x is Â±Infinity.
      // Return x if both are Â±Infinity with the same sign.
      // Return NaN if both are Â±Infinity with different signs.
      // Return y if x is finite and y is Â±Infinity.
      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);

      return y;
    }

     // If signs differ...
    if (x.s != y.s) {
      y.s = -y.s;
      return x.minus(y);
    }

    xd = x.d;
    yd = y.d;
    pr = Ctor.precision;
    rm = Ctor.rounding;

    // If either is zero...
    if (!xd[0] || !yd[0]) {

      // Return x if y is zero.
      // Return y if y is non-zero.
      if (!yd[0]) y = new Ctor(x);

      return external ? finalise(y, pr, rm) : y;
    }

    // x and y are finite, non-zero numbers with the same sign.

    // Calculate base 1e7 exponents.
    k = mathfloor(x.e / LOG_BASE);
    e = mathfloor(y.e / LOG_BASE);

    xd = xd.slice();
    i = k - e;

    // If base 1e7 exponents differ...
    if (i) {

      if (i < 0) {
        d = xd;
        i = -i;
        len = yd.length;
      } else {
        d = yd;
        e = k;
        len = xd.length;
      }

      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.
      k = Math.ceil(pr / LOG_BASE);
      len = k > len ? k + 1 : len + 1;

      if (i > len) {
        i = len;
        d.length = 1;
      }

      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.
      d.reverse();
      for (; i--;) d.push(0);
      d.reverse();
    }

    len = xd.length;
    i = yd.length;

    // If yd is longer than xd, swap xd and yd so xd points to the longer array.
    if (len - i < 0) {
      i = len;
      d = yd;
      yd = xd;
      xd = d;
    }

    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.
    for (carry = 0; i;) {
      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;
      xd[i] %= BASE;
    }

    if (carry) {
      xd.unshift(carry);
      ++e;
    }

    // Remove trailing zeros.
    // No need to check for zero, as +x + +y != 0 && -x + -y != 0
    for (len = xd.length; xd[--len] == 0;) xd.pop();

    y.d = xd;
    y.e = getBase10Exponent(xd, e);

    return external ? finalise(y, pr, rm) : y;
  };


  /*
   * Return the number of significant digits of the value of this Decimal.
   *
   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.
   *
   */
  P.precision = P.sd = function (z) {
    var k,
      x = this;

    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);

    if (x.d) {
      k = getPrecision(x.d);
      if (z && x.e + 1 > k) k = x.e + 1;
    } else {
      k = NaN;
    }

    return k;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using
   * rounding mode `rounding`.
   *
   */
  P.round = function () {
    var x = this,
      Ctor = x.constructor;

    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);
  };


  /*
   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-1, 1]
   *
   * sin(x) = x - x^3/3! + x^5/5! - ...
   *
   * sin(0)         = 0
   * sin(-0)        = -0
   * sin(Infinity)  = NaN
   * sin(-Infinity) = NaN
   * sin(NaN)       = NaN
   *
   */
  P.sine = P.sin = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(NaN);
    if (x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
    Ctor.rounding = 1;

    x = sine(Ctor, toLessThanHalfPi(Ctor, x));

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);
  };


  /*
   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   *  sqrt(-n) =  N
   *  sqrt(N)  =  N
   *  sqrt(-I) =  N
   *  sqrt(I)  =  I
   *  sqrt(0)  =  0
   *  sqrt(-0) = -0
   *
   */
  P.squareRoot = P.sqrt = function () {
    var m, n, sd, r, rep, t,
      x = this,
      d = x.d,
      e = x.e,
      s = x.s,
      Ctor = x.constructor;

    // Negative/NaN/Infinity/zero?
    if (s !== 1 || !d || !d[0]) {
      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);
    }

    external = false;

    // Initial estimate.
    s = Math.sqrt(+x);

    // Math.sqrt underflow/overflow?
    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
    if (s == 0 || s == 1 / 0) {
      n = digitsToString(d);

      if ((n.length + e) % 2 == 0) n += '0';
      s = Math.sqrt(n);
      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);

      if (s == 1 / 0) {
        n = '1e' + e;
      } else {
        n = s.toExponential();
        n = n.slice(0, n.indexOf('e') + 1) + e;
      }

      r = new Ctor(n);
    } else {
      r = new Ctor(s.toString());
    }

    sd = (e = Ctor.precision) + 3;

    // Newton-Raphson iteration.
    for (;;) {
      t = r;
      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);

      // TODO? Replace with for-loop and checkRoundingDigits.
      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
        n = n.slice(sd - 3, sd + 1);

        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or
        // 4999, i.e. approaching a rounding boundary, continue the iteration.
        if (n == '9999' || !rep && n == '4999') {

          // On the first iteration only, check to see if rounding up gives the exact result as the
          // nines may infinitely repeat.
          if (!rep) {
            finalise(t, e + 1, 0);

            if (t.times(t).eq(x)) {
              r = t;
              break;
            }
          }

          sd += 4;
          rep = 1;
        } else {

          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.
          // If not, then there are further digits and m will be truthy.
          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

            // Truncate to the first rounding digit.
            finalise(r, e + 1, 1);
            m = !r.times(r).eq(x);
          }

          break;
        }
      }
    }

    external = true;

    return finalise(r, e, Ctor.rounding, m);
  };


  /*
   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-Infinity, Infinity]
   *
   * tan(0)         = 0
   * tan(-0)        = -0
   * tan(Infinity)  = NaN
   * tan(-Infinity) = NaN
   * tan(NaN)       = NaN
   *
   */
  P.tangent = P.tan = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(NaN);
    if (x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 10;
    Ctor.rounding = 1;

    x = x.sin();
    x.s = 1;
    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);
  };


  /*
   *  n * 0 = 0
   *  n * N = N
   *  n * I = I
   *  0 * n = 0
   *  0 * 0 = 0
   *  0 * N = N
   *  0 * I = N
   *  N * n = N
   *  N * 0 = N
   *  N * N = N
   *  N * I = N
   *  I * n = I
   *  I * 0 = N
   *  I * N = N
   *  I * I = I
   *
   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   */
  P.times = P.mul = function (y) {
    var carry, e, i, k, r, rL, t, xdL, ydL,
      x = this,
      Ctor = x.constructor,
      xd = x.d,
      yd = (y = new Ctor(y)).d;

    y.s *= x.s;

     // If either is NaN, Â±Infinity or Â±0...
    if (!xd || !xd[0] || !yd || !yd[0]) {

      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd

        // Return NaN if either is NaN.
        // Return NaN if x is Â±0 and y is Â±Infinity, or y is Â±0 and x is Â±Infinity.
        ? NaN

        // Return Â±Infinity if either is Â±Infinity.
        // Return Â±0 if either is Â±0.
        : !xd || !yd ? y.s / 0 : y.s * 0);
    }

    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);
    xdL = xd.length;
    ydL = yd.length;

    // Ensure xd points to the longer array.
    if (xdL < ydL) {
      r = xd;
      xd = yd;
      yd = r;
      rL = xdL;
      xdL = ydL;
      ydL = rL;
    }

    // Initialise the result array with zeros.
    r = [];
    rL = xdL + ydL;
    for (i = rL; i--;) r.push(0);

    // Multiply!
    for (i = ydL; --i >= 0;) {
      carry = 0;
      for (k = xdL + i; k > i;) {
        t = r[k] + yd[i] * xd[k - i - 1] + carry;
        r[k--] = t % BASE | 0;
        carry = t / BASE | 0;
      }

      r[k] = (r[k] + carry) % BASE | 0;
    }

    // Remove trailing zeros.
    for (; !r[--rL];) r.pop();

    if (carry) ++e;
    else r.shift();

    y.d = r;
    y.e = getBase10Exponent(r, e);

    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;
  };


  /*
   * Return a string representing the value of this Decimal in base 2, round to `sd` significant
   * digits using rounding mode `rm`.
   *
   * If the optional `sd` argument is present then return binary exponential notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toBinary = function (sd, rm) {
    return toStringBinary(this, 2, sd, rm);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`
   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.
   *
   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toDecimalPlaces = P.toDP = function (dp, rm) {
    var x = this,
      Ctor = x.constructor;

    x = new Ctor(x);
    if (dp === void 0) return x;

    checkInt32(dp, 0, MAX_DIGITS);

    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);

    return finalise(x, dp + x.e + 1, rm);
  };


  /*
   * Return a string representing the value of this Decimal in exponential notation rounded to
   * `dp` fixed decimal places using rounding mode `rounding`.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toExponential = function (dp, rm) {
    var str,
      x = this,
      Ctor = x.constructor;

    if (dp === void 0) {
      str = finiteToString(x, true);
    } else {
      checkInt32(dp, 0, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);

      x = finalise(new Ctor(x), dp + 1, rm);
      str = finiteToString(x, true, dp + 1);
    }

    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return a string representing the value of this Decimal in normal (fixed-point) notation to
   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is
   * omitted.
   *
   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.
   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
   * (-0).toFixed(3) is '0.000'.
   * (-0.5).toFixed(0) is '-0'.
   *
   */
  P.toFixed = function (dp, rm) {
    var str, y,
      x = this,
      Ctor = x.constructor;

    if (dp === void 0) {
      str = finiteToString(x);
    } else {
      checkInt32(dp, 0, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);

      y = finalise(new Ctor(x), dp + x.e + 1, rm);
      str = finiteToString(y, false, dp + y.e + 1);
    }

    // To determine whether to add the minus sign look at the value before it was rounded,
    // i.e. look at `x` rather than `y`.
    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return an array representing the value of this Decimal as a simple fraction with an integer
   * numerator and an integer denominator.
   *
   * The denominator will be a positive non-zero value less than or equal to the specified maximum
   * denominator. If a maximum denominator is not specified, the denominator will be the lowest
   * value necessary to represent the number exactly.
   *
   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.
   *
   */
  P.toFraction = function (maxD) {
    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,
      x = this,
      xd = x.d,
      Ctor = x.constructor;

    if (!xd) return new Ctor(x);

    n1 = d0 = new Ctor(1);
    d1 = n0 = new Ctor(0);

    d = new Ctor(d1);
    e = d.e = getPrecision(xd) - x.e - 1;
    k = e % LOG_BASE;
    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);

    if (maxD == null) {

      // d is 10**e, the minimum max-denominator needed.
      maxD = e > 0 ? d : n1;
    } else {
      n = new Ctor(maxD);
      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);
      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;
    }

    external = false;
    n = new Ctor(digitsToString(xd));
    pr = Ctor.precision;
    Ctor.precision = e = xd.length * LOG_BASE * 2;

    for (;;)  {
      q = divide(n, d, 0, 1, 1);
      d2 = d0.plus(q.times(d1));
      if (d2.cmp(maxD) == 1) break;
      d0 = d1;
      d1 = d2;
      d2 = n1;
      n1 = n0.plus(q.times(d2));
      n0 = d2;
      d2 = d;
      d = n.minus(q.times(d2));
      n = d2;
    }

    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);
    n0 = n0.plus(d2.times(n1));
    d0 = d0.plus(d2.times(d1));
    n0.s = n1.s = x.s;

    // Determine which fraction is closer to x, n0/d0 or n1/d1?
    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1
        ? [n1, d1] : [n0, d0];

    Ctor.precision = pr;
    external = true;

    return r;
  };


  /*
   * Return a string representing the value of this Decimal in base 16, round to `sd` significant
   * digits using rounding mode `rm`.
   *
   * If the optional `sd` argument is present then return binary exponential notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toHexadecimal = P.toHex = function (sd, rm) {
    return toStringBinary(this, 16, sd, rm);
  };


  /*
   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding
   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.
   *
   * The return value will always have the same sign as this Decimal, unless either this Decimal
   * or `y` is NaN, in which case the return value will be also be NaN.
   *
   * The return value is not affected by the value of `precision`.
   *
   * y {number|string|Decimal} The magnitude to round to a multiple of.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * 'toNearest() rounding mode not an integer: {rm}'
   * 'toNearest() rounding mode out of range: {rm}'
   *
   */
  P.toNearest = function (y, rm) {
    var x = this,
      Ctor = x.constructor;

    x = new Ctor(x);

    if (y == null) {

      // If x is not finite, return x.
      if (!x.d) return x;

      y = new Ctor(1);
      rm = Ctor.rounding;
    } else {
      y = new Ctor(y);
      if (rm === void 0) {
        rm = Ctor.rounding;
      } else {
        checkInt32(rm, 0, 8);
      }

      // If x is not finite, return x if y is not NaN, else NaN.
      if (!x.d) return y.s ? x : y;

      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.
      if (!y.d) {
        if (y.s) y.s = x.s;
        return y;
      }
    }

    // If y is not zero, calculate the nearest multiple of y to x.
    if (y.d[0]) {
      external = false;
      x = divide(x, y, 0, rm, 1).times(y);
      external = true;
      finalise(x);

    // If y is zero, return zero with the sign of x.
    } else {
      y.s = x.s;
      x = y;
    }

    return x;
  };


  /*
   * Return the value of this Decimal converted to a number primitive.
   * Zero keeps its sign.
   *
   */
  P.toNumber = function () {
    return +this;
  };


  /*
   * Return a string representing the value of this Decimal in base 8, round to `sd` significant
   * digits using rounding mode `rm`.
   *
   * If the optional `sd` argument is present then return binary exponential notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toOctal = function (sd, rm) {
    return toStringBinary(this, 8, sd, rm);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded
   * to `precision` significant digits using rounding mode `rounding`.
   *
   * ECMAScript compliant.
   *
   *   pow(x, NaN)                           = NaN
   *   pow(x, Â±0)                            = 1

   *   pow(NaN, non-zero)                    = NaN
   *   pow(abs(x) > 1, +Infinity)            = +Infinity
   *   pow(abs(x) > 1, -Infinity)            = +0
   *   pow(abs(x) == 1, Â±Infinity)           = NaN
   *   pow(abs(x) < 1, +Infinity)            = +0
   *   pow(abs(x) < 1, -Infinity)            = +Infinity
   *   pow(+Infinity, y > 0)                 = +Infinity
   *   pow(+Infinity, y < 0)                 = +0
   *   pow(-Infinity, odd integer > 0)       = -Infinity
   *   pow(-Infinity, even integer > 0)      = +Infinity
   *   pow(-Infinity, odd integer < 0)       = -0
   *   pow(-Infinity, even integer < 0)      = +0
   *   pow(+0, y > 0)                        = +0
   *   pow(+0, y < 0)                        = +Infinity
   *   pow(-0, odd integer > 0)              = -0
   *   pow(-0, even integer > 0)             = +0
   *   pow(-0, odd integer < 0)              = -Infinity
   *   pow(-0, even integer < 0)             = +Infinity
   *   pow(finite x < 0, finite non-integer) = NaN
   *
   * For non-integer or very large exponents pow(x, y) is calculated using
   *
   *   x^y = exp(y*ln(x))
   *
   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the
   * probability of an incorrectly rounded result
   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14
   * i.e. 1 in 250,000,000,000,000
   *
   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).
   *
   * y {number|string|Decimal} The power to which to raise this Decimal.
   *
   */
  P.toPower = P.pow = function (y) {
    var e, k, pr, r, rm, s,
      x = this,
      Ctor = x.constructor,
      yn = +(y = new Ctor(y));

    // Either Â±Infinity, NaN or Â±0?
    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));

    x = new Ctor(x);

    if (x.eq(1)) return x;

    pr = Ctor.precision;
    rm = Ctor.rounding;

    if (y.eq(1)) return finalise(x, pr, rm);

    // y exponent
    e = mathfloor(y.e / LOG_BASE);

    // If y is a small integer use the 'exponentiation by squaring' algorithm.
    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
      r = intPow(Ctor, x, k, pr);
      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);
    }

    s = x.s;

    // if x is negative
    if (s < 0) {

      // if y is not an integer
      if (e < y.d.length - 1) return new Ctor(NaN);

      // Result is positive if x is negative and the last digit of integer y is even.
      if ((y.d[e] & 1) == 0) s = 1;

      // if x.eq(-1)
      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {
        x.s = s;
        return x;
      }
    }

    // Estimate result exponent.
    // x^y = 10^e,  where e = y * log10(x)
    // log10(x) = log10(x_significand) + x_exponent
    // log10(x_significand) = ln(x_significand) / ln(10)
    k = mathpow(+x, yn);
    e = k == 0 || !isFinite(k)
      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))
      : new Ctor(k + '').e;

    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.

    // Overflow/underflow?
    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);

    external = false;
    Ctor.rounding = x.s = 1;

    // Estimate the extra guard digits needed to ensure five correct rounding digits from
    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):
    // new Decimal(2.32456).pow('2087987436534566.46411')
    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815
    k = Math.min(12, (e + '').length);

    // r = x^y = exp(y*ln(x))
    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);

    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)
    if (r.d) {

      // Truncate to the required precision plus five rounding digits.
      r = finalise(r, pr + 5, 1);

      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate
      // the result.
      if (checkRoundingDigits(r.d, pr, rm)) {
        e = pr + 10;

        // Truncate to the increased precision plus five rounding digits.
        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);

        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).
        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {
          r = finalise(r, pr + 1, 0);
        }
      }
    }

    r.s = s;
    external = true;
    Ctor.rounding = rm;

    return finalise(r, pr, rm);
  };


  /*
   * Return a string representing the value of this Decimal rounded to `sd` significant digits
   * using rounding mode `rounding`.
   *
   * Return exponential notation if `sd` is less than the number of digits necessary to represent
   * the integer part of the value in normal notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toPrecision = function (sd, rm) {
    var str,
      x = this,
      Ctor = x.constructor;

    if (sd === void 0) {
      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
    } else {
      checkInt32(sd, 1, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);

      x = finalise(new Ctor(x), sd, rm);
      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);
    }

    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`
   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if
   * omitted.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * 'toSD() digits out of range: {sd}'
   * 'toSD() digits not an integer: {sd}'
   * 'toSD() rounding mode not an integer: {rm}'
   * 'toSD() rounding mode out of range: {rm}'
   *
   */
  P.toSignificantDigits = P.toSD = function (sd, rm) {
    var x = this,
      Ctor = x.constructor;

    if (sd === void 0) {
      sd = Ctor.precision;
      rm = Ctor.rounding;
    } else {
      checkInt32(sd, 1, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
    }

    return finalise(new Ctor(x), sd, rm);
  };


  /*
   * Return a string representing the value of this Decimal.
   *
   * Return exponential notation if this Decimal has a positive exponent equal to or greater than
   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.
   *
   */
  P.toString = function () {
    var x = this,
      Ctor = x.constructor,
      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);

    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.
   *
   */
  P.truncated = P.trunc = function () {
    return finalise(new this.constructor(this), this.e + 1, 1);
  };


  /*
   * Return a string representing the value of this Decimal.
   * Unlike `toString`, negative zero will include the minus sign.
   *
   */
  P.valueOf = P.toJSON = function () {
    var x = this,
      Ctor = x.constructor,
      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);

    return x.isNeg() ? '-' + str : str;
  };


  /*
  // Add aliases to match BigDecimal method names.
  // P.add = P.plus;
  P.subtract = P.minus;
  P.multiply = P.times;
  P.divide = P.div;
  P.remainder = P.mod;
  P.compareTo = P.cmp;
  P.negate = P.neg;
   */


  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.


  /*
   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,
   *                           finiteToString, naturalExponential, naturalLogarithm
   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,
   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random
   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm
   *  convertBase              toStringBinary, parseOther
   *  cos                      P.cos
   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,
   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,
   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,
   *                           taylorSeries, atan2, parseOther
   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,
   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,
   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,
   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,
   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,
   *                           P.truncated, divide, getLn10, getPi, naturalExponential,
   *                           naturalLogarithm, ceil, floor, round, trunc
   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,
   *                           toStringBinary
   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther
   *  getLn10                  P.logarithm, naturalLogarithm
   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2
   *  getPrecision             P.precision, P.toFraction
   *  getZeroString            digitsToString, finiteToString
   *  intPow                   P.toPower, parseOther
   *  isOdd                    toLessThanHalfPi
   *  maxOrMin                 max, min
   *  naturalExponential       P.naturalExponential, P.toPower
   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,
   *                           P.toPower, naturalExponential
   *  nonFiniteToString        finiteToString, toStringBinary
   *  parseDecimal             Decimal
   *  parseOther               Decimal
   *  sin                      P.sin
   *  taylorSeries             P.cosh, P.sinh, cos, sin
   *  toLessThanHalfPi         P.cos, P.sin
   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal
   *  truncate                 intPow
   *
   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,
   *                           naturalLogarithm, config, parseOther, random, Decimal
   */


  function digitsToString(d) {
    var i, k, ws,
      indexOfLastWord = d.length - 1,
      str = '',
      w = d[0];

    if (indexOfLastWord > 0) {
      str += w;
      for (i = 1; i < indexOfLastWord; i++) {
        ws = d[i] + '';
        k = LOG_BASE - ws.length;
        if (k) str += getZeroString(k);
        str += ws;
      }

      w = d[i];
      ws = w + '';
      k = LOG_BASE - ws.length;
      if (k) str += getZeroString(k);
    } else if (w === 0) {
      return '0';
    }

    // Remove trailing zeros of last w.
    for (; w % 10 === 0;) w /= 10;

    return str + w;
  }


  function checkInt32(i, min, max) {
    if (i !== ~~i || i < min || i > max) {
      throw Error(invalidArgument + i);
    }
  }


  /*
   * Check 5 rounding digits if `repeating` is null, 4 otherwise.
   * `repeating == null` if caller is `log` or `pow`,
   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.
   */
  function checkRoundingDigits(d, i, rm, repeating) {
    var di, k, r, rd;

    // Get the length of the first word of the array d.
    for (k = d[0]; k >= 10; k /= 10) --i;

    // Is the rounding digit in the first word of d?
    if (--i < 0) {
      i += LOG_BASE;
      di = 0;
    } else {
      di = Math.ceil((i + 1) / LOG_BASE);
      i %= LOG_BASE;
    }

    // i is the index (0 - 6) of the rounding digit.
    // E.g. if within the word 3487563 the first rounding digit is 5,
    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563
    k = mathpow(10, LOG_BASE - i);
    rd = d[di] % k | 0;

    if (repeating == null) {
      if (i < 3) {
        if (i == 0) rd = rd / 100 | 0;
        else if (i == 1) rd = rd / 10 | 0;
        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;
      } else {
        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&
          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||
            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;
      }
    } else {
      if (i < 4) {
        if (i == 0) rd = rd / 1000 | 0;
        else if (i == 1) rd = rd / 100 | 0;
        else if (i == 2) rd = rd / 10 | 0;
        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;
      } else {
        r = ((repeating || rm < 4) && rd + 1 == k ||
        (!repeating && rm > 3) && rd + 1 == k / 2) &&
          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;
      }
    }

    return r;
  }


  // Convert string of `baseIn` to an array of numbers of `baseOut`.
  // Eg. convertBase('255', 10, 16) returns [15, 15].
  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].
  function convertBase(str, baseIn, baseOut) {
    var j,
      arr = [0],
      arrL,
      i = 0,
      strL = str.length;

    for (; i < strL;) {
      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;
      arr[0] += NUMERALS.indexOf(str.charAt(i++));
      for (j = 0; j < arr.length; j++) {
        if (arr[j] > baseOut - 1) {
          if (arr[j + 1] === void 0) arr[j + 1] = 0;
          arr[j + 1] += arr[j] / baseOut | 0;
          arr[j] %= baseOut;
        }
      }
    }

    return arr.reverse();
  }


  /*
   * cos(x) = 1 - x^2/2! + x^4/4! - ...
   * |x| < pi/2
   *
   */
  function cosine(Ctor, x) {
    var k, y,
      len = x.d.length;

    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1
    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1

    // Estimate the optimum number of times to use the argument reduction.
    if (len < 32) {
      k = Math.ceil(len / 3);
      y = (1 / tinyPow(4, k)).toString();
    } else {
      k = 16;
      y = '2.3283064365386962890625e-10';
    }

    Ctor.precision += k;

    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));

    // Reverse argument reduction
    for (var i = k; i--;) {
      var cos2x = x.times(x);
      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);
    }

    Ctor.precision -= k;

    return x;
  }


  /*
   * Perform division in the specified base.
   */
  var divide = (function () {

    // Assumes non-zero x and k, and hence non-zero result.
    function multiplyInteger(x, k, base) {
      var temp,
        carry = 0,
        i = x.length;

      for (x = x.slice(); i--;) {
        temp = x[i] * k + carry;
        x[i] = temp % base | 0;
        carry = temp / base | 0;
      }

      if (carry) x.unshift(carry);

      return x;
    }

    function compare(a, b, aL, bL) {
      var i, r;

      if (aL != bL) {
        r = aL > bL ? 1 : -1;
      } else {
        for (i = r = 0; i < aL; i++) {
          if (a[i] != b[i]) {
            r = a[i] > b[i] ? 1 : -1;
            break;
          }
        }
      }

      return r;
    }

    function subtract(a, b, aL, base) {
      var i = 0;

      // Subtract b from a.
      for (; aL--;) {
        a[aL] -= i;
        i = a[aL] < b[aL] ? 1 : 0;
        a[aL] = i * base + a[aL] - b[aL];
      }

      // Remove leading zeros.
      for (; !a[0] && a.length > 1;) a.shift();
    }

    return function (x, y, pr, rm, dp, base) {
      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,
        yL, yz,
        Ctor = x.constructor,
        sign = x.s == y.s ? 1 : -1,
        xd = x.d,
        yd = y.d;

      // Either NaN, Infinity or 0?
      if (!xd || !xd[0] || !yd || !yd[0]) {

        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.
          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :

          // Return Â±0 if x is 0 or y is Â±Infinity, or return Â±Infinity as y is 0.
          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);
      }

      if (base) {
        logBase = 1;
        e = x.e - y.e;
      } else {
        base = BASE;
        logBase = LOG_BASE;
        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);
      }

      yL = yd.length;
      xL = xd.length;
      q = new Ctor(sign);
      qd = q.d = [];

      // Result exponent may be one less than e.
      // The digit array of a Decimal from toStringBinary may have trailing zeros.
      for (i = 0; yd[i] == (xd[i] || 0); i++);

      if (yd[i] > (xd[i] || 0)) e--;

      if (pr == null) {
        sd = pr = Ctor.precision;
        rm = Ctor.rounding;
      } else if (dp) {
        sd = pr + (x.e - y.e) + 1;
      } else {
        sd = pr;
      }

      if (sd < 0) {
        qd.push(1);
        more = true;
      } else {

        // Convert precision in number of base 10 digits to base 1e7 digits.
        sd = sd / logBase + 2 | 0;
        i = 0;

        // divisor < 1e7
        if (yL == 1) {
          k = 0;
          yd = yd[0];
          sd++;

          // k is the carry.
          for (; (i < xL || k) && sd--; i++) {
            t = k * base + (xd[i] || 0);
            qd[i] = t / yd | 0;
            k = t % yd | 0;
          }

          more = k || i < xL;

        // divisor >= 1e7
        } else {

          // Normalise xd and yd so highest order digit of yd is >= base/2
          k = base / (yd[0] + 1) | 0;

          if (k > 1) {
            yd = multiplyInteger(yd, k, base);
            xd = multiplyInteger(xd, k, base);
            yL = yd.length;
            xL = xd.length;
          }

          xi = yL;
          rem = xd.slice(0, yL);
          remL = rem.length;

          // Add zeros to make remainder as long as divisor.
          for (; remL < yL;) rem[remL++] = 0;

          yz = yd.slice();
          yz.unshift(0);
          yd0 = yd[0];

          if (yd[1] >= base / 2) ++yd0;

          do {
            k = 0;

            // Compare divisor and remainder.
            cmp = compare(yd, rem, yL, remL);

            // If divisor < remainder.
            if (cmp < 0) {

              // Calculate trial digit, k.
              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);

              // k will be how many times the divisor goes into the current remainder.
              k = rem0 / yd0 | 0;

              //  Algorithm:
              //  1. product = divisor * trial digit (k)
              //  2. if product > remainder: product -= divisor, k--
              //  3. remainder -= product
              //  4. if product was < remainder at 2:
              //    5. compare new remainder and divisor
              //    6. If remainder > divisor: remainder -= divisor, k++

              if (k > 1) {
                if (k >= base) k = base - 1;

                // product = divisor * trial digit.
                prod = multiplyInteger(yd, k, base);
                prodL = prod.length;
                remL = rem.length;

                // Compare product and remainder.
                cmp = compare(prod, rem, prodL, remL);

                // product > remainder.
                if (cmp == 1) {
                  k--;

                  // Subtract divisor from product.
                  subtract(prod, yL < prodL ? yz : yd, prodL, base);
                }
              } else {

                // cmp is -1.
                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1
                // to avoid it. If k is 1 there is a need to compare yd and rem again below.
                if (k == 0) cmp = k = 1;
                prod = yd.slice();
              }

              prodL = prod.length;
              if (prodL < remL) prod.unshift(0);

              // Subtract product from remainder.
              subtract(rem, prod, remL, base);

              // If product was < previous remainder.
              if (cmp == -1) {
                remL = rem.length;

                // Compare divisor and new remainder.
                cmp = compare(yd, rem, yL, remL);

                // If divisor < new remainder, subtract divisor from remainder.
                if (cmp < 1) {
                  k++;

                  // Subtract divisor from remainder.
                  subtract(rem, yL < remL ? yz : yd, remL, base);
                }
              }

              remL = rem.length;
            } else if (cmp === 0) {
              k++;
              rem = [0];
            }    // if cmp === 1, k will be 0

            // Add the next digit, k, to the result array.
            qd[i++] = k;

            // Update the remainder.
            if (cmp && rem[0]) {
              rem[remL++] = xd[xi] || 0;
            } else {
              rem = [xd[xi]];
              remL = 1;
            }

          } while ((xi++ < xL || rem[0] !== void 0) && sd--);

          more = rem[0] !== void 0;
        }

        // Leading zero?
        if (!qd[0]) qd.shift();
      }

      // logBase is 1 when divide is being used for base conversion.
      if (logBase == 1) {
        q.e = e;
        inexact = more;
      } else {

        // To calculate q.e, first get the number of digits of qd[0].
        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;
        q.e = i + e * logBase - 1;

        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);
      }

      return q;
    };
  })();


  /*
   * Round `x` to `sd` significant digits using rounding mode `rm`.
   * Check for over/under-flow.
   */
   function finalise(x, sd, rm, isTruncated) {
    var digits, i, j, k, rd, roundUp, w, xd, xdi,
      Ctor = x.constructor;

    // Don't round if sd is null or undefined.
    out: if (sd != null) {
      xd = x.d;

      // Infinity/NaN.
      if (!xd) return x;

      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.
      // w: the word of xd containing rd, a base 1e7 number.
      // xdi: the index of w within xd.
      // digits: the number of digits of w.
      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if
      // they had leading zeros)
      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).

      // Get the length of the first word of the digits array xd.
      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;
      i = sd - digits;

      // Is the rounding digit in the first word of xd?
      if (i < 0) {
        i += LOG_BASE;
        j = sd;
        w = xd[xdi = 0];

        // Get the rounding digit at index j of w.
        rd = w / mathpow(10, digits - j - 1) % 10 | 0;
      } else {
        xdi = Math.ceil((i + 1) / LOG_BASE);
        k = xd.length;
        if (xdi >= k) {
          if (isTruncated) {

            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.
            for (; k++ <= xdi;) xd.push(0);
            w = rd = 0;
            digits = 1;
            i %= LOG_BASE;
            j = i - LOG_BASE + 1;
          } else {
            break out;
          }
        } else {
          w = k = xd[xdi];

          // Get the number of digits of w.
          for (digits = 1; k >= 10; k /= 10) digits++;

          // Get the index of rd within w.
          i %= LOG_BASE;

          // Get the index of rd within w, adjusted for leading zeros.
          // The number of leading zeros of w is given by LOG_BASE - digits.
          j = i - LOG_BASE + digits;

          // Get the rounding digit at index j of w.
          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;
        }
      }

      // Are there any non-zero digits after the rounding digit?
      isTruncated = isTruncated || sd < 0 ||
        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));

      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right
      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression
      // will give 714.

      roundUp = rm < 4
        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&

          // Check whether the digit to the left of the rounding digit is odd.
          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||
            rm == (x.s < 0 ? 8 : 7));

      if (sd < 1 || !xd[0]) {
        xd.length = 0;
        if (roundUp) {

          // Convert sd to decimal places.
          sd -= x.e + 1;

          // 1, 0.1, 0.01, 0.001, 0.0001 etc.
          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
          x.e = -sd || 0;
        } else {

          // Zero.
          xd[0] = x.e = 0;
        }

        return x;
      }

      // Remove excess digits.
      if (i == 0) {
        xd.length = xdi;
        k = 1;
        xdi--;
      } else {
        xd.length = xdi + 1;
        k = mathpow(10, LOG_BASE - i);

        // E.g. 56700 becomes 56000 if 7 is the rounding digit.
        // j > 0 means i > number of leading zeros of w.
        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;
      }

      if (roundUp) {
        for (;;) {

          // Is the digit to be rounded up in the first word of xd?
          if (xdi == 0) {

            // i will be the length of xd[0] before k is added.
            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;
            j = xd[0] += k;
            for (k = 1; j >= 10; j /= 10) k++;

            // if i != k the length has increased.
            if (i != k) {
              x.e++;
              if (xd[0] == BASE) xd[0] = 1;
            }

            break;
          } else {
            xd[xdi] += k;
            if (xd[xdi] != BASE) break;
            xd[xdi--] = 0;
            k = 1;
          }
        }
      }

      // Remove trailing zeros.
      for (i = xd.length; xd[--i] === 0;) xd.pop();
    }

    if (external) {

      // Overflow?
      if (x.e > Ctor.maxE) {

        // Infinity.
        x.d = null;
        x.e = NaN;

      // Underflow?
      } else if (x.e < Ctor.minE) {

        // Zero.
        x.e = 0;
        x.d = [0];
        // Ctor.underflow = true;
      } // else Ctor.underflow = false;
    }

    return x;
  }


  function finiteToString(x, isExp, sd) {
    if (!x.isFinite()) return nonFiniteToString(x);
    var k,
      e = x.e,
      str = digitsToString(x.d),
      len = str.length;

    if (isExp) {
      if (sd && (k = sd - len) > 0) {
        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);
      } else if (len > 1) {
        str = str.charAt(0) + '.' + str.slice(1);
      }

      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;
    } else if (e < 0) {
      str = '0.' + getZeroString(-e - 1) + str;
      if (sd && (k = sd - len) > 0) str += getZeroString(k);
    } else if (e >= len) {
      str += getZeroString(e + 1 - len);
      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);
    } else {
      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);
      if (sd && (k = sd - len) > 0) {
        if (e + 1 === len) str += '.';
        str += getZeroString(k);
      }
    }

    return str;
  }


  // Calculate the base 10 exponent from the base 1e7 exponent.
  function getBase10Exponent(digits, e) {
    var w = digits[0];

    // Add the number of digits of the first word of the digits array.
    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;
    return e;
  }


  function getLn10(Ctor, sd, pr) {
    if (sd > LN10_PRECISION) {

      // Reset global state in case the exception is caught.
      external = true;
      if (pr) Ctor.precision = pr;
      throw Error(precisionLimitExceeded);
    }
    return finalise(new Ctor(LN10), sd, 1, true);
  }


  function getPi(Ctor, sd, rm) {
    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);
    return finalise(new Ctor(PI), sd, rm, true);
  }


  function getPrecision(digits) {
    var w = digits.length - 1,
      len = w * LOG_BASE + 1;

    w = digits[w];

    // If non-zero...
    if (w) {

      // Subtract the number of trailing zeros of the last word.
      for (; w % 10 == 0; w /= 10) len--;

      // Add the number of digits of the first word.
      for (w = digits[0]; w >= 10; w /= 10) len++;
    }

    return len;
  }


  function getZeroString(k) {
    var zs = '';
    for (; k--;) zs += '0';
    return zs;
  }


  /*
   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an
   * integer of type number.
   *
   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.
   *
   */
  function intPow(Ctor, x, n, pr) {
    var isTruncated,
      r = new Ctor(1),

      // Max n of 9007199254740991 takes 53 loop iterations.
      // Maximum digits array length; leaves [28, 34] guard digits.
      k = Math.ceil(pr / LOG_BASE + 4);

    external = false;

    for (;;) {
      if (n % 2) {
        r = r.times(x);
        if (truncate(r.d, k)) isTruncated = true;
      }

      n = mathfloor(n / 2);
      if (n === 0) {

        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.
        n = r.d.length - 1;
        if (isTruncated && r.d[n] === 0) ++r.d[n];
        break;
      }

      x = x.times(x);
      truncate(x.d, k);
    }

    external = true;

    return r;
  }


  function isOdd(n) {
    return n.d[n.d.length - 1] & 1;
  }


  /*
   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.
   */
  function maxOrMin(Ctor, args, ltgt) {
    var y,
      x = new Ctor(args[0]),
      i = 0;

    for (; ++i < args.length;) {
      y = new Ctor(args[i]);
      if (!y.s) {
        x = y;
        break;
      } else if (x[ltgt](y)) {
        x = y;
      }
    }

    return x;
  }


  /*
   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant
   * digits.
   *
   * Taylor/Maclaurin series.
   *
   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...
   *
   * Argument reduction:
   *   Repeat x = x / 32, k += 5, until |x| < 0.1
   *   exp(x) = exp(x / 2^k)^(2^k)
   *
   * Previously, the argument was initially reduced by
   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)
   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was
   * found to be slower than just dividing repeatedly by 32 as above.
   *
   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000
   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000
   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)
   *
   *  exp(Infinity)  = Infinity
   *  exp(-Infinity) = 0
   *  exp(NaN)       = NaN
   *  exp(Â±0)        = 1
   *
   *  exp(x) is non-terminating for any finite, non-zero x.
   *
   *  The result will always be correctly rounded.
   *
   */
  function naturalExponential(x, sd) {
    var denominator, guard, j, pow, sum, t, wpr,
      rep = 0,
      i = 0,
      k = 0,
      Ctor = x.constructor,
      rm = Ctor.rounding,
      pr = Ctor.precision;

    // 0/NaN/Infinity?
    if (!x.d || !x.d[0] || x.e > 17) {

      return new Ctor(x.d
        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0
        : x.s ? x.s < 0 ? 0 : x : 0 / 0);
    }

    if (sd == null) {
      external = false;
      wpr = pr;
    } else {
      wpr = sd;
    }

    t = new Ctor(0.03125);

    // while abs(x) >= 0.1
    while (x.e > -2) {

      // x = x / 2^5
      x = x.times(t);
      k += 5;
    }

    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision
    // necessary to ensure the first 4 rounding digits are correct.
    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
    wpr += guard;
    denominator = pow = sum = new Ctor(1);
    Ctor.precision = wpr;

    for (;;) {
      pow = finalise(pow.times(x), wpr, 1);
      denominator = denominator.times(++i);
      t = sum.plus(divide(pow, denominator, wpr, 1));

      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
        j = k;
        while (j--) sum = finalise(sum.times(sum), wpr, 1);

        // Check to see if the first 4 rounding digits are [49]999.
        // If so, repeat the summation with a higher precision, otherwise
        // e.g. with precision: 18, rounding: 1
        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)
        // `wpr - guard` is the index of first rounding digit.
        if (sd == null) {

          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {
            Ctor.precision = wpr += 10;
            denominator = pow = t = new Ctor(1);
            i = 0;
            rep++;
          } else {
            return finalise(sum, Ctor.precision = pr, rm, external = true);
          }
        } else {
          Ctor.precision = pr;
          return sum;
        }
      }

      sum = t;
    }
  }


  /*
   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant
   * digits.
   *
   *  ln(-n)        = NaN
   *  ln(0)         = -Infinity
   *  ln(-0)        = -Infinity
   *  ln(1)         = 0
   *  ln(Infinity)  = Infinity
   *  ln(-Infinity) = NaN
   *  ln(NaN)       = NaN
   *
   *  ln(n) (n != 1) is non-terminating.
   *
   */
  function naturalLogarithm(y, sd) {
    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,
      n = 1,
      guard = 10,
      x = y,
      xd = x.d,
      Ctor = x.constructor,
      rm = Ctor.rounding,
      pr = Ctor.precision;

    // Is x negative or Infinity, NaN, 0 or 1?
    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {
      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);
    }

    if (sd == null) {
      external = false;
      wpr = pr;
    } else {
      wpr = sd;
    }

    Ctor.precision = wpr += guard;
    c = digitsToString(xd);
    c0 = c.charAt(0);

    if (Math.abs(e = x.e) < 1.5e15) {

      // Argument reduction.
      // The series converges faster the closer the argument is to 1, so using
      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b
      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,
      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can
      // later be divided by this number, then separate out the power of 10 using
      // ln(a*10^b) = ln(a) + b*ln(10).

      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).
      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {
      // max n is 6 (gives 0.7 - 1.3)
      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
        x = x.times(y);
        c = digitsToString(x.d);
        c0 = c.charAt(0);
        n++;
      }

      e = x.e;

      if (c0 > 1) {
        x = new Ctor('0.' + c);
        e++;
      } else {
        x = new Ctor(c0 + '.' + c.slice(1));
      }
    } else {

      // The argument reduction method above may result in overflow if the argument y is a massive
      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this
      // function using ln(x*10^e) = ln(x) + e*ln(10).
      t = getLn10(Ctor, wpr + 2, pr).times(e + '');
      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);
      Ctor.precision = pr;

      return sd == null ? finalise(x, pr, rm, external = true) : x;
    }

    // x1 is x reduced to a value near 1.
    x1 = x;

    // Taylor series.
    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)
    // where x = (y - 1)/(y + 1)    (|x| < 1)
    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);
    x2 = finalise(x.times(x), wpr, 1);
    denominator = 3;

    for (;;) {
      numerator = finalise(numerator.times(x2), wpr, 1);
      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));

      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
        sum = sum.times(2);

        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an
        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.
        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));
        sum = divide(sum, new Ctor(n), wpr, 1);

        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has
        // been repeated previously) and the first 4 rounding digits 9999?
        // If so, restart the summation with a higher precision, otherwise
        // e.g. with precision: 12, rounding: 1
        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.
        // `wpr - guard` is the index of first rounding digit.
        if (sd == null) {
          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {
            Ctor.precision = wpr += guard;
            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);
            x2 = finalise(x.times(x), wpr, 1);
            denominator = rep = 1;
          } else {
            return finalise(sum, Ctor.precision = pr, rm, external = true);
          }
        } else {
          Ctor.precision = pr;
          return sum;
        }
      }

      sum = t;
      denominator += 2;
    }
  }


  // Â±Infinity, NaN.
  function nonFiniteToString(x) {
    // Unsigned.
    return String(x.s * x.s / 0);
  }


  /*
   * Parse the value of a new Decimal `x` from string `str`.
   */
  function parseDecimal(x, str) {
    var e, i, len;

    // Decimal point?
    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

    // Exponential form?
    if ((i = str.search(/e/i)) > 0) {

      // Determine exponent.
      if (e < 0) e = i;
      e += +str.slice(i + 1);
      str = str.substring(0, i);
    } else if (e < 0) {

      // Integer.
      e = str.length;
    }

    // Determine leading zeros.
    for (i = 0; str.charCodeAt(i) === 48; i++);

    // Determine trailing zeros.
    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);
    str = str.slice(i, len);

    if (str) {
      len -= i;
      x.e = e = e - i - 1;
      x.d = [];

      // Transform base

      // e is the base 10 exponent.
      // i is where to slice str to get the first word of the digits array.
      i = (e + 1) % LOG_BASE;
      if (e < 0) i += LOG_BASE;

      if (i < len) {
        if (i) x.d.push(+str.slice(0, i));
        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));
        str = str.slice(i);
        i = LOG_BASE - str.length;
      } else {
        i -= len;
      }

      for (; i--;) str += '0';
      x.d.push(+str);

      if (external) {

        // Overflow?
        if (x.e > x.constructor.maxE) {

          // Infinity.
          x.d = null;
          x.e = NaN;

        // Underflow?
        } else if (x.e < x.constructor.minE) {

          // Zero.
          x.e = 0;
          x.d = [0];
          // x.constructor.underflow = true;
        } // else x.constructor.underflow = false;
      }
    } else {

      // Zero.
      x.e = 0;
      x.d = [0];
    }

    return x;
  }


  /*
   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.
   */
  function parseOther(x, str) {
    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;

    if (str === 'Infinity' || str === 'NaN') {
      if (!+str) x.s = NaN;
      x.e = NaN;
      x.d = null;
      return x;
    }

    if (isHex.test(str))  {
      base = 16;
      str = str.toLowerCase();
    } else if (isBinary.test(str))  {
      base = 2;
    } else if (isOctal.test(str))  {
      base = 8;
    } else {
      throw Error(invalidArgument + str);
    }

    // Is there a binary exponent part?
    i = str.search(/p/i);

    if (i > 0) {
      p = +str.slice(i + 1);
      str = str.substring(2, i);
    } else {
      str = str.slice(2);
    }

    // Convert `str` as an integer then divide the result by `base` raised to a power such that the
    // fraction part will be restored.
    i = str.indexOf('.');
    isFloat = i >= 0;
    Ctor = x.constructor;

    if (isFloat) {
      str = str.replace('.', '');
      len = str.length;
      i = len - i;

      // log[10](16) = 1.2041... , log[10](88) = 1.9444....
      divisor = intPow(Ctor, new Ctor(base), i, i * 2);
    }

    xd = convertBase(str, base, BASE);
    xe = xd.length - 1;

    // Remove trailing zeros.
    for (i = xe; xd[i] === 0; --i) xd.pop();
    if (i < 0) return new Ctor(x.s * 0);
    x.e = getBase10Exponent(xd, xe);
    x.d = xd;
    external = false;

    // At what precision to perform the division to ensure exact conversion?
    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)
    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412
    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.
    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount
    // Therefore using 4 * the number of digits of str will always be enough.
    if (isFloat) x = divide(x, divisor, len * 4);

    // Multiply by the binary exponent part if present.
    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));
    external = true;

    return x;
  }


  /*
   * sin(x) = x - x^3/3! + x^5/5! - ...
   * |x| < pi/2
   *
   */
  function sine(Ctor, x) {
    var k,
      len = x.d.length;

    if (len < 3) return taylorSeries(Ctor, 2, x, x);

    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)
    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)
    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))

    // Estimate the optimum number of times to use the argument reduction.
    k = 1.4 * Math.sqrt(len);
    k = k > 16 ? 16 : k | 0;

    x = x.times(1 / tinyPow(5, k));
    x = taylorSeries(Ctor, 2, x, x);

    // Reverse argument reduction
    var sin2_x,
      d5 = new Ctor(5),
      d16 = new Ctor(16),
      d20 = new Ctor(20);
    for (; k--;) {
      sin2_x = x.times(x);
      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));
    }

    return x;
  }


  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.
  function taylorSeries(Ctor, n, x, y, isHyperbolic) {
    var j, t, u, x2,
      i = 1,
      pr = Ctor.precision,
      k = Math.ceil(pr / LOG_BASE);

    external = false;
    x2 = x.times(x);
    u = new Ctor(y);

    for (;;) {
      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);
      u = isHyperbolic ? y.plus(t) : y.minus(t);
      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);
      t = u.plus(y);

      if (t.d[k] !== void 0) {
        for (j = k; t.d[j] === u.d[j] && j--;);
        if (j == -1) break;
      }

      j = u;
      u = y;
      y = t;
      t = j;
      i++;
    }

    external = true;
    t.d.length = k + 1;

    return t;
  }


  // Exponent e must be positive and non-zero.
  function tinyPow(b, e) {
    var n = b;
    while (--e) n *= b;
    return n;
  }


  // Return the absolute value of `x` reduced to less than or equal to half pi.
  function toLessThanHalfPi(Ctor, x) {
    var t,
      isNeg = x.s < 0,
      pi = getPi(Ctor, Ctor.precision, 1),
      halfPi = pi.times(0.5);

    x = x.abs();

    if (x.lte(halfPi)) {
      quadrant = isNeg ? 4 : 1;
      return x;
    }

    t = x.divToInt(pi);

    if (t.isZero()) {
      quadrant = isNeg ? 3 : 2;
    } else {
      x = x.minus(t.times(pi));

      // 0 <= x < pi
      if (x.lte(halfPi)) {
        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);
        return x;
      }

      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);
    }

    return x.minus(pi).abs();
  }


  /*
   * Return the value of Decimal `x` as a string in base `baseOut`.
   *
   * If the optional `sd` argument is present include a binary exponent suffix.
   */
  function toStringBinary(x, baseOut, sd, rm) {
    var base, e, i, k, len, roundUp, str, xd, y,
      Ctor = x.constructor,
      isExp = sd !== void 0;

    if (isExp) {
      checkInt32(sd, 1, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
    } else {
      sd = Ctor.precision;
      rm = Ctor.rounding;
    }

    if (!x.isFinite()) {
      str = nonFiniteToString(x);
    } else {
      str = finiteToString(x);
      i = str.indexOf('.');

      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:
      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))
      // minBinaryExponent = floor(decimalExponent * log[2](10))
      // log[2](10) = 3.321928094887362347870319429489390175864

      if (isExp) {
        base = 2;
        if (baseOut == 16) {
          sd = sd * 4 - 3;
        } else if (baseOut == 8) {
          sd = sd * 3 - 2;
        }
      } else {
        base = baseOut;
      }

      // Convert the number as an integer then divide the result by its base raised to a power such
      // that the fraction part will be restored.

      // Non-integer.
      if (i >= 0) {
        str = str.replace('.', '');
        y = new Ctor(1);
        y.e = str.length - i;
        y.d = convertBase(finiteToString(y), 10, base);
        y.e = y.d.length;
      }

      xd = convertBase(str, 10, base);
      e = len = xd.length;

      // Remove trailing zeros.
      for (; xd[--len] == 0;) xd.pop();

      if (!xd[0]) {
        str = isExp ? '0p+0' : '0';
      } else {
        if (i < 0) {
          e--;
        } else {
          x = new Ctor(x);
          x.d = xd;
          x.e = e;
          x = divide(x, y, sd, rm, 0, base);
          xd = x.d;
          e = x.e;
          roundUp = inexact;
        }

        // The rounding digit, i.e. the digit after the digit that may be rounded up.
        i = xd[sd];
        k = base / 2;
        roundUp = roundUp || xd[sd + 1] !== void 0;

        roundUp = rm < 4
          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))
          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||
            rm === (x.s < 0 ? 8 : 7));

        xd.length = sd;

        if (roundUp) {

          // Rounding up may mean the previous digit has to be rounded up and so on.
          for (; ++xd[--sd] > base - 1;) {
            xd[sd] = 0;
            if (!sd) {
              ++e;
              xd.unshift(1);
            }
          }
        }

        // Determine trailing zeros.
        for (len = xd.length; !xd[len - 1]; --len);

        // E.g. [4, 11, 15] becomes 4bf.
        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);

        // Add binary exponent suffix?
        if (isExp) {
          if (len > 1) {
            if (baseOut == 16 || baseOut == 8) {
              i = baseOut == 16 ? 4 : 3;
              for (--len; len % i; len++) str += '0';
              xd = convertBase(str, base, baseOut);
              for (len = xd.length; !xd[len - 1]; --len);

              // xd[0] will always be be 1
              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);
            } else {
              str = str.charAt(0) + '.' + str.slice(1);
            }
          }

          str =  str + (e < 0 ? 'p' : 'p+') + e;
        } else if (e < 0) {
          for (; ++e;) str = '0' + str;
          str = '0.' + str;
        } else {
          if (++e > len) for (e -= len; e-- ;) str += '0';
          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;
    }

    return x.s < 0 ? '-' + str : str;
  }


  // Does not strip trailing zeros.
  function truncate(arr, len) {
    if (arr.length > len) {
      arr.length = len;
      return true;
    }
  }


  // Decimal methods


  /*
   *  abs
   *  acos
   *  acosh
   *  add
   *  asin
   *  asinh
   *  atan
   *  atanh
   *  atan2
   *  cbrt
   *  ceil
   *  clone
   *  config
   *  cos
   *  cosh
   *  div
   *  exp
   *  floor
   *  hypot
   *  ln
   *  log
   *  log2
   *  log10
   *  max
   *  min
   *  mod
   *  mul
   *  pow
   *  random
   *  round
   *  set
   *  sign
   *  sin
   *  sinh
   *  sqrt
   *  sub
   *  tan
   *  tanh
   *  trunc
   */


  /*
   * Return a new Decimal whose value is the absolute value of `x`.
   *
   * x {number|string|Decimal}
   *
   */
  function abs(x) {
    return new this(x).abs();
  }


  /*
   * Return a new Decimal whose value is the arccosine in radians of `x`.
   *
   * x {number|string|Decimal}
   *
   */
  function acos(x) {
    return new this(x).acos();
  }


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function acosh(x) {
    return new this(x).acosh();
  }


  /*
   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function add(x, y) {
    return new this(x).plus(y);
  }


  /*
   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function asin(x) {
    return new this(x).asin();
  }


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function asinh(x) {
    return new this(x).asinh();
  }


  /*
   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function atan(x) {
    return new this(x).atan();
  }


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function atanh(x) {
    return new this(x).atanh();
  }


  /*
   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi
   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-pi, pi]
   *
   * y {number|string|Decimal} The y-coordinate.
   * x {number|string|Decimal} The x-coordinate.
   *
   * atan2(Â±0, -0)               = Â±pi
   * atan2(Â±0, +0)               = Â±0
   * atan2(Â±0, -x)               = Â±pi for x > 0
   * atan2(Â±0, x)                = Â±0 for x > 0
   * atan2(-y, Â±0)               = -pi/2 for y > 0
   * atan2(y, Â±0)                = pi/2 for y > 0
   * atan2(Â±y, -Infinity)        = Â±pi for finite y > 0
   * atan2(Â±y, +Infinity)        = Â±0 for finite y > 0
   * atan2(Â±Infinity, x)         = Â±pi/2 for finite x
   * atan2(Â±Infinity, -Infinity) = Â±3*pi/4
   * atan2(Â±Infinity, +Infinity) = Â±pi/4
   * atan2(NaN, x) = NaN
   * atan2(y, NaN) = NaN
   *
   */
  function atan2(y, x) {
    y = new this(y);
    x = new this(x);
    var r,
      pr = this.precision,
      rm = this.rounding,
      wpr = pr + 4;

    // Either NaN
    if (!y.s || !x.s) {
      r = new this(NaN);

    // Both Â±Infinity
    } else if (!y.d && !x.d) {
      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);
      r.s = y.s;

    // x is Â±Infinity or y is Â±0
    } else if (!x.d || y.isZero()) {
      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);
      r.s = y.s;

    // y is Â±Infinity or x is Â±0
    } else if (!y.d || x.isZero()) {
      r = getPi(this, wpr, 1).times(0.5);
      r.s = y.s;

    // Both non-zero and finite
    } else if (x.s < 0) {
      this.precision = wpr;
      this.rounding = 1;
      r = this.atan(divide(y, x, wpr, 1));
      x = getPi(this, wpr, 1);
      this.precision = pr;
      this.rounding = rm;
      r = y.s < 0 ? r.minus(x) : r.plus(x);
    } else {
      r = this.atan(divide(y, x, wpr, 1));
    }

    return r;
  }


  /*
   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function cbrt(x) {
    return new this(x).cbrt();
  }


  /*
   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.
   *
   * x {number|string|Decimal}
   *
   */
  function ceil(x) {
    return finalise(x = new this(x), x.e + 1, 2);
  }


  /*
   * Configure global settings for a Decimal constructor.
   *
   * `obj` is an object with one or more of the following properties,
   *
   *   precision  {number}
   *   rounding   {number}
   *   toExpNeg   {number}
   *   toExpPos   {number}
   *   maxE       {number}
   *   minE       {number}
   *   modulo     {number}
   *   crypto     {boolean|number}
   *   defaults   {true}
   *
   * E.g. Decimal.config({ precision: 20, rounding: 4 })
   *
   */
  function config(obj) {
    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');
    var i, p, v,
      useDefaults = obj.defaults === true,
      ps = [
        'precision', 1, MAX_DIGITS,
        'rounding', 0, 8,
        'toExpNeg', -EXP_LIMIT, 0,
        'toExpPos', 0, EXP_LIMIT,
        'maxE', 0, EXP_LIMIT,
        'minE', -EXP_LIMIT, 0,
        'modulo', 0, 9
      ];

    for (i = 0; i < ps.length; i += 3) {
      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];
      if ((v = obj[p]) !== void 0) {
        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;
        else throw Error(invalidArgument + p + ': ' + v);
      }
    }

    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];
    if ((v = obj[p]) !== void 0) {
      if (v === true || v === false || v === 0 || v === 1) {
        if (v) {
          if (typeof crypto != 'undefined' && crypto &&
            (crypto.getRandomValues || crypto.randomBytes)) {
            this[p] = true;
          } else {
            throw Error(cryptoUnavailable);
          }
        } else {
          this[p] = false;
        }
      } else {
        throw Error(invalidArgument + p + ': ' + v);
      }
    }

    return this;
  }


  /*
   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function cos(x) {
    return new this(x).cos();
  }


  /*
   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function cosh(x) {
    return new this(x).cosh();
  }


  /*
   * Create and return a Decimal constructor with the same configuration properties as this Decimal
   * constructor.
   *
   */
  function clone(obj) {
    var i, p, ps;

    /*
     * The Decimal constructor and exported function.
     * Return a new Decimal instance.
     *
     * v {number|string|Decimal} A numeric value.
     *
     */
    function Decimal(v) {
      var e, i, t,
        x = this;

      // Decimal called without new.
      if (!(x instanceof Decimal)) return new Decimal(v);

      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor
      // which points to Object.
      x.constructor = Decimal;

      // Duplicate.
      if (v instanceof Decimal) {
        x.s = v.s;

        if (external) {
          if (!v.d || v.e > Decimal.maxE) {

            // Infinity.
            x.e = NaN;
            x.d = null;
          } else if (v.e < Decimal.minE) {

            // Zero.
            x.e = 0;
            x.d = [0];
          } else {
            x.e = v.e;
            x.d = v.d.slice();
          }
        } else {
          x.e = v.e;
          x.d = v.d ? v.d.slice() : v.d;
        }

        return;
      }

      t = typeof v;

      if (t === 'number') {
        if (v === 0) {
          x.s = 1 / v < 0 ? -1 : 1;
          x.e = 0;
          x.d = [0];
          return;
        }

        if (v < 0) {
          v = -v;
          x.s = -1;
        } else {
          x.s = 1;
        }

        // Fast path for small integers.
        if (v === ~~v && v < 1e7) {
          for (e = 0, i = v; i >= 10; i /= 10) e++;

          if (external) {
            if (e > Decimal.maxE) {
              x.e = NaN;
              x.d = null;
            } else if (e < Decimal.minE) {
              x.e = 0;
              x.d = [0];
            } else {
              x.e = e;
              x.d = [v];
            }
          } else {
            x.e = e;
            x.d = [v];
          }

          return;

        // Infinity, NaN.
        } else if (v * 0 !== 0) {
          if (!v) x.s = NaN;
          x.e = NaN;
          x.d = null;
          return;
        }

        return parseDecimal(x, v.toString());

      } else if (t !== 'string') {
        throw Error(invalidArgument + v);
      }

      // Minus sign?
      if ((i = v.charCodeAt(0)) === 45) {
        v = v.slice(1);
        x.s = -1;
      } else {
        // Plus sign?
        if (i === 43) v = v.slice(1);
        x.s = 1;
      }

      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);
    }

    Decimal.prototype = P;

    Decimal.ROUND_UP = 0;
    Decimal.ROUND_DOWN = 1;
    Decimal.ROUND_CEIL = 2;
    Decimal.ROUND_FLOOR = 3;
    Decimal.ROUND_HALF_UP = 4;
    Decimal.ROUND_HALF_DOWN = 5;
    Decimal.ROUND_HALF_EVEN = 6;
    Decimal.ROUND_HALF_CEIL = 7;
    Decimal.ROUND_HALF_FLOOR = 8;
    Decimal.EUCLID = 9;

    Decimal.config = Decimal.set = config;
    Decimal.clone = clone;
    Decimal.isDecimal = isDecimalInstance;

    Decimal.abs = abs;
    Decimal.acos = acos;
    Decimal.acosh = acosh;        // ES6
    Decimal.add = add;
    Decimal.asin = asin;
    Decimal.asinh = asinh;        // ES6
    Decimal.atan = atan;
    Decimal.atanh = atanh;        // ES6
    Decimal.atan2 = atan2;
    Decimal.cbrt = cbrt;          // ES6
    Decimal.ceil = ceil;
    Decimal.cos = cos;
    Decimal.cosh = cosh;          // ES6
    Decimal.div = div;
    Decimal.exp = exp;
    Decimal.floor = floor;
    Decimal.hypot = hypot;        // ES6
    Decimal.ln = ln;
    Decimal.log = log;
    Decimal.log10 = log10;        // ES6
    Decimal.log2 = log2;          // ES6
    Decimal.max = max;
    Decimal.min = min;
    Decimal.mod = mod;
    Decimal.mul = mul;
    Decimal.pow = pow;
    Decimal.random = random;
    Decimal.round = round;
    Decimal.sign = sign;          // ES6
    Decimal.sin = sin;
    Decimal.sinh = sinh;          // ES6
    Decimal.sqrt = sqrt;
    Decimal.sub = sub;
    Decimal.tan = tan;
    Decimal.tanh = tanh;          // ES6
    Decimal.trunc = trunc;        // ES6

    if (obj === void 0) obj = {};
    if (obj) {
      if (obj.defaults !== true) {
        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];
        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];
      }
    }

    Decimal.config(obj);

    return Decimal;
  }


  /*
   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function div(x, y) {
    return new this(x).div(y);
  }


  /*
   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} The power to which to raise the base of the natural log.
   *
   */
  function exp(x) {
    return new this(x).exp();
  }


  /*
   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.
   *
   * x {number|string|Decimal}
   *
   */
  function floor(x) {
    return finalise(x = new this(x), x.e + 1, 3);
  }


  /*
   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,
   * rounded to `precision` significant digits using rounding mode `rounding`.
   *
   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)
   *
   * arguments {number|string|Decimal}
   *
   */
  function hypot() {
    var i, n,
      t = new this(0);

    external = false;

    for (i = 0; i < arguments.length;) {
      n = new this(arguments[i++]);
      if (!n.d) {
        if (n.s) {
          external = true;
          return new this(1 / 0);
        }
        t = n;
      } else if (t.d) {
        t = t.plus(n.times(n));
      }
    }

    external = true;

    return t.sqrt();
  }


  /*
   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),
   * otherwise return false.
   *
   */
  function isDecimalInstance(obj) {
    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;
  }


  /*
   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function ln(x) {
    return new this(x).ln();
  }


  /*
   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base
   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.
   *
   * log[y](x)
   *
   * x {number|string|Decimal} The argument of the logarithm.
   * y {number|string|Decimal} The base of the logarithm.
   *
   */
  function log(x, y) {
    return new this(x).log(y);
  }


  /*
   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function log2(x) {
    return new this(x).log(2);
  }


  /*
   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function log10(x) {
    return new this(x).log(10);
  }


  /*
   * Return a new Decimal whose value is the maximum of the arguments.
   *
   * arguments {number|string|Decimal}
   *
   */
  function max() {
    return maxOrMin(this, arguments, 'lt');
  }


  /*
   * Return a new Decimal whose value is the minimum of the arguments.
   *
   * arguments {number|string|Decimal}
   *
   */
  function min() {
    return maxOrMin(this, arguments, 'gt');
  }


  /*
   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits
   * using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function mod(x, y) {
    return new this(x).mod(y);
  }


  /*
   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function mul(x, y) {
    return new this(x).mul(y);
  }


  /*
   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} The base.
   * y {number|string|Decimal} The exponent.
   *
   */
  function pow(x, y) {
    return new this(x).pow(y);
  }


  /*
   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with
   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros
   * are produced).
   *
   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.
   *
   */
  function random(sd) {
    var d, e, k, n,
      i = 0,
      r = new this(1),
      rd = [];

    if (sd === void 0) sd = this.precision;
    else checkInt32(sd, 1, MAX_DIGITS);

    k = Math.ceil(sd / LOG_BASE);

    if (!this.crypto) {
      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;

    // Browsers supporting crypto.getRandomValues.
    } else if (crypto.getRandomValues) {
      d = crypto.getRandomValues(new Uint32Array(k));

      for (; i < k;) {
        n = d[i];

        // 0 <= n < 4294967296
        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).
        if (n >= 4.29e9) {
          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];
        } else {

          // 0 <= n <= 4289999999
          // 0 <= (n % 1e7) <= 9999999
          rd[i++] = n % 1e7;
        }
      }

    // Node.js supporting crypto.randomBytes.
    } else if (crypto.randomBytes) {

      // buffer
      d = crypto.randomBytes(k *= 4);

      for (; i < k;) {

        // 0 <= n < 2147483648
        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);

        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).
        if (n >= 2.14e9) {
          crypto.randomBytes(4).copy(d, i);
        } else {

          // 0 <= n <= 2139999999
          // 0 <= (n % 1e7) <= 9999999
          rd.push(n % 1e7);
          i += 4;
        }
      }

      i = k / 4;
    } else {
      throw Error(cryptoUnavailable);
    }

    k = rd[--i];
    sd %= LOG_BASE;

    // Convert trailing digits to zeros according to sd.
    if (k && sd) {
      n = mathpow(10, LOG_BASE - sd);
      rd[i] = (k / n | 0) * n;
    }

    // Remove trailing words which are zero.
    for (; rd[i] === 0; i--) rd.pop();

    // Zero?
    if (i < 0) {
      e = 0;
      rd = [0];
    } else {
      e = -1;

      // Remove leading words which are zero and adjust exponent accordingly.
      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();

      // Count the digits of the first word of rd to determine leading zeros.
      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;

      // Adjust the exponent for leading zeros of the first word of rd.
      if (k < LOG_BASE) e -= LOG_BASE - k;
    }

    r.e = e;
    r.d = rd;

    return r;
  }


  /*
   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.
   *
   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).
   *
   * x {number|string|Decimal}
   *
   */
  function round(x) {
    return finalise(x = new this(x), x.e + 1, this.rounding);
  }


  /*
   * Return
   *   1    if x > 0,
   *  -1    if x < 0,
   *   0    if x is 0,
   *  -0    if x is -0,
   *   NaN  otherwise
   *
   * x {number|string|Decimal}
   *
   */
  function sign(x) {
    x = new this(x);
    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;
  }


  /*
   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits
   * using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function sin(x) {
    return new this(x).sin();
  }


  /*
   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function sinh(x) {
    return new this(x).sinh();
  }


  /*
   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function sqrt(x) {
    return new this(x).sqrt();
  }


  /*
   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits
   * using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function sub(x, y) {
    return new this(x).sub(y);
  }


  /*
   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function tan(x) {
    return new this(x).tan();
  }


  /*
   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function tanh(x) {
    return new this(x).tanh();
  }


  /*
   * Return a new Decimal whose value is `x` truncated to an integer.
   *
   * x {number|string|Decimal}
   *
   */
  function trunc(x) {
    return finalise(x = new this(x), x.e + 1, 1);
  }


  // Create and configure initial Decimal constructor.
  Decimal = clone(DEFAULTS);

  Decimal['default'] = Decimal.Decimal = Decimal;

  // Create the internal constants from their string values.
  LN10 = new Decimal(LN10);
  PI = new Decimal(PI);


  // Export.


  // AMD.
  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return Decimal;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

  // Node and other environments that support module.exports.
  } else {}
})(this);


/***/ }),

/***/ "../node_modules/escape-latex/dist/index.js":
/*!**************************************************!*\
  !*** ../node_modules/escape-latex/dist/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Map the characters to escape to their escaped values. The list is derived
// from http://www.cespedes.org/blog/85/how-to-escape-latex-special-characters

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var defaultEscapes = {
  "{": "\\{",
  "}": "\\}",
  "\\": "\\textbackslash{}",
  "#": "\\#",
  $: "\\$",
  "%": "\\%",
  "&": "\\&",
  "^": "\\textasciicircum{}",
  _: "\\_",
  "~": "\\textasciitilde{}"
};
var formatEscapes = {
  "\u2013": "\\--",
  "\u2014": "\\---",
  " ": "~",
  "\t": "\\qquad{}",
  "\r\n": "\\newline{}",
  "\n": "\\newline{}"
};

var defaultEscapeMapFn = function defaultEscapeMapFn(defaultEscapes, formatEscapes) {
  return _extends({}, defaultEscapes, formatEscapes);
};

/**
 * Escape a string to be used in LaTeX documents.
 * @param {string} str the string to be escaped.
 * @param {boolean} params.preserveFormatting whether formatting escapes should
 *  be performed (default: false).
 * @param {function} params.escapeMapFn the function to modify the escape maps.
 * @return {string} the escaped string, ready to be used in LaTeX.
 */
module.exports = function (str) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$preserveFormatti = _ref.preserveFormatting,
      preserveFormatting = _ref$preserveFormatti === undefined ? false : _ref$preserveFormatti,
      _ref$escapeMapFn = _ref.escapeMapFn,
      escapeMapFn = _ref$escapeMapFn === undefined ? defaultEscapeMapFn : _ref$escapeMapFn;

  var runningStr = String(str);
  var result = "";

  var escapes = escapeMapFn(_extends({}, defaultEscapes), preserveFormatting ? _extends({}, formatEscapes) : {});
  var escapeKeys = Object.keys(escapes); // as it is reused later on

  // Algorithm: Go through the string character by character, if it matches
  // with one of the special characters then we'll replace it with the escaped
  // version.

  var _loop = function _loop() {
    var specialCharFound = false;
    escapeKeys.forEach(function (key, index) {
      if (specialCharFound) {
        return;
      }
      if (runningStr.length >= key.length && runningStr.slice(0, key.length) === key) {
        result += escapes[escapeKeys[index]];
        runningStr = runningStr.slice(key.length, runningStr.length);
        specialCharFound = true;
      }
    });
    if (!specialCharFound) {
      result += runningStr.slice(0, 1);
      runningStr = runningStr.slice(1, runningStr.length);
    }
  };

  while (runningStr) {
    _loop();
  }
  return result;
};

/***/ }),

/***/ "../node_modules/fraction.js/fraction.js":
/*!***********************************************!*\
  !*** ../node_modules/fraction.js/fraction.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license Fraction.js v4.0.12 09/09/2015
 * http://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2015, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/


/**
 *
 * This class offers the possibility to calculate fractions.
 * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.
 *
 * Array/Object form
 * [ 0 => <nominator>, 1 => <denominator> ]
 * [ n => <nominator>, d => <denominator> ]
 *
 * Integer form
 * - Single integer value
 *
 * Double form
 * - Single double value
 *
 * String form
 * 123.456 - a simple double
 * 123/456 - a string fraction
 * 123.'456' - a double with repeating decimal places
 * 123.(456) - synonym
 * 123.45'6' - a double with repeating last place
 * 123.45(6) - synonym
 *
 * Example:
 *
 * var f = new Fraction("9.4'31'");
 * f.mul([-4, 3]).div(4.9);
 *
 */

(function(root) {

  "use strict";

  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.
  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.
  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits
  var MAX_CYCLE_LEN = 2000;

  // Parsed data to avoid calling "new" all the time
  var P = {
    "s": 1,
    "n": 0,
    "d": 1
  };

  function createError(name) {

    function errorConstructor() {
      var temp = Error.apply(this, arguments);
      temp['name'] = this['name'] = name;
      this['stack'] = temp['stack'];
      this['message'] = temp['message'];
    }

    /**
     * Error constructor
     *
     * @constructor
     */
    function IntermediateInheritor() {}
    IntermediateInheritor.prototype = Error.prototype;
    errorConstructor.prototype = new IntermediateInheritor();

    return errorConstructor;
  }

  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');
  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');

  function assign(n, s) {

    if (isNaN(n = parseInt(n, 10))) {
      throwInvalidParam();
    }
    return n * s;
  }

  function throwInvalidParam() {
    throw new InvalidParameter();
  }

  var parse = function(p1, p2) {

    var n = 0, d = 1, s = 1;
    var v = 0, w = 0, x = 0, y = 1, z = 1;

    var A = 0, B = 1;
    var C = 1, D = 1;

    var N = 10000000;
    var M;

    if (p1 === undefined || p1 === null) {
      /* void */
    } else if (p2 !== undefined) {
      n = p1;
      d = p2;
      s = n * d;
    } else
      switch (typeof p1) {

        case "object":
        {
          if ("d" in p1 && "n" in p1) {
            n = p1["n"];
            d = p1["d"];
            if ("s" in p1)
              n *= p1["s"];
          } else if (0 in p1) {
            n = p1[0];
            if (1 in p1)
              d = p1[1];
          } else {
            throwInvalidParam();
          }
          s = n * d;
          break;
        }
        case "number":
        {
          if (p1 < 0) {
            s = p1;
            p1 = -p1;
          }

          if (p1 % 1 === 0) {
            n = p1;
          } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow

            if (p1 >= 1) {
              z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));
              p1 /= z;
            }

            // Using Farey Sequences
            // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/

            while (B <= N && D <= N) {
              M = (A + C) / (B + D);

              if (p1 === M) {
                if (B + D <= N) {
                  n = A + C;
                  d = B + D;
                } else if (D > B) {
                  n = C;
                  d = D;
                } else {
                  n = A;
                  d = B;
                }
                break;

              } else {

                if (p1 > M) {
                  A += C;
                  B += D;
                } else {
                  C += A;
                  D += B;
                }

                if (B > N) {
                  n = C;
                  d = D;
                } else {
                  n = A;
                  d = B;
                }
              }
            }
            n *= z;
          } else if (isNaN(p1) || isNaN(p2)) {
            d = n = NaN;
          }
          break;
        }
        case "string":
        {
          B = p1.match(/\d+|./g);

          if (B === null)
            throwInvalidParam();

          if (B[A] === '-') {// Check for minus sign at the beginning
            s = -1;
            A++;
          } else if (B[A] === '+') {// Check for plus sign at the beginning
            A++;
          }

          if (B.length === A + 1) { // Check if it's just a simple number "1234"
            w = assign(B[A++], s);
          } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number

            if (B[A] !== '.') { // Handle 0.5 and .5
              v = assign(B[A++], s);
            }
            A++;

            // Check for decimal places
            if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === "'" && B[A + 3] === "'") {
              w = assign(B[A], s);
              y = Math.pow(10, B[A].length);
              A++;
            }

            // Check for repeating places
            if (B[A] === '(' && B[A + 2] === ')' || B[A] === "'" && B[A + 2] === "'") {
              x = assign(B[A + 1], s);
              z = Math.pow(10, B[A + 1].length) - 1;
              A += 3;
            }

          } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction "123/456" or "123:456"
            w = assign(B[A], s);
            y = assign(B[A + 2], 1);
            A += 3;
          } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction "123 1/2"
            v = assign(B[A], s);
            w = assign(B[A + 2], s);
            y = assign(B[A + 4], 1);
            A += 5;
          }

          if (B.length <= A) { // Check for more tokens on the stack
            d = y * z;
            s = /* void */
                    n = x + d * v + z * w;
            break;
          }

          /* Fall through on error */
        }
        default:
          throwInvalidParam();
      }

    if (d === 0) {
      throw new DivisionByZero();
    }

    P["s"] = s < 0 ? -1 : 1;
    P["n"] = Math.abs(n);
    P["d"] = Math.abs(d);
  };

  function modpow(b, e, m) {

    var r = 1;
    for (; e > 0; b = (b * b) % m, e >>= 1) {

      if (e & 1) {
        r = (r * b) % m;
      }
    }
    return r;
  }


  function cycleLen(n, d) {

    for (; d % 2 === 0;
            d /= 2) {
    }

    for (; d % 5 === 0;
            d /= 5) {
    }

    if (d === 1) // Catch non-cyclic numbers
      return 0;

    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:
    // 10^(d-1) % d == 1
    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,
    // as we want to translate the numbers to strings.

    var rem = 10 % d;
    var t = 1;

    for (; rem !== 1; t++) {
      rem = rem * 10 % d;

      if (t > MAX_CYCLE_LEN)
        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`
    }
    return t;
  }


     function cycleStart(n, d, len) {

    var rem1 = 1;
    var rem2 = modpow(10, len, d);

    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)
      // Solve 10^s == 10^(s+t) (mod d)

      if (rem1 === rem2)
        return t;

      rem1 = rem1 * 10 % d;
      rem2 = rem2 * 10 % d;
    }
    return 0;
  }

  function gcd(a, b) {

    if (!a)
      return b;
    if (!b)
      return a;

    while (1) {
      a %= b;
      if (!a)
        return b;
      b %= a;
      if (!b)
        return a;
    }
  };

  /**
   * Module constructor
   *
   * @constructor
   * @param {number|Fraction=} a
   * @param {number=} b
   */
  function Fraction(a, b) {

    if (!(this instanceof Fraction)) {
      return new Fraction(a, b);
    }

    parse(a, b);

    if (Fraction['REDUCE']) {
      a = gcd(P["d"], P["n"]); // Abuse a
    } else {
      a = 1;
    }

    this["s"] = P["s"];
    this["n"] = P["n"] / a;
    this["d"] = P["d"] / a;
  }

  /**
   * Boolean global variable to be able to disable automatic reduction of the fraction
   *
   */
  Fraction['REDUCE'] = 1;

  Fraction.prototype = {

    "s": 1,
    "n": 0,
    "d": 1,

    /**
     * Calculates the absolute value
     *
     * Ex: new Fraction(-4).abs() => 4
     **/
    "abs": function() {

      return new Fraction(this["n"], this["d"]);
    },

    /**
     * Inverts the sign of the current fraction
     *
     * Ex: new Fraction(-4).neg() => 4
     **/
    "neg": function() {

      return new Fraction(-this["s"] * this["n"], this["d"]);
    },

    /**
     * Adds two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30
     **/
    "add": function(a, b) {

      parse(a, b);
      return new Fraction(
              this["s"] * this["n"] * P["d"] + P["s"] * this["d"] * P["n"],
              this["d"] * P["d"]
              );
    },

    /**
     * Subtracts two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30
     **/
    "sub": function(a, b) {

      parse(a, b);
      return new Fraction(
              this["s"] * this["n"] * P["d"] - P["s"] * this["d"] * P["n"],
              this["d"] * P["d"]
              );
    },

    /**
     * Multiplies two rational numbers
     *
     * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111
     **/
    "mul": function(a, b) {

      parse(a, b);
      return new Fraction(
              this["s"] * P["s"] * this["n"] * P["n"],
              this["d"] * P["d"]
              );
    },

    /**
     * Divides two rational numbers
     *
     * Ex: new Fraction("-17.(345)").inverse().div(3)
     **/
    "div": function(a, b) {

      parse(a, b);
      return new Fraction(
              this["s"] * P["s"] * this["n"] * P["d"],
              this["d"] * P["n"]
              );
    },

    /**
     * Clones the actual object
     *
     * Ex: new Fraction("-17.(345)").clone()
     **/
    "clone": function() {
      return new Fraction(this);
    },

    /**
     * Calculates the modulo of two rational numbers - a more precise fmod
     *
     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)
     **/
    "mod": function(a, b) {

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return new Fraction(NaN);
      }

      if (a === undefined) {
        return new Fraction(this["s"] * this["n"] % this["d"], 1);
      }

      parse(a, b);
      if (0 === P["n"] && 0 === this["d"]) {
        Fraction(0, 0); // Throw DivisionByZero
      }

      /*
       * First silly attempt, kinda slow
       *
       return that["sub"]({
       "n": num["n"] * Math.floor((this.n / this.d) / (num.n / num.d)),
       "d": num["d"],
       "s": this["s"]
       });*/

      /*
       * New attempt: a1 / b1 = a2 / b2 * q + r
       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r
       * => (b2 * a1 % a2 * b1) / (b1 * b2)
       */
      return new Fraction(
              this["s"] * (P["d"] * this["n"]) % (P["n"] * this["d"]),
              P["d"] * this["d"]
              );
    },

    /**
     * Calculates the fractional gcd of two rational numbers
     *
     * Ex: new Fraction(5,8).gcd(3,7) => 1/56
     */
    "gcd": function(a, b) {

      parse(a, b);

      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)

      return new Fraction(gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]), P["d"] * this["d"]);
    },

    /**
     * Calculates the fractional lcm of two rational numbers
     *
     * Ex: new Fraction(5,8).lcm(3,7) => 15
     */
    "lcm": function(a, b) {

      parse(a, b);

      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)

      if (P["n"] === 0 && this["n"] === 0) {
        return new Fraction;
      }
      return new Fraction(P["n"] * this["n"], gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]));
    },

    /**
     * Calculates the ceil of a rational number
     *
     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)
     **/
    "ceil": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.ceil(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Calculates the floor of a rational number
     *
     * Ex: new Fraction('4.(3)').floor() => (4 / 1)
     **/
    "floor": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.floor(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Rounds a rational numbers
     *
     * Ex: new Fraction('4.(3)').round() => (4 / 1)
     **/
    "round": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.round(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Gets the inverse of the fraction, means numerator and denumerator are exchanged
     *
     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3
     **/
    "inverse": function() {

      return new Fraction(this["s"] * this["d"], this["n"]);
    },

    /**
     * Calculates the fraction to some integer exponent
     *
     * Ex: new Fraction(-1,2).pow(-3) => -8
     */
    "pow": function(m) {

      if (m < 0) {
        return new Fraction(Math.pow(this['s'] * this["d"], -m), Math.pow(this["n"], -m));
      } else {
        return new Fraction(Math.pow(this['s'] * this["n"], m), Math.pow(this["d"], m));
      }
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "equals": function(a, b) {

      parse(a, b);
      return this["s"] * this["n"] * P["d"] === P["s"] * P["n"] * this["d"]; // Same as compare() === 0
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "compare": function(a, b) {

      parse(a, b);
      var t = (this["s"] * this["n"] * P["d"] - P["s"] * P["n"] * this["d"]);
      return (0 < t) - (t < 0);
    },

    "simplify": function(eps) {

      // First naive implementation, needs improvement

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return this;
      }

      var cont = this['abs']()['toContinued']();

      eps = eps || 0.001;

      function rec(a) {
        if (a.length === 1)
          return new Fraction(a[0]);
        return rec(a.slice(1))['inverse']()['add'](a[0]);
      }

      for (var i = 0; i < cont.length; i++) {
        var tmp = rec(cont.slice(0, i + 1));
        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {
          return tmp['mul'](this['s']);
        }
      }
      return this;
    },

    /**
     * Check if two rational numbers are divisible
     *
     * Ex: new Fraction(19.6).divisible(1.5);
     */
    "divisible": function(a, b) {

      parse(a, b);
      return !(!(P["n"] * this["d"]) || ((this["n"] * P["d"]) % (P["n"] * this["d"])));
    },

    /**
     * Returns a decimal representation of the fraction
     *
     * Ex: new Fraction("100.'91823'").valueOf() => 100.91823918239183
     **/
    'valueOf': function() {

      return this["s"] * this["n"] / this["d"];
    },

    /**
     * Returns a string-fraction representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toFraction() => "4 1/3"
     **/
    'toFraction': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str += '-';
      }

      if (d === 1) {
        str += n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str += whole;
          str += " ";
          n %= d;
        }

        str += n;
        str += '/';
        str += d;
      }
      return str;
    },

    /**
     * Returns a latex representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toLatex() => "\frac{4}{3}"
     **/
    'toLatex': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str += '-';
      }

      if (d === 1) {
        str += n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str += whole;
          n %= d;
        }

        str += "\\frac{";
        str += n;
        str += '}{';
        str += d;
        str += '}';
      }
      return str;
    },

    /**
     * Returns an array of continued fraction elements
     *
     * Ex: new Fraction("7/8").toContinued() => [0,1,7]
     */
    'toContinued': function() {

      var t;
      var a = this['n'];
      var b = this['d'];
      var res = [];

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return res;
      }

      do {
        res.push(Math.floor(a / b));
        t = a % b;
        a = b;
        b = t;
      } while (a !== 1);

      return res;
    },

    /**
     * Creates a string representation of a fraction with all digits
     *
     * Ex: new Fraction("100.'91823'").toString() => "100.(91823)"
     **/
    'toString': function(dec) {

      var g;
      var N = this["n"];
      var D = this["d"];

      if (isNaN(N) || isNaN(D)) {
        return "NaN";
      }

      if (!Fraction['REDUCE']) {
        g = gcd(N, D);
        N /= g;
        D /= g;
      }

      dec = dec || 15; // 15 = decimal places when no repitation

      var cycLen = cycleLen(N, D); // Cycle length
      var cycOff = cycleStart(N, D, cycLen); // Cycle start

      var str = this['s'] === -1 ? "-" : "";

      str += N / D | 0;

      N %= D;
      N *= 10;

      if (N)
        str += ".";

      if (cycLen) {

        for (var i = cycOff; i--; ) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
        str += "(";
        for (var i = cycLen; i--; ) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
        str += ")";
      } else {
        for (var i = dec; N && i--; ) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
      }
      return str;
    }
  };

  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return Fraction;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

})(this);


/***/ }),

/***/ "../node_modules/javascript-natural-sort/naturalSort.js":
/*!**************************************************************!*\
  !*** ../node_modules/javascript-natural-sort/naturalSort.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
 * Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license
 * Author: Jim Palmer (based on chunking idea from Dave Koelle)
 */
/*jshint unused:false */
module.exports = function naturalSort (a, b) {
	"use strict";
	var re = /(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,
		sre = /(^[ ]*|[ ]*$)/g,
		dre = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
		hre = /^0x[0-9a-f]+$/i,
		ore = /^0/,
		i = function(s) { return naturalSort.insensitive && ('' + s).toLowerCase() || '' + s; },
		// convert all to strings strip whitespace
		x = i(a).replace(sre, '') || '',
		y = i(b).replace(sre, '') || '',
		// chunk/tokenize
		xN = x.replace(re, '\0$1\0').replace(/\0$/,'').replace(/^\0/,'').split('\0'),
		yN = y.replace(re, '\0$1\0').replace(/\0$/,'').replace(/^\0/,'').split('\0'),
		// numeric, hex or date detection
		xD = parseInt(x.match(hre), 16) || (xN.length !== 1 && x.match(dre) && Date.parse(x)),
		yD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,
		oFxNcL, oFyNcL;
	// first try and sort Hex codes or Dates
	if (yD) {
		if ( xD < yD ) { return -1; }
		else if ( xD > yD ) { return 1; }
	}
	// natural sorting through split numeric strings and default strings
	for(var cLoc=0, numS=Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {
		// find floats not starting with '0', string or 0 if not defined (Clint Priest)
		oFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc]) || xN[cLoc] || 0;
		oFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc]) || yN[cLoc] || 0;
		// handle numeric vs string comparison - number < string - (Kyle Adams)
		if (isNaN(oFxNcL) !== isNaN(oFyNcL)) { return (isNaN(oFxNcL)) ? 1 : -1; }
		// rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'
		else if (typeof oFxNcL !== typeof oFyNcL) {
			oFxNcL += '';
			oFyNcL += '';
		}
		if (oFxNcL < oFyNcL) { return -1; }
		if (oFxNcL > oFyNcL) { return 1; }
	}
	return 0;
};


/***/ }),

/***/ "../node_modules/mathjs/es/constants.js":
/*!**********************************************!*\
  !*** ../node_modules/mathjs/es/constants.js ***!
  \**********************************************/
/*! exports provided: createTrue, createFalse, createNull, createInfinity, createNaN, createPi, createTau, createE, createPhi, createLN2, createLN10, createLOG2E, createLOG10E, createSQRT1_2, createSQRT2, createI, createUppercasePi, createUppercaseE, createVersion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTrue", function() { return createTrue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFalse", function() { return createFalse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNull", function() { return createNull; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInfinity", function() { return createInfinity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNaN", function() { return createNaN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPi", function() { return createPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTau", function() { return createTau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createE", function() { return createE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPhi", function() { return createPhi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLN2", function() { return createLN2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLN10", function() { return createLN10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLOG2E", function() { return createLOG2E; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLOG10E", function() { return createLOG10E; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSQRT1_2", function() { return createSQRT1_2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSQRT2", function() { return createSQRT2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createI", function() { return createI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUppercasePi", function() { return createUppercasePi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUppercaseE", function() { return createUppercaseE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createVersion", function() { return createVersion; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version */ "../node_modules/mathjs/es/version.js");
/* harmony import */ var _utils_bignumber_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/bignumber/constants */ "../node_modules/mathjs/es/utils/bignumber/constants.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./plain/number */ "../node_modules/mathjs/es/plain/number/index.js");




var createTrue = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])('true', [], function () {
  return true;
});
var createFalse = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])('false', [], function () {
  return false;
});
var createNull = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])('null', [], function () {
  return null;
});
var createInfinity = /* #__PURE__ */recreateFactory('Infinity', ['config', '?BigNumber'], function (_ref) {
  var config = _ref.config,
      BigNumber = _ref.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber(Infinity) : Infinity;
});
var createNaN = /* #__PURE__ */recreateFactory('NaN', ['config', '?BigNumber'], function (_ref2) {
  var config = _ref2.config,
      BigNumber = _ref2.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber(NaN) : NaN;
});
var createPi = /* #__PURE__ */recreateFactory('pi', ['config', '?BigNumber'], function (_ref3) {
  var config = _ref3.config,
      BigNumber = _ref3.BigNumber;
  return config.number === 'BigNumber' ? Object(_utils_bignumber_constants__WEBPACK_IMPORTED_MODULE_2__["createBigNumberPi"])(BigNumber) : _plain_number__WEBPACK_IMPORTED_MODULE_3__["pi"];
});
var createTau = /* #__PURE__ */recreateFactory('tau', ['config', '?BigNumber'], function (_ref4) {
  var config = _ref4.config,
      BigNumber = _ref4.BigNumber;
  return config.number === 'BigNumber' ? Object(_utils_bignumber_constants__WEBPACK_IMPORTED_MODULE_2__["createBigNumberTau"])(BigNumber) : _plain_number__WEBPACK_IMPORTED_MODULE_3__["tau"];
});
var createE = /* #__PURE__ */recreateFactory('e', ['config', '?BigNumber'], function (_ref5) {
  var config = _ref5.config,
      BigNumber = _ref5.BigNumber;
  return config.number === 'BigNumber' ? Object(_utils_bignumber_constants__WEBPACK_IMPORTED_MODULE_2__["createBigNumberE"])(BigNumber) : _plain_number__WEBPACK_IMPORTED_MODULE_3__["e"];
}); // golden ratio, (1+sqrt(5))/2

var createPhi = /* #__PURE__ */recreateFactory('phi', ['config', '?BigNumber'], function (_ref6) {
  var config = _ref6.config,
      BigNumber = _ref6.BigNumber;
  return config.number === 'BigNumber' ? Object(_utils_bignumber_constants__WEBPACK_IMPORTED_MODULE_2__["createBigNumberPhi"])(BigNumber) : _plain_number__WEBPACK_IMPORTED_MODULE_3__["phi"];
});
var createLN2 = /* #__PURE__ */recreateFactory('LN2', ['config', '?BigNumber'], function (_ref7) {
  var config = _ref7.config,
      BigNumber = _ref7.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber(2).ln() : Math.LN2;
});
var createLN10 = /* #__PURE__ */recreateFactory('LN10', ['config', '?BigNumber'], function (_ref8) {
  var config = _ref8.config,
      BigNumber = _ref8.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber(10).ln() : Math.LN10;
});
var createLOG2E = /* #__PURE__ */recreateFactory('LOG2E', ['config', '?BigNumber'], function (_ref9) {
  var config = _ref9.config,
      BigNumber = _ref9.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber(1).div(new BigNumber(2).ln()) : Math.LOG2E;
});
var createLOG10E = /* #__PURE__ */recreateFactory('LOG10E', ['config', '?BigNumber'], function (_ref10) {
  var config = _ref10.config,
      BigNumber = _ref10.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber(1).div(new BigNumber(10).ln()) : Math.LOG10E;
});
var createSQRT1_2 = /* #__PURE__ */recreateFactory( // eslint-disable-line camelcase
'SQRT1_2', ['config', '?BigNumber'], function (_ref11) {
  var config = _ref11.config,
      BigNumber = _ref11.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber('0.5').sqrt() : Math.SQRT1_2;
});
var createSQRT2 = /* #__PURE__ */recreateFactory('SQRT2', ['config', '?BigNumber'], function (_ref12) {
  var config = _ref12.config,
      BigNumber = _ref12.BigNumber;
  return config.number === 'BigNumber' ? new BigNumber(2).sqrt() : Math.SQRT2;
});
var createI = /* #__PURE__ */recreateFactory('i', ['Complex'], function (_ref13) {
  var Complex = _ref13.Complex;
  return Complex.I;
}); // for backward compatibility with v5

var createUppercasePi = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])('PI', ['pi'], function (_ref14) {
  var pi = _ref14.pi;
  return pi;
});
var createUppercaseE = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])('E', ['e'], function (_ref15) {
  var e = _ref15.e;
  return e;
});
var createVersion = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])('version', [], function () {
  return _version__WEBPACK_IMPORTED_MODULE_1__["version"];
}); // helper function to create a factory with a flag recreateOnConfigChange
// idea: allow passing optional properties to be attached to the factory function as 4th argument?

function recreateFactory(name, dependencies, create) {
  return Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, create, {
    recreateOnConfigChange: true
  });
}

/***/ }),

/***/ "../node_modules/mathjs/es/core/config.js":
/*!************************************************!*\
  !*** ../node_modules/mathjs/es/core/config.js ***!
  \************************************************/
/*! exports provided: DEFAULT_CONFIG */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_CONFIG", function() { return DEFAULT_CONFIG; });
var DEFAULT_CONFIG = {
  // minimum relative difference between two compared values,
  // used by all comparison functions
  epsilon: 1e-12,
  // type of default matrix output. Choose 'matrix' (default) or 'array'
  matrix: 'Matrix',
  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction
  number: 'number',
  // number of significant digits in BigNumbers
  precision: 64,
  // predictable output type of functions. When true, output type depends only
  // on the input types. When false (default), output type can vary depending
  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when
  // predictable is false, and returns `NaN` when true.
  predictable: false,
  // random seed for seeded pseudo random number generation
  // null = randomly seed
  randomSeed: null
};

/***/ }),

/***/ "../node_modules/mathjs/es/core/create.js":
/*!************************************************!*\
  !*** ../node_modules/mathjs/es/core/create.js ***!
  \************************************************/
/*! exports provided: create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony import */ var _utils_polyfills__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils/polyfills */ "../node_modules/mathjs/es/utils/polyfills.js");
/* harmony import */ var _utils_polyfills__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_polyfills__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils/emitter */ "../node_modules/mathjs/es/utils/emitter.js");
/* harmony import */ var _function_import__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./function/import */ "../node_modules/mathjs/es/core/function/import.js");
/* harmony import */ var _function_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./function/config */ "../node_modules/mathjs/es/core/function/config.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ArgumentsError */ "../node_modules/mathjs/es/error/ArgumentsError.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _error_IndexError__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/IndexError */ "../node_modules/mathjs/es/error/IndexError.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./config */ "../node_modules/mathjs/es/core/config.js");
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }












/**
 * Create a mathjs instance from given factory functions and optionally config
 *
 * Usage:
 *
 *     const mathjs1 = create({ createAdd, createMultiply, ...})
 *     const config = { number: 'BigNumber' }
 *     const mathjs2 = create(all, config)
 *
 * @param {Object} [factories] An object with factory functions
 *                             The object can contain nested objects,
 *                             all nested objects will be flattened.
 * @param {Object} [config]    Available options:
 *                            {number} epsilon
 *                              Minimum relative difference between two
 *                              compared values, used by all comparison functions.
 *                            {string} matrix
 *                              A string 'Matrix' (default) or 'Array'.
 *                            {string} number
 *                              A string 'number' (default), 'BigNumber', or 'Fraction'
 *                            {number} precision
 *                              The number of significant digits for BigNumbers.
 *                              Not applicable for Numbers.
 *                            {boolean} predictable
 *                              Predictable output type of functions. When true,
 *                              output type depends only on the input types. When
 *                              false (default), output type can vary depending
 *                              on input values. For example `math.sqrt(-4)`
 *                              returns `complex('2i')` when predictable is false, and
 *                              returns `NaN` when true.
 *                            {string} randomSeed
 *                              Random seed for seeded pseudo random number generator.
 *                              Set to null to randomly seed.
 * @returns {Object} Returns a bare-bone math.js instance containing
 *                   functions:
 *                   - `import` to add new functions
 *                   - `config` to change configuration
 *                   - `on`, `off`, `once`, `emit` for events
 */

function create(factories, config) {
  var configInternal = _extends({}, _config__WEBPACK_IMPORTED_MODULE_10__["DEFAULT_CONFIG"], config); // simple test for ES5 support


  if (typeof Object.create !== 'function') {
    throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');
  } // create the mathjs instance


  var math = _utils_emitter__WEBPACK_IMPORTED_MODULE_2__["mixin"]({
    // only here for backward compatibility for legacy factory functions
    isNumber: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isNumber"],
    isComplex: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isComplex"],
    isBigNumber: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isBigNumber"],
    isFraction: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isFraction"],
    isUnit: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isUnit"],
    isString: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isString"],
    isArray: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isArray"],
    isMatrix: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isMatrix"],
    isCollection: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isCollection"],
    isDenseMatrix: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isDenseMatrix"],
    isSparseMatrix: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isSparseMatrix"],
    isRange: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isRange"],
    isIndex: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isIndex"],
    isBoolean: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isBoolean"],
    isResultSet: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isResultSet"],
    isHelp: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isHelp"],
    isFunction: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isFunction"],
    isDate: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isDate"],
    isRegExp: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isRegExp"],
    isObject: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isObject"],
    isNull: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isNull"],
    isUndefined: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isUndefined"],
    isAccessorNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isAccessorNode"],
    isArrayNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isArrayNode"],
    isAssignmentNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isAssignmentNode"],
    isBlockNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isBlockNode"],
    isConditionalNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isConditionalNode"],
    isConstantNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isConstantNode"],
    isFunctionAssignmentNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isFunctionAssignmentNode"],
    isFunctionNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isFunctionNode"],
    isIndexNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isIndexNode"],
    isNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isNode"],
    isObjectNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isObjectNode"],
    isOperatorNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isOperatorNode"],
    isParenthesisNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isParenthesisNode"],
    isRangeNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isRangeNode"],
    isSymbolNode: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isSymbolNode"],
    isChain: _utils_is__WEBPACK_IMPORTED_MODULE_6__["isChain"]
  }); // load config function and apply provided config

  math.config = Object(_function_config__WEBPACK_IMPORTED_MODULE_4__["configFactory"])(configInternal, math.emit);
  math.expression = {
    transform: {},
    mathWithTransform: {
      config: math.config
    }
  }; // cached factories and instances used by function load

  var legacyFactories = [];
  var legacyInstances = [];
  /**
   * Load a function or data type from a factory.
   * If the function or data type already exists, the existing instance is
   * returned.
   * @param {Function} factory
   * @returns {*}
   */

  function load(factory) {
    if (Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["isFactory"])(factory)) {
      return factory(math);
    }

    var firstProperty = factory[Object.keys(factory)[0]];

    if (Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["isFactory"])(firstProperty)) {
      return firstProperty(math);
    }

    if (!Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["isLegacyFactory"])(factory)) {
      console.warn('Factory object with properties `type`, `name`, and `factory` expected', factory);
      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');
    }

    var index = legacyFactories.indexOf(factory);
    var instance;

    if (index === -1) {
      // doesn't yet exist
      if (factory.math === true) {
        // pass with math namespace
        instance = factory.factory(math.type, configInternal, load, math.typed, math);
      } else {
        instance = factory.factory(math.type, configInternal, load, math.typed);
      } // append to the cache


      legacyFactories.push(factory);
      legacyInstances.push(instance);
    } else {
      // already existing function, return the cached instance
      instance = legacyInstances[index];
    }

    return instance;
  }

  var importedFactories = {}; // load the import function

  function lazyTyped() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return math.typed.apply(math.typed, args);
  }

  var internalImport = Object(_function_import__WEBPACK_IMPORTED_MODULE_3__["importFactory"])(lazyTyped, load, math, importedFactories);
  math["import"] = internalImport; // listen for changes in config, import all functions again when changed
  // TODO: move this listener into the import function?

  math.on('config', function () {
    Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["values"])(importedFactories).forEach(function (factory) {
      if (factory && factory.meta && factory.meta.recreateOnConfigChange) {
        // FIXME: only re-create when the current instance is the same as was initially created
        // FIXME: delete the functions/constants before importing them again?
        internalImport(factory, {
          override: true
        });
      }
    });
  }); // the create function exposed on the mathjs instance is bound to
  // the factory functions passed before

  math.create = create.bind(null, factories); // export factory function

  math.factory = _utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"]; // import the factory functions like createAdd as an array instead of object,
  // else they will get a different naming (`createAdd` instead of `add`).

  math["import"](Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["values"])(Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["deepFlatten"])(factories)));
  math.ArgumentsError = _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_7__["ArgumentsError"];
  math.DimensionError = _error_DimensionError__WEBPACK_IMPORTED_MODULE_8__["DimensionError"];
  math.IndexError = _error_IndexError__WEBPACK_IMPORTED_MODULE_9__["IndexError"];
  return math;
}

/***/ }),

/***/ "../node_modules/mathjs/es/core/function/config.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/core/function/config.js ***!
  \*********************************************************/
/*! exports provided: MATRIX_OPTIONS, NUMBER_OPTIONS, configFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MATRIX_OPTIONS", function() { return MATRIX_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMBER_OPTIONS", function() { return NUMBER_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "configFactory", function() { return configFactory; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "../node_modules/mathjs/es/core/config.js");


var MATRIX_OPTIONS = ['Matrix', 'Array']; // valid values for option matrix

var NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction']; // valid values for option number

function configFactory(config, emit) {
  /**
   * Set configuration options for math.js, and get current options.
   * Will emit a 'config' event, with arguments (curr, prev, changes).
   *
   * This function is only available on a mathjs instance created using `create`.
   *
   * Syntax:
   *
   *     math.config(config: Object): Object
   *
   * Examples:
   *
   *
   *     import { create, all } from 'mathjs'
   *
   *     // create a mathjs instance
   *     const math = create(all)
   *
   *     math.config().number                // outputs 'number'
   *     math.evaluate('0.4')                // outputs number 0.4
   *     math.config({number: 'Fraction'})
   *     math.evaluate('0.4')                // outputs Fraction 2/5
   *
   * @param {Object} [options] Available options:
   *                            {number} epsilon
   *                              Minimum relative difference between two
   *                              compared values, used by all comparison functions.
   *                            {string} matrix
   *                              A string 'Matrix' (default) or 'Array'.
   *                            {string} number
   *                              A string 'number' (default), 'BigNumber', or 'Fraction'
   *                            {number} precision
   *                              The number of significant digits for BigNumbers.
   *                              Not applicable for Numbers.
   *                            {string} parenthesis
   *                              How to display parentheses in LaTeX and string
   *                              output.
   *                            {string} randomSeed
   *                              Random seed for seeded pseudo random number generator.
   *                              Set to null to randomly seed.
   * @return {Object} Returns the current configuration
   */
  function _config(options) {
    if (options) {
      var prev = Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["mapObject"])(config, _utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"]); // validate some of the options

      validateOption(options, 'matrix', MATRIX_OPTIONS);
      validateOption(options, 'number', NUMBER_OPTIONS); // merge options

      Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["deepExtend"])(config, options);
      var curr = Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["mapObject"])(config, _utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"]);
      var changes = Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["mapObject"])(options, _utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"]); // emit 'config' event

      emit('config', curr, prev, changes);
      return curr;
    } else {
      return Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["mapObject"])(config, _utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"]);
    }
  } // attach the valid options to the function so they can be extended


  _config.MATRIX_OPTIONS = MATRIX_OPTIONS;
  _config.NUMBER_OPTIONS = NUMBER_OPTIONS; // attach the config properties as readonly properties to the config function

  Object.keys(_config__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CONFIG"]).forEach(function (key) {
    Object.defineProperty(_config, key, {
      get: function get() {
        return config[key];
      },
      enumerable: true,
      configurable: true
    });
  });
  return _config;
}
/**
 * Test whether an Array contains a specific item.
 * @param {Array.<string>} array
 * @param {string} item
 * @return {boolean}
 */

function contains(array, item) {
  return array.indexOf(item) !== -1;
}
/**
 * Validate an option
 * @param {Object} options         Object with options
 * @param {string} name            Name of the option to validate
 * @param {Array.<string>} values  Array with valid values for this option
 */


function validateOption(options, name, values) {
  if (options[name] !== undefined && !contains(values, options[name])) {
    // unknown value
    console.warn('Warning: Unknown value "' + options[name] + '" for configuration option "' + name + '". ' + 'Available options: ' + values.map(function (value) {
      return JSON.stringify(value);
    }).join(', ') + '.');
  }
}

/***/ }),

/***/ "../node_modules/mathjs/es/core/function/import.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/core/function/import.js ***!
  \*********************************************************/
/*! exports provided: importFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "importFactory", function() { return importFactory; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ArgumentsError */ "../node_modules/mathjs/es/error/ArgumentsError.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }






function importFactory(typed, load, math, importedFactories) {
  /**
   * Import functions from an object or a module.
   *
   * This function is only available on a mathjs instance created using `create`.
   *
   * Syntax:
   *
   *    math.import(functions)
   *    math.import(functions, options)
   *
   * Where:
   *
   * - `functions: Object`
   *   An object with functions or factories to be imported.
   * - `options: Object` An object with import options. Available options:
   *   - `override: boolean`
   *     If true, existing functions will be overwritten. False by default.
   *   - `silent: boolean`
   *     If true, the function will not throw errors on duplicates or invalid
   *     types. False by default.
   *   - `wrap: boolean`
   *     If true, the functions will be wrapped in a wrapper function
   *     which converts data types like Matrix to primitive data types like Array.
   *     The wrapper is needed when extending math.js with libraries which do not
   *     support these data type. False by default.
   *
   * Examples:
   *
   *    import { create, all } from 'mathjs'
   *    import * as numbers from 'numbers'
   *
   *    // create a mathjs instance
   *    const math = create(all)
   *
   *    // define new functions and variables
   *    math.import({
   *      myvalue: 42,
   *      hello: function (name) {
   *        return 'hello, ' + name + '!'
   *      }
   *    })
   *
   *    // use the imported function and variable
   *    math.myvalue * 2               // 84
   *    math.hello('user')             // 'hello, user!'
   *
   *    // import the npm module 'numbers'
   *    // (must be installed first with `npm install numbers`)
   *    math.import(numbers, {wrap: true})
   *
   *    math.fibonacci(7) // returns 13
   *
   * @param {Object | Array} functions  Object with functions to be imported.
   * @param {Object} [options]          Import options.
   */
  function mathImport(functions, options) {
    var num = arguments.length;

    if (num !== 1 && num !== 2) {
      throw new _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_4__["ArgumentsError"]('import', num, 1, 2);
    }

    if (!options) {
      options = {};
    }

    function flattenImports(flatValues, value, name) {
      if (Array.isArray(value)) {
        value.forEach(function (item) {
          return flattenImports(flatValues, item);
        });
      } else if (_typeof(value) === 'object') {
        for (var _name in value) {
          if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(value, _name)) {
            flattenImports(flatValues, value[_name], _name);
          }
        }
      } else if (Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["isFactory"])(value) || name !== undefined) {
        var flatName = Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["isFactory"])(value) ? isTransformFunctionFactory(value) ? value.fn + '.transform' : // TODO: this is ugly
        value.fn : name; // we allow importing the same function twice if it points to the same implementation

        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(flatValues, flatName) && flatValues[flatName] !== value && !options.silent) {
          throw new Error('Cannot import "' + flatName + '" twice');
        }

        flatValues[flatName] = value;
      } else {
        if (!options.silent) {
          throw new TypeError('Factory, Object, or Array expected');
        }
      }
    }

    var flatValues = {};
    flattenImports(flatValues, functions);

    for (var name in flatValues) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(flatValues, name)) {
        // console.log('import', name)
        var value = flatValues[name];

        if (Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["isFactory"])(value)) {
          // we ignore name here and enforce the name of the factory
          // maybe at some point we do want to allow overriding it
          // in that case we can implement an option overrideFactoryNames: true
          _importFactory(value, options);
        } else if (isSupportedType(value)) {
          _import(name, value, options);
        } else {
          if (!options.silent) {
            throw new TypeError('Factory, Object, or Array expected');
          }
        }
      }
    }
  }
  /**
   * Add a property to the math namespace
   * @param {string} name
   * @param {*} value
   * @param {Object} options  See import for a description of the options
   * @private
   */


  function _import(name, value, options) {
    // TODO: refactor this function, it's to complicated and contains duplicate code
    if (options.wrap && typeof value === 'function') {
      // create a wrapper around the function
      value = _wrap(value);
    } // turn a plain function with a typed-function signature into a typed-function


    if (hasTypedFunctionSignature(value)) {
      value = typed(name, _defineProperty({}, value.signature, value));
    }

    if (isTypedFunction(math[name]) && isTypedFunction(value)) {
      if (options.override) {
        // give the typed function the right name
        value = typed(name, value.signatures);
      } else {
        // merge the existing and typed function
        value = typed(math[name], value);
      }

      math[name] = value;
      delete importedFactories[name];

      _importTransform(name, value);

      math.emit('import', name, function resolver() {
        return value;
      });
      return;
    }

    if (math[name] === undefined || options.override) {
      math[name] = value;
      delete importedFactories[name];

      _importTransform(name, value);

      math.emit('import', name, function resolver() {
        return value;
      });
      return;
    }

    if (!options.silent) {
      throw new Error('Cannot import "' + name + '": already exists');
    }
  }

  function _importTransform(name, value) {
    if (value && typeof value.transform === 'function') {
      math.expression.transform[name] = value.transform;

      if (allowedInExpressions(name)) {
        math.expression.mathWithTransform[name] = value.transform;
      }
    } else {
      // remove existing transform
      delete math.expression.transform[name];

      if (allowedInExpressions(name)) {
        math.expression.mathWithTransform[name] = value;
      }
    }
  }

  function _deleteTransform(name) {
    delete math.expression.transform[name];

    if (allowedInExpressions(name)) {
      math.expression.mathWithTransform[name] = math[name];
    } else {
      delete math.expression.mathWithTransform[name];
    }
  }
  /**
   * Create a wrapper a round an function which converts the arguments
   * to their primitive values (like convert a Matrix to Array)
   * @param {Function} fn
   * @return {Function} Returns the wrapped function
   * @private
   */


  function _wrap(fn) {
    var wrapper = function wrapper() {
      var args = [];

      for (var i = 0, len = arguments.length; i < len; i++) {
        var arg = arguments[i];
        args[i] = arg && arg.valueOf();
      }

      return fn.apply(math, args);
    };

    if (fn.transform) {
      wrapper.transform = fn.transform;
    }

    return wrapper;
  }
  /**
   * Import an instance of a factory into math.js
   * @param {function(scope: object)} factory
   * @param {Object} options  See import for a description of the options
   * @param {string} [name=factory.name] Optional custom name
   * @private
   */


  function _importFactory(factory, options) {
    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : factory.fn;

    if (Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["contains"])(name, '.')) {
      throw new Error('Factory name should not contain a nested path. ' + 'Name: ' + JSON.stringify(name));
    }

    var namespace = isTransformFunctionFactory(factory) ? math.expression.transform : math;
    var existingTransform = (name in math.expression.transform);
    var existing = Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(namespace, name) ? namespace[name] : undefined;

    var resolver = function resolver() {
      // collect all dependencies, handle finding both functions and classes and other special cases
      var dependencies = {};
      factory.dependencies.map(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["stripOptionalNotation"]).forEach(function (dependency) {
        if (Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["contains"])(dependency, '.')) {
          throw new Error('Factory dependency should not contain a nested path. ' + 'Name: ' + JSON.stringify(dependency));
        }

        if (dependency === 'math') {
          dependencies.math = math;
        } else if (dependency === 'mathWithTransform') {
          dependencies.mathWithTransform = math.expression.mathWithTransform;
        } else if (dependency === 'classes') {
          // special case for json reviver
          dependencies.classes = math;
        } else {
          dependencies[dependency] = math[dependency];
        }
      });
      var instance = /* #__PURE__ */factory(dependencies);

      if (instance && typeof instance.transform === 'function') {
        throw new Error('Transforms cannot be attached to factory functions. ' + 'Please create a separate function for it with exports.path="expression.transform"');
      }

      if (existing === undefined || options.override) {
        return instance;
      }

      if (isTypedFunction(existing) && isTypedFunction(instance)) {
        // merge the existing and new typed function
        return typed(existing, instance);
      }

      if (options.silent) {
        // keep existing, ignore imported function
        return existing;
      } else {
        throw new Error('Cannot import "' + name + '": already exists');
      }
    }; // TODO: add unit test with non-lazy factory


    if (!factory.meta || factory.meta.lazy !== false) {
      Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["lazy"])(namespace, name, resolver); // FIXME: remove the `if (existing &&` condition again. Can we make sure subset is loaded before subset.transform? (Name collision, and no dependencies between the two)

      if (existing && existingTransform) {
        _deleteTransform(name);
      } else {
        if (isTransformFunctionFactory(factory) || factoryAllowedInExpressions(factory)) {
          Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["lazy"])(math.expression.mathWithTransform, name, function () {
            return namespace[name];
          });
        }
      }
    } else {
      namespace[name] = resolver(); // FIXME: remove the `if (existing &&` condition again. Can we make sure subset is loaded before subset.transform? (Name collision, and no dependencies between the two)

      if (existing && existingTransform) {
        _deleteTransform(name);
      } else {
        if (isTransformFunctionFactory(factory) || factoryAllowedInExpressions(factory)) {
          Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["lazy"])(math.expression.mathWithTransform, name, function () {
            return namespace[name];
          });
        }
      }
    } // TODO: improve factories, store a list with imports instead which can be re-played


    importedFactories[name] = factory;
    math.emit('import', name, resolver);
  }
  /**
   * Check whether given object is a type which can be imported
   * @param {Function | number | string | boolean | null | Unit | Complex} object
   * @return {boolean}
   * @private
   */


  function isSupportedType(object) {
    return typeof object === 'function' || typeof object === 'number' || typeof object === 'string' || typeof object === 'boolean' || object === null || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isUnit"])(object) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isComplex"])(object) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(object) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFraction"])(object) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(object) || Array.isArray(object);
  }
  /**
   * Test whether a given thing is a typed-function
   * @param {*} fn
   * @return {boolean} Returns true when `fn` is a typed-function
   */


  function isTypedFunction(fn) {
    return typeof fn === 'function' && _typeof(fn.signatures) === 'object';
  }

  function hasTypedFunctionSignature(fn) {
    return typeof fn === 'function' && typeof fn.signature === 'string';
  }

  function allowedInExpressions(name) {
    return !Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(unsafe, name);
  }

  function factoryAllowedInExpressions(factory) {
    return factory.fn.indexOf('.') === -1 && // FIXME: make checking on path redundant, check on meta data instead
    !Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(unsafe, factory.fn) && (!factory.meta || !factory.meta.isClass);
  }

  function isTransformFunctionFactory(factory) {
    return factory !== undefined && factory.meta !== undefined && factory.meta.isTransformFunction === true || false;
  } // namespaces and functions not available in the parser for safety reasons


  var unsafe = {
    expression: true,
    type: true,
    docs: true,
    error: true,
    json: true,
    chain: true // chain method not supported. Note that there is a unit chain too.

  };
  return mathImport;
}

/***/ }),

/***/ "../node_modules/mathjs/es/core/function/typed.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/core/function/typed.js ***!
  \********************************************************/
/*! exports provided: createTyped */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTyped", function() { return createTyped; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var typed_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! typed-function */ "../node_modules/typed-function/typed-function.js");
/* harmony import */ var typed_function__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typed_function__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/**
 * Create a typed-function which checks the types of the arguments and
 * can match them against multiple provided signatures. The typed-function
 * automatically converts inputs in order to find a matching signature.
 * Typed functions throw informative errors in case of wrong input arguments.
 *
 * See the library [typed-function](https://github.com/josdejong/typed-function)
 * for detailed documentation.
 *
 * Syntax:
 *
 *     math.typed(name, signatures) : function
 *     math.typed(signatures) : function
 *
 * Examples:
 *
 *     // create a typed function with multiple types per argument (type union)
 *     const fn2 = typed({
 *       'number | boolean': function (b) {
 *         return 'b is a number or boolean'
 *       },
 *       'string, number | boolean': function (a, b) {
 *         return 'a is a string, b is a number or boolean'
 *       }
 *     })
 *
 *     // create a typed function with an any type argument
 *     const log = typed({
 *       'string, any': function (event, data) {
 *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))
 *       }
 *     })
 *
 * @param {string} [name]                          Optional name for the typed-function
 * @param {Object<string, function>} signatures   Object with one or multiple function signatures
 * @returns {function} The created typed-function.
 */



 // returns a new instance of typed-function

var _createTyped2 = function _createTyped() {
  // initially, return the original instance of typed-function
  // consecutively, return a new instance from typed.create.
  _createTyped2 = typed_function__WEBPACK_IMPORTED_MODULE_1___default.a.create;
  return typed_function__WEBPACK_IMPORTED_MODULE_1___default.a;
};

var dependencies = ['?BigNumber', '?Complex', '?DenseMatrix', '?Fraction'];
/**
 * Factory function for creating a new typed instance
 * @param {Object} dependencies   Object with data types like Complex and BigNumber
 * @returns {Function}
 */

var createTyped = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])('typed', dependencies, function createTyped(_ref) {
  var BigNumber = _ref.BigNumber,
      Complex = _ref.Complex,
      DenseMatrix = _ref.DenseMatrix,
      Fraction = _ref.Fraction;

  // TODO: typed-function must be able to silently ignore signatures with unknown data types
  // get a new instance of typed-function
  var typed = _createTyped2(); // define all types. The order of the types determines in which order function
  // arguments are type-checked (so for performance it's important to put the
  // most used types first).


  typed.types = [{
    name: 'number',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"]
  }, {
    name: 'Complex',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isComplex"]
  }, {
    name: 'BigNumber',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"]
  }, {
    name: 'Fraction',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFraction"]
  }, {
    name: 'Unit',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isUnit"]
  }, {
    name: 'string',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"]
  }, {
    name: 'Chain',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isChain"]
  }, {
    name: 'Array',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"]
  }, {
    name: 'Matrix',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"]
  }, {
    name: 'DenseMatrix',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isDenseMatrix"]
  }, {
    name: 'SparseMatrix',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isSparseMatrix"]
  }, {
    name: 'Range',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isRange"]
  }, {
    name: 'Index',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndex"]
  }, {
    name: 'boolean',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isBoolean"]
  }, {
    name: 'ResultSet',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isResultSet"]
  }, {
    name: 'Help',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isHelp"]
  }, {
    name: 'function',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunction"]
  }, {
    name: 'Date',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isDate"]
  }, {
    name: 'RegExp',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isRegExp"]
  }, {
    name: 'null',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isNull"]
  }, {
    name: 'undefined',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isUndefined"]
  }, {
    name: 'AccessorNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isAccessorNode"]
  }, {
    name: 'ArrayNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isArrayNode"]
  }, {
    name: 'AssignmentNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isAssignmentNode"]
  }, {
    name: 'BlockNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isBlockNode"]
  }, {
    name: 'ConditionalNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isConditionalNode"]
  }, {
    name: 'ConstantNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"]
  }, {
    name: 'FunctionNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionNode"]
  }, {
    name: 'FunctionAssignmentNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionAssignmentNode"]
  }, {
    name: 'IndexNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndexNode"]
  }, {
    name: 'Node',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"]
  }, {
    name: 'ObjectNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isObjectNode"]
  }, {
    name: 'OperatorNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"]
  }, {
    name: 'ParenthesisNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"]
  }, {
    name: 'RangeNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isRangeNode"]
  }, {
    name: 'SymbolNode',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"]
  }, {
    name: 'Object',
    test: _utils_is__WEBPACK_IMPORTED_MODULE_0__["isObject"]
  } // order 'Object' last, it matches on other classes too
  ];
  typed.conversions = [{
    from: 'number',
    to: 'BigNumber',
    convert: function convert(x) {
      if (!BigNumber) {
        throwNoBignumber(x);
      } // note: conversion from number to BigNumber can fail if x has >15 digits


      if (Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["digits"])(x) > 15) {
        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');
      }

      return new BigNumber(x);
    }
  }, {
    from: 'number',
    to: 'Complex',
    convert: function convert(x) {
      if (!Complex) {
        throwNoComplex(x);
      }

      return new Complex(x, 0);
    }
  }, {
    from: 'number',
    to: 'string',
    convert: function convert(x) {
      return x + '';
    }
  }, {
    from: 'BigNumber',
    to: 'Complex',
    convert: function convert(x) {
      if (!Complex) {
        throwNoComplex(x);
      }

      return new Complex(x.toNumber(), 0);
    }
  }, {
    from: 'Fraction',
    to: 'BigNumber',
    convert: function convert(x) {
      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');
    }
  }, {
    from: 'Fraction',
    to: 'Complex',
    convert: function convert(x) {
      if (!Complex) {
        throwNoComplex(x);
      }

      return new Complex(x.valueOf(), 0);
    }
  }, {
    from: 'number',
    to: 'Fraction',
    convert: function convert(x) {
      if (!Fraction) {
        throwNoFraction(x);
      }

      var f = new Fraction(x);

      if (f.valueOf() !== x) {
        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');
      }

      return f;
    }
  }, {
    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`
    //  from: 'Fraction',
    //  to: 'number',
    //  convert: function (x) {
    //    return x.valueOf()
    //  }
    // }, {
    from: 'string',
    to: 'number',
    convert: function convert(x) {
      var n = Number(x);

      if (isNaN(n)) {
        throw new Error('Cannot convert "' + x + '" to a number');
      }

      return n;
    }
  }, {
    from: 'string',
    to: 'BigNumber',
    convert: function convert(x) {
      if (!BigNumber) {
        throwNoBignumber(x);
      }

      try {
        return new BigNumber(x);
      } catch (err) {
        throw new Error('Cannot convert "' + x + '" to BigNumber');
      }
    }
  }, {
    from: 'string',
    to: 'Fraction',
    convert: function convert(x) {
      if (!Fraction) {
        throwNoFraction(x);
      }

      try {
        return new Fraction(x);
      } catch (err) {
        throw new Error('Cannot convert "' + x + '" to Fraction');
      }
    }
  }, {
    from: 'string',
    to: 'Complex',
    convert: function convert(x) {
      if (!Complex) {
        throwNoComplex(x);
      }

      try {
        return new Complex(x);
      } catch (err) {
        throw new Error('Cannot convert "' + x + '" to Complex');
      }
    }
  }, {
    from: 'boolean',
    to: 'number',
    convert: function convert(x) {
      return +x;
    }
  }, {
    from: 'boolean',
    to: 'BigNumber',
    convert: function convert(x) {
      if (!BigNumber) {
        throwNoBignumber(x);
      }

      return new BigNumber(+x);
    }
  }, {
    from: 'boolean',
    to: 'Fraction',
    convert: function convert(x) {
      if (!Fraction) {
        throwNoFraction(x);
      }

      return new Fraction(+x);
    }
  }, {
    from: 'boolean',
    to: 'string',
    convert: function convert(x) {
      return String(x);
    }
  }, {
    from: 'Array',
    to: 'Matrix',
    convert: function convert(array) {
      if (!DenseMatrix) {
        throwNoMatrix();
      }

      return new DenseMatrix(array);
    }
  }, {
    from: 'Matrix',
    to: 'Array',
    convert: function convert(matrix) {
      return matrix.valueOf();
    }
  }];
  return typed;
});

function throwNoBignumber(x) {
  throw new Error("Cannot convert value ".concat(x, " into a BigNumber: no class 'BigNumber' provided"));
}

function throwNoComplex(x) {
  throw new Error("Cannot convert value ".concat(x, " into a Complex number: no class 'Complex' provided"));
}

function throwNoMatrix() {
  throw new Error('Cannot convert array into a Matrix: no class \'DenseMatrix\' provided');
}

function throwNoFraction(x) {
  throw new Error("Cannot convert value ".concat(x, " into a Fraction, no class 'Fraction' provided."));
}

/***/ }),

/***/ "../node_modules/mathjs/es/entry/allFactoriesAny.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/entry/allFactoriesAny.js ***!
  \**********************************************************/
/*! exports provided: all */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "all", function() { return all; });
/* harmony import */ var _factoriesAny__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factoriesAny */ "../node_modules/mathjs/es/factoriesAny.js");
// creating all factories here in a separate file is needed to get tree-shaking working

var all = _factoriesAny__WEBPACK_IMPORTED_MODULE_0__;

/***/ }),

/***/ "../node_modules/mathjs/es/entry/configReadonly.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/entry/configReadonly.js ***!
  \*********************************************************/
/*! exports provided: config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return config; });
/* harmony import */ var _core_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/config */ "../node_modules/mathjs/es/core/config.js");
/* harmony import */ var _core_function_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/function/config */ "../node_modules/mathjs/es/core/function/config.js");
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }


 // create a read-only version of config

var config = /* #__PURE__ */function config(options) {
  if (options) {
    throw new Error('The global config is readonly. \n' + 'Please create a mathjs instance if you want to change the default configuration. \n' + 'Example:\n' + '\n' + '  import { create, all } from \'mathjs\';\n' + '  const mathjs = create(all);\n' + '  mathjs.config({ number: \'BigNumber\' });\n');
  }

  return Object.freeze(_core_config__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_CONFIG"]);
};

_extends(config, _core_config__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_CONFIG"], {
  MATRIX_OPTIONS: _core_function_config__WEBPACK_IMPORTED_MODULE_1__["MATRIX_OPTIONS"],
  NUMBER_OPTIONS: _core_function_config__WEBPACK_IMPORTED_MODULE_1__["NUMBER_OPTIONS"]
});

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny.generated.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny.generated.js ***!
  \********************************************************************/
/*! exports provided: typedDependencies, ResultSetDependencies, BigNumberDependencies, ComplexDependencies, FractionDependencies, RangeDependencies, MatrixDependencies, DenseMatrixDependencies, cloneDependencies, isIntegerDependencies, isNegativeDependencies, isNumericDependencies, hasNumericValueDependencies, isPositiveDependencies, isZeroDependencies, isNaNDependencies, typeOfDependencies, equalScalarDependencies, SparseMatrixDependencies, numberDependencies, stringDependencies, booleanDependencies, bignumberDependencies, complexDependencies, fractionDependencies, matrixDependencies, splitUnitDependencies, unaryMinusDependencies, unaryPlusDependencies, absDependencies, applyDependencies, addScalarDependencies, cbrtDependencies, ceilDependencies, cubeDependencies, expDependencies, expm1Dependencies, fixDependencies, floorDependencies, gcdDependencies, lcmDependencies, log10Dependencies, log2Dependencies, modDependencies, multiplyScalarDependencies, multiplyDependencies, nthRootDependencies, signDependencies, sqrtDependencies, squareDependencies, subtractDependencies, xgcdDependencies, dotMultiplyDependencies, bitAndDependencies, bitNotDependencies, bitOrDependencies, bitXorDependencies, argDependencies, conjDependencies, imDependencies, reDependencies, notDependencies, orDependencies, xorDependencies, concatDependencies, columnDependencies, crossDependencies, diagDependencies, filterDependencies, flattenDependencies, forEachDependencies, getMatrixDataTypeDependencies, identityDependencies, kronDependencies, mapDependencies, diffDependencies, onesDependencies, rangeDependencies, reshapeDependencies, resizeDependencies, rowDependencies, sizeDependencies, squeezeDependencies, subsetDependencies, transposeDependencies, ctransposeDependencies, zerosDependencies, erfDependencies, modeDependencies, prodDependencies, formatDependencies, printDependencies, toDependencies, isPrimeDependencies, numericDependencies, divideScalarDependencies, powDependencies, roundDependencies, logDependencies, log1pDependencies, nthRootsDependencies, dotPowDependencies, dotDivideDependencies, lsolveDependencies, usolveDependencies, leftShiftDependencies, rightArithShiftDependencies, rightLogShiftDependencies, andDependencies, compareDependencies, compareNaturalDependencies, compareTextDependencies, equalDependencies, equalTextDependencies, smallerDependencies, smallerEqDependencies, largerDependencies, largerEqDependencies, deepEqualDependencies, unequalDependencies, partitionSelectDependencies, sortDependencies, maxDependencies, minDependencies, ImmutableDenseMatrixDependencies, IndexDependencies, FibonacciHeapDependencies, SpaDependencies, UnitDependencies, unitDependencies, sparseDependencies, createUnitDependencies, acosDependencies, acoshDependencies, acotDependencies, acothDependencies, acscDependencies, acschDependencies, asecDependencies, asechDependencies, asinDependencies, asinhDependencies, atanDependencies, atan2Dependencies, atanhDependencies, cosDependencies, coshDependencies, cotDependencies, cothDependencies, cscDependencies, cschDependencies, secDependencies, sechDependencies, sinDependencies, sinhDependencies, tanDependencies, tanhDependencies, setCartesianDependencies, setDifferenceDependencies, setDistinctDependencies, setIntersectDependencies, setIsSubsetDependencies, setMultiplicityDependencies, setPowersetDependencies, setSizeDependencies, setSymDifferenceDependencies, setUnionDependencies, addDependencies, hypotDependencies, normDependencies, dotDependencies, traceDependencies, indexDependencies, NodeDependencies, AccessorNodeDependencies, ArrayNodeDependencies, AssignmentNodeDependencies, BlockNodeDependencies, ConditionalNodeDependencies, ConstantNodeDependencies, FunctionAssignmentNodeDependencies, IndexNodeDependencies, ObjectNodeDependencies, OperatorNodeDependencies, ParenthesisNodeDependencies, RangeNodeDependencies, RelationalNodeDependencies, SymbolNodeDependencies, FunctionNodeDependencies, parseDependencies, compileDependencies, evaluateDependencies, ParserDependencies, parserDependencies, lupDependencies, qrDependencies, sluDependencies, lusolveDependencies, HelpDependencies, ChainDependencies, helpDependencies, chainDependencies, detDependencies, invDependencies, eigsDependencies, expmDependencies, sqrtmDependencies, divideDependencies, distanceDependencies, intersectDependencies, sumDependencies, meanDependencies, medianDependencies, madDependencies, varianceDependencies, quantileSeqDependencies, stdDependencies, combinationsDependencies, combinationsWithRepDependencies, gammaDependencies, factorialDependencies, kldivergenceDependencies, multinomialDependencies, permutationsDependencies, pickRandomDependencies, randomDependencies, randomIntDependencies, stirlingS2Dependencies, bellNumbersDependencies, catalanDependencies, compositionDependencies, simplifyDependencies, derivativeDependencies, rationalizeDependencies, reviverDependencies, replacerDependencies, eDependencies, EDependencies, falseDependencies, iDependencies, InfinityDependencies, LN10Dependencies, LN2Dependencies, LOG10EDependencies, LOG2EDependencies, NaNDependencies, nullDependencies, phiDependencies, piDependencies, PIDependencies, SQRT1_2Dependencies, SQRT2Dependencies, tauDependencies, trueDependencies, versionDependencies, atomicMassDependencies, avogadroDependencies, bohrMagnetonDependencies, bohrRadiusDependencies, boltzmannDependencies, classicalElectronRadiusDependencies, conductanceQuantumDependencies, coulombDependencies, deuteronMassDependencies, efimovFactorDependencies, electricConstantDependencies, electronMassDependencies, elementaryChargeDependencies, faradayDependencies, fermiCouplingDependencies, fineStructureDependencies, firstRadiationDependencies, gasConstantDependencies, gravitationConstantDependencies, gravityDependencies, hartreeEnergyDependencies, inverseConductanceQuantumDependencies, klitzingDependencies, loschmidtDependencies, magneticConstantDependencies, magneticFluxQuantumDependencies, molarMassDependencies, molarMassC12Dependencies, molarPlanckConstantDependencies, molarVolumeDependencies, neutronMassDependencies, nuclearMagnetonDependencies, planckChargeDependencies, planckConstantDependencies, planckLengthDependencies, planckMassDependencies, planckTemperatureDependencies, planckTimeDependencies, protonMassDependencies, quantumOfCirculationDependencies, reducedPlanckConstantDependencies, rydbergDependencies, sackurTetrodeDependencies, secondRadiationDependencies, speedOfLightDependencies, stefanBoltzmannDependencies, thomsonCrossSectionDependencies, vacuumImpedanceDependencies, weakMixingAngleDependencies, wienDisplacementDependencies, applyTransformDependencies, columnTransformDependencies, filterTransformDependencies, forEachTransformDependencies, indexTransformDependencies, mapTransformDependencies, maxTransformDependencies, meanTransformDependencies, minTransformDependencies, rangeTransformDependencies, rowTransformDependencies, subsetTransformDependencies, concatTransformDependencies, diffTransformDependencies, stdTransformDependencies, sumTransformDependencies, varianceTransformDependencies, all */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dependenciesAny_dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typedDependencies", function() { return _dependenciesAny_dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesResultSet_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAny/dependenciesResultSet.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesResultSet.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResultSetDependencies", function() { return _dependenciesAny_dependenciesResultSet_generated__WEBPACK_IMPORTED_MODULE_1__["ResultSetDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BigNumberDependencies", function() { return _dependenciesAny_dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_2__["BigNumberDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesAny/dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComplexDependencies", function() { return _dependenciesAny_dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_3__["ComplexDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFractionClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FractionDependencies", function() { return _dependenciesAny_dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_4__["FractionDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRangeClass_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRangeClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeDependencies", function() { return _dependenciesAny_dependenciesRangeClass_generated__WEBPACK_IMPORTED_MODULE_5__["RangeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrixClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MatrixDependencies", function() { return _dependenciesAny_dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_6__["MatrixDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DenseMatrixDependencies", function() { return _dependenciesAny_dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_7__["DenseMatrixDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesClone_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesAny/dependenciesClone.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesClone.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneDependencies", function() { return _dependenciesAny_dependenciesClone_generated__WEBPACK_IMPORTED_MODULE_8__["cloneDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIntegerDependencies", function() { return _dependenciesAny_dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_9__["isIntegerDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIsNegative.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNegativeDependencies", function() { return _dependenciesAny_dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_10__["isNegativeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIsNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumericDependencies", function() { return _dependenciesAny_dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_11__["isNumericDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesHasNumericValue_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesAny/dependenciesHasNumericValue.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHasNumericValue.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasNumericValueDependencies", function() { return _dependenciesAny_dependenciesHasNumericValue_generated__WEBPACK_IMPORTED_MODULE_12__["hasNumericValueDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIsPositive.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPositive.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPositiveDependencies", function() { return _dependenciesAny_dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_13__["isPositiveDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIsZero.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isZeroDependencies", function() { return _dependenciesAny_dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_14__["isZeroDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIsNaN.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNaN.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaNDependencies", function() { return _dependenciesAny_dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_15__["isNaNDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTypeOf_generated__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTypeOf.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTypeOf.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeOfDependencies", function() { return _dependenciesAny_dependenciesTypeOf_generated__WEBPACK_IMPORTED_MODULE_16__["typeOfDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./dependenciesAny/dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalScalarDependencies", function() { return _dependenciesAny_dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_17__["equalScalarDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SparseMatrixDependencies", function() { return _dependenciesAny_dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_18__["SparseMatrixDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numberDependencies", function() { return _dependenciesAny_dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_19__["numberDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesString_generated__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./dependenciesAny/dependenciesString.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesString.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringDependencies", function() { return _dependenciesAny_dependenciesString_generated__WEBPACK_IMPORTED_MODULE_20__["stringDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBoolean_generated__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBoolean.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBoolean.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "booleanDependencies", function() { return _dependenciesAny_dependenciesBoolean_generated__WEBPACK_IMPORTED_MODULE_21__["booleanDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bignumberDependencies", function() { return _dependenciesAny_dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_22__["bignumberDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesComplex_generated__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dependenciesAny/dependenciesComplex.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplex.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "complexDependencies", function() { return _dependenciesAny_dependenciesComplex_generated__WEBPACK_IMPORTED_MODULE_23__["complexDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFraction.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFraction.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fractionDependencies", function() { return _dependenciesAny_dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_24__["fractionDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matrixDependencies", function() { return _dependenciesAny_dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_25__["matrixDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSplitUnit_generated__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSplitUnit.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSplitUnit.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitUnitDependencies", function() { return _dependenciesAny_dependenciesSplitUnit_generated__WEBPACK_IMPORTED_MODULE_26__["splitUnitDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryMinusDependencies", function() { return _dependenciesAny_dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_27__["unaryMinusDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUnaryPlus_generated__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUnaryPlus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryPlus.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryPlusDependencies", function() { return _dependenciesAny_dependenciesUnaryPlus_generated__WEBPACK_IMPORTED_MODULE_28__["unaryPlusDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "absDependencies", function() { return _dependenciesAny_dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_29__["absDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesApply_generated__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./dependenciesAny/dependenciesApply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApply.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyDependencies", function() { return _dependenciesAny_dependenciesApply_generated__WEBPACK_IMPORTED_MODULE_30__["applyDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addScalarDependencies", function() { return _dependenciesAny_dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_31__["addScalarDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCbrt_generated__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCbrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCbrt.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cbrtDependencies", function() { return _dependenciesAny_dependenciesCbrt_generated__WEBPACK_IMPORTED_MODULE_32__["cbrtDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCeil_generated__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCeil.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCeil.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceilDependencies", function() { return _dependenciesAny_dependenciesCeil_generated__WEBPACK_IMPORTED_MODULE_33__["ceilDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCube_generated__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCube.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCube.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubeDependencies", function() { return _dependenciesAny_dependenciesCube_generated__WEBPACK_IMPORTED_MODULE_34__["cubeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesExp_generated__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./dependenciesAny/dependenciesExp.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExp.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expDependencies", function() { return _dependenciesAny_dependenciesExp_generated__WEBPACK_IMPORTED_MODULE_35__["expDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesExpm1_generated__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./dependenciesAny/dependenciesExpm1.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExpm1.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm1Dependencies", function() { return _dependenciesAny_dependenciesExpm1_generated__WEBPACK_IMPORTED_MODULE_36__["expm1Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFix_generated__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFix.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fixDependencies", function() { return _dependenciesAny_dependenciesFix_generated__WEBPACK_IMPORTED_MODULE_37__["fixDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFloor_generated__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFloor.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFloor.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floorDependencies", function() { return _dependenciesAny_dependenciesFloor_generated__WEBPACK_IMPORTED_MODULE_38__["floorDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesGcd_generated__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./dependenciesAny/dependenciesGcd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGcd.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gcdDependencies", function() { return _dependenciesAny_dependenciesGcd_generated__WEBPACK_IMPORTED_MODULE_39__["gcdDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLcm_generated__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLcm.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLcm.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lcmDependencies", function() { return _dependenciesAny_dependenciesLcm_generated__WEBPACK_IMPORTED_MODULE_40__["lcmDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLog10_generated__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLog10.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog10.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log10Dependencies", function() { return _dependenciesAny_dependenciesLog10_generated__WEBPACK_IMPORTED_MODULE_41__["log10Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLog2_generated__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLog2.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog2.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log2Dependencies", function() { return _dependenciesAny_dependenciesLog2_generated__WEBPACK_IMPORTED_MODULE_42__["log2Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMod_generated__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMod.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMod.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modDependencies", function() { return _dependenciesAny_dependenciesMod_generated__WEBPACK_IMPORTED_MODULE_43__["modDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarDependencies", function() { return _dependenciesAny_dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_44__["multiplyScalarDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyDependencies", function() { return _dependenciesAny_dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_45__["multiplyDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNthRoot_generated__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNthRoot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNthRoot.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRootDependencies", function() { return _dependenciesAny_dependenciesNthRoot_generated__WEBPACK_IMPORTED_MODULE_46__["nthRootDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSign_generated__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSign.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSign.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signDependencies", function() { return _dependenciesAny_dependenciesSign_generated__WEBPACK_IMPORTED_MODULE_47__["signDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtDependencies", function() { return _dependenciesAny_dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_48__["sqrtDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSquare_generated__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSquare.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSquare.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squareDependencies", function() { return _dependenciesAny_dependenciesSquare_generated__WEBPACK_IMPORTED_MODULE_49__["squareDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtractDependencies", function() { return _dependenciesAny_dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_50__["subtractDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesXgcd_generated__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./dependenciesAny/dependenciesXgcd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesXgcd.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xgcdDependencies", function() { return _dependenciesAny_dependenciesXgcd_generated__WEBPACK_IMPORTED_MODULE_51__["xgcdDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDotMultiply_generated__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDotMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotMultiply.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotMultiplyDependencies", function() { return _dependenciesAny_dependenciesDotMultiply_generated__WEBPACK_IMPORTED_MODULE_52__["dotMultiplyDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBitAnd_generated__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBitAnd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitAnd.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitAndDependencies", function() { return _dependenciesAny_dependenciesBitAnd_generated__WEBPACK_IMPORTED_MODULE_53__["bitAndDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBitNot_generated__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBitNot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitNot.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitNotDependencies", function() { return _dependenciesAny_dependenciesBitNot_generated__WEBPACK_IMPORTED_MODULE_54__["bitNotDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBitOr_generated__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBitOr.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitOr.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitOrDependencies", function() { return _dependenciesAny_dependenciesBitOr_generated__WEBPACK_IMPORTED_MODULE_55__["bitOrDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBitXor_generated__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBitXor.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitXor.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitXorDependencies", function() { return _dependenciesAny_dependenciesBitXor_generated__WEBPACK_IMPORTED_MODULE_56__["bitXorDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesArg_generated__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./dependenciesAny/dependenciesArg.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesArg.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "argDependencies", function() { return _dependenciesAny_dependenciesArg_generated__WEBPACK_IMPORTED_MODULE_57__["argDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./dependenciesAny/dependenciesConj.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConj.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conjDependencies", function() { return _dependenciesAny_dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_58__["conjDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIm_generated__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIm.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIm.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "imDependencies", function() { return _dependenciesAny_dependenciesIm_generated__WEBPACK_IMPORTED_MODULE_59__["imDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRe_generated__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRe.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRe.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reDependencies", function() { return _dependenciesAny_dependenciesRe_generated__WEBPACK_IMPORTED_MODULE_60__["reDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNot_generated__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNot.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "notDependencies", function() { return _dependenciesAny_dependenciesNot_generated__WEBPACK_IMPORTED_MODULE_61__["notDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesOr_generated__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./dependenciesAny/dependenciesOr.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOr.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orDependencies", function() { return _dependenciesAny_dependenciesOr_generated__WEBPACK_IMPORTED_MODULE_62__["orDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesXor_generated__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./dependenciesAny/dependenciesXor.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesXor.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorDependencies", function() { return _dependenciesAny_dependenciesXor_generated__WEBPACK_IMPORTED_MODULE_63__["xorDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesConcat_generated__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./dependenciesAny/dependenciesConcat.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcat.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatDependencies", function() { return _dependenciesAny_dependenciesConcat_generated__WEBPACK_IMPORTED_MODULE_64__["concatDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesColumn_generated__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./dependenciesAny/dependenciesColumn.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesColumn.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "columnDependencies", function() { return _dependenciesAny_dependenciesColumn_generated__WEBPACK_IMPORTED_MODULE_65__["columnDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCross_generated__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCross.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCross.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "crossDependencies", function() { return _dependenciesAny_dependenciesCross_generated__WEBPACK_IMPORTED_MODULE_66__["crossDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDiag_generated__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDiag.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiag.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diagDependencies", function() { return _dependenciesAny_dependenciesDiag_generated__WEBPACK_IMPORTED_MODULE_67__["diagDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFilter_generated__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFilter.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFilter.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterDependencies", function() { return _dependenciesAny_dependenciesFilter_generated__WEBPACK_IMPORTED_MODULE_68__["filterDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFlatten_generated__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFlatten.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFlatten.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flattenDependencies", function() { return _dependenciesAny_dependenciesFlatten_generated__WEBPACK_IMPORTED_MODULE_69__["flattenDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesForEach_generated__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./dependenciesAny/dependenciesForEach.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesForEach.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachDependencies", function() { return _dependenciesAny_dependenciesForEach_generated__WEBPACK_IMPORTED_MODULE_70__["forEachDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesGetMatrixDataType_generated__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./dependenciesAny/dependenciesGetMatrixDataType.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGetMatrixDataType.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataTypeDependencies", function() { return _dependenciesAny_dependenciesGetMatrixDataType_generated__WEBPACK_IMPORTED_MODULE_71__["getMatrixDataTypeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIdentity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identityDependencies", function() { return _dependenciesAny_dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_72__["identityDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesKron_generated__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./dependenciesAny/dependenciesKron.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKron.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kronDependencies", function() { return _dependenciesAny_dependenciesKron_generated__WEBPACK_IMPORTED_MODULE_73__["kronDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMap_generated__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMap.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMap.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapDependencies", function() { return _dependenciesAny_dependenciesMap_generated__WEBPACK_IMPORTED_MODULE_74__["mapDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDiff_generated__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDiff.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiff.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diffDependencies", function() { return _dependenciesAny_dependenciesDiff_generated__WEBPACK_IMPORTED_MODULE_75__["diffDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesOnes_generated__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./dependenciesAny/dependenciesOnes.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOnes.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onesDependencies", function() { return _dependenciesAny_dependenciesOnes_generated__WEBPACK_IMPORTED_MODULE_76__["onesDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRange.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRange.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeDependencies", function() { return _dependenciesAny_dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_77__["rangeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesReshape_generated__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./dependenciesAny/dependenciesReshape.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReshape.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reshapeDependencies", function() { return _dependenciesAny_dependenciesReshape_generated__WEBPACK_IMPORTED_MODULE_78__["reshapeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesResize_generated__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./dependenciesAny/dependenciesResize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesResize.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resizeDependencies", function() { return _dependenciesAny_dependenciesResize_generated__WEBPACK_IMPORTED_MODULE_79__["resizeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRow_generated__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRow.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rowDependencies", function() { return _dependenciesAny_dependenciesRow_generated__WEBPACK_IMPORTED_MODULE_80__["rowDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sizeDependencies", function() { return _dependenciesAny_dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_81__["sizeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSqueeze_generated__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSqueeze.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqueeze.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squeezeDependencies", function() { return _dependenciesAny_dependenciesSqueeze_generated__WEBPACK_IMPORTED_MODULE_82__["squeezeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subsetDependencies", function() { return _dependenciesAny_dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_83__["subsetDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTranspose_generated__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTranspose.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTranspose.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transposeDependencies", function() { return _dependenciesAny_dependenciesTranspose_generated__WEBPACK_IMPORTED_MODULE_84__["transposeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCtranspose_generated__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCtranspose.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCtranspose.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ctransposeDependencies", function() { return _dependenciesAny_dependenciesCtranspose_generated__WEBPACK_IMPORTED_MODULE_85__["ctransposeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./dependenciesAny/dependenciesZeros.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zerosDependencies", function() { return _dependenciesAny_dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_86__["zerosDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesErf_generated__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./dependenciesAny/dependenciesErf.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesErf.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "erfDependencies", function() { return _dependenciesAny_dependenciesErf_generated__WEBPACK_IMPORTED_MODULE_87__["erfDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMode_generated__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modeDependencies", function() { return _dependenciesAny_dependenciesMode_generated__WEBPACK_IMPORTED_MODULE_88__["modeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesProd_generated__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./dependenciesAny/dependenciesProd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesProd.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prodDependencies", function() { return _dependenciesAny_dependenciesProd_generated__WEBPACK_IMPORTED_MODULE_89__["prodDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFormat_generated__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFormat.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFormat.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDependencies", function() { return _dependenciesAny_dependenciesFormat_generated__WEBPACK_IMPORTED_MODULE_90__["formatDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPrint_generated__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPrint.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPrint.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "printDependencies", function() { return _dependenciesAny_dependenciesPrint_generated__WEBPACK_IMPORTED_MODULE_91__["printDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTo_generated__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTo.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTo.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDependencies", function() { return _dependenciesAny_dependenciesTo_generated__WEBPACK_IMPORTED_MODULE_92__["toDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIsPrime_generated__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIsPrime.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPrime.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrimeDependencies", function() { return _dependenciesAny_dependenciesIsPrime_generated__WEBPACK_IMPORTED_MODULE_93__["isPrimeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numericDependencies", function() { return _dependenciesAny_dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_94__["numericDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideScalarDependencies", function() { return _dependenciesAny_dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_95__["divideScalarDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "powDependencies", function() { return _dependenciesAny_dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_96__["powDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRound.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRound.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundDependencies", function() { return _dependenciesAny_dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_97__["roundDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLog_generated__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLog.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logDependencies", function() { return _dependenciesAny_dependenciesLog_generated__WEBPACK_IMPORTED_MODULE_98__["logDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLog1p_generated__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLog1p.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog1p.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log1pDependencies", function() { return _dependenciesAny_dependenciesLog1p_generated__WEBPACK_IMPORTED_MODULE_99__["log1pDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNthRoots_generated__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNthRoots.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNthRoots.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRootsDependencies", function() { return _dependenciesAny_dependenciesNthRoots_generated__WEBPACK_IMPORTED_MODULE_100__["nthRootsDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDotPow_generated__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDotPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotPow.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotPowDependencies", function() { return _dependenciesAny_dependenciesDotPow_generated__WEBPACK_IMPORTED_MODULE_101__["dotPowDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDotDivide_generated__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDotDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotDivide.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDivideDependencies", function() { return _dependenciesAny_dependenciesDotDivide_generated__WEBPACK_IMPORTED_MODULE_102__["dotDivideDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLsolve_generated__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLsolve.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLsolve.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lsolveDependencies", function() { return _dependenciesAny_dependenciesLsolve_generated__WEBPACK_IMPORTED_MODULE_103__["lsolveDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUsolve_generated__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUsolve.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUsolve.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "usolveDependencies", function() { return _dependenciesAny_dependenciesUsolve_generated__WEBPACK_IMPORTED_MODULE_104__["usolveDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLeftShift_generated__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLeftShift.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLeftShift.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leftShiftDependencies", function() { return _dependenciesAny_dependenciesLeftShift_generated__WEBPACK_IMPORTED_MODULE_105__["leftShiftDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRightArithShift_generated__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRightArithShift.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRightArithShift.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftDependencies", function() { return _dependenciesAny_dependenciesRightArithShift_generated__WEBPACK_IMPORTED_MODULE_106__["rightArithShiftDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRightLogShift_generated__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRightLogShift.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRightLogShift.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightLogShiftDependencies", function() { return _dependenciesAny_dependenciesRightLogShift_generated__WEBPACK_IMPORTED_MODULE_107__["rightLogShiftDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAnd_generated__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAnd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAnd.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "andDependencies", function() { return _dependenciesAny_dependenciesAnd_generated__WEBPACK_IMPORTED_MODULE_108__["andDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCompare.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareDependencies", function() { return _dependenciesAny_dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_109__["compareDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareNaturalDependencies", function() { return _dependenciesAny_dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_110__["compareNaturalDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCompareText_generated__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCompareText.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareText.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareTextDependencies", function() { return _dependenciesAny_dependenciesCompareText_generated__WEBPACK_IMPORTED_MODULE_111__["compareTextDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./dependenciesAny/dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalDependencies", function() { return _dependenciesAny_dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_112__["equalDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesEqualText_generated__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./dependenciesAny/dependenciesEqualText.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualText.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalTextDependencies", function() { return _dependenciesAny_dependenciesEqualText_generated__WEBPACK_IMPORTED_MODULE_113__["equalTextDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerDependencies", function() { return _dependenciesAny_dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_114__["smallerDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSmallerEq_generated__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSmallerEq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmallerEq.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerEqDependencies", function() { return _dependenciesAny_dependenciesSmallerEq_generated__WEBPACK_IMPORTED_MODULE_115__["smallerEqDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerDependencies", function() { return _dependenciesAny_dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_116__["largerDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLargerEq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLargerEq.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerEqDependencies", function() { return _dependenciesAny_dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_117__["largerEqDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDeepEqual_generated__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDeepEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDeepEqual.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deepEqualDependencies", function() { return _dependenciesAny_dependenciesDeepEqual_generated__WEBPACK_IMPORTED_MODULE_118__["deepEqualDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUnequal_generated__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUnequal.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnequal.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unequalDependencies", function() { return _dependenciesAny_dependenciesUnequal_generated__WEBPACK_IMPORTED_MODULE_119__["unequalDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPartitionSelect_generated__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPartitionSelect.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPartitionSelect.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partitionSelectDependencies", function() { return _dependenciesAny_dependenciesPartitionSelect_generated__WEBPACK_IMPORTED_MODULE_120__["partitionSelectDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSort_generated__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSort.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSort.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortDependencies", function() { return _dependenciesAny_dependenciesSort_generated__WEBPACK_IMPORTED_MODULE_121__["sortDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMax_generated__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMax.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMax.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxDependencies", function() { return _dependenciesAny_dependenciesMax_generated__WEBPACK_IMPORTED_MODULE_122__["maxDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMin_generated__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMin.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMin.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minDependencies", function() { return _dependenciesAny_dependenciesMin_generated__WEBPACK_IMPORTED_MODULE_123__["minDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesImmutableDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./dependenciesAny/dependenciesImmutableDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesImmutableDenseMatrixClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImmutableDenseMatrixDependencies", function() { return _dependenciesAny_dependenciesImmutableDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_124__["ImmutableDenseMatrixDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexDependencies", function() { return _dependenciesAny_dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_125__["IndexDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFibonacciHeapClass_generated__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFibonacciHeapClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFibonacciHeapClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FibonacciHeapDependencies", function() { return _dependenciesAny_dependenciesFibonacciHeapClass_generated__WEBPACK_IMPORTED_MODULE_126__["FibonacciHeapDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSpaClass_generated__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSpaClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSpaClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpaDependencies", function() { return _dependenciesAny_dependenciesSpaClass_generated__WEBPACK_IMPORTED_MODULE_127__["SpaDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnitDependencies", function() { return _dependenciesAny_dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_128__["UnitDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUnitFunction_generated__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUnitFunction.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitFunction.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unitDependencies", function() { return _dependenciesAny_dependenciesUnitFunction_generated__WEBPACK_IMPORTED_MODULE_129__["unitDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSparse_generated__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSparse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparse.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sparseDependencies", function() { return _dependenciesAny_dependenciesSparse_generated__WEBPACK_IMPORTED_MODULE_130__["sparseDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCreateUnit_generated__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCreateUnit.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCreateUnit.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitDependencies", function() { return _dependenciesAny_dependenciesCreateUnit_generated__WEBPACK_IMPORTED_MODULE_131__["createUnitDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAcos_generated__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAcos.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcos.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acosDependencies", function() { return _dependenciesAny_dependenciesAcos_generated__WEBPACK_IMPORTED_MODULE_132__["acosDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAcosh_generated__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAcosh.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcosh.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acoshDependencies", function() { return _dependenciesAny_dependenciesAcosh_generated__WEBPACK_IMPORTED_MODULE_133__["acoshDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAcot_generated__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAcot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcot.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acotDependencies", function() { return _dependenciesAny_dependenciesAcot_generated__WEBPACK_IMPORTED_MODULE_134__["acotDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAcoth_generated__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAcoth.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcoth.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acothDependencies", function() { return _dependenciesAny_dependenciesAcoth_generated__WEBPACK_IMPORTED_MODULE_135__["acothDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAcsc_generated__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAcsc.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcsc.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acscDependencies", function() { return _dependenciesAny_dependenciesAcsc_generated__WEBPACK_IMPORTED_MODULE_136__["acscDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAcsch_generated__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAcsch.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcsch.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acschDependencies", function() { return _dependenciesAny_dependenciesAcsch_generated__WEBPACK_IMPORTED_MODULE_137__["acschDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAsec_generated__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAsec.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsec.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asecDependencies", function() { return _dependenciesAny_dependenciesAsec_generated__WEBPACK_IMPORTED_MODULE_138__["asecDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAsech_generated__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAsech.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsech.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asechDependencies", function() { return _dependenciesAny_dependenciesAsech_generated__WEBPACK_IMPORTED_MODULE_139__["asechDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAsin_generated__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAsin.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsin.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinDependencies", function() { return _dependenciesAny_dependenciesAsin_generated__WEBPACK_IMPORTED_MODULE_140__["asinDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAsinh_generated__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAsinh.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsinh.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinhDependencies", function() { return _dependenciesAny_dependenciesAsinh_generated__WEBPACK_IMPORTED_MODULE_141__["asinhDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAtan_generated__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAtan.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtan.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanDependencies", function() { return _dependenciesAny_dependenciesAtan_generated__WEBPACK_IMPORTED_MODULE_142__["atanDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAtan2_generated__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAtan2.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtan2.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan2Dependencies", function() { return _dependenciesAny_dependenciesAtan2_generated__WEBPACK_IMPORTED_MODULE_143__["atan2Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAtanh_generated__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAtanh.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtanh.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanhDependencies", function() { return _dependenciesAny_dependenciesAtanh_generated__WEBPACK_IMPORTED_MODULE_144__["atanhDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCos_generated__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCos.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCos.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cosDependencies", function() { return _dependenciesAny_dependenciesCos_generated__WEBPACK_IMPORTED_MODULE_145__["cosDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCosh_generated__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCosh.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCosh.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coshDependencies", function() { return _dependenciesAny_dependenciesCosh_generated__WEBPACK_IMPORTED_MODULE_146__["coshDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCot_generated__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCot.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cotDependencies", function() { return _dependenciesAny_dependenciesCot_generated__WEBPACK_IMPORTED_MODULE_147__["cotDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCoth_generated__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCoth.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCoth.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cothDependencies", function() { return _dependenciesAny_dependenciesCoth_generated__WEBPACK_IMPORTED_MODULE_148__["cothDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCsc_generated__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCsc.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCsc.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cscDependencies", function() { return _dependenciesAny_dependenciesCsc_generated__WEBPACK_IMPORTED_MODULE_149__["cscDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCsch_generated__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCsch.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCsch.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cschDependencies", function() { return _dependenciesAny_dependenciesCsch_generated__WEBPACK_IMPORTED_MODULE_150__["cschDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSec_generated__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSec.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSec.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secDependencies", function() { return _dependenciesAny_dependenciesSec_generated__WEBPACK_IMPORTED_MODULE_151__["secDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSech_generated__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSech.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSech.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sechDependencies", function() { return _dependenciesAny_dependenciesSech_generated__WEBPACK_IMPORTED_MODULE_152__["sechDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSin_generated__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSin.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSin.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinDependencies", function() { return _dependenciesAny_dependenciesSin_generated__WEBPACK_IMPORTED_MODULE_153__["sinDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSinh_generated__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSinh.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSinh.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinhDependencies", function() { return _dependenciesAny_dependenciesSinh_generated__WEBPACK_IMPORTED_MODULE_154__["sinhDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTan_generated__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTan.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTan.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanDependencies", function() { return _dependenciesAny_dependenciesTan_generated__WEBPACK_IMPORTED_MODULE_155__["tanDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTanh_generated__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTanh.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTanh.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanhDependencies", function() { return _dependenciesAny_dependenciesTanh_generated__WEBPACK_IMPORTED_MODULE_156__["tanhDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetCartesian_generated__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetCartesian.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetCartesian.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCartesianDependencies", function() { return _dependenciesAny_dependenciesSetCartesian_generated__WEBPACK_IMPORTED_MODULE_157__["setCartesianDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetDifference_generated__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetDifference.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetDifference.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDifferenceDependencies", function() { return _dependenciesAny_dependenciesSetDifference_generated__WEBPACK_IMPORTED_MODULE_158__["setDifferenceDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetDistinct_generated__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetDistinct.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetDistinct.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDistinctDependencies", function() { return _dependenciesAny_dependenciesSetDistinct_generated__WEBPACK_IMPORTED_MODULE_159__["setDistinctDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetIntersect_generated__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetIntersect.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetIntersect.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIntersectDependencies", function() { return _dependenciesAny_dependenciesSetIntersect_generated__WEBPACK_IMPORTED_MODULE_160__["setIntersectDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetIsSubset_generated__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetIsSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetIsSubset.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIsSubsetDependencies", function() { return _dependenciesAny_dependenciesSetIsSubset_generated__WEBPACK_IMPORTED_MODULE_161__["setIsSubsetDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetMultiplicity_generated__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetMultiplicity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetMultiplicity.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMultiplicityDependencies", function() { return _dependenciesAny_dependenciesSetMultiplicity_generated__WEBPACK_IMPORTED_MODULE_162__["setMultiplicityDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetPowerset_generated__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetPowerset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetPowerset.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setPowersetDependencies", function() { return _dependenciesAny_dependenciesSetPowerset_generated__WEBPACK_IMPORTED_MODULE_163__["setPowersetDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetSize_generated__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetSize.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSizeDependencies", function() { return _dependenciesAny_dependenciesSetSize_generated__WEBPACK_IMPORTED_MODULE_164__["setSizeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetSymDifference_generated__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetSymDifference.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetSymDifference.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSymDifferenceDependencies", function() { return _dependenciesAny_dependenciesSetSymDifference_generated__WEBPACK_IMPORTED_MODULE_165__["setSymDifferenceDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSetUnion_generated__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSetUnion.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetUnion.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setUnionDependencies", function() { return _dependenciesAny_dependenciesSetUnion_generated__WEBPACK_IMPORTED_MODULE_166__["setUnionDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addDependencies", function() { return _dependenciesAny_dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_167__["addDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesHypot_generated__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./dependenciesAny/dependenciesHypot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHypot.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hypotDependencies", function() { return _dependenciesAny_dependenciesHypot_generated__WEBPACK_IMPORTED_MODULE_168__["hypotDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNorm_generated__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNorm.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNorm.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "normDependencies", function() { return _dependenciesAny_dependenciesNorm_generated__WEBPACK_IMPORTED_MODULE_169__["normDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDot_generated__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDot.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDependencies", function() { return _dependenciesAny_dependenciesDot_generated__WEBPACK_IMPORTED_MODULE_170__["dotDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTrace_generated__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTrace.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTrace.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "traceDependencies", function() { return _dependenciesAny_dependenciesTrace_generated__WEBPACK_IMPORTED_MODULE_171__["traceDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIndex_generated__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIndex.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndex.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexDependencies", function() { return _dependenciesAny_dependenciesIndex_generated__WEBPACK_IMPORTED_MODULE_172__["indexDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NodeDependencies", function() { return _dependenciesAny_dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_173__["NodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAccessorNode_generated__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAccessorNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAccessorNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccessorNodeDependencies", function() { return _dependenciesAny_dependenciesAccessorNode_generated__WEBPACK_IMPORTED_MODULE_174__["AccessorNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesArrayNode_generated__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./dependenciesAny/dependenciesArrayNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesArrayNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayNodeDependencies", function() { return _dependenciesAny_dependenciesArrayNode_generated__WEBPACK_IMPORTED_MODULE_175__["ArrayNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAssignmentNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAssignmentNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssignmentNodeDependencies", function() { return _dependenciesAny_dependenciesAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_176__["AssignmentNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBlockNode_generated__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBlockNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBlockNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockNodeDependencies", function() { return _dependenciesAny_dependenciesBlockNode_generated__WEBPACK_IMPORTED_MODULE_177__["BlockNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesConditionalNode_generated__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./dependenciesAny/dependenciesConditionalNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConditionalNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConditionalNodeDependencies", function() { return _dependenciesAny_dependenciesConditionalNode_generated__WEBPACK_IMPORTED_MODULE_178__["ConditionalNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./dependenciesAny/dependenciesConstantNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConstantNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConstantNodeDependencies", function() { return _dependenciesAny_dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_179__["ConstantNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFunctionAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFunctionAssignmentNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionAssignmentNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionAssignmentNodeDependencies", function() { return _dependenciesAny_dependenciesFunctionAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_180__["FunctionAssignmentNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIndexNode_generated__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIndexNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexNodeDependencies", function() { return _dependenciesAny_dependenciesIndexNode_generated__WEBPACK_IMPORTED_MODULE_181__["IndexNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesObjectNode_generated__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./dependenciesAny/dependenciesObjectNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesObjectNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectNodeDependencies", function() { return _dependenciesAny_dependenciesObjectNode_generated__WEBPACK_IMPORTED_MODULE_182__["ObjectNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./dependenciesAny/dependenciesOperatorNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOperatorNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OperatorNodeDependencies", function() { return _dependenciesAny_dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_183__["OperatorNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./dependenciesAny/dependenciesParenthesisNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParenthesisNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParenthesisNodeDependencies", function() { return _dependenciesAny_dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_184__["ParenthesisNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRangeNode_generated__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRangeNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeNodeDependencies", function() { return _dependenciesAny_dependenciesRangeNode_generated__WEBPACK_IMPORTED_MODULE_185__["RangeNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRelationalNode_generated__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRelationalNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRelationalNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RelationalNodeDependencies", function() { return _dependenciesAny_dependenciesRelationalNode_generated__WEBPACK_IMPORTED_MODULE_186__["RelationalNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSymbolNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SymbolNodeDependencies", function() { return _dependenciesAny_dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_187__["SymbolNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFunctionNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionNode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionNodeDependencies", function() { return _dependenciesAny_dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_188__["FunctionNodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./dependenciesAny/dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseDependencies", function() { return _dependenciesAny_dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_189__["parseDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCompile_generated__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCompile.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompile.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compileDependencies", function() { return _dependenciesAny_dependenciesCompile_generated__WEBPACK_IMPORTED_MODULE_190__["compileDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesEvaluate_generated__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./dependenciesAny/dependenciesEvaluate.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEvaluate.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "evaluateDependencies", function() { return _dependenciesAny_dependenciesEvaluate_generated__WEBPACK_IMPORTED_MODULE_191__["evaluateDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesParserClass_generated__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./dependenciesAny/dependenciesParserClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParserClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParserDependencies", function() { return _dependenciesAny_dependenciesParserClass_generated__WEBPACK_IMPORTED_MODULE_192__["ParserDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesParser_generated__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./dependenciesAny/dependenciesParser.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParser.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parserDependencies", function() { return _dependenciesAny_dependenciesParser_generated__WEBPACK_IMPORTED_MODULE_193__["parserDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLup_generated__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLup.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLup.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lupDependencies", function() { return _dependenciesAny_dependenciesLup_generated__WEBPACK_IMPORTED_MODULE_194__["lupDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesQr_generated__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./dependenciesAny/dependenciesQr.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQr.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "qrDependencies", function() { return _dependenciesAny_dependenciesQr_generated__WEBPACK_IMPORTED_MODULE_195__["qrDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSlu_generated__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSlu.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSlu.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sluDependencies", function() { return _dependenciesAny_dependenciesSlu_generated__WEBPACK_IMPORTED_MODULE_196__["sluDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLusolve_generated__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLusolve.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLusolve.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lusolveDependencies", function() { return _dependenciesAny_dependenciesLusolve_generated__WEBPACK_IMPORTED_MODULE_197__["lusolveDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesHelpClass_generated__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./dependenciesAny/dependenciesHelpClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHelpClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HelpDependencies", function() { return _dependenciesAny_dependenciesHelpClass_generated__WEBPACK_IMPORTED_MODULE_198__["HelpDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesChainClass_generated__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./dependenciesAny/dependenciesChainClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesChainClass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChainDependencies", function() { return _dependenciesAny_dependenciesChainClass_generated__WEBPACK_IMPORTED_MODULE_199__["ChainDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesHelp_generated__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ./dependenciesAny/dependenciesHelp.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHelp.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "helpDependencies", function() { return _dependenciesAny_dependenciesHelp_generated__WEBPACK_IMPORTED_MODULE_200__["helpDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesChain_generated__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ./dependenciesAny/dependenciesChain.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesChain.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chainDependencies", function() { return _dependenciesAny_dependenciesChain_generated__WEBPACK_IMPORTED_MODULE_201__["chainDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDet_generated__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDet.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDet.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detDependencies", function() { return _dependenciesAny_dependenciesDet_generated__WEBPACK_IMPORTED_MODULE_202__["detDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ./dependenciesAny/dependenciesInv.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInv.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invDependencies", function() { return _dependenciesAny_dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_203__["invDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesEigs_generated__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ./dependenciesAny/dependenciesEigs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEigs.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eigsDependencies", function() { return _dependenciesAny_dependenciesEigs_generated__WEBPACK_IMPORTED_MODULE_204__["eigsDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesExpm_generated__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ./dependenciesAny/dependenciesExpm.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExpm.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expmDependencies", function() { return _dependenciesAny_dependenciesExpm_generated__WEBPACK_IMPORTED_MODULE_205__["expmDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSqrtm_generated__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSqrtm.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrtm.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtmDependencies", function() { return _dependenciesAny_dependenciesSqrtm_generated__WEBPACK_IMPORTED_MODULE_206__["sqrtmDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideDependencies", function() { return _dependenciesAny_dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_207__["divideDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDistance_generated__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDistance.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDistance.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distanceDependencies", function() { return _dependenciesAny_dependenciesDistance_generated__WEBPACK_IMPORTED_MODULE_208__["distanceDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIntersect_generated__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIntersect.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIntersect.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectDependencies", function() { return _dependenciesAny_dependenciesIntersect_generated__WEBPACK_IMPORTED_MODULE_209__["intersectDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSum_generated__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSum.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSum.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumDependencies", function() { return _dependenciesAny_dependenciesSum_generated__WEBPACK_IMPORTED_MODULE_210__["sumDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMean_generated__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMean.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMean.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanDependencies", function() { return _dependenciesAny_dependenciesMean_generated__WEBPACK_IMPORTED_MODULE_211__["meanDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMedian_generated__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMedian.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMedian.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "medianDependencies", function() { return _dependenciesAny_dependenciesMedian_generated__WEBPACK_IMPORTED_MODULE_212__["medianDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMad_generated__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMad.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMad.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "madDependencies", function() { return _dependenciesAny_dependenciesMad_generated__WEBPACK_IMPORTED_MODULE_213__["madDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesVariance_generated__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ./dependenciesAny/dependenciesVariance.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVariance.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "varianceDependencies", function() { return _dependenciesAny_dependenciesVariance_generated__WEBPACK_IMPORTED_MODULE_214__["varianceDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesQuantileSeq_generated__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ./dependenciesAny/dependenciesQuantileSeq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQuantileSeq.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantileSeqDependencies", function() { return _dependenciesAny_dependenciesQuantileSeq_generated__WEBPACK_IMPORTED_MODULE_215__["quantileSeqDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesStd_generated__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ./dependenciesAny/dependenciesStd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStd.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stdDependencies", function() { return _dependenciesAny_dependenciesStd_generated__WEBPACK_IMPORTED_MODULE_216__["stdDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCombinations.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinations.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsDependencies", function() { return _dependenciesAny_dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_217__["combinationsDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCombinationsWithRep_generated__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCombinationsWithRep.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinationsWithRep.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRepDependencies", function() { return _dependenciesAny_dependenciesCombinationsWithRep_generated__WEBPACK_IMPORTED_MODULE_218__["combinationsWithRepDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesGamma_generated__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(/*! ./dependenciesAny/dependenciesGamma.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGamma.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gammaDependencies", function() { return _dependenciesAny_dependenciesGamma_generated__WEBPACK_IMPORTED_MODULE_219__["gammaDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFactorial.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFactorial.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "factorialDependencies", function() { return _dependenciesAny_dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_220__["factorialDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesKldivergence_generated__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(/*! ./dependenciesAny/dependenciesKldivergence.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKldivergence.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kldivergenceDependencies", function() { return _dependenciesAny_dependenciesKldivergence_generated__WEBPACK_IMPORTED_MODULE_221__["kldivergenceDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMultinomial_generated__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMultinomial.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultinomial.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multinomialDependencies", function() { return _dependenciesAny_dependenciesMultinomial_generated__WEBPACK_IMPORTED_MODULE_222__["multinomialDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPermutations_generated__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPermutations.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPermutations.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permutationsDependencies", function() { return _dependenciesAny_dependenciesPermutations_generated__WEBPACK_IMPORTED_MODULE_223__["permutationsDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPickRandom_generated__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPickRandom.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPickRandom.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pickRandomDependencies", function() { return _dependenciesAny_dependenciesPickRandom_generated__WEBPACK_IMPORTED_MODULE_224__["pickRandomDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRandom_generated__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRandom.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRandom.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomDependencies", function() { return _dependenciesAny_dependenciesRandom_generated__WEBPACK_IMPORTED_MODULE_225__["randomDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRandomInt_generated__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRandomInt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRandomInt.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomIntDependencies", function() { return _dependenciesAny_dependenciesRandomInt_generated__WEBPACK_IMPORTED_MODULE_226__["randomIntDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesStirlingS2_generated__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(/*! ./dependenciesAny/dependenciesStirlingS2.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStirlingS2.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stirlingS2Dependencies", function() { return _dependenciesAny_dependenciesStirlingS2_generated__WEBPACK_IMPORTED_MODULE_227__["stirlingS2Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBellNumbers_generated__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBellNumbers.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBellNumbers.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bellNumbersDependencies", function() { return _dependenciesAny_dependenciesBellNumbers_generated__WEBPACK_IMPORTED_MODULE_228__["bellNumbersDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCatalan_generated__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCatalan.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCatalan.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catalanDependencies", function() { return _dependenciesAny_dependenciesCatalan_generated__WEBPACK_IMPORTED_MODULE_229__["catalanDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesComposition_generated__WEBPACK_IMPORTED_MODULE_230__ = __webpack_require__(/*! ./dependenciesAny/dependenciesComposition.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComposition.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compositionDependencies", function() { return _dependenciesAny_dependenciesComposition_generated__WEBPACK_IMPORTED_MODULE_230__["compositionDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSimplify_generated__WEBPACK_IMPORTED_MODULE_231__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSimplify.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSimplify.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simplifyDependencies", function() { return _dependenciesAny_dependenciesSimplify_generated__WEBPACK_IMPORTED_MODULE_231__["simplifyDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDerivative_generated__WEBPACK_IMPORTED_MODULE_232__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDerivative.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDerivative.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "derivativeDependencies", function() { return _dependenciesAny_dependenciesDerivative_generated__WEBPACK_IMPORTED_MODULE_232__["derivativeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRationalize_generated__WEBPACK_IMPORTED_MODULE_233__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRationalize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRationalize.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rationalizeDependencies", function() { return _dependenciesAny_dependenciesRationalize_generated__WEBPACK_IMPORTED_MODULE_233__["rationalizeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesReviver_generated__WEBPACK_IMPORTED_MODULE_234__ = __webpack_require__(/*! ./dependenciesAny/dependenciesReviver.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReviver.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reviverDependencies", function() { return _dependenciesAny_dependenciesReviver_generated__WEBPACK_IMPORTED_MODULE_234__["reviverDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesReplacer_generated__WEBPACK_IMPORTED_MODULE_235__ = __webpack_require__(/*! ./dependenciesAny/dependenciesReplacer.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReplacer.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replacerDependencies", function() { return _dependenciesAny_dependenciesReplacer_generated__WEBPACK_IMPORTED_MODULE_235__["replacerDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesE_generated__WEBPACK_IMPORTED_MODULE_236__ = __webpack_require__(/*! ./dependenciesAny/dependenciesE.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesE.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eDependencies", function() { return _dependenciesAny_dependenciesE_generated__WEBPACK_IMPORTED_MODULE_236__["eDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUppercaseE_generated__WEBPACK_IMPORTED_MODULE_237__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUppercaseE.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUppercaseE.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EDependencies", function() { return _dependenciesAny_dependenciesUppercaseE_generated__WEBPACK_IMPORTED_MODULE_237__["EDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFalse_generated__WEBPACK_IMPORTED_MODULE_238__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFalse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFalse.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "falseDependencies", function() { return _dependenciesAny_dependenciesFalse_generated__WEBPACK_IMPORTED_MODULE_238__["falseDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesI_generated__WEBPACK_IMPORTED_MODULE_239__ = __webpack_require__(/*! ./dependenciesAny/dependenciesI.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesI.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iDependencies", function() { return _dependenciesAny_dependenciesI_generated__WEBPACK_IMPORTED_MODULE_239__["iDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesInfinity_generated__WEBPACK_IMPORTED_MODULE_240__ = __webpack_require__(/*! ./dependenciesAny/dependenciesInfinity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInfinity.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InfinityDependencies", function() { return _dependenciesAny_dependenciesInfinity_generated__WEBPACK_IMPORTED_MODULE_240__["InfinityDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLN10_generated__WEBPACK_IMPORTED_MODULE_241__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLN10.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLN10.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN10Dependencies", function() { return _dependenciesAny_dependenciesLN10_generated__WEBPACK_IMPORTED_MODULE_241__["LN10Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLN2_generated__WEBPACK_IMPORTED_MODULE_242__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLN2.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLN2.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN2Dependencies", function() { return _dependenciesAny_dependenciesLN2_generated__WEBPACK_IMPORTED_MODULE_242__["LN2Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLOG10E_generated__WEBPACK_IMPORTED_MODULE_243__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLOG10E.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLOG10E.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG10EDependencies", function() { return _dependenciesAny_dependenciesLOG10E_generated__WEBPACK_IMPORTED_MODULE_243__["LOG10EDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLOG2E_generated__WEBPACK_IMPORTED_MODULE_244__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLOG2E.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLOG2E.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG2EDependencies", function() { return _dependenciesAny_dependenciesLOG2E_generated__WEBPACK_IMPORTED_MODULE_244__["LOG2EDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNaN_generated__WEBPACK_IMPORTED_MODULE_245__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNaN.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNaN.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NaNDependencies", function() { return _dependenciesAny_dependenciesNaN_generated__WEBPACK_IMPORTED_MODULE_245__["NaNDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNull_generated__WEBPACK_IMPORTED_MODULE_246__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNull.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNull.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullDependencies", function() { return _dependenciesAny_dependenciesNull_generated__WEBPACK_IMPORTED_MODULE_246__["nullDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPhi_generated__WEBPACK_IMPORTED_MODULE_247__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPhi.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPhi.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "phiDependencies", function() { return _dependenciesAny_dependenciesPhi_generated__WEBPACK_IMPORTED_MODULE_247__["phiDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPi_generated__WEBPACK_IMPORTED_MODULE_248__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPi.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPi.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piDependencies", function() { return _dependenciesAny_dependenciesPi_generated__WEBPACK_IMPORTED_MODULE_248__["piDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesUppercasePi_generated__WEBPACK_IMPORTED_MODULE_249__ = __webpack_require__(/*! ./dependenciesAny/dependenciesUppercasePi.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUppercasePi.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PIDependencies", function() { return _dependenciesAny_dependenciesUppercasePi_generated__WEBPACK_IMPORTED_MODULE_249__["PIDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSQRT1_2_generated__WEBPACK_IMPORTED_MODULE_250__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSQRT1_2.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSQRT1_2.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT1_2Dependencies", function() { return _dependenciesAny_dependenciesSQRT1_2_generated__WEBPACK_IMPORTED_MODULE_250__["SQRT1_2Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSQRT2_generated__WEBPACK_IMPORTED_MODULE_251__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSQRT2.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSQRT2.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT2Dependencies", function() { return _dependenciesAny_dependenciesSQRT2_generated__WEBPACK_IMPORTED_MODULE_251__["SQRT2Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTau_generated__WEBPACK_IMPORTED_MODULE_252__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTau.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTau.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tauDependencies", function() { return _dependenciesAny_dependenciesTau_generated__WEBPACK_IMPORTED_MODULE_252__["tauDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesTrue_generated__WEBPACK_IMPORTED_MODULE_253__ = __webpack_require__(/*! ./dependenciesAny/dependenciesTrue.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTrue.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trueDependencies", function() { return _dependenciesAny_dependenciesTrue_generated__WEBPACK_IMPORTED_MODULE_253__["trueDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesVersion_generated__WEBPACK_IMPORTED_MODULE_254__ = __webpack_require__(/*! ./dependenciesAny/dependenciesVersion.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVersion.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "versionDependencies", function() { return _dependenciesAny_dependenciesVersion_generated__WEBPACK_IMPORTED_MODULE_254__["versionDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAtomicMass_generated__WEBPACK_IMPORTED_MODULE_255__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAtomicMass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtomicMass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atomicMassDependencies", function() { return _dependenciesAny_dependenciesAtomicMass_generated__WEBPACK_IMPORTED_MODULE_255__["atomicMassDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesAvogadro_generated__WEBPACK_IMPORTED_MODULE_256__ = __webpack_require__(/*! ./dependenciesAny/dependenciesAvogadro.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAvogadro.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "avogadroDependencies", function() { return _dependenciesAny_dependenciesAvogadro_generated__WEBPACK_IMPORTED_MODULE_256__["avogadroDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBohrMagneton_generated__WEBPACK_IMPORTED_MODULE_257__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBohrMagneton.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBohrMagneton.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrMagnetonDependencies", function() { return _dependenciesAny_dependenciesBohrMagneton_generated__WEBPACK_IMPORTED_MODULE_257__["bohrMagnetonDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBohrRadius_generated__WEBPACK_IMPORTED_MODULE_258__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBohrRadius.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBohrRadius.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrRadiusDependencies", function() { return _dependenciesAny_dependenciesBohrRadius_generated__WEBPACK_IMPORTED_MODULE_258__["bohrRadiusDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesBoltzmann_generated__WEBPACK_IMPORTED_MODULE_259__ = __webpack_require__(/*! ./dependenciesAny/dependenciesBoltzmann.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBoltzmann.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boltzmannDependencies", function() { return _dependenciesAny_dependenciesBoltzmann_generated__WEBPACK_IMPORTED_MODULE_259__["boltzmannDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesClassicalElectronRadius_generated__WEBPACK_IMPORTED_MODULE_260__ = __webpack_require__(/*! ./dependenciesAny/dependenciesClassicalElectronRadius.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesClassicalElectronRadius.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classicalElectronRadiusDependencies", function() { return _dependenciesAny_dependenciesClassicalElectronRadius_generated__WEBPACK_IMPORTED_MODULE_260__["classicalElectronRadiusDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesConductanceQuantum_generated__WEBPACK_IMPORTED_MODULE_261__ = __webpack_require__(/*! ./dependenciesAny/dependenciesConductanceQuantum.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConductanceQuantum.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conductanceQuantumDependencies", function() { return _dependenciesAny_dependenciesConductanceQuantum_generated__WEBPACK_IMPORTED_MODULE_261__["conductanceQuantumDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesCoulomb_generated__WEBPACK_IMPORTED_MODULE_262__ = __webpack_require__(/*! ./dependenciesAny/dependenciesCoulomb.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCoulomb.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coulombDependencies", function() { return _dependenciesAny_dependenciesCoulomb_generated__WEBPACK_IMPORTED_MODULE_262__["coulombDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDeuteronMass_generated__WEBPACK_IMPORTED_MODULE_263__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDeuteronMass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDeuteronMass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deuteronMassDependencies", function() { return _dependenciesAny_dependenciesDeuteronMass_generated__WEBPACK_IMPORTED_MODULE_263__["deuteronMassDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesEfimovFactor_generated__WEBPACK_IMPORTED_MODULE_264__ = __webpack_require__(/*! ./dependenciesAny/dependenciesEfimovFactor.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEfimovFactor.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "efimovFactorDependencies", function() { return _dependenciesAny_dependenciesEfimovFactor_generated__WEBPACK_IMPORTED_MODULE_264__["efimovFactorDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesElectricConstant_generated__WEBPACK_IMPORTED_MODULE_265__ = __webpack_require__(/*! ./dependenciesAny/dependenciesElectricConstant.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElectricConstant.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electricConstantDependencies", function() { return _dependenciesAny_dependenciesElectricConstant_generated__WEBPACK_IMPORTED_MODULE_265__["electricConstantDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesElectronMass_generated__WEBPACK_IMPORTED_MODULE_266__ = __webpack_require__(/*! ./dependenciesAny/dependenciesElectronMass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElectronMass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electronMassDependencies", function() { return _dependenciesAny_dependenciesElectronMass_generated__WEBPACK_IMPORTED_MODULE_266__["electronMassDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesElementaryCharge_generated__WEBPACK_IMPORTED_MODULE_267__ = __webpack_require__(/*! ./dependenciesAny/dependenciesElementaryCharge.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElementaryCharge.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementaryChargeDependencies", function() { return _dependenciesAny_dependenciesElementaryCharge_generated__WEBPACK_IMPORTED_MODULE_267__["elementaryChargeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFaraday_generated__WEBPACK_IMPORTED_MODULE_268__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFaraday.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFaraday.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "faradayDependencies", function() { return _dependenciesAny_dependenciesFaraday_generated__WEBPACK_IMPORTED_MODULE_268__["faradayDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFermiCoupling_generated__WEBPACK_IMPORTED_MODULE_269__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFermiCoupling.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFermiCoupling.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fermiCouplingDependencies", function() { return _dependenciesAny_dependenciesFermiCoupling_generated__WEBPACK_IMPORTED_MODULE_269__["fermiCouplingDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFineStructure_generated__WEBPACK_IMPORTED_MODULE_270__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFineStructure.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFineStructure.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fineStructureDependencies", function() { return _dependenciesAny_dependenciesFineStructure_generated__WEBPACK_IMPORTED_MODULE_270__["fineStructureDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFirstRadiation_generated__WEBPACK_IMPORTED_MODULE_271__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFirstRadiation.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFirstRadiation.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "firstRadiationDependencies", function() { return _dependenciesAny_dependenciesFirstRadiation_generated__WEBPACK_IMPORTED_MODULE_271__["firstRadiationDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesGasConstant_generated__WEBPACK_IMPORTED_MODULE_272__ = __webpack_require__(/*! ./dependenciesAny/dependenciesGasConstant.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGasConstant.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gasConstantDependencies", function() { return _dependenciesAny_dependenciesGasConstant_generated__WEBPACK_IMPORTED_MODULE_272__["gasConstantDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesGravitationConstant_generated__WEBPACK_IMPORTED_MODULE_273__ = __webpack_require__(/*! ./dependenciesAny/dependenciesGravitationConstant.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGravitationConstant.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravitationConstantDependencies", function() { return _dependenciesAny_dependenciesGravitationConstant_generated__WEBPACK_IMPORTED_MODULE_273__["gravitationConstantDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesGravity_generated__WEBPACK_IMPORTED_MODULE_274__ = __webpack_require__(/*! ./dependenciesAny/dependenciesGravity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGravity.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravityDependencies", function() { return _dependenciesAny_dependenciesGravity_generated__WEBPACK_IMPORTED_MODULE_274__["gravityDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesHartreeEnergy_generated__WEBPACK_IMPORTED_MODULE_275__ = __webpack_require__(/*! ./dependenciesAny/dependenciesHartreeEnergy.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHartreeEnergy.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hartreeEnergyDependencies", function() { return _dependenciesAny_dependenciesHartreeEnergy_generated__WEBPACK_IMPORTED_MODULE_275__["hartreeEnergyDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesInverseConductanceQuantum_generated__WEBPACK_IMPORTED_MODULE_276__ = __webpack_require__(/*! ./dependenciesAny/dependenciesInverseConductanceQuantum.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInverseConductanceQuantum.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inverseConductanceQuantumDependencies", function() { return _dependenciesAny_dependenciesInverseConductanceQuantum_generated__WEBPACK_IMPORTED_MODULE_276__["inverseConductanceQuantumDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesKlitzing_generated__WEBPACK_IMPORTED_MODULE_277__ = __webpack_require__(/*! ./dependenciesAny/dependenciesKlitzing.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKlitzing.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "klitzingDependencies", function() { return _dependenciesAny_dependenciesKlitzing_generated__WEBPACK_IMPORTED_MODULE_277__["klitzingDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesLoschmidt_generated__WEBPACK_IMPORTED_MODULE_278__ = __webpack_require__(/*! ./dependenciesAny/dependenciesLoschmidt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLoschmidt.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loschmidtDependencies", function() { return _dependenciesAny_dependenciesLoschmidt_generated__WEBPACK_IMPORTED_MODULE_278__["loschmidtDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMagneticConstant_generated__WEBPACK_IMPORTED_MODULE_279__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMagneticConstant.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMagneticConstant.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticConstantDependencies", function() { return _dependenciesAny_dependenciesMagneticConstant_generated__WEBPACK_IMPORTED_MODULE_279__["magneticConstantDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMagneticFluxQuantum_generated__WEBPACK_IMPORTED_MODULE_280__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMagneticFluxQuantum.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMagneticFluxQuantum.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticFluxQuantumDependencies", function() { return _dependenciesAny_dependenciesMagneticFluxQuantum_generated__WEBPACK_IMPORTED_MODULE_280__["magneticFluxQuantumDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMolarMass_generated__WEBPACK_IMPORTED_MODULE_281__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMolarMass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarMass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassDependencies", function() { return _dependenciesAny_dependenciesMolarMass_generated__WEBPACK_IMPORTED_MODULE_281__["molarMassDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMolarMassC12_generated__WEBPACK_IMPORTED_MODULE_282__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMolarMassC12.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarMassC12.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassC12Dependencies", function() { return _dependenciesAny_dependenciesMolarMassC12_generated__WEBPACK_IMPORTED_MODULE_282__["molarMassC12Dependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMolarPlanckConstant_generated__WEBPACK_IMPORTED_MODULE_283__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMolarPlanckConstant.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarPlanckConstant.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarPlanckConstantDependencies", function() { return _dependenciesAny_dependenciesMolarPlanckConstant_generated__WEBPACK_IMPORTED_MODULE_283__["molarPlanckConstantDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMolarVolume_generated__WEBPACK_IMPORTED_MODULE_284__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMolarVolume.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarVolume.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarVolumeDependencies", function() { return _dependenciesAny_dependenciesMolarVolume_generated__WEBPACK_IMPORTED_MODULE_284__["molarVolumeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNeutronMass_generated__WEBPACK_IMPORTED_MODULE_285__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNeutronMass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNeutronMass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neutronMassDependencies", function() { return _dependenciesAny_dependenciesNeutronMass_generated__WEBPACK_IMPORTED_MODULE_285__["neutronMassDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesNuclearMagneton_generated__WEBPACK_IMPORTED_MODULE_286__ = __webpack_require__(/*! ./dependenciesAny/dependenciesNuclearMagneton.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNuclearMagneton.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nuclearMagnetonDependencies", function() { return _dependenciesAny_dependenciesNuclearMagneton_generated__WEBPACK_IMPORTED_MODULE_286__["nuclearMagnetonDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPlanckCharge_generated__WEBPACK_IMPORTED_MODULE_287__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPlanckCharge.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckCharge.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckChargeDependencies", function() { return _dependenciesAny_dependenciesPlanckCharge_generated__WEBPACK_IMPORTED_MODULE_287__["planckChargeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPlanckConstant_generated__WEBPACK_IMPORTED_MODULE_288__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPlanckConstant.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckConstant.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckConstantDependencies", function() { return _dependenciesAny_dependenciesPlanckConstant_generated__WEBPACK_IMPORTED_MODULE_288__["planckConstantDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPlanckLength_generated__WEBPACK_IMPORTED_MODULE_289__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPlanckLength.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckLength.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckLengthDependencies", function() { return _dependenciesAny_dependenciesPlanckLength_generated__WEBPACK_IMPORTED_MODULE_289__["planckLengthDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPlanckMass_generated__WEBPACK_IMPORTED_MODULE_290__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPlanckMass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckMass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckMassDependencies", function() { return _dependenciesAny_dependenciesPlanckMass_generated__WEBPACK_IMPORTED_MODULE_290__["planckMassDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPlanckTemperature_generated__WEBPACK_IMPORTED_MODULE_291__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPlanckTemperature.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckTemperature.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTemperatureDependencies", function() { return _dependenciesAny_dependenciesPlanckTemperature_generated__WEBPACK_IMPORTED_MODULE_291__["planckTemperatureDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesPlanckTime_generated__WEBPACK_IMPORTED_MODULE_292__ = __webpack_require__(/*! ./dependenciesAny/dependenciesPlanckTime.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckTime.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTimeDependencies", function() { return _dependenciesAny_dependenciesPlanckTime_generated__WEBPACK_IMPORTED_MODULE_292__["planckTimeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesProtonMass_generated__WEBPACK_IMPORTED_MODULE_293__ = __webpack_require__(/*! ./dependenciesAny/dependenciesProtonMass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesProtonMass.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "protonMassDependencies", function() { return _dependenciesAny_dependenciesProtonMass_generated__WEBPACK_IMPORTED_MODULE_293__["protonMassDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesQuantumOfCirculation_generated__WEBPACK_IMPORTED_MODULE_294__ = __webpack_require__(/*! ./dependenciesAny/dependenciesQuantumOfCirculation.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQuantumOfCirculation.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantumOfCirculationDependencies", function() { return _dependenciesAny_dependenciesQuantumOfCirculation_generated__WEBPACK_IMPORTED_MODULE_294__["quantumOfCirculationDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesReducedPlanckConstant_generated__WEBPACK_IMPORTED_MODULE_295__ = __webpack_require__(/*! ./dependenciesAny/dependenciesReducedPlanckConstant.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReducedPlanckConstant.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reducedPlanckConstantDependencies", function() { return _dependenciesAny_dependenciesReducedPlanckConstant_generated__WEBPACK_IMPORTED_MODULE_295__["reducedPlanckConstantDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRydberg_generated__WEBPACK_IMPORTED_MODULE_296__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRydberg.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRydberg.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rydbergDependencies", function() { return _dependenciesAny_dependenciesRydberg_generated__WEBPACK_IMPORTED_MODULE_296__["rydbergDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSackurTetrode_generated__WEBPACK_IMPORTED_MODULE_297__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSackurTetrode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSackurTetrode.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sackurTetrodeDependencies", function() { return _dependenciesAny_dependenciesSackurTetrode_generated__WEBPACK_IMPORTED_MODULE_297__["sackurTetrodeDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSecondRadiation_generated__WEBPACK_IMPORTED_MODULE_298__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSecondRadiation.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSecondRadiation.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secondRadiationDependencies", function() { return _dependenciesAny_dependenciesSecondRadiation_generated__WEBPACK_IMPORTED_MODULE_298__["secondRadiationDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSpeedOfLight_generated__WEBPACK_IMPORTED_MODULE_299__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSpeedOfLight.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSpeedOfLight.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "speedOfLightDependencies", function() { return _dependenciesAny_dependenciesSpeedOfLight_generated__WEBPACK_IMPORTED_MODULE_299__["speedOfLightDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesStefanBoltzmann_generated__WEBPACK_IMPORTED_MODULE_300__ = __webpack_require__(/*! ./dependenciesAny/dependenciesStefanBoltzmann.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStefanBoltzmann.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stefanBoltzmannDependencies", function() { return _dependenciesAny_dependenciesStefanBoltzmann_generated__WEBPACK_IMPORTED_MODULE_300__["stefanBoltzmannDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesThomsonCrossSection_generated__WEBPACK_IMPORTED_MODULE_301__ = __webpack_require__(/*! ./dependenciesAny/dependenciesThomsonCrossSection.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesThomsonCrossSection.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thomsonCrossSectionDependencies", function() { return _dependenciesAny_dependenciesThomsonCrossSection_generated__WEBPACK_IMPORTED_MODULE_301__["thomsonCrossSectionDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesVacuumImpedance_generated__WEBPACK_IMPORTED_MODULE_302__ = __webpack_require__(/*! ./dependenciesAny/dependenciesVacuumImpedance.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVacuumImpedance.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vacuumImpedanceDependencies", function() { return _dependenciesAny_dependenciesVacuumImpedance_generated__WEBPACK_IMPORTED_MODULE_302__["vacuumImpedanceDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesWeakMixingAngle_generated__WEBPACK_IMPORTED_MODULE_303__ = __webpack_require__(/*! ./dependenciesAny/dependenciesWeakMixingAngle.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesWeakMixingAngle.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "weakMixingAngleDependencies", function() { return _dependenciesAny_dependenciesWeakMixingAngle_generated__WEBPACK_IMPORTED_MODULE_303__["weakMixingAngleDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesWienDisplacement_generated__WEBPACK_IMPORTED_MODULE_304__ = __webpack_require__(/*! ./dependenciesAny/dependenciesWienDisplacement.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesWienDisplacement.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wienDisplacementDependencies", function() { return _dependenciesAny_dependenciesWienDisplacement_generated__WEBPACK_IMPORTED_MODULE_304__["wienDisplacementDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesApplyTransform_generated__WEBPACK_IMPORTED_MODULE_305__ = __webpack_require__(/*! ./dependenciesAny/dependenciesApplyTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApplyTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyTransformDependencies", function() { return _dependenciesAny_dependenciesApplyTransform_generated__WEBPACK_IMPORTED_MODULE_305__["applyTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesColumnTransform_generated__WEBPACK_IMPORTED_MODULE_306__ = __webpack_require__(/*! ./dependenciesAny/dependenciesColumnTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesColumnTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "columnTransformDependencies", function() { return _dependenciesAny_dependenciesColumnTransform_generated__WEBPACK_IMPORTED_MODULE_306__["columnTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesFilterTransform_generated__WEBPACK_IMPORTED_MODULE_307__ = __webpack_require__(/*! ./dependenciesAny/dependenciesFilterTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFilterTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterTransformDependencies", function() { return _dependenciesAny_dependenciesFilterTransform_generated__WEBPACK_IMPORTED_MODULE_307__["filterTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesForEachTransform_generated__WEBPACK_IMPORTED_MODULE_308__ = __webpack_require__(/*! ./dependenciesAny/dependenciesForEachTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesForEachTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachTransformDependencies", function() { return _dependenciesAny_dependenciesForEachTransform_generated__WEBPACK_IMPORTED_MODULE_308__["forEachTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesIndexTransform_generated__WEBPACK_IMPORTED_MODULE_309__ = __webpack_require__(/*! ./dependenciesAny/dependenciesIndexTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexTransformDependencies", function() { return _dependenciesAny_dependenciesIndexTransform_generated__WEBPACK_IMPORTED_MODULE_309__["indexTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMapTransform_generated__WEBPACK_IMPORTED_MODULE_310__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMapTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMapTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapTransformDependencies", function() { return _dependenciesAny_dependenciesMapTransform_generated__WEBPACK_IMPORTED_MODULE_310__["mapTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMaxTransform_generated__WEBPACK_IMPORTED_MODULE_311__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMaxTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMaxTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxTransformDependencies", function() { return _dependenciesAny_dependenciesMaxTransform_generated__WEBPACK_IMPORTED_MODULE_311__["maxTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMeanTransform_generated__WEBPACK_IMPORTED_MODULE_312__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMeanTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMeanTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanTransformDependencies", function() { return _dependenciesAny_dependenciesMeanTransform_generated__WEBPACK_IMPORTED_MODULE_312__["meanTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesMinTransform_generated__WEBPACK_IMPORTED_MODULE_313__ = __webpack_require__(/*! ./dependenciesAny/dependenciesMinTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMinTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minTransformDependencies", function() { return _dependenciesAny_dependenciesMinTransform_generated__WEBPACK_IMPORTED_MODULE_313__["minTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRangeTransform_generated__WEBPACK_IMPORTED_MODULE_314__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRangeTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeTransformDependencies", function() { return _dependenciesAny_dependenciesRangeTransform_generated__WEBPACK_IMPORTED_MODULE_314__["rangeTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesRowTransform_generated__WEBPACK_IMPORTED_MODULE_315__ = __webpack_require__(/*! ./dependenciesAny/dependenciesRowTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRowTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rowTransformDependencies", function() { return _dependenciesAny_dependenciesRowTransform_generated__WEBPACK_IMPORTED_MODULE_315__["rowTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSubsetTransform_generated__WEBPACK_IMPORTED_MODULE_316__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSubsetTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubsetTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subsetTransformDependencies", function() { return _dependenciesAny_dependenciesSubsetTransform_generated__WEBPACK_IMPORTED_MODULE_316__["subsetTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesConcatTransform_generated__WEBPACK_IMPORTED_MODULE_317__ = __webpack_require__(/*! ./dependenciesAny/dependenciesConcatTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcatTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatTransformDependencies", function() { return _dependenciesAny_dependenciesConcatTransform_generated__WEBPACK_IMPORTED_MODULE_317__["concatTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesDiffTransform_generated__WEBPACK_IMPORTED_MODULE_318__ = __webpack_require__(/*! ./dependenciesAny/dependenciesDiffTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiffTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diffTransformDependencies", function() { return _dependenciesAny_dependenciesDiffTransform_generated__WEBPACK_IMPORTED_MODULE_318__["diffTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesStdTransform_generated__WEBPACK_IMPORTED_MODULE_319__ = __webpack_require__(/*! ./dependenciesAny/dependenciesStdTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStdTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stdTransformDependencies", function() { return _dependenciesAny_dependenciesStdTransform_generated__WEBPACK_IMPORTED_MODULE_319__["stdTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesSumTransform_generated__WEBPACK_IMPORTED_MODULE_320__ = __webpack_require__(/*! ./dependenciesAny/dependenciesSumTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSumTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumTransformDependencies", function() { return _dependenciesAny_dependenciesSumTransform_generated__WEBPACK_IMPORTED_MODULE_320__["sumTransformDependencies"]; });

/* harmony import */ var _dependenciesAny_dependenciesVarianceTransform_generated__WEBPACK_IMPORTED_MODULE_321__ = __webpack_require__(/*! ./dependenciesAny/dependenciesVarianceTransform.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVarianceTransform.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "varianceTransformDependencies", function() { return _dependenciesAny_dependenciesVarianceTransform_generated__WEBPACK_IMPORTED_MODULE_321__["varianceTransformDependencies"]; });

/* harmony import */ var _allFactoriesAny_js__WEBPACK_IMPORTED_MODULE_322__ = __webpack_require__(/*! ./allFactoriesAny.js */ "../node_modules/mathjs/es/entry/allFactoriesAny.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "all", function() { return _allFactoriesAny_js__WEBPACK_IMPORTED_MODULE_322__["all"]; });

/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


























































































































































































































































 // eslint-disable-line camelcase










































































/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js ***!
  \************************************************************************************/
/*! exports provided: absDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "absDependencies", function() { return absDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var absDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createAbs: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createAbs"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAccessorNode.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAccessorNode.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: AccessorNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccessorNodeDependencies", function() { return AccessorNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var AccessorNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_1__["subsetDependencies"],
  createAccessorNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAccessorNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcos.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcos.generated.js ***!
  \*************************************************************************************/
/*! exports provided: acosDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acosDependencies", function() { return acosDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var acosDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createAcos: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAcos"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcosh.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcosh.generated.js ***!
  \**************************************************************************************/
/*! exports provided: acoshDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acoshDependencies", function() { return acoshDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var acoshDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createAcosh: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAcosh"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcot.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcot.generated.js ***!
  \*************************************************************************************/
/*! exports provided: acotDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acotDependencies", function() { return acotDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var acotDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createAcot: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAcot"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcoth.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcoth.generated.js ***!
  \**************************************************************************************/
/*! exports provided: acothDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acothDependencies", function() { return acothDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var acothDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createAcoth: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createAcoth"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcsc.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcsc.generated.js ***!
  \*************************************************************************************/
/*! exports provided: acscDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acscDependencies", function() { return acscDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var acscDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createAcsc: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createAcsc"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcsch.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAcsch.generated.js ***!
  \**************************************************************************************/
/*! exports provided: acschDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acschDependencies", function() { return acschDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var acschDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createAcsch: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAcsch"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js ***!
  \************************************************************************************/
/*! exports provided: addDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDependencies", function() { return addDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var addDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  SparseMatrixDependencies: _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["SparseMatrixDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_2__["addScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_3__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createAdd: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createAdd"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js ***!
  \******************************************************************************************/
/*! exports provided: addScalarDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addScalarDependencies", function() { return addScalarDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var addScalarDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createAddScalar: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createAddScalar"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAnd.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAnd.generated.js ***!
  \************************************************************************************/
/*! exports provided: andDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "andDependencies", function() { return andDependencies; });
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesNot_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesNot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNot.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesZeros.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var andDependencies = {
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  notDependencies: _dependenciesNot_generated__WEBPACK_IMPORTED_MODULE_2__["notDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  zerosDependencies: _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__["zerosDependencies"],
  createAnd: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createAnd"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApply.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApply.generated.js ***!
  \**************************************************************************************/
/*! exports provided: applyDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyDependencies", function() { return applyDependencies; });
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var applyDependencies = {
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__["isIntegerDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createApply: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createApply"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApplyTransform.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApplyTransform.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: applyTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyTransformDependencies", function() { return applyTransformDependencies; });
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var applyTransformDependencies = {
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__["isIntegerDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createApplyTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createApplyTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesArg.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesArg.generated.js ***!
  \************************************************************************************/
/*! exports provided: argDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "argDependencies", function() { return argDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var argDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createArg: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createArg"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesArrayNode.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesArrayNode.generated.js ***!
  \******************************************************************************************/
/*! exports provided: ArrayNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayNodeDependencies", function() { return ArrayNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var ArrayNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createArrayNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createArrayNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsec.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsec.generated.js ***!
  \*************************************************************************************/
/*! exports provided: asecDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asecDependencies", function() { return asecDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var asecDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createAsec: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createAsec"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsech.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsech.generated.js ***!
  \**************************************************************************************/
/*! exports provided: asechDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asechDependencies", function() { return asechDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var asechDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createAsech: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createAsech"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsin.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsin.generated.js ***!
  \*************************************************************************************/
/*! exports provided: asinDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinDependencies", function() { return asinDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var asinDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createAsin: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAsin"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsinh.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAsinh.generated.js ***!
  \**************************************************************************************/
/*! exports provided: asinhDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinhDependencies", function() { return asinhDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var asinhDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createAsinh: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createAsinh"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAssignmentNode.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAssignmentNode.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: AssignmentNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssignmentNodeDependencies", function() { return AssignmentNodeDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var AssignmentNodeDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_1__["NodeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_2__["subsetDependencies"],
  createAssignmentNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createAssignmentNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtan.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtan.generated.js ***!
  \*************************************************************************************/
/*! exports provided: atanDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanDependencies", function() { return atanDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var atanDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createAtan: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createAtan"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtan2.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtan2.generated.js ***!
  \**************************************************************************************/
/*! exports provided: atan2Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2Dependencies", function() { return atan2Dependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var atan2Dependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createAtan2: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createAtan2"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtanh.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtanh.generated.js ***!
  \**************************************************************************************/
/*! exports provided: atanhDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanhDependencies", function() { return atanhDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var atanhDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createAtanh: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAtanh"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtomicMass.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtomicMass.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: atomicMassDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atomicMassDependencies", function() { return atomicMassDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var atomicMassDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createAtomicMass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAtomicMass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAvogadro.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAvogadro.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: avogadroDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "avogadroDependencies", function() { return avogadroDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var avogadroDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createAvogadro: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createAvogadro"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBellNumbers.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBellNumbers.generated.js ***!
  \********************************************************************************************/
/*! exports provided: bellNumbersDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bellNumbersDependencies", function() { return bellNumbersDependencies; });
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesIsNegative.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js");
/* harmony import */ var _dependenciesStirlingS2_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesStirlingS2.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStirlingS2.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var bellNumbersDependencies = {
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"],
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_1__["isIntegerDependencies"],
  isNegativeDependencies: _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_2__["isNegativeDependencies"],
  stirlingS2Dependencies: _dependenciesStirlingS2_generated__WEBPACK_IMPORTED_MODULE_3__["stirlingS2Dependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createBellNumbers: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createBellNumbers"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: BigNumberDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BigNumberDependencies", function() { return BigNumberDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var BigNumberDependencies = {
  createBigNumberClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createBigNumberClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js ***!
  \******************************************************************************************/
/*! exports provided: bignumberDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bignumberDependencies", function() { return bignumberDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var bignumberDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createBignumber: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createBignumber"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitAnd.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitAnd.generated.js ***!
  \***************************************************************************************/
/*! exports provided: bitAndDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitAndDependencies", function() { return bitAndDependencies; });
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var bitAndDependencies = {
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createBitAnd: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createBitAnd"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitNot.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitNot.generated.js ***!
  \***************************************************************************************/
/*! exports provided: bitNotDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitNotDependencies", function() { return bitNotDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var bitNotDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createBitNot: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createBitNot"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitOr.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitOr.generated.js ***!
  \**************************************************************************************/
/*! exports provided: bitOrDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitOrDependencies", function() { return bitOrDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var bitOrDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createBitOr: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createBitOr"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitXor.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBitXor.generated.js ***!
  \***************************************************************************************/
/*! exports provided: bitXorDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitXorDependencies", function() { return bitXorDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var bitXorDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createBitXor: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createBitXor"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBlockNode.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBlockNode.generated.js ***!
  \******************************************************************************************/
/*! exports provided: BlockNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlockNodeDependencies", function() { return BlockNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _dependenciesResultSet_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesResultSet.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesResultSet.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var BlockNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  ResultSetDependencies: _dependenciesResultSet_generated__WEBPACK_IMPORTED_MODULE_1__["ResultSetDependencies"],
  createBlockNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createBlockNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBohrMagneton.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBohrMagneton.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: bohrMagnetonDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bohrMagnetonDependencies", function() { return bohrMagnetonDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var bohrMagnetonDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createBohrMagneton: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createBohrMagneton"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBohrRadius.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBohrRadius.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: bohrRadiusDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bohrRadiusDependencies", function() { return bohrRadiusDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var bohrRadiusDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createBohrRadius: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createBohrRadius"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBoltzmann.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBoltzmann.generated.js ***!
  \******************************************************************************************/
/*! exports provided: boltzmannDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boltzmannDependencies", function() { return boltzmannDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var boltzmannDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createBoltzmann: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createBoltzmann"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBoolean.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBoolean.generated.js ***!
  \****************************************************************************************/
/*! exports provided: booleanDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "booleanDependencies", function() { return booleanDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var booleanDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createBoolean: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createBoolean"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCatalan.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCatalan.generated.js ***!
  \****************************************************************************************/
/*! exports provided: catalanDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catalanDependencies", function() { return catalanDependencies; });
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCombinations.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinations.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesIsNegative.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var catalanDependencies = {
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"],
  combinationsDependencies: _dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_1__["combinationsDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__["divideScalarDependencies"],
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_3__["isIntegerDependencies"],
  isNegativeDependencies: _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_4__["isNegativeDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_5__["multiplyScalarDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createCatalan: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createCatalan"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCbrt.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCbrt.generated.js ***!
  \*************************************************************************************/
/*! exports provided: cbrtDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cbrtDependencies", function() { return cbrtDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesFractionClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js");
/* harmony import */ var _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesIsNegative.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var cbrtDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  FractionDependencies: _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_2__["FractionDependencies"],
  isNegativeDependencies: _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_3__["isNegativeDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  unaryMinusDependencies: _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_6__["unaryMinusDependencies"],
  createCbrt: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createCbrt"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCeil.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCeil.generated.js ***!
  \*************************************************************************************/
/*! exports provided: ceilDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceilDependencies", function() { return ceilDependencies; });
/* harmony import */ var _dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesRound.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRound.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var ceilDependencies = {
  roundDependencies: _dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_0__["roundDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCeil: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCeil"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesChain.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesChain.generated.js ***!
  \**************************************************************************************/
/*! exports provided: chainDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chainDependencies", function() { return chainDependencies; });
/* harmony import */ var _dependenciesChainClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesChainClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesChainClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var chainDependencies = {
  ChainDependencies: _dependenciesChainClass_generated__WEBPACK_IMPORTED_MODULE_0__["ChainDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createChain: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createChain"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesChainClass.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesChainClass.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: ChainDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChainDependencies", function() { return ChainDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var ChainDependencies = {
  createChainClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createChainClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesClassicalElectronRadius.generated.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesClassicalElectronRadius.generated.js ***!
  \********************************************************************************************************/
/*! exports provided: classicalElectronRadiusDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "classicalElectronRadiusDependencies", function() { return classicalElectronRadiusDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var classicalElectronRadiusDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createClassicalElectronRadius: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createClassicalElectronRadius"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesClone.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesClone.generated.js ***!
  \**************************************************************************************/
/*! exports provided: cloneDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneDependencies", function() { return cloneDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var cloneDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createClone: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createClone"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesColumn.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesColumn.generated.js ***!
  \***************************************************************************************/
/*! exports provided: columnDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "columnDependencies", function() { return columnDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesRange.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRange.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var columnDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  rangeDependencies: _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__["rangeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createColumn: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createColumn"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesColumnTransform.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesColumnTransform.generated.js ***!
  \************************************************************************************************/
/*! exports provided: columnTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "columnTransformDependencies", function() { return columnTransformDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesRange.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRange.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var columnTransformDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  rangeDependencies: _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__["rangeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createColumnTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createColumnTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinations.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinations.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: combinationsDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinationsDependencies", function() { return combinationsDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var combinationsDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createCombinations: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createCombinations"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinationsWithRep.generated.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinationsWithRep.generated.js ***!
  \****************************************************************************************************/
/*! exports provided: combinationsWithRepDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRepDependencies", function() { return combinationsWithRepDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var combinationsWithRepDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createCombinationsWithRep: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createCombinationsWithRep"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js ***!
  \****************************************************************************************/
/*! exports provided: compareDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareDependencies", function() { return compareDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesFractionClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var compareDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["DenseMatrixDependencies"],
  FractionDependencies: _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_2__["FractionDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_3__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createCompare: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createCompare"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: compareNaturalDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareNaturalDependencies", function() { return compareNaturalDependencies; });
/* harmony import */ var _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesCompare.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var compareNaturalDependencies = {
  compareDependencies: _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_0__["compareDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCompareNatural: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCompareNatural"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareText.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareText.generated.js ***!
  \********************************************************************************************/
/*! exports provided: compareTextDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareTextDependencies", function() { return compareTextDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var compareTextDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCompareText: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCompareText"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompile.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompile.generated.js ***!
  \****************************************************************************************/
/*! exports provided: compileDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileDependencies", function() { return compileDependencies; });
/* harmony import */ var _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var compileDependencies = {
  parseDependencies: _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__["parseDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCompile: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCompile"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplex.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplex.generated.js ***!
  \****************************************************************************************/
/*! exports provided: complexDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "complexDependencies", function() { return complexDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var complexDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createComplex: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createComplex"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: ComplexDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexDependencies", function() { return ComplexDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var ComplexDependencies = {
  createComplexClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createComplexClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComposition.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComposition.generated.js ***!
  \********************************************************************************************/
/*! exports provided: compositionDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compositionDependencies", function() { return compositionDependencies; });
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCombinations.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinations.generated.js");
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesIsNegative.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js");
/* harmony import */ var _dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesIsPositive.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPositive.generated.js");
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var compositionDependencies = {
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"],
  combinationsDependencies: _dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_1__["combinationsDependencies"],
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_2__["isIntegerDependencies"],
  isNegativeDependencies: _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_3__["isNegativeDependencies"],
  isPositiveDependencies: _dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_4__["isPositiveDependencies"],
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_5__["largerDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createComposition: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createComposition"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcat.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcat.generated.js ***!
  \***************************************************************************************/
/*! exports provided: concatDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatDependencies", function() { return concatDependencies; });
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var concatDependencies = {
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__["isIntegerDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createConcat: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createConcat"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcatTransform.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcatTransform.generated.js ***!
  \************************************************************************************************/
/*! exports provided: concatTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatTransformDependencies", function() { return concatTransformDependencies; });
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var concatTransformDependencies = {
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__["isIntegerDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createConcatTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createConcatTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConditionalNode.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConditionalNode.generated.js ***!
  \************************************************************************************************/
/*! exports provided: ConditionalNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConditionalNodeDependencies", function() { return ConditionalNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var ConditionalNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createConditionalNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createConditionalNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConductanceQuantum.generated.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConductanceQuantum.generated.js ***!
  \***************************************************************************************************/
/*! exports provided: conductanceQuantumDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conductanceQuantumDependencies", function() { return conductanceQuantumDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var conductanceQuantumDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createConductanceQuantum: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createConductanceQuantum"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConj.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConj.generated.js ***!
  \*************************************************************************************/
/*! exports provided: conjDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conjDependencies", function() { return conjDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var conjDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createConj: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createConj"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConstantNode.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConstantNode.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: ConstantNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstantNodeDependencies", function() { return ConstantNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var ConstantNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createConstantNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createConstantNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCos.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCos.generated.js ***!
  \************************************************************************************/
/*! exports provided: cosDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cosDependencies", function() { return cosDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var cosDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createCos: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createCos"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCosh.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCosh.generated.js ***!
  \*************************************************************************************/
/*! exports provided: coshDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coshDependencies", function() { return coshDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var coshDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createCosh: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createCosh"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCot.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCot.generated.js ***!
  \************************************************************************************/
/*! exports provided: cotDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cotDependencies", function() { return cotDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var cotDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCot: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCot"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCoth.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCoth.generated.js ***!
  \*************************************************************************************/
/*! exports provided: cothDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cothDependencies", function() { return cothDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var cothDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCoth: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCoth"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCoulomb.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCoulomb.generated.js ***!
  \****************************************************************************************/
/*! exports provided: coulombDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coulombDependencies", function() { return coulombDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var coulombDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createCoulomb: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCoulomb"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCreateUnit.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCreateUnit.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: createUnitDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnitDependencies", function() { return createUnitDependencies; });
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var createUnitDependencies = {
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_0__["UnitDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCreateUnit: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCreateUnit"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCross.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCross.generated.js ***!
  \**************************************************************************************/
/*! exports provided: crossDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "crossDependencies", function() { return crossDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var crossDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_1__["multiplyDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_2__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createCross: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createCross"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCsc.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCsc.generated.js ***!
  \************************************************************************************/
/*! exports provided: cscDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cscDependencies", function() { return cscDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var cscDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCsc: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCsc"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCsch.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCsch.generated.js ***!
  \*************************************************************************************/
/*! exports provided: cschDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cschDependencies", function() { return cschDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var cschDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createCsch: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createCsch"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCtranspose.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCtranspose.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: ctransposeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ctransposeDependencies", function() { return ctransposeDependencies; });
/* harmony import */ var _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesConj.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConj.generated.js");
/* harmony import */ var _dependenciesTranspose_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTranspose.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTranspose.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var ctransposeDependencies = {
  conjDependencies: _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_0__["conjDependencies"],
  transposeDependencies: _dependenciesTranspose_generated__WEBPACK_IMPORTED_MODULE_1__["transposeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createCtranspose: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createCtranspose"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCube.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCube.generated.js ***!
  \*************************************************************************************/
/*! exports provided: cubeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubeDependencies", function() { return cubeDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var cubeDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createCube: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createCube"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDeepEqual.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDeepEqual.generated.js ***!
  \******************************************************************************************/
/*! exports provided: deepEqualDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepEqualDependencies", function() { return deepEqualDependencies; });
/* harmony import */ var _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var deepEqualDependencies = {
  equalDependencies: _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_0__["equalDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createDeepEqual: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createDeepEqual"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js ***!
  \*************************************************************************************************/
/*! exports provided: DenseMatrixDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DenseMatrixDependencies", function() { return DenseMatrixDependencies; });
/* harmony import */ var _dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrixClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var DenseMatrixDependencies = {
  MatrixDependencies: _dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["MatrixDependencies"],
  createDenseMatrixClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createDenseMatrixClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDerivative.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDerivative.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: derivativeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "derivativeDependencies", function() { return derivativeDependencies; });
/* harmony import */ var _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesConstantNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConstantNode.generated.js");
/* harmony import */ var _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesFunctionNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionNode.generated.js");
/* harmony import */ var _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesOperatorNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOperatorNode.generated.js");
/* harmony import */ var _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesParenthesisNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParenthesisNode.generated.js");
/* harmony import */ var _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSymbolNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js");
/* harmony import */ var _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony import */ var _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesIsZero.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js");
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony import */ var _dependenciesSimplify_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesSimplify.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSimplify.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */












var derivativeDependencies = {
  ConstantNodeDependencies: _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_0__["ConstantNodeDependencies"],
  FunctionNodeDependencies: _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_1__["FunctionNodeDependencies"],
  OperatorNodeDependencies: _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_2__["OperatorNodeDependencies"],
  ParenthesisNodeDependencies: _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_3__["ParenthesisNodeDependencies"],
  SymbolNodeDependencies: _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_4__["SymbolNodeDependencies"],
  equalDependencies: _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_5__["equalDependencies"],
  isZeroDependencies: _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_6__["isZeroDependencies"],
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_7__["numericDependencies"],
  parseDependencies: _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_8__["parseDependencies"],
  simplifyDependencies: _dependenciesSimplify_generated__WEBPACK_IMPORTED_MODULE_9__["simplifyDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_10__["typedDependencies"],
  createDerivative: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__["createDerivative"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDet.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDet.generated.js ***!
  \************************************************************************************/
/*! exports provided: detDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detDependencies", function() { return detDependencies; });
/* harmony import */ var _dependenciesLup_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesLup.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLup.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var detDependencies = {
  lupDependencies: _dependenciesLup_generated__WEBPACK_IMPORTED_MODULE_0__["lupDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_2__["multiplyDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_3__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  unaryMinusDependencies: _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_5__["unaryMinusDependencies"],
  createDet: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createDet"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDeuteronMass.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDeuteronMass.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: deuteronMassDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deuteronMassDependencies", function() { return deuteronMassDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var deuteronMassDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createDeuteronMass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createDeuteronMass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiag.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiag.generated.js ***!
  \*************************************************************************************/
/*! exports provided: diagDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "diagDependencies", function() { return diagDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var diagDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  SparseMatrixDependencies: _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["SparseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createDiag: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createDiag"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiff.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiff.generated.js ***!
  \*************************************************************************************/
/*! exports provided: diffDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "diffDependencies", function() { return diffDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var diffDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  numberDependencies: _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_1__["numberDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_2__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createDiff: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createDiff"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiffTransform.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDiffTransform.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: diffTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "diffTransformDependencies", function() { return diffTransformDependencies; });
/* harmony import */ var _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesNumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var diffTransformDependencies = {
  bignumberDependencies: _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__["bignumberDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  numberDependencies: _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_2__["numberDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_3__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createDiffTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createDiffTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDistance.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDistance.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: distanceDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distanceDependencies", function() { return distanceDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */









var distanceDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__["addScalarDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__["divideScalarDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_3__["multiplyScalarDependencies"],
  sqrtDependencies: _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_4__["sqrtDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  unaryMinusDependencies: _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_7__["unaryMinusDependencies"],
  createDistance: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__["createDistance"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js ***!
  \***************************************************************************************/
/*! exports provided: divideDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divideDependencies", function() { return divideDependencies; });
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesInv.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInv.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var divideDependencies = {
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_0__["divideScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  invDependencies: _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_2__["invDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createDivide: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createDivide"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: divideScalarDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divideScalarDependencies", function() { return divideScalarDependencies; });
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var divideScalarDependencies = {
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_0__["numericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createDivideScalar: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createDivideScalar"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDot.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDot.generated.js ***!
  \************************************************************************************/
/*! exports provided: dotDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotDependencies", function() { return dotDependencies; });
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesConj.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConj.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var dotDependencies = {
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"],
  conjDependencies: _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_1__["conjDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_2__["multiplyScalarDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__["sizeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createDot: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createDot"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotDivide.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotDivide.generated.js ***!
  \******************************************************************************************/
/*! exports provided: dotDivideDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotDivideDependencies", function() { return dotDivideDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var dotDivideDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__["divideScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createDotDivide: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createDotDivide"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotMultiply.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotMultiply.generated.js ***!
  \********************************************************************************************/
/*! exports provided: dotMultiplyDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotMultiplyDependencies", function() { return dotMultiplyDependencies; });
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var dotMultiplyDependencies = {
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_2__["multiplyScalarDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createDotMultiply: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createDotMultiply"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotPow.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotPow.generated.js ***!
  \***************************************************************************************/
/*! exports provided: dotPowDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotPowDependencies", function() { return dotPowDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var dotPowDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  powDependencies: _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_3__["powDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createDotPow: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createDotPow"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesE.generated.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesE.generated.js ***!
  \**********************************************************************************/
/*! exports provided: eDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eDependencies", function() { return eDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var eDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createE: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createE"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEfimovFactor.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEfimovFactor.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: efimovFactorDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "efimovFactorDependencies", function() { return efimovFactorDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var efimovFactorDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createEfimovFactor: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createEfimovFactor"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEigs.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEigs.generated.js ***!
  \*************************************************************************************/
/*! exports provided: eigsDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eigsDependencies", function() { return eigsDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesAtan_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesAtan.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAtan.generated.js");
/* harmony import */ var _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony import */ var _dependenciesCos_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesCos.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCos.generated.js");
/* harmony import */ var _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony import */ var _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesInv.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInv.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSin_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesSin.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSin.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */















var eigsDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__["addDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_2__["addScalarDependencies"],
  atanDependencies: _dependenciesAtan_generated__WEBPACK_IMPORTED_MODULE_3__["atanDependencies"],
  bignumberDependencies: _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_4__["bignumberDependencies"],
  cosDependencies: _dependenciesCos_generated__WEBPACK_IMPORTED_MODULE_5__["cosDependencies"],
  equalDependencies: _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_6__["equalDependencies"],
  invDependencies: _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_7__["invDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_8__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_9__["multiplyDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_10__["multiplyScalarDependencies"],
  sinDependencies: _dependenciesSin_generated__WEBPACK_IMPORTED_MODULE_11__["sinDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_12__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_13__["typedDependencies"],
  createEigs: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_14__["createEigs"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElectricConstant.generated.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElectricConstant.generated.js ***!
  \*************************************************************************************************/
/*! exports provided: electricConstantDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "electricConstantDependencies", function() { return electricConstantDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var electricConstantDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createElectricConstant: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createElectricConstant"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElectronMass.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElectronMass.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: electronMassDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "electronMassDependencies", function() { return electronMassDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var electronMassDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createElectronMass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createElectronMass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElementaryCharge.generated.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesElementaryCharge.generated.js ***!
  \*************************************************************************************************/
/*! exports provided: elementaryChargeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementaryChargeDependencies", function() { return elementaryChargeDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var elementaryChargeDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createElementaryCharge: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createElementaryCharge"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js ***!
  \**************************************************************************************/
/*! exports provided: equalDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalDependencies", function() { return equalDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var equalDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createEqual: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createEqual"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js ***!
  \********************************************************************************************/
/*! exports provided: equalScalarDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalScalarDependencies", function() { return equalScalarDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var equalScalarDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createEqualScalar: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createEqualScalar"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualText.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualText.generated.js ***!
  \******************************************************************************************/
/*! exports provided: equalTextDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalTextDependencies", function() { return equalTextDependencies; });
/* harmony import */ var _dependenciesCompareText_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesCompareText.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareText.generated.js");
/* harmony import */ var _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIsZero.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var equalTextDependencies = {
  compareTextDependencies: _dependenciesCompareText_generated__WEBPACK_IMPORTED_MODULE_0__["compareTextDependencies"],
  isZeroDependencies: _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_1__["isZeroDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createEqualText: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createEqualText"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesErf.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesErf.generated.js ***!
  \************************************************************************************/
/*! exports provided: erfDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "erfDependencies", function() { return erfDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var erfDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createErf: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createErf"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEvaluate.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEvaluate.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: evaluateDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "evaluateDependencies", function() { return evaluateDependencies; });
/* harmony import */ var _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var evaluateDependencies = {
  parseDependencies: _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__["parseDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createEvaluate: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createEvaluate"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExp.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExp.generated.js ***!
  \************************************************************************************/
/*! exports provided: expDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expDependencies", function() { return expDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var expDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createExp: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createExp"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExpm.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExpm.generated.js ***!
  \*************************************************************************************/
/*! exports provided: expmDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expmDependencies", function() { return expmDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesIdentity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js");
/* harmony import */ var _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesInv.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInv.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var expmDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__["addDependencies"],
  identityDependencies: _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_2__["identityDependencies"],
  invDependencies: _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_3__["invDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createExpm: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createExpm"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExpm1.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesExpm1.generated.js ***!
  \**************************************************************************************/
/*! exports provided: expm1Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expm1Dependencies", function() { return expm1Dependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var expm1Dependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createExpm1: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createExpm1"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFactorial.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFactorial.generated.js ***!
  \******************************************************************************************/
/*! exports provided: factorialDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "factorialDependencies", function() { return factorialDependencies; });
/* harmony import */ var _dependenciesGamma_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesGamma.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGamma.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var factorialDependencies = {
  gammaDependencies: _dependenciesGamma_generated__WEBPACK_IMPORTED_MODULE_0__["gammaDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createFactorial: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFactorial"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFalse.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFalse.generated.js ***!
  \**************************************************************************************/
/*! exports provided: falseDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "falseDependencies", function() { return falseDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var falseDependencies = {
  createFalse: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createFalse"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFaraday.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFaraday.generated.js ***!
  \****************************************************************************************/
/*! exports provided: faradayDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faradayDependencies", function() { return faradayDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var faradayDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createFaraday: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFaraday"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFermiCoupling.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFermiCoupling.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: fermiCouplingDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fermiCouplingDependencies", function() { return fermiCouplingDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var fermiCouplingDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createFermiCoupling: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFermiCoupling"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFibonacciHeapClass.generated.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFibonacciHeapClass.generated.js ***!
  \***************************************************************************************************/
/*! exports provided: FibonacciHeapDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FibonacciHeapDependencies", function() { return FibonacciHeapDependencies; });
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var FibonacciHeapDependencies = {
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_0__["largerDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__["smallerDependencies"],
  createFibonacciHeapClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFibonacciHeapClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFilter.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFilter.generated.js ***!
  \***************************************************************************************/
/*! exports provided: filterDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterDependencies", function() { return filterDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var filterDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createFilter: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createFilter"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFilterTransform.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFilterTransform.generated.js ***!
  \************************************************************************************************/
/*! exports provided: filterTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterTransformDependencies", function() { return filterTransformDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var filterTransformDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createFilterTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createFilterTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFineStructure.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFineStructure.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: fineStructureDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fineStructureDependencies", function() { return fineStructureDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var fineStructureDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createFineStructure: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createFineStructure"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFirstRadiation.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFirstRadiation.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: firstRadiationDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstRadiationDependencies", function() { return firstRadiationDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var firstRadiationDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createFirstRadiation: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFirstRadiation"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFix.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFix.generated.js ***!
  \************************************************************************************/
/*! exports provided: fixDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixDependencies", function() { return fixDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesCeil_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCeil.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCeil.generated.js");
/* harmony import */ var _dependenciesFloor_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesFloor.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFloor.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var fixDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  ceilDependencies: _dependenciesCeil_generated__WEBPACK_IMPORTED_MODULE_1__["ceilDependencies"],
  floorDependencies: _dependenciesFloor_generated__WEBPACK_IMPORTED_MODULE_2__["floorDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createFix: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createFix"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFlatten.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFlatten.generated.js ***!
  \****************************************************************************************/
/*! exports provided: flattenDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flattenDependencies", function() { return flattenDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var flattenDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createFlatten: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFlatten"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFloor.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFloor.generated.js ***!
  \**************************************************************************************/
/*! exports provided: floorDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floorDependencies", function() { return floorDependencies; });
/* harmony import */ var _dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesRound.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRound.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var floorDependencies = {
  roundDependencies: _dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_0__["roundDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createFloor: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFloor"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesForEach.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesForEach.generated.js ***!
  \****************************************************************************************/
/*! exports provided: forEachDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachDependencies", function() { return forEachDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var forEachDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createForEach: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createForEach"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesForEachTransform.generated.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesForEachTransform.generated.js ***!
  \*************************************************************************************************/
/*! exports provided: forEachTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachTransformDependencies", function() { return forEachTransformDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var forEachTransformDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createForEachTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createForEachTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFormat.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFormat.generated.js ***!
  \***************************************************************************************/
/*! exports provided: formatDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDependencies", function() { return formatDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var formatDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createFormat: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createFormat"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFraction.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFraction.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: fractionDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fractionDependencies", function() { return fractionDependencies; });
/* harmony import */ var _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesFractionClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var fractionDependencies = {
  FractionDependencies: _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_0__["FractionDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createFraction: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFraction"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: FractionDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FractionDependencies", function() { return FractionDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var FractionDependencies = {
  createFractionClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createFractionClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionAssignmentNode.generated.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionAssignmentNode.generated.js ***!
  \*******************************************************************************************************/
/*! exports provided: FunctionAssignmentNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunctionAssignmentNodeDependencies", function() { return FunctionAssignmentNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var FunctionAssignmentNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createFunctionAssignmentNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFunctionAssignmentNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionNode.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionNode.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: FunctionNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunctionNodeDependencies", function() { return FunctionNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSymbolNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var FunctionNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  SymbolNodeDependencies: _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_1__["SymbolNodeDependencies"],
  createFunctionNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createFunctionNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGamma.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGamma.generated.js ***!
  \**************************************************************************************/
/*! exports provided: gammaDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gammaDependencies", function() { return gammaDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var gammaDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_2__["multiplyScalarDependencies"],
  powDependencies: _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_3__["powDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createGamma: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createGamma"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGasConstant.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGasConstant.generated.js ***!
  \********************************************************************************************/
/*! exports provided: gasConstantDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gasConstantDependencies", function() { return gasConstantDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var gasConstantDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createGasConstant: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createGasConstant"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGcd.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGcd.generated.js ***!
  \************************************************************************************/
/*! exports provided: gcdDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gcdDependencies", function() { return gcdDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var gcdDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createGcd: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createGcd"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGetMatrixDataType.generated.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGetMatrixDataType.generated.js ***!
  \**************************************************************************************************/
/*! exports provided: getMatrixDataTypeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataTypeDependencies", function() { return getMatrixDataTypeDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var getMatrixDataTypeDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createGetMatrixDataType: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createGetMatrixDataType"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGravitationConstant.generated.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGravitationConstant.generated.js ***!
  \****************************************************************************************************/
/*! exports provided: gravitationConstantDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gravitationConstantDependencies", function() { return gravitationConstantDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var gravitationConstantDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createGravitationConstant: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createGravitationConstant"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGravity.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesGravity.generated.js ***!
  \****************************************************************************************/
/*! exports provided: gravityDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gravityDependencies", function() { return gravityDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var gravityDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createGravity: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createGravity"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHartreeEnergy.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHartreeEnergy.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: hartreeEnergyDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hartreeEnergyDependencies", function() { return hartreeEnergyDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var hartreeEnergyDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createHartreeEnergy: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createHartreeEnergy"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHasNumericValue.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHasNumericValue.generated.js ***!
  \************************************************************************************************/
/*! exports provided: hasNumericValueDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasNumericValueDependencies", function() { return hasNumericValueDependencies; });
/* harmony import */ var _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIsNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var hasNumericValueDependencies = {
  isNumericDependencies: _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_0__["isNumericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createHasNumericValue: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createHasNumericValue"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHelp.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHelp.generated.js ***!
  \*************************************************************************************/
/*! exports provided: helpDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "helpDependencies", function() { return helpDependencies; });
/* harmony import */ var _dependenciesHelpClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesHelpClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHelpClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var helpDependencies = {
  HelpDependencies: _dependenciesHelpClass_generated__WEBPACK_IMPORTED_MODULE_0__["HelpDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createHelp: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createHelp"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHelpClass.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHelpClass.generated.js ***!
  \******************************************************************************************/
/*! exports provided: HelpDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HelpDependencies", function() { return HelpDependencies; });
/* harmony import */ var _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var HelpDependencies = {
  parseDependencies: _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__["parseDependencies"],
  createHelpClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createHelpClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHypot.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesHypot.generated.js ***!
  \**************************************************************************************/
/*! exports provided: hypotDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hypotDependencies", function() { return hypotDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesIsPositive.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPositive.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */









var hypotDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__["addScalarDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__["divideScalarDependencies"],
  isPositiveDependencies: _dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_3__["isPositiveDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyScalarDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_5__["smallerDependencies"],
  sqrtDependencies: _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_6__["sqrtDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_7__["typedDependencies"],
  createHypot: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__["createHypot"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesI.generated.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesI.generated.js ***!
  \**********************************************************************************/
/*! exports provided: iDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iDependencies", function() { return iDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var iDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  createI: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createI"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: identityDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identityDependencies", function() { return identityDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var identityDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["DenseMatrixDependencies"],
  SparseMatrixDependencies: _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__["SparseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createIdentity: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createIdentity"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIm.generated.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIm.generated.js ***!
  \***********************************************************************************/
/*! exports provided: imDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imDependencies", function() { return imDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var imDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIm: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIm"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesImmutableDenseMatrixClass.generated.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesImmutableDenseMatrixClass.generated.js ***!
  \**********************************************************************************************************/
/*! exports provided: ImmutableDenseMatrixDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImmutableDenseMatrixDependencies", function() { return ImmutableDenseMatrixDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var ImmutableDenseMatrixDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__["smallerDependencies"],
  createImmutableDenseMatrixClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createImmutableDenseMatrixClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndex.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndex.generated.js ***!
  \**************************************************************************************/
/*! exports provided: indexDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexDependencies", function() { return indexDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var indexDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createIndex: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createIndex"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: IndexDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexDependencies", function() { return IndexDependencies; });
/* harmony import */ var _dependenciesImmutableDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesImmutableDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesImmutableDenseMatrixClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var IndexDependencies = {
  ImmutableDenseMatrixDependencies: _dependenciesImmutableDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["ImmutableDenseMatrixDependencies"],
  createIndexClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIndexClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexNode.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexNode.generated.js ***!
  \******************************************************************************************/
/*! exports provided: IndexNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexNodeDependencies", function() { return IndexNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _dependenciesRangeClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesRangeClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeClass.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var IndexNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  RangeDependencies: _dependenciesRangeClass_generated__WEBPACK_IMPORTED_MODULE_1__["RangeDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__["sizeDependencies"],
  createIndexNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createIndexNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexTransform.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexTransform.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: indexTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexTransformDependencies", function() { return indexTransformDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var indexTransformDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  createIndexTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIndexTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInfinity.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInfinity.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: InfinityDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InfinityDependencies", function() { return InfinityDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var InfinityDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createInfinity: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createInfinity"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIntersect.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIntersect.generated.js ***!
  \******************************************************************************************/
/*! exports provided: intersectDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectDependencies", function() { return intersectDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */












var intersectDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__["addDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_2__["addScalarDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__["divideScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_4__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_5__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_6__["multiplyDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_7__["multiplyScalarDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_8__["smallerDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_9__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_10__["typedDependencies"],
  createIntersect: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__["createIntersect"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInv.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInv.generated.js ***!
  \************************************************************************************/
/*! exports provided: invDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invDependencies", function() { return invDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesDet_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDet.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDet.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesIdentity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */










var invDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__["addScalarDependencies"],
  detDependencies: _dependenciesDet_generated__WEBPACK_IMPORTED_MODULE_2__["detDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__["divideScalarDependencies"],
  identityDependencies: _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_4__["identityDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_5__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_6__["multiplyDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_7__["typedDependencies"],
  unaryMinusDependencies: _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_8__["unaryMinusDependencies"],
  createInv: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_9__["createInv"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInverseConductanceQuantum.generated.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInverseConductanceQuantum.generated.js ***!
  \**********************************************************************************************************/
/*! exports provided: inverseConductanceQuantumDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverseConductanceQuantumDependencies", function() { return inverseConductanceQuantumDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var inverseConductanceQuantumDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createInverseConductanceQuantum: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createInverseConductanceQuantum"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js ***!
  \******************************************************************************************/
/*! exports provided: isIntegerDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIntegerDependencies", function() { return isIntegerDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var isIntegerDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIsInteger: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIsInteger"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNaN.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNaN.generated.js ***!
  \**************************************************************************************/
/*! exports provided: isNaNDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNaNDependencies", function() { return isNaNDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var isNaNDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIsNaN: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIsNaN"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: isNegativeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNegativeDependencies", function() { return isNegativeDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var isNegativeDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIsNegative: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIsNegative"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js ***!
  \******************************************************************************************/
/*! exports provided: isNumericDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumericDependencies", function() { return isNumericDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var isNumericDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIsNumeric: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIsNumeric"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPositive.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPositive.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: isPositiveDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPositiveDependencies", function() { return isPositiveDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var isPositiveDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIsPositive: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIsPositive"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPrime.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPrime.generated.js ***!
  \****************************************************************************************/
/*! exports provided: isPrimeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrimeDependencies", function() { return isPrimeDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var isPrimeDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIsPrime: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIsPrime"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js ***!
  \***************************************************************************************/
/*! exports provided: isZeroDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isZeroDependencies", function() { return isZeroDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var isZeroDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createIsZero: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createIsZero"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKldivergence.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKldivergence.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: kldivergenceDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kldivergenceDependencies", function() { return kldivergenceDependencies; });
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesDotDivide_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDotDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDotDivide.generated.js");
/* harmony import */ var _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesIsNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js");
/* harmony import */ var _dependenciesLog_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesLog.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesSum_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesSum.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSum.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */









var kldivergenceDependencies = {
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_0__["divideDependencies"],
  dotDivideDependencies: _dependenciesDotDivide_generated__WEBPACK_IMPORTED_MODULE_1__["dotDivideDependencies"],
  isNumericDependencies: _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_2__["isNumericDependencies"],
  logDependencies: _dependenciesLog_generated__WEBPACK_IMPORTED_MODULE_3__["logDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_4__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_5__["multiplyDependencies"],
  sumDependencies: _dependenciesSum_generated__WEBPACK_IMPORTED_MODULE_6__["sumDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_7__["typedDependencies"],
  createKldivergence: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__["createKldivergence"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKlitzing.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKlitzing.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: klitzingDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "klitzingDependencies", function() { return klitzingDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var klitzingDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createKlitzing: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createKlitzing"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKron.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesKron.generated.js ***!
  \*************************************************************************************/
/*! exports provided: kronDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kronDependencies", function() { return kronDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var kronDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_1__["multiplyScalarDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createKron: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createKron"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLN10.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLN10.generated.js ***!
  \*************************************************************************************/
/*! exports provided: LN10Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LN10Dependencies", function() { return LN10Dependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var LN10Dependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createLN10: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createLN10"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLN2.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLN2.generated.js ***!
  \************************************************************************************/
/*! exports provided: LN2Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LN2Dependencies", function() { return LN2Dependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var LN2Dependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createLN2: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createLN2"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLOG10E.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLOG10E.generated.js ***!
  \***************************************************************************************/
/*! exports provided: LOG10EDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOG10EDependencies", function() { return LOG10EDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var LOG10EDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createLOG10E: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createLOG10E"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLOG2E.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLOG2E.generated.js ***!
  \**************************************************************************************/
/*! exports provided: LOG2EDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOG2EDependencies", function() { return LOG2EDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var LOG2EDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createLOG2E: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createLOG2E"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js ***!
  \***************************************************************************************/
/*! exports provided: largerDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "largerDependencies", function() { return largerDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var largerDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createLarger: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createLarger"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLargerEq.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLargerEq.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: largerEqDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "largerEqDependencies", function() { return largerEqDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var largerEqDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createLargerEq: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createLargerEq"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLcm.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLcm.generated.js ***!
  \************************************************************************************/
/*! exports provided: lcmDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lcmDependencies", function() { return lcmDependencies; });
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var lcmDependencies = {
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_0__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createLcm: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createLcm"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLeftShift.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLeftShift.generated.js ***!
  \******************************************************************************************/
/*! exports provided: leftShiftDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "leftShiftDependencies", function() { return leftShiftDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesZeros.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var leftShiftDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  zerosDependencies: _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__["zerosDependencies"],
  createLeftShift: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createLeftShift"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog.generated.js ***!
  \************************************************************************************/
/*! exports provided: logDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logDependencies", function() { return logDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var logDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__["divideScalarDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createLog: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createLog"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog10.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog10.generated.js ***!
  \**************************************************************************************/
/*! exports provided: log10Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log10Dependencies", function() { return log10Dependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var log10Dependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createLog10: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createLog10"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog1p.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog1p.generated.js ***!
  \**************************************************************************************/
/*! exports provided: log1pDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log1pDependencies", function() { return log1pDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesLog_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesLog.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var log1pDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__["divideScalarDependencies"],
  logDependencies: _dependenciesLog_generated__WEBPACK_IMPORTED_MODULE_2__["logDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createLog1p: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createLog1p"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog2.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLog2.generated.js ***!
  \*************************************************************************************/
/*! exports provided: log2Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log2Dependencies", function() { return log2Dependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var log2Dependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createLog2: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createLog2"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLoschmidt.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLoschmidt.generated.js ***!
  \******************************************************************************************/
/*! exports provided: loschmidtDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loschmidtDependencies", function() { return loschmidtDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var loschmidtDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createLoschmidt: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createLoschmidt"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLsolve.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLsolve.generated.js ***!
  \***************************************************************************************/
/*! exports provided: lsolveDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lsolveDependencies", function() { return lsolveDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var lsolveDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__["divideScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyScalarDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createLsolve: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createLsolve"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLup.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLup.generated.js ***!
  \************************************************************************************/
/*! exports provided: lupDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lupDependencies", function() { return lupDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesSpaClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSpaClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSpaClass.generated.js");
/* harmony import */ var _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */














var lupDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  SpaDependencies: _dependenciesSpaClass_generated__WEBPACK_IMPORTED_MODULE_1__["SpaDependencies"],
  SparseMatrixDependencies: _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__["SparseMatrixDependencies"],
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_3__["absDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_4__["addScalarDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_5__["divideScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_6__["equalScalarDependencies"],
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_7__["largerDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_8__["matrixDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_9__["multiplyScalarDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_10__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_11__["typedDependencies"],
  unaryMinusDependencies: _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_12__["unaryMinusDependencies"],
  createLup: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_13__["createLup"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLusolve.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLusolve.generated.js ***!
  \****************************************************************************************/
/*! exports provided: lusolveDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lusolveDependencies", function() { return lusolveDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesLsolve_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesLsolve.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLsolve.generated.js");
/* harmony import */ var _dependenciesLup_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesLup.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLup.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesSlu_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSlu.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSlu.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUsolve_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesUsolve.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUsolve.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var lusolveDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  lsolveDependencies: _dependenciesLsolve_generated__WEBPACK_IMPORTED_MODULE_1__["lsolveDependencies"],
  lupDependencies: _dependenciesLup_generated__WEBPACK_IMPORTED_MODULE_2__["lupDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  sluDependencies: _dependenciesSlu_generated__WEBPACK_IMPORTED_MODULE_4__["sluDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  usolveDependencies: _dependenciesUsolve_generated__WEBPACK_IMPORTED_MODULE_6__["usolveDependencies"],
  createLusolve: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createLusolve"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMad.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMad.generated.js ***!
  \************************************************************************************/
/*! exports provided: madDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "madDependencies", function() { return madDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesMap_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMap.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMap.generated.js");
/* harmony import */ var _dependenciesMedian_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMedian.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMedian.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var madDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  mapDependencies: _dependenciesMap_generated__WEBPACK_IMPORTED_MODULE_1__["mapDependencies"],
  medianDependencies: _dependenciesMedian_generated__WEBPACK_IMPORTED_MODULE_2__["medianDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_3__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createMad: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createMad"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMagneticConstant.generated.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMagneticConstant.generated.js ***!
  \*************************************************************************************************/
/*! exports provided: magneticConstantDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magneticConstantDependencies", function() { return magneticConstantDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var magneticConstantDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createMagneticConstant: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createMagneticConstant"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMagneticFluxQuantum.generated.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMagneticFluxQuantum.generated.js ***!
  \****************************************************************************************************/
/*! exports provided: magneticFluxQuantumDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magneticFluxQuantumDependencies", function() { return magneticFluxQuantumDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var magneticFluxQuantumDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createMagneticFluxQuantum: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createMagneticFluxQuantum"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMap.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMap.generated.js ***!
  \************************************************************************************/
/*! exports provided: mapDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapDependencies", function() { return mapDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var mapDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createMap: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createMap"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMapTransform.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMapTransform.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: mapTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapTransformDependencies", function() { return mapTransformDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var mapTransformDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createMapTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createMapTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js ***!
  \***************************************************************************************/
/*! exports provided: matrixDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrixDependencies", function() { return matrixDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrixClass.generated.js");
/* harmony import */ var _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var matrixDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  MatrixDependencies: _dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["MatrixDependencies"],
  SparseMatrixDependencies: _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__["SparseMatrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createMatrix: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createMatrix"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrixClass.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrixClass.generated.js ***!
  \********************************************************************************************/
/*! exports provided: MatrixDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatrixDependencies", function() { return MatrixDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var MatrixDependencies = {
  createMatrixClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createMatrixClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMax.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMax.generated.js ***!
  \************************************************************************************/
/*! exports provided: maxDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxDependencies", function() { return maxDependencies; });
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var maxDependencies = {
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_0__["largerDependencies"],
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__["numericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createMax: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createMax"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMaxTransform.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMaxTransform.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: maxTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxTransformDependencies", function() { return maxTransformDependencies; });
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var maxTransformDependencies = {
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_0__["largerDependencies"],
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__["numericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createMaxTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createMaxTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMean.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMean.generated.js ***!
  \*************************************************************************************/
/*! exports provided: meanDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "meanDependencies", function() { return meanDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var meanDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_1__["divideDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createMean: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createMean"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMeanTransform.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMeanTransform.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: meanTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "meanTransformDependencies", function() { return meanTransformDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var meanTransformDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_1__["divideDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createMeanTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createMeanTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMedian.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMedian.generated.js ***!
  \***************************************************************************************/
/*! exports provided: medianDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "medianDependencies", function() { return medianDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCompare.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesPartitionSelect_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesPartitionSelect.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPartitionSelect.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var medianDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  compareDependencies: _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_1__["compareDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_2__["divideDependencies"],
  partitionSelectDependencies: _dependenciesPartitionSelect_generated__WEBPACK_IMPORTED_MODULE_3__["partitionSelectDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createMedian: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createMedian"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMin.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMin.generated.js ***!
  \************************************************************************************/
/*! exports provided: minDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minDependencies", function() { return minDependencies; });
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var minDependencies = {
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_0__["numericDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__["smallerDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createMin: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createMin"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMinTransform.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMinTransform.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: minTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minTransformDependencies", function() { return minTransformDependencies; });
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var minTransformDependencies = {
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_0__["numericDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_1__["smallerDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createMinTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createMinTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMod.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMod.generated.js ***!
  \************************************************************************************/
/*! exports provided: modDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modDependencies", function() { return modDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var modDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createMod: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createMod"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMode.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMode.generated.js ***!
  \*************************************************************************************/
/*! exports provided: modeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modeDependencies", function() { return modeDependencies; });
/* harmony import */ var _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIsNaN.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNaN.generated.js");
/* harmony import */ var _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIsNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var modeDependencies = {
  isNaNDependencies: _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_0__["isNaNDependencies"],
  isNumericDependencies: _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_1__["isNumericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createMode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createMode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarMass.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarMass.generated.js ***!
  \******************************************************************************************/
/*! exports provided: molarMassDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarMassDependencies", function() { return molarMassDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var molarMassDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createMolarMass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createMolarMass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarMassC12.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarMassC12.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: molarMassC12Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarMassC12Dependencies", function() { return molarMassC12Dependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var molarMassC12Dependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createMolarMassC12: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createMolarMassC12"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarPlanckConstant.generated.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarPlanckConstant.generated.js ***!
  \****************************************************************************************************/
/*! exports provided: molarPlanckConstantDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarPlanckConstantDependencies", function() { return molarPlanckConstantDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var molarPlanckConstantDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createMolarPlanckConstant: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createMolarPlanckConstant"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarVolume.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMolarVolume.generated.js ***!
  \********************************************************************************************/
/*! exports provided: molarVolumeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarVolumeDependencies", function() { return molarVolumeDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var molarVolumeDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createMolarVolume: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createMolarVolume"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultinomial.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultinomial.generated.js ***!
  \********************************************************************************************/
/*! exports provided: multinomialDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multinomialDependencies", function() { return multinomialDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesFactorial.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFactorial.generated.js");
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesIsPositive.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsPositive.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var multinomialDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_1__["divideDependencies"],
  factorialDependencies: _dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_2__["factorialDependencies"],
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_3__["isIntegerDependencies"],
  isPositiveDependencies: _dependenciesIsPositive_generated__WEBPACK_IMPORTED_MODULE_4__["isPositiveDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_5__["multiplyDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createMultinomial: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createMultinomial"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: multiplyDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyDependencies", function() { return multiplyDependencies; });
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesDot_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDot.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDot.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var multiplyDependencies = {
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"],
  dotDependencies: _dependenciesDot_generated__WEBPACK_IMPORTED_MODULE_1__["dotDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyScalarDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createMultiply: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createMultiply"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: multiplyScalarDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarDependencies", function() { return multiplyScalarDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var multiplyScalarDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createMultiplyScalar: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createMultiplyScalar"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNaN.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNaN.generated.js ***!
  \************************************************************************************/
/*! exports provided: NaNDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NaNDependencies", function() { return NaNDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var NaNDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createNaN: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createNaN"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNeutronMass.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNeutronMass.generated.js ***!
  \********************************************************************************************/
/*! exports provided: neutronMassDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "neutronMassDependencies", function() { return neutronMassDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var neutronMassDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createNeutronMass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createNeutronMass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js ***!
  \*************************************************************************************/
/*! exports provided: NodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeDependencies", function() { return NodeDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var NodeDependencies = {
  createNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNorm.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNorm.generated.js ***!
  \*************************************************************************************/
/*! exports provided: normDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normDependencies", function() { return normDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesConj.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConj.generated.js");
/* harmony import */ var _dependenciesCtranspose_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesCtranspose.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCtranspose.generated.js");
/* harmony import */ var _dependenciesEigs_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesEigs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEigs.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */














var normDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__["addDependencies"],
  conjDependencies: _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_2__["conjDependencies"],
  ctransposeDependencies: _dependenciesCtranspose_generated__WEBPACK_IMPORTED_MODULE_3__["ctransposeDependencies"],
  eigsDependencies: _dependenciesEigs_generated__WEBPACK_IMPORTED_MODULE_4__["eigsDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_5__["equalScalarDependencies"],
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_6__["largerDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_7__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_8__["multiplyDependencies"],
  powDependencies: _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_9__["powDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_10__["smallerDependencies"],
  sqrtDependencies: _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_11__["sqrtDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_12__["typedDependencies"],
  createNorm: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_13__["createNorm"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNot.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNot.generated.js ***!
  \************************************************************************************/
/*! exports provided: notDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notDependencies", function() { return notDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var notDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createNot: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createNot"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNthRoot.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNthRoot.generated.js ***!
  \****************************************************************************************/
/*! exports provided: nthRootDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nthRootDependencies", function() { return nthRootDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var nthRootDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createNthRoot: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createNthRoot"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNthRoots.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNthRoots.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: nthRootsDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nthRootsDependencies", function() { return nthRootsDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var nthRootsDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__["divideScalarDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createNthRoots: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createNthRoots"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNuclearMagneton.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNuclearMagneton.generated.js ***!
  \************************************************************************************************/
/*! exports provided: nuclearMagnetonDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nuclearMagnetonDependencies", function() { return nuclearMagnetonDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var nuclearMagnetonDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createNuclearMagneton: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createNuclearMagneton"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNull.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNull.generated.js ***!
  \*************************************************************************************/
/*! exports provided: nullDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nullDependencies", function() { return nullDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var nullDependencies = {
  createNull: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createNull"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js ***!
  \***************************************************************************************/
/*! exports provided: numberDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberDependencies", function() { return numberDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var numberDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createNumber: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createNumber"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js ***!
  \****************************************************************************************/
/*! exports provided: numericDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numericDependencies", function() { return numericDependencies; });
/* harmony import */ var _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony import */ var _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesFraction.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFraction.generated.js");
/* harmony import */ var _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesNumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var numericDependencies = {
  bignumberDependencies: _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__["bignumberDependencies"],
  fractionDependencies: _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__["fractionDependencies"],
  numberDependencies: _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_2__["numberDependencies"],
  createNumeric: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createNumeric"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesObjectNode.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesObjectNode.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: ObjectNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectNodeDependencies", function() { return ObjectNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var ObjectNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createObjectNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createObjectNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOnes.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOnes.generated.js ***!
  \*************************************************************************************/
/*! exports provided: onesDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onesDependencies", function() { return onesDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var onesDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createOnes: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createOnes"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOperatorNode.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOperatorNode.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: OperatorNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperatorNodeDependencies", function() { return OperatorNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var OperatorNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createOperatorNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createOperatorNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOr.generated.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOr.generated.js ***!
  \***********************************************************************************/
/*! exports provided: orDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orDependencies", function() { return orDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var orDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createOr: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createOr"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParenthesisNode.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParenthesisNode.generated.js ***!
  \************************************************************************************************/
/*! exports provided: ParenthesisNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParenthesisNodeDependencies", function() { return ParenthesisNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var ParenthesisNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createParenthesisNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createParenthesisNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js ***!
  \**************************************************************************************/
/*! exports provided: parseDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseDependencies", function() { return parseDependencies; });
/* harmony import */ var _dependenciesAccessorNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAccessorNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAccessorNode.generated.js");
/* harmony import */ var _dependenciesArrayNode_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesArrayNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesArrayNode.generated.js");
/* harmony import */ var _dependenciesAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesAssignmentNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAssignmentNode.generated.js");
/* harmony import */ var _dependenciesBlockNode_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesBlockNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBlockNode.generated.js");
/* harmony import */ var _dependenciesConditionalNode_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesConditionalNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConditionalNode.generated.js");
/* harmony import */ var _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesConstantNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConstantNode.generated.js");
/* harmony import */ var _dependenciesFunctionAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesFunctionAssignmentNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionAssignmentNode.generated.js");
/* harmony import */ var _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesFunctionNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionNode.generated.js");
/* harmony import */ var _dependenciesIndexNode_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesIndexNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexNode.generated.js");
/* harmony import */ var _dependenciesObjectNode_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesObjectNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesObjectNode.generated.js");
/* harmony import */ var _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesOperatorNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOperatorNode.generated.js");
/* harmony import */ var _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesParenthesisNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParenthesisNode.generated.js");
/* harmony import */ var _dependenciesRangeNode_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesRangeNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeNode.generated.js");
/* harmony import */ var _dependenciesRelationalNode_generated__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dependenciesRelationalNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRelationalNode.generated.js");
/* harmony import */ var _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dependenciesSymbolNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js");
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


















var parseDependencies = {
  AccessorNodeDependencies: _dependenciesAccessorNode_generated__WEBPACK_IMPORTED_MODULE_0__["AccessorNodeDependencies"],
  ArrayNodeDependencies: _dependenciesArrayNode_generated__WEBPACK_IMPORTED_MODULE_1__["ArrayNodeDependencies"],
  AssignmentNodeDependencies: _dependenciesAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_2__["AssignmentNodeDependencies"],
  BlockNodeDependencies: _dependenciesBlockNode_generated__WEBPACK_IMPORTED_MODULE_3__["BlockNodeDependencies"],
  ConditionalNodeDependencies: _dependenciesConditionalNode_generated__WEBPACK_IMPORTED_MODULE_4__["ConditionalNodeDependencies"],
  ConstantNodeDependencies: _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_5__["ConstantNodeDependencies"],
  FunctionAssignmentNodeDependencies: _dependenciesFunctionAssignmentNode_generated__WEBPACK_IMPORTED_MODULE_6__["FunctionAssignmentNodeDependencies"],
  FunctionNodeDependencies: _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_7__["FunctionNodeDependencies"],
  IndexNodeDependencies: _dependenciesIndexNode_generated__WEBPACK_IMPORTED_MODULE_8__["IndexNodeDependencies"],
  ObjectNodeDependencies: _dependenciesObjectNode_generated__WEBPACK_IMPORTED_MODULE_9__["ObjectNodeDependencies"],
  OperatorNodeDependencies: _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_10__["OperatorNodeDependencies"],
  ParenthesisNodeDependencies: _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_11__["ParenthesisNodeDependencies"],
  RangeNodeDependencies: _dependenciesRangeNode_generated__WEBPACK_IMPORTED_MODULE_12__["RangeNodeDependencies"],
  RelationalNodeDependencies: _dependenciesRelationalNode_generated__WEBPACK_IMPORTED_MODULE_13__["RelationalNodeDependencies"],
  SymbolNodeDependencies: _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_14__["SymbolNodeDependencies"],
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_15__["numericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_16__["typedDependencies"],
  createParse: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_17__["createParse"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParser.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParser.generated.js ***!
  \***************************************************************************************/
/*! exports provided: parserDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parserDependencies", function() { return parserDependencies; });
/* harmony import */ var _dependenciesParserClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesParserClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParserClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var parserDependencies = {
  ParserDependencies: _dependenciesParserClass_generated__WEBPACK_IMPORTED_MODULE_0__["ParserDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createParser: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createParser"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParserClass.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParserClass.generated.js ***!
  \********************************************************************************************/
/*! exports provided: ParserDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParserDependencies", function() { return ParserDependencies; });
/* harmony import */ var _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var ParserDependencies = {
  parseDependencies: _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_0__["parseDependencies"],
  createParserClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createParserClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPartitionSelect.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPartitionSelect.generated.js ***!
  \************************************************************************************************/
/*! exports provided: partitionSelectDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partitionSelectDependencies", function() { return partitionSelectDependencies; });
/* harmony import */ var _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesCompare.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js");
/* harmony import */ var _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIsNaN.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNaN.generated.js");
/* harmony import */ var _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesIsNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var partitionSelectDependencies = {
  compareDependencies: _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_0__["compareDependencies"],
  isNaNDependencies: _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_1__["isNaNDependencies"],
  isNumericDependencies: _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_2__["isNumericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createPartitionSelect: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createPartitionSelect"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPermutations.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPermutations.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: permutationsDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "permutationsDependencies", function() { return permutationsDependencies; });
/* harmony import */ var _dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesFactorial.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFactorial.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var permutationsDependencies = {
  factorialDependencies: _dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_0__["factorialDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createPermutations: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createPermutations"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPhi.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPhi.generated.js ***!
  \************************************************************************************/
/*! exports provided: phiDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phiDependencies", function() { return phiDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var phiDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createPhi: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createPhi"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPi.generated.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPi.generated.js ***!
  \***********************************************************************************/
/*! exports provided: piDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "piDependencies", function() { return piDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var piDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createPi: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createPi"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPickRandom.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPickRandom.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: pickRandomDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickRandomDependencies", function() { return pickRandomDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var pickRandomDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createPickRandom: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createPickRandom"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckCharge.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckCharge.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: planckChargeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckChargeDependencies", function() { return planckChargeDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var planckChargeDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createPlanckCharge: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createPlanckCharge"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckConstant.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckConstant.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: planckConstantDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckConstantDependencies", function() { return planckConstantDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var planckConstantDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createPlanckConstant: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createPlanckConstant"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckLength.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckLength.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: planckLengthDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckLengthDependencies", function() { return planckLengthDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var planckLengthDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createPlanckLength: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createPlanckLength"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckMass.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckMass.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: planckMassDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckMassDependencies", function() { return planckMassDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var planckMassDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createPlanckMass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createPlanckMass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckTemperature.generated.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckTemperature.generated.js ***!
  \**************************************************************************************************/
/*! exports provided: planckTemperatureDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckTemperatureDependencies", function() { return planckTemperatureDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var planckTemperatureDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createPlanckTemperature: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createPlanckTemperature"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckTime.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPlanckTime.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: planckTimeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckTimeDependencies", function() { return planckTimeDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var planckTimeDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createPlanckTime: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createPlanckTime"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js ***!
  \************************************************************************************/
/*! exports provided: powDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "powDependencies", function() { return powDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesFraction.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFraction.generated.js");
/* harmony import */ var _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesIdentity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesNumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var powDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  fractionDependencies: _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__["fractionDependencies"],
  identityDependencies: _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_2__["identityDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyDependencies"],
  numberDependencies: _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_5__["numberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createPow: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createPow"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPrint.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPrint.generated.js ***!
  \**************************************************************************************/
/*! exports provided: printDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "printDependencies", function() { return printDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var printDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createPrint: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createPrint"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesProd.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesProd.generated.js ***!
  \*************************************************************************************/
/*! exports provided: prodDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prodDependencies", function() { return prodDependencies; });
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var prodDependencies = {
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_0__["multiplyScalarDependencies"],
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__["numericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createProd: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createProd"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesProtonMass.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesProtonMass.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: protonMassDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "protonMassDependencies", function() { return protonMassDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var protonMassDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createProtonMass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createProtonMass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQr.generated.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQr.generated.js ***!
  \***********************************************************************************/
/*! exports provided: qrDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "qrDependencies", function() { return qrDependencies; });
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesComplex_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplex.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplex.generated.js");
/* harmony import */ var _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesConj.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConj.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony import */ var _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesIdentity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js");
/* harmony import */ var _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesIsZero.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSign_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesSign.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSign.generated.js");
/* harmony import */ var _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony import */ var _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dependenciesZeros.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */
















var qrDependencies = {
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"],
  complexDependencies: _dependenciesComplex_generated__WEBPACK_IMPORTED_MODULE_1__["complexDependencies"],
  conjDependencies: _dependenciesConj_generated__WEBPACK_IMPORTED_MODULE_2__["conjDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__["divideScalarDependencies"],
  equalDependencies: _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_4__["equalDependencies"],
  identityDependencies: _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_5__["identityDependencies"],
  isZeroDependencies: _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_6__["isZeroDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_7__["matrixDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_8__["multiplyScalarDependencies"],
  signDependencies: _dependenciesSign_generated__WEBPACK_IMPORTED_MODULE_9__["signDependencies"],
  sqrtDependencies: _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_10__["sqrtDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_11__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_12__["typedDependencies"],
  unaryMinusDependencies: _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_13__["unaryMinusDependencies"],
  zerosDependencies: _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_14__["zerosDependencies"],
  createQr: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_15__["createQr"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQuantileSeq.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQuantileSeq.generated.js ***!
  \********************************************************************************************/
/*! exports provided: quantileSeqDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantileSeqDependencies", function() { return quantileSeqDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCompare.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesPartitionSelect_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesPartitionSelect.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPartitionSelect.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var quantileSeqDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  compareDependencies: _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_1__["compareDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_2__["multiplyDependencies"],
  partitionSelectDependencies: _dependenciesPartitionSelect_generated__WEBPACK_IMPORTED_MODULE_3__["partitionSelectDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createQuantileSeq: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createQuantileSeq"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQuantumOfCirculation.generated.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesQuantumOfCirculation.generated.js ***!
  \*****************************************************************************************************/
/*! exports provided: quantumOfCirculationDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantumOfCirculationDependencies", function() { return quantumOfCirculationDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var quantumOfCirculationDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createQuantumOfCirculation: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createQuantumOfCirculation"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRandom.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRandom.generated.js ***!
  \***************************************************************************************/
/*! exports provided: randomDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomDependencies", function() { return randomDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var randomDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createRandom: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createRandom"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRandomInt.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRandomInt.generated.js ***!
  \******************************************************************************************/
/*! exports provided: randomIntDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomIntDependencies", function() { return randomIntDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var randomIntDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createRandomInt: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createRandomInt"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRange.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRange.generated.js ***!
  \**************************************************************************************/
/*! exports provided: rangeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeDependencies", function() { return rangeDependencies; });
/* harmony import */ var _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesLargerEq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLargerEq.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _dependenciesSmallerEq_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSmallerEq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmallerEq.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var rangeDependencies = {
  bignumberDependencies: _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__["bignumberDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_2__["largerDependencies"],
  largerEqDependencies: _dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_3__["largerEqDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_4__["smallerDependencies"],
  smallerEqDependencies: _dependenciesSmallerEq_generated__WEBPACK_IMPORTED_MODULE_5__["smallerEqDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createRange: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createRange"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeClass.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeClass.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: RangeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeDependencies", function() { return RangeDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var RangeDependencies = {
  createRangeClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createRangeClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeNode.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeNode.generated.js ***!
  \******************************************************************************************/
/*! exports provided: RangeNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeNodeDependencies", function() { return RangeNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var RangeNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createRangeNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createRangeNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeTransform.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRangeTransform.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: rangeTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeTransformDependencies", function() { return rangeTransformDependencies; });
/* harmony import */ var _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesLargerEq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLargerEq.generated.js");
/* harmony import */ var _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSmaller.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js");
/* harmony import */ var _dependenciesSmallerEq_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSmallerEq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmallerEq.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var rangeTransformDependencies = {
  bignumberDependencies: _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__["bignumberDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_2__["largerDependencies"],
  largerEqDependencies: _dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_3__["largerEqDependencies"],
  smallerDependencies: _dependenciesSmaller_generated__WEBPACK_IMPORTED_MODULE_4__["smallerDependencies"],
  smallerEqDependencies: _dependenciesSmallerEq_generated__WEBPACK_IMPORTED_MODULE_5__["smallerEqDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createRangeTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createRangeTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRationalize.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRationalize.generated.js ***!
  \********************************************************************************************/
/*! exports provided: rationalizeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rationalizeDependencies", function() { return rationalizeDependencies; });
/* harmony import */ var _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony import */ var _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesFraction.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFraction.generated.js");
/* harmony import */ var _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesConstantNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConstantNode.generated.js");
/* harmony import */ var _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesFunctionNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionNode.generated.js");
/* harmony import */ var _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesOperatorNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOperatorNode.generated.js");
/* harmony import */ var _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesParenthesisNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParenthesisNode.generated.js");
/* harmony import */ var _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesSymbolNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony import */ var _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesIsZero.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony import */ var _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony import */ var _dependenciesSimplify_generated__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dependenciesSimplify.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSimplify.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


















var rationalizeDependencies = {
  bignumberDependencies: _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__["bignumberDependencies"],
  fractionDependencies: _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__["fractionDependencies"],
  ConstantNodeDependencies: _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_2__["ConstantNodeDependencies"],
  FunctionNodeDependencies: _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_3__["FunctionNodeDependencies"],
  OperatorNodeDependencies: _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_4__["OperatorNodeDependencies"],
  ParenthesisNodeDependencies: _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_5__["ParenthesisNodeDependencies"],
  SymbolNodeDependencies: _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_6__["SymbolNodeDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_7__["addDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_8__["divideDependencies"],
  equalDependencies: _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_9__["equalDependencies"],
  isZeroDependencies: _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_10__["isZeroDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_11__["multiplyDependencies"],
  parseDependencies: _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_12__["parseDependencies"],
  powDependencies: _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_13__["powDependencies"],
  simplifyDependencies: _dependenciesSimplify_generated__WEBPACK_IMPORTED_MODULE_14__["simplifyDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_15__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_16__["typedDependencies"],
  createRationalize: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_17__["createRationalize"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRe.generated.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRe.generated.js ***!
  \***********************************************************************************/
/*! exports provided: reDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reDependencies", function() { return reDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var reDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createRe: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createRe"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReducedPlanckConstant.generated.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReducedPlanckConstant.generated.js ***!
  \******************************************************************************************************/
/*! exports provided: reducedPlanckConstantDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reducedPlanckConstantDependencies", function() { return reducedPlanckConstantDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var reducedPlanckConstantDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createReducedPlanckConstant: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createReducedPlanckConstant"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRelationalNode.generated.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRelationalNode.generated.js ***!
  \***********************************************************************************************/
/*! exports provided: RelationalNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RelationalNodeDependencies", function() { return RelationalNodeDependencies; });
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var RelationalNodeDependencies = {
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"],
  createRelationalNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createRelationalNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReplacer.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReplacer.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: replacerDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replacerDependencies", function() { return replacerDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var replacerDependencies = {
  createReplacer: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createReplacer"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReshape.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReshape.generated.js ***!
  \****************************************************************************************/
/*! exports provided: reshapeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reshapeDependencies", function() { return reshapeDependencies; });
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var reshapeDependencies = {
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_0__["isIntegerDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createReshape: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createReshape"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesResize.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesResize.generated.js ***!
  \***************************************************************************************/
/*! exports provided: resizeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeDependencies", function() { return resizeDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var resizeDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  createResize: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createResize"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesResultSet.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesResultSet.generated.js ***!
  \******************************************************************************************/
/*! exports provided: ResultSetDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResultSetDependencies", function() { return ResultSetDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var ResultSetDependencies = {
  createResultSet: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createResultSet"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReviver.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesReviver.generated.js ***!
  \****************************************************************************************/
/*! exports provided: reviverDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reviverDependencies", function() { return reviverDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var reviverDependencies = {
  createReviver: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createReviver"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRightArithShift.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRightArithShift.generated.js ***!
  \************************************************************************************************/
/*! exports provided: rightArithShiftDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftDependencies", function() { return rightArithShiftDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesZeros.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var rightArithShiftDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  zerosDependencies: _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__["zerosDependencies"],
  createRightArithShift: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createRightArithShift"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRightLogShift.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRightLogShift.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: rightLogShiftDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightLogShiftDependencies", function() { return rightLogShiftDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesZeros.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var rightLogShiftDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  zerosDependencies: _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_4__["zerosDependencies"],
  createRightLogShift: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createRightLogShift"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRound.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRound.generated.js ***!
  \**************************************************************************************/
/*! exports provided: roundDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "roundDependencies", function() { return roundDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesZeros.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var roundDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_1__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  zerosDependencies: _dependenciesZeros_generated__WEBPACK_IMPORTED_MODULE_5__["zerosDependencies"],
  createRound: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createRound"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRow.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRow.generated.js ***!
  \************************************************************************************/
/*! exports provided: rowDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rowDependencies", function() { return rowDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesRange.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRange.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var rowDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  rangeDependencies: _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__["rangeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createRow: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createRow"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRowTransform.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRowTransform.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: rowTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rowTransformDependencies", function() { return rowTransformDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesRange.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRange.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var rowTransformDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  rangeDependencies: _dependenciesRange_generated__WEBPACK_IMPORTED_MODULE_2__["rangeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createRowTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createRowTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRydberg.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRydberg.generated.js ***!
  \****************************************************************************************/
/*! exports provided: rydbergDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rydbergDependencies", function() { return rydbergDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var rydbergDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createRydberg: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createRydberg"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSQRT1_2.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSQRT1_2.generated.js ***!
  \****************************************************************************************/
/*! exports provided: SQRT1_2Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQRT1_2Dependencies", function() { return SQRT1_2Dependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

 // eslint-disable-line camelcase

var SQRT1_2Dependencies = {
  // eslint-disable-line camelcase
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createSQRT1_2: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createSQRT1_2"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSQRT2.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSQRT2.generated.js ***!
  \**************************************************************************************/
/*! exports provided: SQRT2Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQRT2Dependencies", function() { return SQRT2Dependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var SQRT2Dependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createSQRT2: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createSQRT2"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSackurTetrode.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSackurTetrode.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: sackurTetrodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sackurTetrodeDependencies", function() { return sackurTetrodeDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var sackurTetrodeDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createSackurTetrode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createSackurTetrode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSec.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSec.generated.js ***!
  \************************************************************************************/
/*! exports provided: secDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "secDependencies", function() { return secDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var secDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSec: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSec"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSech.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSech.generated.js ***!
  \*************************************************************************************/
/*! exports provided: sechDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sechDependencies", function() { return sechDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var sechDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSech: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSech"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSecondRadiation.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSecondRadiation.generated.js ***!
  \************************************************************************************************/
/*! exports provided: secondRadiationDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "secondRadiationDependencies", function() { return secondRadiationDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var secondRadiationDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createSecondRadiation: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSecondRadiation"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetCartesian.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetCartesian.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: setCartesianDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCartesianDependencies", function() { return setCartesianDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var setCartesianDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__["IndexDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__["compareNaturalDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createSetCartesian: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createSetCartesian"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetDifference.generated.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetDifference.generated.js ***!
  \**********************************************************************************************/
/*! exports provided: setDifferenceDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDifferenceDependencies", function() { return setDifferenceDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var setDifferenceDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__["IndexDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__["compareNaturalDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createSetDifference: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createSetDifference"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetDistinct.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetDistinct.generated.js ***!
  \********************************************************************************************/
/*! exports provided: setDistinctDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDistinctDependencies", function() { return setDistinctDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var setDistinctDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__["IndexDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__["compareNaturalDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createSetDistinct: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createSetDistinct"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetIntersect.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetIntersect.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: setIntersectDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIntersectDependencies", function() { return setIntersectDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var setIntersectDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_1__["IndexDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_2__["compareNaturalDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createSetIntersect: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createSetIntersect"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetIsSubset.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetIsSubset.generated.js ***!
  \********************************************************************************************/
/*! exports provided: setIsSubsetDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIsSubsetDependencies", function() { return setIsSubsetDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var setIsSubsetDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__["compareNaturalDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_3__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createSetIsSubset: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createSetIsSubset"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetMultiplicity.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetMultiplicity.generated.js ***!
  \************************************************************************************************/
/*! exports provided: setMultiplicityDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMultiplicityDependencies", function() { return setMultiplicityDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var setMultiplicityDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__["compareNaturalDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_3__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createSetMultiplicity: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createSetMultiplicity"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetPowerset.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetPowerset.generated.js ***!
  \********************************************************************************************/
/*! exports provided: setPowersetDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setPowersetDependencies", function() { return setPowersetDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */






var setPowersetDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__["compareNaturalDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_2__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_3__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  createSetPowerset: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_5__["createSetPowerset"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetSize.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetSize.generated.js ***!
  \****************************************************************************************/
/*! exports provided: setSizeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSizeDependencies", function() { return setSizeDependencies; });
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var setSizeDependencies = {
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_0__["compareNaturalDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSetSize: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSetSize"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetSymDifference.generated.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetSymDifference.generated.js ***!
  \*************************************************************************************************/
/*! exports provided: setSymDifferenceDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSymDifferenceDependencies", function() { return setSymDifferenceDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesConcat_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesConcat.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcat.generated.js");
/* harmony import */ var _dependenciesSetDifference_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSetDifference.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetDifference.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var setSymDifferenceDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  concatDependencies: _dependenciesConcat_generated__WEBPACK_IMPORTED_MODULE_1__["concatDependencies"],
  setDifferenceDependencies: _dependenciesSetDifference_generated__WEBPACK_IMPORTED_MODULE_2__["setDifferenceDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_3__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_4__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_5__["typedDependencies"],
  createSetSymDifference: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createSetSymDifference"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetUnion.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetUnion.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: setUnionDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUnionDependencies", function() { return setUnionDependencies; });
/* harmony import */ var _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesIndexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIndexClass.generated.js");
/* harmony import */ var _dependenciesConcat_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesConcat.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConcat.generated.js");
/* harmony import */ var _dependenciesSetIntersect_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesSetIntersect.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetIntersect.generated.js");
/* harmony import */ var _dependenciesSetSymDifference_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesSetSymDifference.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSetSymDifference.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSubset.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var setUnionDependencies = {
  IndexDependencies: _dependenciesIndexClass_generated__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"],
  concatDependencies: _dependenciesConcat_generated__WEBPACK_IMPORTED_MODULE_1__["concatDependencies"],
  setIntersectDependencies: _dependenciesSetIntersect_generated__WEBPACK_IMPORTED_MODULE_2__["setIntersectDependencies"],
  setSymDifferenceDependencies: _dependenciesSetSymDifference_generated__WEBPACK_IMPORTED_MODULE_3__["setSymDifferenceDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_4__["sizeDependencies"],
  subsetDependencies: _dependenciesSubset_generated__WEBPACK_IMPORTED_MODULE_5__["subsetDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createSetUnion: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createSetUnion"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSign.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSign.generated.js ***!
  \*************************************************************************************/
/*! exports provided: signDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signDependencies", function() { return signDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesFractionClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js");
/* harmony import */ var _dependenciesComplex_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesComplex.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplex.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var signDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  FractionDependencies: _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_1__["FractionDependencies"],
  complexDependencies: _dependenciesComplex_generated__WEBPACK_IMPORTED_MODULE_2__["complexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createSign: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createSign"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSimplify.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSimplify.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: simplifyDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simplifyDependencies", function() { return simplifyDependencies; });
/* harmony import */ var _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBignumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBignumber.generated.js");
/* harmony import */ var _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesFraction.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFraction.generated.js");
/* harmony import */ var _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesConstantNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesConstantNode.generated.js");
/* harmony import */ var _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesFunctionNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFunctionNode.generated.js");
/* harmony import */ var _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesOperatorNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesOperatorNode.generated.js");
/* harmony import */ var _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesParenthesisNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParenthesisNode.generated.js");
/* harmony import */ var _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesSymbolNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony import */ var _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesIsZero.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsZero.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesParse.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesParse.generated.js");
/* harmony import */ var _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

















var simplifyDependencies = {
  bignumberDependencies: _dependenciesBignumber_generated__WEBPACK_IMPORTED_MODULE_0__["bignumberDependencies"],
  fractionDependencies: _dependenciesFraction_generated__WEBPACK_IMPORTED_MODULE_1__["fractionDependencies"],
  ConstantNodeDependencies: _dependenciesConstantNode_generated__WEBPACK_IMPORTED_MODULE_2__["ConstantNodeDependencies"],
  FunctionNodeDependencies: _dependenciesFunctionNode_generated__WEBPACK_IMPORTED_MODULE_3__["FunctionNodeDependencies"],
  OperatorNodeDependencies: _dependenciesOperatorNode_generated__WEBPACK_IMPORTED_MODULE_4__["OperatorNodeDependencies"],
  ParenthesisNodeDependencies: _dependenciesParenthesisNode_generated__WEBPACK_IMPORTED_MODULE_5__["ParenthesisNodeDependencies"],
  SymbolNodeDependencies: _dependenciesSymbolNode_generated__WEBPACK_IMPORTED_MODULE_6__["SymbolNodeDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_7__["addDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_8__["divideDependencies"],
  equalDependencies: _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_9__["equalDependencies"],
  isZeroDependencies: _dependenciesIsZero_generated__WEBPACK_IMPORTED_MODULE_10__["isZeroDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_11__["multiplyDependencies"],
  parseDependencies: _dependenciesParse_generated__WEBPACK_IMPORTED_MODULE_12__["parseDependencies"],
  powDependencies: _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_13__["powDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_14__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_15__["typedDependencies"],
  createSimplify: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_16__["createSimplify"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSin.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSin.generated.js ***!
  \************************************************************************************/
/*! exports provided: sinDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinDependencies", function() { return sinDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var sinDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createSin: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createSin"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSinh.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSinh.generated.js ***!
  \*************************************************************************************/
/*! exports provided: sinhDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinhDependencies", function() { return sinhDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var sinhDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createSinh: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createSinh"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js ***!
  \*************************************************************************************/
/*! exports provided: sizeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sizeDependencies", function() { return sizeDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var sizeDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSize: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSize"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSlu.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSlu.generated.js ***!
  \************************************************************************************/
/*! exports provided: sluDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sluDependencies", function() { return sluDependencies; });
/* harmony import */ var _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesLargerEq.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLargerEq.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTranspose_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesTranspose.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTranspose.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */











var sluDependencies = {
  SparseMatrixDependencies: _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["SparseMatrixDependencies"],
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_1__["absDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_2__["addDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_3__["divideScalarDependencies"],
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_4__["largerDependencies"],
  largerEqDependencies: _dependenciesLargerEq_generated__WEBPACK_IMPORTED_MODULE_5__["largerEqDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_6__["multiplyDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_7__["subtractDependencies"],
  transposeDependencies: _dependenciesTranspose_generated__WEBPACK_IMPORTED_MODULE_8__["transposeDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_9__["typedDependencies"],
  createSlu: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_10__["createSlu"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmaller.generated.js ***!
  \****************************************************************************************/
/*! exports provided: smallerDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smallerDependencies", function() { return smallerDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var smallerDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createSmaller: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createSmaller"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmallerEq.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSmallerEq.generated.js ***!
  \******************************************************************************************/
/*! exports provided: smallerEqDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smallerEqDependencies", function() { return smallerEqDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var smallerEqDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createSmallerEq: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createSmallerEq"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSort.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSort.generated.js ***!
  \*************************************************************************************/
/*! exports provided: sortDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortDependencies", function() { return sortDependencies; });
/* harmony import */ var _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesCompare.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompare.generated.js");
/* harmony import */ var _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCompareNatural.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCompareNatural.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var sortDependencies = {
  compareDependencies: _dependenciesCompare_generated__WEBPACK_IMPORTED_MODULE_0__["compareDependencies"],
  compareNaturalDependencies: _dependenciesCompareNatural_generated__WEBPACK_IMPORTED_MODULE_1__["compareNaturalDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createSort: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createSort"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSpaClass.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSpaClass.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: SpaDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpaDependencies", function() { return SpaDependencies; });
/* harmony import */ var _dependenciesFibonacciHeapClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesFibonacciHeapClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFibonacciHeapClass.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var SpaDependencies = {
  FibonacciHeapDependencies: _dependenciesFibonacciHeapClass_generated__WEBPACK_IMPORTED_MODULE_0__["FibonacciHeapDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__["addScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  createSpaClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createSpaClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparse.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparse.generated.js ***!
  \***************************************************************************************/
/*! exports provided: sparseDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sparseDependencies", function() { return sparseDependencies; });
/* harmony import */ var _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesSparseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var sparseDependencies = {
  SparseMatrixDependencies: _dependenciesSparseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["SparseMatrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSparse: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSparse"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js ***!
  \**************************************************************************************************/
/*! exports provided: SparseMatrixDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SparseMatrixDependencies", function() { return SparseMatrixDependencies; });
/* harmony import */ var _dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var SparseMatrixDependencies = {
  MatrixDependencies: _dependenciesMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["MatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createSparseMatrixClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createSparseMatrixClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSpeedOfLight.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSpeedOfLight.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: speedOfLightDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "speedOfLightDependencies", function() { return speedOfLightDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var speedOfLightDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createSpeedOfLight: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSpeedOfLight"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSplitUnit.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSplitUnit.generated.js ***!
  \******************************************************************************************/
/*! exports provided: splitUnitDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitUnitDependencies", function() { return splitUnitDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var splitUnitDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createSplitUnit: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createSplitUnit"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js ***!
  \*************************************************************************************/
/*! exports provided: sqrtDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrtDependencies", function() { return sqrtDependencies; });
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var sqrtDependencies = {
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSqrt: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSqrt"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrtm.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrtm.generated.js ***!
  \**************************************************************************************/
/*! exports provided: sqrtmDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrtmDependencies", function() { return sqrtmDependencies; });
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesIdentity.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIdentity.generated.js");
/* harmony import */ var _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesInv.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesInv.generated.js");
/* harmony import */ var _dependenciesMax_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMax.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMax.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesSize.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSize.generated.js");
/* harmony import */ var _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */











var sqrtmDependencies = {
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_0__["absDependencies"],
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_1__["addDependencies"],
  identityDependencies: _dependenciesIdentity_generated__WEBPACK_IMPORTED_MODULE_2__["identityDependencies"],
  invDependencies: _dependenciesInv_generated__WEBPACK_IMPORTED_MODULE_3__["invDependencies"],
  maxDependencies: _dependenciesMax_generated__WEBPACK_IMPORTED_MODULE_4__["maxDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_5__["multiplyDependencies"],
  sizeDependencies: _dependenciesSize_generated__WEBPACK_IMPORTED_MODULE_6__["sizeDependencies"],
  sqrtDependencies: _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_7__["sqrtDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_8__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_9__["typedDependencies"],
  createSqrtm: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_10__["createSqrtm"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSquare.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSquare.generated.js ***!
  \***************************************************************************************/
/*! exports provided: squareDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squareDependencies", function() { return squareDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var squareDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createSquare: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createSquare"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqueeze.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqueeze.generated.js ***!
  \****************************************************************************************/
/*! exports provided: squeezeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squeezeDependencies", function() { return squeezeDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var squeezeDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSqueeze: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSqueeze"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStd.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStd.generated.js ***!
  \************************************************************************************/
/*! exports provided: stdDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stdDependencies", function() { return stdDependencies; });
/* harmony import */ var _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesVariance_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesVariance.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVariance.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var stdDependencies = {
  sqrtDependencies: _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_0__["sqrtDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  varianceDependencies: _dependenciesVariance_generated__WEBPACK_IMPORTED_MODULE_2__["varianceDependencies"],
  createStd: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createStd"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStdTransform.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStdTransform.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: stdTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stdTransformDependencies", function() { return stdTransformDependencies; });
/* harmony import */ var _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesSqrt.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSqrt.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesVariance_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesVariance.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVariance.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var stdTransformDependencies = {
  sqrtDependencies: _dependenciesSqrt_generated__WEBPACK_IMPORTED_MODULE_0__["sqrtDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  varianceDependencies: _dependenciesVariance_generated__WEBPACK_IMPORTED_MODULE_2__["varianceDependencies"],
  createStdTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createStdTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStefanBoltzmann.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStefanBoltzmann.generated.js ***!
  \************************************************************************************************/
/*! exports provided: stefanBoltzmannDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stefanBoltzmannDependencies", function() { return stefanBoltzmannDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var stefanBoltzmannDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createStefanBoltzmann: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createStefanBoltzmann"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStirlingS2.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesStirlingS2.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: stirlingS2Dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stirlingS2Dependencies", function() { return stirlingS2Dependencies; });
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesCombinations.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesCombinations.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesFactorial.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFactorial.generated.js");
/* harmony import */ var _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesIsInteger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsInteger.generated.js");
/* harmony import */ var _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesIsNegative.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNegative.generated.js");
/* harmony import */ var _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesLarger.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesLarger.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */












var stirlingS2Dependencies = {
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"],
  combinationsDependencies: _dependenciesCombinations_generated__WEBPACK_IMPORTED_MODULE_1__["combinationsDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_2__["divideScalarDependencies"],
  factorialDependencies: _dependenciesFactorial_generated__WEBPACK_IMPORTED_MODULE_3__["factorialDependencies"],
  isIntegerDependencies: _dependenciesIsInteger_generated__WEBPACK_IMPORTED_MODULE_4__["isIntegerDependencies"],
  isNegativeDependencies: _dependenciesIsNegative_generated__WEBPACK_IMPORTED_MODULE_5__["isNegativeDependencies"],
  largerDependencies: _dependenciesLarger_generated__WEBPACK_IMPORTED_MODULE_6__["largerDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_7__["multiplyScalarDependencies"],
  powDependencies: _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_8__["powDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_9__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_10__["typedDependencies"],
  createStirlingS2: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__["createStirlingS2"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesString.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesString.generated.js ***!
  \***************************************************************************************/
/*! exports provided: stringDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringDependencies", function() { return stringDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var stringDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createString: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createString"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubset.generated.js ***!
  \***************************************************************************************/
/*! exports provided: subsetDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subsetDependencies", function() { return subsetDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var subsetDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSubset: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSubset"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubsetTransform.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubsetTransform.generated.js ***!
  \************************************************************************************************/
/*! exports provided: subsetTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subsetTransformDependencies", function() { return subsetTransformDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var subsetTransformDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createSubsetTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSubsetTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: subtractDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtractDependencies", function() { return subtractDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesUnaryMinus.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */







var subtractDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_1__["addScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_4__["typedDependencies"],
  unaryMinusDependencies: _dependenciesUnaryMinus_generated__WEBPACK_IMPORTED_MODULE_5__["unaryMinusDependencies"],
  createSubtract: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__["createSubtract"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSum.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSum.generated.js ***!
  \************************************************************************************/
/*! exports provided: sumDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sumDependencies", function() { return sumDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var sumDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__["numericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createSum: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createSum"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSumTransform.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSumTransform.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: sumTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sumTransformDependencies", function() { return sumTransformDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumeric.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var sumTransformDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  numericDependencies: _dependenciesNumeric_generated__WEBPACK_IMPORTED_MODULE_1__["numericDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createSumTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createSumTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSymbolNode.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: SymbolNodeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SymbolNodeDependencies", function() { return SymbolNodeDependencies; });
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesNode.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNode.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var SymbolNodeDependencies = {
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_0__["UnitDependencies"],
  NodeDependencies: _dependenciesNode_generated__WEBPACK_IMPORTED_MODULE_1__["NodeDependencies"],
  createSymbolNode: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createSymbolNode"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTan.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTan.generated.js ***!
  \************************************************************************************/
/*! exports provided: tanDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanDependencies", function() { return tanDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var tanDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createTan: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createTan"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTanh.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTanh.generated.js ***!
  \*************************************************************************************/
/*! exports provided: tanhDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanhDependencies", function() { return tanhDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var tanhDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createTanh: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createTanh"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTau.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTau.generated.js ***!
  \************************************************************************************/
/*! exports provided: tauDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tauDependencies", function() { return tauDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var tauDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createTau: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createTau"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesThomsonCrossSection.generated.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesThomsonCrossSection.generated.js ***!
  \****************************************************************************************************/
/*! exports provided: thomsonCrossSectionDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thomsonCrossSectionDependencies", function() { return thomsonCrossSectionDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var thomsonCrossSectionDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createThomsonCrossSection: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createThomsonCrossSection"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTo.generated.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTo.generated.js ***!
  \***********************************************************************************/
/*! exports provided: toDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toDependencies", function() { return toDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var toDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createTo: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createTo"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTrace.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTrace.generated.js ***!
  \**************************************************************************************/
/*! exports provided: traceDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "traceDependencies", function() { return traceDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var traceDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createTrace: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createTrace"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTranspose.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTranspose.generated.js ***!
  \******************************************************************************************/
/*! exports provided: transposeDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transposeDependencies", function() { return transposeDependencies; });
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var transposeDependencies = {
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createTranspose: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createTranspose"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTrue.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTrue.generated.js ***!
  \*************************************************************************************/
/*! exports provided: trueDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trueDependencies", function() { return trueDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var trueDependencies = {
  createTrue: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createTrue"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTypeOf.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTypeOf.generated.js ***!
  \***************************************************************************************/
/*! exports provided: typeOfDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeOfDependencies", function() { return typeOfDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var typeOfDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createTypeOf: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createTypeOf"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js ***!
  \**************************************************************************************/
/*! exports provided: typedDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typedDependencies", function() { return typedDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesFractionClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var typedDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_2__["DenseMatrixDependencies"],
  FractionDependencies: _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_3__["FractionDependencies"],
  createTyped: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createTyped"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryMinus.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: unaryMinusDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryMinusDependencies", function() { return unaryMinusDependencies; });
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var unaryMinusDependencies = {
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"],
  createUnaryMinus: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createUnaryMinus"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryPlus.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnaryPlus.generated.js ***!
  \******************************************************************************************/
/*! exports provided: unaryPlusDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryPlusDependencies", function() { return unaryPlusDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var unaryPlusDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createUnaryPlus: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createUnaryPlus"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnequal.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnequal.generated.js ***!
  \****************************************************************************************/
/*! exports provided: unequalDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unequalDependencies", function() { return unequalDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */





var unequalDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_2__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_3__["typedDependencies"],
  createUnequal: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__["createUnequal"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js ***!
  \******************************************************************************************/
/*! exports provided: UnitDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnitDependencies", function() { return UnitDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesComplexClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesComplexClass.generated.js");
/* harmony import */ var _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesFractionClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFractionClass.generated.js");
/* harmony import */ var _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesAbs.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAbs.generated.js");
/* harmony import */ var _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesAddScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAddScalar.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesEqual.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqual.generated.js");
/* harmony import */ var _dependenciesFix_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesFix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFix.generated.js");
/* harmony import */ var _dependenciesFormat_generated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dependenciesFormat.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesFormat.generated.js");
/* harmony import */ var _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dependenciesIsNumeric.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNumeric.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dependenciesNumber.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesNumber.generated.js");
/* harmony import */ var _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dependenciesPow.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPow.generated.js");
/* harmony import */ var _dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dependenciesRound.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesRound.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */
















var UnitDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  ComplexDependencies: _dependenciesComplexClass_generated__WEBPACK_IMPORTED_MODULE_1__["ComplexDependencies"],
  FractionDependencies: _dependenciesFractionClass_generated__WEBPACK_IMPORTED_MODULE_2__["FractionDependencies"],
  absDependencies: _dependenciesAbs_generated__WEBPACK_IMPORTED_MODULE_3__["absDependencies"],
  addScalarDependencies: _dependenciesAddScalar_generated__WEBPACK_IMPORTED_MODULE_4__["addScalarDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_5__["divideScalarDependencies"],
  equalDependencies: _dependenciesEqual_generated__WEBPACK_IMPORTED_MODULE_6__["equalDependencies"],
  fixDependencies: _dependenciesFix_generated__WEBPACK_IMPORTED_MODULE_7__["fixDependencies"],
  formatDependencies: _dependenciesFormat_generated__WEBPACK_IMPORTED_MODULE_8__["formatDependencies"],
  isNumericDependencies: _dependenciesIsNumeric_generated__WEBPACK_IMPORTED_MODULE_9__["isNumericDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_10__["multiplyScalarDependencies"],
  numberDependencies: _dependenciesNumber_generated__WEBPACK_IMPORTED_MODULE_11__["numberDependencies"],
  powDependencies: _dependenciesPow_generated__WEBPACK_IMPORTED_MODULE_12__["powDependencies"],
  roundDependencies: _dependenciesRound_generated__WEBPACK_IMPORTED_MODULE_13__["roundDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_14__["subtractDependencies"],
  createUnitClass: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_15__["createUnitClass"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitFunction.generated.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitFunction.generated.js ***!
  \*********************************************************************************************/
/*! exports provided: unitDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unitDependencies", function() { return unitDependencies; });
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var unitDependencies = {
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_0__["UnitDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_1__["typedDependencies"],
  createUnitFunction: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createUnitFunction"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUppercaseE.generated.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUppercaseE.generated.js ***!
  \*******************************************************************************************/
/*! exports provided: EDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EDependencies", function() { return EDependencies; });
/* harmony import */ var _dependenciesE_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesE.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesE.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var EDependencies = {
  eDependencies: _dependenciesE_generated__WEBPACK_IMPORTED_MODULE_0__["eDependencies"],
  createUppercaseE: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createUppercaseE"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUppercasePi.generated.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUppercasePi.generated.js ***!
  \********************************************************************************************/
/*! exports provided: PIDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PIDependencies", function() { return PIDependencies; });
/* harmony import */ var _dependenciesPi_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesPi.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesPi.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var PIDependencies = {
  piDependencies: _dependenciesPi_generated__WEBPACK_IMPORTED_MODULE_0__["piDependencies"],
  createUppercasePi: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createUppercasePi"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUsolve.generated.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUsolve.generated.js ***!
  \***************************************************************************************/
/*! exports provided: usolveDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usolveDependencies", function() { return usolveDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesDivideScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivideScalar.generated.js");
/* harmony import */ var _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesEqualScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesEqualScalar.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiplyScalar.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var usolveDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  divideScalarDependencies: _dependenciesDivideScalar_generated__WEBPACK_IMPORTED_MODULE_1__["divideScalarDependencies"],
  equalScalarDependencies: _dependenciesEqualScalar_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalarDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_3__["matrixDependencies"],
  multiplyScalarDependencies: _dependenciesMultiplyScalar_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyScalarDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createUsolve: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createUsolve"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVacuumImpedance.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVacuumImpedance.generated.js ***!
  \************************************************************************************************/
/*! exports provided: vacuumImpedanceDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vacuumImpedanceDependencies", function() { return vacuumImpedanceDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var vacuumImpedanceDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createVacuumImpedance: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createVacuumImpedance"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVariance.generated.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVariance.generated.js ***!
  \*****************************************************************************************/
/*! exports provided: varianceDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "varianceDependencies", function() { return varianceDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesApply_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesApply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApply.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesIsNaN.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNaN.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var varianceDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  applyDependencies: _dependenciesApply_generated__WEBPACK_IMPORTED_MODULE_1__["applyDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_2__["divideDependencies"],
  isNaNDependencies: _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_3__["isNaNDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createVariance: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createVariance"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVarianceTransform.generated.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVarianceTransform.generated.js ***!
  \**************************************************************************************************/
/*! exports provided: varianceTransformDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "varianceTransformDependencies", function() { return varianceTransformDependencies; });
/* harmony import */ var _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesAdd.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesAdd.generated.js");
/* harmony import */ var _dependenciesApply_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesApply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesApply.generated.js");
/* harmony import */ var _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesDivide.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDivide.generated.js");
/* harmony import */ var _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dependenciesIsNaN.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesIsNaN.generated.js");
/* harmony import */ var _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependenciesMultiply.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMultiply.generated.js");
/* harmony import */ var _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependenciesSubtract.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesSubtract.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */








var varianceTransformDependencies = {
  addDependencies: _dependenciesAdd_generated__WEBPACK_IMPORTED_MODULE_0__["addDependencies"],
  applyDependencies: _dependenciesApply_generated__WEBPACK_IMPORTED_MODULE_1__["applyDependencies"],
  divideDependencies: _dependenciesDivide_generated__WEBPACK_IMPORTED_MODULE_2__["divideDependencies"],
  isNaNDependencies: _dependenciesIsNaN_generated__WEBPACK_IMPORTED_MODULE_3__["isNaNDependencies"],
  multiplyDependencies: _dependenciesMultiply_generated__WEBPACK_IMPORTED_MODULE_4__["multiplyDependencies"],
  subtractDependencies: _dependenciesSubtract_generated__WEBPACK_IMPORTED_MODULE_5__["subtractDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_6__["typedDependencies"],
  createVarianceTransform: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__["createVarianceTransform"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVersion.generated.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesVersion.generated.js ***!
  \****************************************************************************************/
/*! exports provided: versionDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "versionDependencies", function() { return versionDependencies; });
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */

var versionDependencies = {
  createVersion: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__["createVersion"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesWeakMixingAngle.generated.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesWeakMixingAngle.generated.js ***!
  \************************************************************************************************/
/*! exports provided: weakMixingAngleDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "weakMixingAngleDependencies", function() { return weakMixingAngleDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var weakMixingAngleDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  createWeakMixingAngle: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__["createWeakMixingAngle"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesWienDisplacement.generated.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesWienDisplacement.generated.js ***!
  \*************************************************************************************************/
/*! exports provided: wienDisplacementDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wienDisplacementDependencies", function() { return wienDisplacementDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesUnitClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesUnitClass.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var wienDisplacementDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  UnitDependencies: _dependenciesUnitClass_generated__WEBPACK_IMPORTED_MODULE_1__["UnitDependencies"],
  createWienDisplacement: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__["createWienDisplacement"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesXgcd.generated.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesXgcd.generated.js ***!
  \*************************************************************************************/
/*! exports provided: xgcdDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xgcdDependencies", function() { return xgcdDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var xgcdDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createXgcd: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createXgcd"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesXor.generated.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesXor.generated.js ***!
  \************************************************************************************/
/*! exports provided: xorDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xorDependencies", function() { return xorDependencies; });
/* harmony import */ var _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesDenseMatrixClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var xorDependencies = {
  DenseMatrixDependencies: _dependenciesDenseMatrixClass_generated__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createXor: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createXor"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/dependenciesAny/dependenciesZeros.generated.js ***!
  \**************************************************************************************/
/*! exports provided: zerosDependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zerosDependencies", function() { return zerosDependencies; });
/* harmony import */ var _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependenciesBigNumberClass.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesBigNumberClass.generated.js");
/* harmony import */ var _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependenciesMatrix.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesMatrix.generated.js");
/* harmony import */ var _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependenciesTyped.generated */ "../node_modules/mathjs/es/entry/dependenciesAny/dependenciesTyped.generated.js");
/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../factoriesAny.js */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */




var zerosDependencies = {
  BigNumberDependencies: _dependenciesBigNumberClass_generated__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"],
  matrixDependencies: _dependenciesMatrix_generated__WEBPACK_IMPORTED_MODULE_1__["matrixDependencies"],
  typedDependencies: _dependenciesTyped_generated__WEBPACK_IMPORTED_MODULE_2__["typedDependencies"],
  createZeros: _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__["createZeros"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/entry/impureFunctionsAny.generated.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/impureFunctionsAny.generated.js ***!
  \***********************************************************************/
/*! exports provided: Node, ArrayNode, BlockNode, ConstantNode, ObjectNode, ParenthesisNode, RelationalNode, Chain, reviver, ConditionalNode, OperatorNode, RangeNode, FunctionAssignmentNode, chain, AccessorNode, IndexNode, AssignmentNode, SymbolNode, FunctionNode, parse, evaluate, Help, compile, simplify, rationalize, Parser, help, parser, derivative, docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Node", function() { return Node; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayNode", function() { return ArrayNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlockNode", function() { return BlockNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstantNode", function() { return ConstantNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectNode", function() { return ObjectNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParenthesisNode", function() { return ParenthesisNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RelationalNode", function() { return RelationalNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chain", function() { return Chain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reviver", function() { return reviver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConditionalNode", function() { return ConditionalNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperatorNode", function() { return OperatorNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeNode", function() { return RangeNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunctionAssignmentNode", function() { return FunctionAssignmentNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return chain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccessorNode", function() { return AccessorNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexNode", function() { return IndexNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssignmentNode", function() { return AssignmentNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SymbolNode", function() { return SymbolNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunctionNode", function() { return FunctionNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return parse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "evaluate", function() { return evaluate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Help", function() { return Help; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return compile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simplify", function() { return simplify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rationalize", function() { return rationalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Parser", function() { return Parser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "help", function() { return help; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parser", function() { return parser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "derivative", function() { return derivative; });
/* harmony import */ var _configReadonly__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configReadonly */ "../node_modules/mathjs/es/entry/configReadonly.js");
/* harmony import */ var _factoriesAny__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../factoriesAny */ "../node_modules/mathjs/es/factoriesAny.js");
/* harmony import */ var _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pureFunctionsAny.generated */ "../node_modules/mathjs/es/entry/pureFunctionsAny.generated.js");
/* harmony import */ var _expression_embeddedDocs_embeddedDocs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../expression/embeddedDocs/embeddedDocs */ "../node_modules/mathjs/es/expression/embeddedDocs/embeddedDocs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "docs", function() { return _expression_embeddedDocs_embeddedDocs__WEBPACK_IMPORTED_MODULE_3__["embeddedDocs"]; });

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */



var math = {}; // NOT pure!

var mathWithTransform = {}; // NOT pure!

var classes = {}; // NOT pure!

var Node = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNode"])({
  mathWithTransform: mathWithTransform
});
var ArrayNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createArrayNode"])({
  Node: Node
});
var BlockNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBlockNode"])({
  Node: Node,
  ResultSet: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ResultSet"]
});
var ConstantNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createConstantNode"])({
  Node: Node
});
var ObjectNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createObjectNode"])({
  Node: Node
});
var ParenthesisNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createParenthesisNode"])({
  Node: Node
});
var RelationalNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRelationalNode"])({
  Node: Node
});
var Chain = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createChainClass"])({
  math: math
});
var reviver = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createReviver"])({
  classes: classes
});
var ConditionalNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createConditionalNode"])({
  Node: Node
});
var OperatorNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createOperatorNode"])({
  Node: Node
});
var RangeNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRangeNode"])({
  Node: Node
});
var FunctionAssignmentNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFunctionAssignmentNode"])({
  Node: Node,
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var chain = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createChain"])({
  Chain: Chain,
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var AccessorNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAccessorNode"])({
  Node: Node,
  subset: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subset"]
});
var IndexNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIndexNode"])({
  Node: Node,
  Range: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Range"],
  size: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["size"]
});
var AssignmentNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAssignmentNode"])({
  matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
  Node: Node,
  subset: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subset"]
});
var SymbolNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSymbolNode"])({
  Unit: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Unit"],
  Node: Node,
  math: math
});
var FunctionNode = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFunctionNode"])({
  Node: Node,
  SymbolNode: SymbolNode,
  math: math
});
var parse = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createParse"])({
  AccessorNode: AccessorNode,
  ArrayNode: ArrayNode,
  AssignmentNode: AssignmentNode,
  BlockNode: BlockNode,
  ConditionalNode: ConditionalNode,
  ConstantNode: ConstantNode,
  FunctionAssignmentNode: FunctionAssignmentNode,
  FunctionNode: FunctionNode,
  IndexNode: IndexNode,
  ObjectNode: ObjectNode,
  OperatorNode: OperatorNode,
  ParenthesisNode: ParenthesisNode,
  RangeNode: RangeNode,
  RelationalNode: RelationalNode,
  SymbolNode: SymbolNode,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  numeric: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["numeric"],
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var evaluate = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createEvaluate"])({
  parse: parse,
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var Help = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createHelpClass"])({
  parse: parse
});
var compile = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCompile"])({
  parse: parse,
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var simplify = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSimplify"])({
  bignumber: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bignumber"],
  fraction: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["fraction"],
  ConstantNode: ConstantNode,
  FunctionNode: FunctionNode,
  OperatorNode: OperatorNode,
  ParenthesisNode: ParenthesisNode,
  SymbolNode: SymbolNode,
  add: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["add"],
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  divide: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["divide"],
  equal: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["equal"],
  isZero: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isZero"],
  mathWithTransform: mathWithTransform,
  multiply: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["multiply"],
  parse: parse,
  pow: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["pow"],
  subtract: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subtract"],
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var rationalize = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRationalize"])({
  bignumber: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bignumber"],
  fraction: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["fraction"],
  ConstantNode: ConstantNode,
  FunctionNode: FunctionNode,
  OperatorNode: OperatorNode,
  ParenthesisNode: ParenthesisNode,
  SymbolNode: SymbolNode,
  add: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["add"],
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  divide: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["divide"],
  equal: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["equal"],
  isZero: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isZero"],
  mathWithTransform: mathWithTransform,
  multiply: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["multiply"],
  parse: parse,
  pow: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["pow"],
  simplify: simplify,
  subtract: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subtract"],
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var Parser = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createParserClass"])({
  parse: parse
});
var help = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createHelp"])({
  Help: Help,
  mathWithTransform: mathWithTransform,
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var parser = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createParser"])({
  Parser: Parser,
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});
var derivative = Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDerivative"])({
  ConstantNode: ConstantNode,
  FunctionNode: FunctionNode,
  OperatorNode: OperatorNode,
  ParenthesisNode: ParenthesisNode,
  SymbolNode: SymbolNode,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  equal: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["equal"],
  isZero: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isZero"],
  numeric: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["numeric"],
  parse: parse,
  simplify: simplify,
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
});

_extends(math, {
  reviver: reviver,
  "false": _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["_false"],
  "null": _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["_null"],
  "true": _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["_true"],
  replacer: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["replacer"],
  i: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["i"],
  LN10: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["LN10"],
  LOG10E: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["LOG10E"],
  NaN: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["_NaN"],
  pi: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["pi"],
  SQRT1_2: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["SQRT1_2"],
  tau: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["tau"],
  efimovFactor: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["efimovFactor"],
  fineStructure: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["fineStructure"],
  sackurTetrode: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sackurTetrode"],
  weakMixingAngle: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["weakMixingAngle"],
  e: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["e"],
  Infinity: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["_Infinity"],
  LOG2E: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["LOG2E"],
  'PI': _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["pi"],
  version: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["version"],
  'E': _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["e"],
  phi: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["phi"],
  typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"],
  isInteger: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isInteger"],
  isNumeric: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isNumeric"],
  isPositive: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isPositive"],
  isNaN: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isNaN"],
  equalScalar: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["equalScalar"],
  number: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["number"],
  "boolean": _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["boolean"],
  complex: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["complex"],
  splitUnit: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["splitUnit"],
  unaryPlus: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["unaryPlus"],
  apply: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["apply"],
  cube: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["cube"],
  expm1: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["expm1"],
  log10: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["log10"],
  multiplyScalar: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["multiplyScalar"],
  sign: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sign"],
  square: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["square"],
  bitNot: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bitNot"],
  arg: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["arg"],
  im: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["im"],
  not: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["not"],
  filter: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["filter"],
  forEach: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["forEach"],
  map: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["map"],
  erf: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["erf"],
  format: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["format"],
  isPrime: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isPrime"],
  acos: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["acos"],
  acot: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["acot"],
  acsc: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["acsc"],
  asec: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["asec"],
  asin: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["asin"],
  atan: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["atan"],
  atanh: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["atanh"],
  cosh: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["cosh"],
  coth: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["coth"],
  csch: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["csch"],
  sech: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sech"],
  sinh: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sinh"],
  tanh: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["tanh"],
  chain: chain,
  combinations: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["combinations"],
  pickRandom: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["pickRandom"],
  randomInt: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["randomInt"],
  LN2: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["LN2"],
  clone: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["clone"],
  hasNumericValue: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["hasNumericValue"],
  typeOf: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typeOf"],
  string: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["string"],
  fraction: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["fraction"],
  unaryMinus: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["unaryMinus"],
  addScalar: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["addScalar"],
  exp: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["exp"],
  log2: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["log2"],
  sqrt: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sqrt"],
  conj: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["conj"],
  getMatrixDataType: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["getMatrixDataType"],
  mode: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["mode"],
  print: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["print"],
  acosh: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["acosh"],
  acsch: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["acsch"],
  asinh: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["asinh"],
  cos: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["cos"],
  csc: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["csc"],
  sin: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sin"],
  combinationsWithRep: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["combinationsWithRep"],
  random: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["random"],
  SQRT2: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["SQRT2"],
  isNegative: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isNegative"],
  matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
  cbrt: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["cbrt"],
  gcd: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["gcd"],
  mod: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["mod"],
  nthRoot: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["nthRoot"],
  xgcd: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["xgcd"],
  bitAnd: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bitAnd"],
  bitXor: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bitXor"],
  or: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["or"],
  concat: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["concat"],
  diag: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["diag"],
  identity: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["identity"],
  ones: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ones"],
  reshape: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["reshape"],
  size: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["size"],
  subset: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subset"],
  zeros: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["zeros"],
  to: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["to"],
  round: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["round"],
  leftShift: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["leftShift"],
  rightLogShift: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["rightLogShift"],
  compare: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["compare"],
  compareText: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["compareText"],
  smaller: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["smaller"],
  larger: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["larger"],
  unequal: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["unequal"],
  sparse: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sparse"],
  acoth: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["acoth"],
  atan2: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["atan2"],
  sec: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sec"],
  add: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["add"],
  dot: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["dot"],
  composition: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["composition"],
  isZero: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isZero"],
  abs: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["abs"],
  floor: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["floor"],
  multiply: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["multiply"],
  dotMultiply: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["dotMultiply"],
  re: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["re"],
  flatten: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["flatten"],
  resize: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["resize"],
  squeeze: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["squeeze"],
  pow: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["pow"],
  dotPow: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["dotPow"],
  rightArithShift: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["rightArithShift"],
  compareNatural: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["compareNatural"],
  equalText: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["equalText"],
  largerEq: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["largerEq"],
  partitionSelect: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["partitionSelect"],
  asech: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["asech"],
  tan: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["tan"],
  setDifference: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setDifference"],
  setIntersect: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setIntersect"],
  setMultiplicity: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setMultiplicity"],
  setSize: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setSize"],
  trace: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["trace"],
  quantileSeq: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["quantileSeq"],
  gamma: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["gamma"],
  bignumber: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bignumber"],
  lcm: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["lcm"],
  bitOr: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bitOr"],
  kron: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["kron"],
  transpose: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["transpose"],
  numeric: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["numeric"],
  and: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["and"],
  smallerEq: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["smallerEq"],
  sort: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sort"],
  min: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["min"],
  cot: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["cot"],
  setDistinct: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setDistinct"],
  setPowerset: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setPowerset"],
  index: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["index"],
  sum: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sum"],
  factorial: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["factorial"],
  permutations: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["permutations"],
  ceil: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ceil"],
  subtract: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subtract"],
  cross: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["cross"],
  range: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["range"],
  ctranspose: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ctranspose"],
  divideScalar: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["divideScalar"],
  nthRoots: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["nthRoots"],
  lsolve: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["lsolve"],
  equal: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["equal"],
  max: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["max"],
  setCartesian: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setCartesian"],
  setSymDifference: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setSymDifference"],
  hypot: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["hypot"],
  qr: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["qr"],
  distance: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["distance"],
  stirlingS2: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["stirlingS2"],
  catalan: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["catalan"],
  fix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["fix"],
  column: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["column"],
  row: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["row"],
  log: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["log"],
  dotDivide: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["dotDivide"],
  deepEqual: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["deepEqual"],
  createUnit: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["createUnit"],
  setUnion: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setUnion"],
  slu: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["slu"],
  intersect: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["intersect"],
  bellNumbers: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bellNumbers"],
  atomicMass: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["atomicMass"],
  bohrMagneton: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bohrMagneton"],
  boltzmann: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["boltzmann"],
  conductanceQuantum: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["conductanceQuantum"],
  deuteronMass: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["deuteronMass"],
  electronMass: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["electronMass"],
  faraday: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["faraday"],
  firstRadiation: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["firstRadiation"],
  gravitationConstant: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["gravitationConstant"],
  hartreeEnergy: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["hartreeEnergy"],
  klitzing: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["klitzing"],
  magneticConstant: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["magneticConstant"],
  molarMass: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["molarMass"],
  molarPlanckConstant: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["molarPlanckConstant"],
  neutronMass: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["neutronMass"],
  planckCharge: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["planckCharge"],
  planckLength: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["planckLength"],
  planckTemperature: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["planckTemperature"],
  protonMass: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["protonMass"],
  reducedPlanckConstant: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["reducedPlanckConstant"],
  secondRadiation: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["secondRadiation"],
  stefanBoltzmann: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["stefanBoltzmann"],
  vacuumImpedance: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["vacuumImpedance"],
  xor: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["xor"],
  prod: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["prod"],
  usolve: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["usolve"],
  unit: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["unit"],
  avogadro: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["avogadro"],
  classicalElectronRadius: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["classicalElectronRadius"],
  electricConstant: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["electricConstant"],
  fermiCoupling: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["fermiCoupling"],
  gravity: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["gravity"],
  loschmidt: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["loschmidt"],
  molarMassC12: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["molarMassC12"],
  nuclearMagneton: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["nuclearMagneton"],
  planckMass: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["planckMass"],
  quantumOfCirculation: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["quantumOfCirculation"],
  speedOfLight: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["speedOfLight"],
  wienDisplacement: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["wienDisplacement"],
  diff: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["diff"],
  parse: parse,
  evaluate: evaluate,
  lup: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["lup"],
  det: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["det"],
  bohrRadius: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bohrRadius"],
  elementaryCharge: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["elementaryCharge"],
  inverseConductanceQuantum: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["inverseConductanceQuantum"],
  molarVolume: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["molarVolume"],
  planckTime: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["planckTime"],
  thomsonCrossSection: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["thomsonCrossSection"],
  log1p: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["log1p"],
  compile: compile,
  lusolve: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["lusolve"],
  inv: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["inv"],
  expm: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["expm"],
  divide: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["divide"],
  median: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["median"],
  variance: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["variance"],
  kldivergence: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["kldivergence"],
  simplify: simplify,
  rationalize: rationalize,
  gasConstant: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["gasConstant"],
  planckConstant: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["planckConstant"],
  setIsSubset: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["setIsSubset"],
  help: help,
  sqrtm: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sqrtm"],
  mad: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["mad"],
  multinomial: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["multinomial"],
  coulomb: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["coulomb"],
  rydberg: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["rydberg"],
  parser: parser,
  mean: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["mean"],
  derivative: derivative,
  eigs: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["eigs"],
  magneticFluxQuantum: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["magneticFluxQuantum"],
  norm: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["norm"],
  std: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["std"],
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});

_extends(mathWithTransform, math, {
  apply: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createApplyTransform"])({
    isInteger: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isInteger"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  filter: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFilterTransform"])({
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  map: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMapTransform"])({
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  forEach: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createForEachTransform"])({
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  subset: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSubsetTransform"])({
    matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  index: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIndexTransform"])({
    Index: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Index"]
  }),
  concat: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createConcatTransform"])({
    isInteger: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isInteger"],
    matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  max: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMaxTransform"])({
    config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
    larger: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["larger"],
    numeric: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["numeric"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  min: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMinTransform"])({
    config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
    numeric: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["numeric"],
    smaller: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["smaller"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  sum: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSumTransform"])({
    add: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["add"],
    config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
    numeric: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["numeric"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  column: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createColumnTransform"])({
    Index: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Index"],
    matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
    range: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["range"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  range: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRangeTransform"])({
    bignumber: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bignumber"],
    matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
    config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
    larger: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["larger"],
    largerEq: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["largerEq"],
    smaller: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["smaller"],
    smallerEq: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["smallerEq"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  diff: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDiffTransform"])({
    bignumber: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["bignumber"],
    matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
    number: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["number"],
    subtract: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subtract"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  row: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRowTransform"])({
    Index: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Index"],
    matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["matrix"],
    range: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["range"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  mean: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMeanTransform"])({
    add: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["add"],
    divide: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["divide"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  variance: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createVarianceTransform"])({
    add: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["add"],
    apply: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["apply"],
    divide: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["divide"],
    isNaN: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["isNaN"],
    multiply: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["multiply"],
    subtract: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["subtract"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"]
  }),
  std: Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createStdTransform"])({
    sqrt: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["sqrt"],
    typed: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["typed"],
    variance: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["variance"]
  })
});

_extends(classes, {
  ResultSet: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ResultSet"],
  Complex: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Complex"],
  Range: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Range"],
  Node: Node,
  ArrayNode: ArrayNode,
  BlockNode: BlockNode,
  ConstantNode: ConstantNode,
  ObjectNode: ObjectNode,
  ParenthesisNode: ParenthesisNode,
  RelationalNode: RelationalNode,
  Chain: Chain,
  BigNumber: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["BigNumber"],
  Matrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Matrix"],
  ConditionalNode: ConditionalNode,
  OperatorNode: OperatorNode,
  Fraction: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Fraction"],
  RangeNode: RangeNode,
  DenseMatrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["DenseMatrix"],
  FunctionAssignmentNode: FunctionAssignmentNode,
  SparseMatrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["SparseMatrix"],
  ImmutableDenseMatrix: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ImmutableDenseMatrix"],
  FibonacciHeap: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["FibonacciHeap"],
  AccessorNode: AccessorNode,
  IndexNode: IndexNode,
  Index: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Index"],
  AssignmentNode: AssignmentNode,
  Unit: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Unit"],
  SymbolNode: SymbolNode,
  FunctionNode: FunctionNode,
  Spa: _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Spa"],
  Help: Help,
  Parser: Parser
});

Chain.createProxy(math);


/***/ }),

/***/ "../node_modules/mathjs/es/entry/mainAny.js":
/*!**************************************************!*\
  !*** ../node_modules/mathjs/es/entry/mainAny.js ***!
  \**************************************************/
/*! exports provided: config, ResultSet, Complex, Range, _false, _null, _true, BigNumber, Matrix, replacer, i, LN10, LOG10E, _NaN, pi, SQRT1_2, tau, efimovFactor, fineStructure, sackurTetrode, weakMixingAngle, Fraction, e, _Infinity, LOG2E, version, DenseMatrix, phi, typed, isInteger, isNumeric, isPositive, isNaN, equalScalar, number, boolean, complex, splitUnit, unaryPlus, apply, cube, expm1, log10, multiplyScalar, sign, square, bitNot, arg, im, not, filter, forEach, map, erf, format, isPrime, acos, acot, acsc, asec, asin, atan, atanh, cosh, coth, csch, sech, sinh, tanh, combinations, pickRandom, randomInt, LN2, clone, hasNumericValue, typeOf, string, fraction, unaryMinus, addScalar, exp, log2, sqrt, conj, getMatrixDataType, mode, print, acosh, acsch, asinh, cos, csc, sin, combinationsWithRep, random, SQRT2, isNegative, SparseMatrix, matrix, cbrt, gcd, mod, nthRoot, xgcd, bitAnd, bitXor, or, concat, diag, identity, ones, reshape, size, subset, zeros, to, round, leftShift, rightLogShift, compare, compareText, smaller, larger, unequal, ImmutableDenseMatrix, FibonacciHeap, sparse, acoth, atan2, sec, add, dot, composition, isZero, abs, floor, multiply, dotMultiply, re, flatten, resize, squeeze, pow, dotPow, rightArithShift, compareNatural, equalText, largerEq, partitionSelect, Index, asech, tan, setDifference, setIntersect, setMultiplicity, setSize, trace, quantileSeq, gamma, bignumber, lcm, bitOr, kron, transpose, numeric, and, smallerEq, sort, min, cot, setDistinct, setPowerset, index, sum, factorial, permutations, ceil, subtract, cross, range, ctranspose, divideScalar, nthRoots, lsolve, equal, max, setCartesian, setSymDifference, hypot, qr, distance, stirlingS2, catalan, fix, column, row, log, dotDivide, deepEqual, Unit, createUnit, setUnion, slu, intersect, bellNumbers, atomicMass, bohrMagneton, boltzmann, conductanceQuantum, deuteronMass, electronMass, faraday, firstRadiation, gravitationConstant, hartreeEnergy, klitzing, magneticConstant, molarMass, molarPlanckConstant, neutronMass, planckCharge, planckLength, planckTemperature, protonMass, reducedPlanckConstant, secondRadiation, stefanBoltzmann, vacuumImpedance, xor, prod, usolve, unit, avogadro, classicalElectronRadius, electricConstant, fermiCoupling, gravity, loschmidt, molarMassC12, nuclearMagneton, planckMass, quantumOfCirculation, speedOfLight, wienDisplacement, diff, Spa, lup, det, bohrRadius, elementaryCharge, inverseConductanceQuantum, molarVolume, planckTime, thomsonCrossSection, log1p, lusolve, inv, expm, divide, median, variance, kldivergence, gasConstant, planckConstant, setIsSubset, sqrtm, mad, multinomial, coulomb, rydberg, mean, eigs, magneticFluxQuantum, norm, std, Node, ArrayNode, BlockNode, ConstantNode, ObjectNode, ParenthesisNode, RelationalNode, Chain, reviver, ConditionalNode, OperatorNode, RangeNode, FunctionAssignmentNode, chain, AccessorNode, IndexNode, AssignmentNode, SymbolNode, FunctionNode, parse, evaluate, Help, compile, simplify, rationalize, Parser, help, parser, derivative, docs, isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigNumber, isBlockNode, isBoolean, isChain, isCollection, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMatrix, isNode, isNull, isNumber, isString, isUndefined, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isResultSet, isSparseMatrix, isSymbolNode, isUnit, IndexError, DimensionError, ArgumentsError, typedDependencies, ResultSetDependencies, BigNumberDependencies, ComplexDependencies, FractionDependencies, RangeDependencies, MatrixDependencies, DenseMatrixDependencies, cloneDependencies, isIntegerDependencies, isNegativeDependencies, isNumericDependencies, hasNumericValueDependencies, isPositiveDependencies, isZeroDependencies, isNaNDependencies, typeOfDependencies, equalScalarDependencies, SparseMatrixDependencies, numberDependencies, stringDependencies, booleanDependencies, bignumberDependencies, complexDependencies, fractionDependencies, matrixDependencies, splitUnitDependencies, unaryMinusDependencies, unaryPlusDependencies, absDependencies, applyDependencies, addScalarDependencies, cbrtDependencies, ceilDependencies, cubeDependencies, expDependencies, expm1Dependencies, fixDependencies, floorDependencies, gcdDependencies, lcmDependencies, log10Dependencies, log2Dependencies, modDependencies, multiplyScalarDependencies, multiplyDependencies, nthRootDependencies, signDependencies, sqrtDependencies, squareDependencies, subtractDependencies, xgcdDependencies, dotMultiplyDependencies, bitAndDependencies, bitNotDependencies, bitOrDependencies, bitXorDependencies, argDependencies, conjDependencies, imDependencies, reDependencies, notDependencies, orDependencies, xorDependencies, concatDependencies, columnDependencies, crossDependencies, diagDependencies, filterDependencies, flattenDependencies, forEachDependencies, getMatrixDataTypeDependencies, identityDependencies, kronDependencies, mapDependencies, diffDependencies, onesDependencies, rangeDependencies, reshapeDependencies, resizeDependencies, rowDependencies, sizeDependencies, squeezeDependencies, subsetDependencies, transposeDependencies, ctransposeDependencies, zerosDependencies, erfDependencies, modeDependencies, prodDependencies, formatDependencies, printDependencies, toDependencies, isPrimeDependencies, numericDependencies, divideScalarDependencies, powDependencies, roundDependencies, logDependencies, log1pDependencies, nthRootsDependencies, dotPowDependencies, dotDivideDependencies, lsolveDependencies, usolveDependencies, leftShiftDependencies, rightArithShiftDependencies, rightLogShiftDependencies, andDependencies, compareDependencies, compareNaturalDependencies, compareTextDependencies, equalDependencies, equalTextDependencies, smallerDependencies, smallerEqDependencies, largerDependencies, largerEqDependencies, deepEqualDependencies, unequalDependencies, partitionSelectDependencies, sortDependencies, maxDependencies, minDependencies, ImmutableDenseMatrixDependencies, IndexDependencies, FibonacciHeapDependencies, SpaDependencies, UnitDependencies, unitDependencies, sparseDependencies, createUnitDependencies, acosDependencies, acoshDependencies, acotDependencies, acothDependencies, acscDependencies, acschDependencies, asecDependencies, asechDependencies, asinDependencies, asinhDependencies, atanDependencies, atan2Dependencies, atanhDependencies, cosDependencies, coshDependencies, cotDependencies, cothDependencies, cscDependencies, cschDependencies, secDependencies, sechDependencies, sinDependencies, sinhDependencies, tanDependencies, tanhDependencies, setCartesianDependencies, setDifferenceDependencies, setDistinctDependencies, setIntersectDependencies, setIsSubsetDependencies, setMultiplicityDependencies, setPowersetDependencies, setSizeDependencies, setSymDifferenceDependencies, setUnionDependencies, addDependencies, hypotDependencies, normDependencies, dotDependencies, traceDependencies, indexDependencies, NodeDependencies, AccessorNodeDependencies, ArrayNodeDependencies, AssignmentNodeDependencies, BlockNodeDependencies, ConditionalNodeDependencies, ConstantNodeDependencies, FunctionAssignmentNodeDependencies, IndexNodeDependencies, ObjectNodeDependencies, OperatorNodeDependencies, ParenthesisNodeDependencies, RangeNodeDependencies, RelationalNodeDependencies, SymbolNodeDependencies, FunctionNodeDependencies, parseDependencies, compileDependencies, evaluateDependencies, ParserDependencies, parserDependencies, lupDependencies, qrDependencies, sluDependencies, lusolveDependencies, HelpDependencies, ChainDependencies, helpDependencies, chainDependencies, detDependencies, invDependencies, eigsDependencies, expmDependencies, sqrtmDependencies, divideDependencies, distanceDependencies, intersectDependencies, sumDependencies, meanDependencies, medianDependencies, madDependencies, varianceDependencies, quantileSeqDependencies, stdDependencies, combinationsDependencies, combinationsWithRepDependencies, gammaDependencies, factorialDependencies, kldivergenceDependencies, multinomialDependencies, permutationsDependencies, pickRandomDependencies, randomDependencies, randomIntDependencies, stirlingS2Dependencies, bellNumbersDependencies, catalanDependencies, compositionDependencies, simplifyDependencies, derivativeDependencies, rationalizeDependencies, reviverDependencies, replacerDependencies, eDependencies, EDependencies, falseDependencies, iDependencies, InfinityDependencies, LN10Dependencies, LN2Dependencies, LOG10EDependencies, LOG2EDependencies, NaNDependencies, nullDependencies, phiDependencies, piDependencies, PIDependencies, SQRT1_2Dependencies, SQRT2Dependencies, tauDependencies, trueDependencies, versionDependencies, atomicMassDependencies, avogadroDependencies, bohrMagnetonDependencies, bohrRadiusDependencies, boltzmannDependencies, classicalElectronRadiusDependencies, conductanceQuantumDependencies, coulombDependencies, deuteronMassDependencies, efimovFactorDependencies, electricConstantDependencies, electronMassDependencies, elementaryChargeDependencies, faradayDependencies, fermiCouplingDependencies, fineStructureDependencies, firstRadiationDependencies, gasConstantDependencies, gravitationConstantDependencies, gravityDependencies, hartreeEnergyDependencies, inverseConductanceQuantumDependencies, klitzingDependencies, loschmidtDependencies, magneticConstantDependencies, magneticFluxQuantumDependencies, molarMassDependencies, molarMassC12Dependencies, molarPlanckConstantDependencies, molarVolumeDependencies, neutronMassDependencies, nuclearMagnetonDependencies, planckChargeDependencies, planckConstantDependencies, planckLengthDependencies, planckMassDependencies, planckTemperatureDependencies, planckTimeDependencies, protonMassDependencies, quantumOfCirculationDependencies, reducedPlanckConstantDependencies, rydbergDependencies, sackurTetrodeDependencies, secondRadiationDependencies, speedOfLightDependencies, stefanBoltzmannDependencies, thomsonCrossSectionDependencies, vacuumImpedanceDependencies, weakMixingAngleDependencies, wienDisplacementDependencies, applyTransformDependencies, columnTransformDependencies, filterTransformDependencies, forEachTransformDependencies, indexTransformDependencies, mapTransformDependencies, maxTransformDependencies, meanTransformDependencies, minTransformDependencies, rangeTransformDependencies, rowTransformDependencies, subsetTransformDependencies, concatTransformDependencies, diffTransformDependencies, stdTransformDependencies, sumTransformDependencies, varianceTransformDependencies, all, createTyped, createResultSet, createBigNumberClass, createComplexClass, createFractionClass, createRangeClass, createMatrixClass, createDenseMatrixClass, createClone, createIsInteger, createIsNegative, createIsNumeric, createHasNumericValue, createIsPositive, createIsZero, createIsNaN, createTypeOf, createEqualScalar, createSparseMatrixClass, createNumber, createString, createBoolean, createBignumber, createComplex, createFraction, createMatrix, createSplitUnit, createUnaryMinus, createUnaryPlus, createAbs, createApply, createAddScalar, createCbrt, createCeil, createCube, createExp, createExpm1, createFix, createFloor, createGcd, createLcm, createLog10, createLog2, createMod, createMultiplyScalar, createMultiply, createNthRoot, createSign, createSqrt, createSquare, createSubtract, createXgcd, createDotMultiply, createBitAnd, createBitNot, createBitOr, createBitXor, createArg, createConj, createIm, createRe, createNot, createOr, createXor, createConcat, createColumn, createCross, createDiag, createFilter, createFlatten, createForEach, createGetMatrixDataType, createIdentity, createKron, createMap, createDiff, createOnes, createRange, createReshape, createResize, createRow, createSize, createSqueeze, createSubset, createTranspose, createCtranspose, createZeros, createErf, createMode, createProd, createFormat, createPrint, createTo, createIsPrime, createNumeric, createDivideScalar, createPow, createRound, createLog, createLog1p, createNthRoots, createDotPow, createDotDivide, createLsolve, createUsolve, createLeftShift, createRightArithShift, createRightLogShift, createAnd, createCompare, createCompareNatural, createCompareText, createEqual, createEqualText, createSmaller, createSmallerEq, createLarger, createLargerEq, createDeepEqual, createUnequal, createPartitionSelect, createSort, createMax, createMin, createImmutableDenseMatrixClass, createIndexClass, createFibonacciHeapClass, createSpaClass, createUnitClass, createUnitFunction, createSparse, createCreateUnit, createAcos, createAcosh, createAcot, createAcoth, createAcsc, createAcsch, createAsec, createAsech, createAsin, createAsinh, createAtan, createAtan2, createAtanh, createCos, createCosh, createCot, createCoth, createCsc, createCsch, createSec, createSech, createSin, createSinh, createTan, createTanh, createSetCartesian, createSetDifference, createSetDistinct, createSetIntersect, createSetIsSubset, createSetMultiplicity, createSetPowerset, createSetSize, createSetSymDifference, createSetUnion, createAdd, createHypot, createNorm, createDot, createTrace, createIndex, createNode, createAccessorNode, createArrayNode, createAssignmentNode, createBlockNode, createConditionalNode, createConstantNode, createFunctionAssignmentNode, createIndexNode, createObjectNode, createOperatorNode, createParenthesisNode, createRangeNode, createRelationalNode, createSymbolNode, createFunctionNode, createParse, createCompile, createEvaluate, createParserClass, createParser, createLup, createQr, createSlu, createLusolve, createHelpClass, createChainClass, createHelp, createChain, createDet, createInv, createEigs, createExpm, createSqrtm, createDivide, createDistance, createIntersect, createSum, createMean, createMedian, createMad, createVariance, createQuantileSeq, createStd, createCombinations, createCombinationsWithRep, createGamma, createFactorial, createKldivergence, createMultinomial, createPermutations, createPickRandom, createRandom, createRandomInt, createStirlingS2, createBellNumbers, createCatalan, createComposition, createSimplify, createDerivative, createRationalize, createReviver, createReplacer, createE, createUppercaseE, createFalse, createI, createInfinity, createLN10, createLN2, createLOG10E, createLOG2E, createNaN, createNull, createPhi, createPi, createUppercasePi, createSQRT1_2, createSQRT2, createTau, createTrue, createVersion, createAtomicMass, createAvogadro, createBohrMagneton, createBohrRadius, createBoltzmann, createClassicalElectronRadius, createConductanceQuantum, createCoulomb, createDeuteronMass, createEfimovFactor, createElectricConstant, createElectronMass, createElementaryCharge, createFaraday, createFermiCoupling, createFineStructure, createFirstRadiation, createGasConstant, createGravitationConstant, createGravity, createHartreeEnergy, createInverseConductanceQuantum, createKlitzing, createLoschmidt, createMagneticConstant, createMagneticFluxQuantum, createMolarMass, createMolarMassC12, createMolarPlanckConstant, createMolarVolume, createNeutronMass, createNuclearMagneton, createPlanckCharge, createPlanckConstant, createPlanckLength, createPlanckMass, createPlanckTemperature, createPlanckTime, createProtonMass, createQuantumOfCirculation, createReducedPlanckConstant, createRydberg, createSackurTetrode, createSecondRadiation, createSpeedOfLight, createStefanBoltzmann, createThomsonCrossSection, createVacuumImpedance, createWeakMixingAngle, createWienDisplacement, createApplyTransform, createColumnTransform, createFilterTransform, createForEachTransform, createIndexTransform, createMapTransform, createMaxTransform, createMeanTransform, createMinTransform, createRangeTransform, createRowTransform, createSubsetTransform, createConcatTransform, createDiffTransform, createStdTransform, createSumTransform, createVarianceTransform, create, factory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _configReadonly__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configReadonly */ "../node_modules/mathjs/es/entry/configReadonly.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]; });

/* harmony import */ var _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pureFunctionsAny.generated */ "../node_modules/mathjs/es/entry/pureFunctionsAny.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResultSet", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["ResultSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["Complex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["Range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_false", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["_false"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_null", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["_null"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_true", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["_true"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BigNumber", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["BigNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Matrix", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["Matrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replacer", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["replacer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "i", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["i"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN10", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["LN10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG10E", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["LOG10E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_NaN", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["_NaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["pi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT1_2", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["SQRT1_2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["tau"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "efimovFactor", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["efimovFactor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fineStructure", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["fineStructure"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sackurTetrode", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sackurTetrode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "weakMixingAngle", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["weakMixingAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Fraction", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["Fraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "e", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["e"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_Infinity", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["_Infinity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG2E", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["LOG2E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["version"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DenseMatrix", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["DenseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["phi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typed", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["typed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isInteger", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["isInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["isNumeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPositive", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["isPositive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["isNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalScalar", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["equalScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "number", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["number"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["boolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "complex", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["complex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitUnit", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["splitUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryPlus", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["unaryPlus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "apply", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["apply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cube", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["cube"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm1", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["expm1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log10", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["log10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["multiplyScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sign"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "square", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["square"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitNot", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bitNot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arg", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["arg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "im", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["im"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "not", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["not"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["filter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["forEach"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["map"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "erf", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["erf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrime", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["isPrime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["acos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acot", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["acot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acsc", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["acsc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asec", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["asec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["asin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["atan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanh", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["atanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cosh", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["cosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coth", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["coth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csch", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["csch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sech", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinh", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanh", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["tanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinations", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["combinations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pickRandom", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["pickRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomInt", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["randomInt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN2", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["LN2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["clone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasNumericValue", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["hasNumericValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeOf", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["typeOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "string", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["string"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fraction", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["fraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryMinus", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["unaryMinus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addScalar", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["addScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["exp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log2", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["log2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conj", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["conj"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataType", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["getMatrixDataType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mode", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["mode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "print", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["print"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acosh", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["acosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acsch", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["acsch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinh", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["asinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["cos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csc", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["csc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRep", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["combinationsWithRep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["random"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT2", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["SQRT2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNegative", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["isNegative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SparseMatrix", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["SparseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matrix", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["matrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cbrt", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["cbrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gcd", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["gcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mod", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["mod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRoot", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["nthRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xgcd", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["xgcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitAnd", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bitAnd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitXor", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bitXor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "or", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["or"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["concat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diag", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["diag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ones", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["ones"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reshape", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["reshape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "size", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subset", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["subset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zeros", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["zeros"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "to", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["to"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "round", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["round"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leftShift", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["leftShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightLogShift", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["rightLogShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["compare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareText", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["compareText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smaller", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["smaller"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "larger", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["larger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unequal", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["unequal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImmutableDenseMatrix", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["ImmutableDenseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FibonacciHeap", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["FibonacciHeap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sparse", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sparse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acoth", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["acoth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["atan2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sec", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "add", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["add"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["dot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "composition", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["composition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isZero", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["isZero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["abs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["floor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["multiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotMultiply", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["dotMultiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "re", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["re"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["flatten"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resize", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["resize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squeeze", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["squeeze"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["pow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotPow", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["dotPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightArithShift", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["rightArithShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareNatural", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["compareNatural"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalText", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["equalText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerEq", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["largerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partitionSelect", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["partitionSelect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["Index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asech", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["asech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["tan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDifference", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIntersect", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setIntersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMultiplicity", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setMultiplicity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSize", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trace", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["trace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantileSeq", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["quantileSeq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["gamma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bignumber", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bignumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lcm", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["lcm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitOr", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bitOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kron", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["kron"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["transpose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numeric", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["numeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "and", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["and"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerEq", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["smallerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sort", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sort"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["min"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cot", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["cot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDistinct", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setDistinct"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setPowerset", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setPowerset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "index", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "factorial", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["factorial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permutations", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["permutations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["ceil"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["subtract"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["cross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ctranspose", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["ctranspose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideScalar", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["divideScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRoots", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["nthRoots"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lsolve", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["lsolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equal", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["equal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["max"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCartesian", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setCartesian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSymDifference", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setSymDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hypot", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["hypot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "qr", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["qr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["distance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stirlingS2", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["stirlingS2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catalan", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["catalan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fix", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["fix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "column", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["column"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "row", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["row"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["log"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDivide", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["dotDivide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deepEqual", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["deepEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Unit", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["Unit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnit", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["createUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setUnion", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setUnion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "slu", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["slu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["intersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bellNumbers", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bellNumbers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atomicMass", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["atomicMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrMagneton", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bohrMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boltzmann", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["boltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conductanceQuantum", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["conductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deuteronMass", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["deuteronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electronMass", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["electronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "faraday", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["faraday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "firstRadiation", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["firstRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravitationConstant", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["gravitationConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hartreeEnergy", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["hartreeEnergy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "klitzing", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["klitzing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticConstant", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["magneticConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMass", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["molarMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarPlanckConstant", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["molarPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neutronMass", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["neutronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckCharge", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["planckCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckLength", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["planckLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTemperature", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["planckTemperature"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "protonMass", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["protonMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reducedPlanckConstant", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["reducedPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secondRadiation", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["secondRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stefanBoltzmann", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["stefanBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vacuumImpedance", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["vacuumImpedance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xor", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["xor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prod", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["prod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "usolve", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["usolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unit", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["unit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "avogadro", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["avogadro"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classicalElectronRadius", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["classicalElectronRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electricConstant", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["electricConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fermiCoupling", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["fermiCoupling"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravity", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["gravity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loschmidt", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["loschmidt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassC12", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["molarMassC12"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nuclearMagneton", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["nuclearMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckMass", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["planckMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantumOfCirculation", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["quantumOfCirculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "speedOfLight", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["speedOfLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wienDisplacement", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["wienDisplacement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diff", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["diff"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Spa", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["Spa"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lup", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["lup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "det", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["det"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrRadius", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["bohrRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementaryCharge", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["elementaryCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inverseConductanceQuantum", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["inverseConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarVolume", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["molarVolume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTime", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["planckTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thomsonCrossSection", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["thomsonCrossSection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log1p", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["log1p"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lusolve", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["lusolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inv", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["inv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["expm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["divide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["median"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["variance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kldivergence", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["kldivergence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gasConstant", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["gasConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckConstant", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["planckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIsSubset", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["setIsSubset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtm", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["sqrtm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mad", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["mad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multinomial", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["multinomial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coulomb", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["coulomb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rydberg", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["rydberg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["mean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eigs", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["eigs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticFluxQuantum", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["magneticFluxQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "norm", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["norm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "std", function() { return _pureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_1__["std"]; });

/* harmony import */ var _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./impureFunctionsAny.generated */ "../node_modules/mathjs/es/entry/impureFunctionsAny.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Node", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Node"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ArrayNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["BlockNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConstantNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ConstantNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ObjectNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParenthesisNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ParenthesisNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RelationalNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["RelationalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chain", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Chain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reviver", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["reviver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConditionalNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["ConditionalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OperatorNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["OperatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["RangeNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionAssignmentNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["FunctionAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["chain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccessorNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["AccessorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["IndexNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssignmentNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["AssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SymbolNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["SymbolNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionNode", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["FunctionNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["parse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "evaluate", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["evaluate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Help", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Help"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["compile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simplify", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["simplify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rationalize", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["rationalize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Parser", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["Parser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "help", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["help"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parser", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["parser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "derivative", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["derivative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "docs", function() { return _impureFunctionsAny_generated__WEBPACK_IMPORTED_MODULE_2__["docs"]; });

/* harmony import */ var _typeChecks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./typeChecks */ "../node_modules/mathjs/es/entry/typeChecks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAccessorNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isAccessorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isArrayNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAssignmentNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBigNumber", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isBigNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBlockNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isBlockNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isChain", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isChain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCollection", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isComplex", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isComplex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isConditionalNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isConditionalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isConstantNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isConstantNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDenseMatrix", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isDenseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFraction", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isFraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunctionAssignmentNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isFunctionAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunctionNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isFunctionNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isHelp", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isHelp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIndex", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIndexNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isIndexNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatrix", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isObjectNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isOperatorNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isOperatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isParenthesisNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isParenthesisNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRange", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRangeNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isRangeNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isRegExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isResultSet", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isResultSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSparseMatrix", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isSparseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbolNode", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isSymbolNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUnit", function() { return _typeChecks__WEBPACK_IMPORTED_MODULE_3__["isUnit"]; });

/* harmony import */ var _error_IndexError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/IndexError */ "../node_modules/mathjs/es/error/IndexError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexError", function() { return _error_IndexError__WEBPACK_IMPORTED_MODULE_4__["IndexError"]; });

/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DimensionError", function() { return _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__["DimensionError"]; });

/* harmony import */ var _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/ArgumentsError */ "../node_modules/mathjs/es/error/ArgumentsError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArgumentsError", function() { return _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_6__["ArgumentsError"]; });

/* harmony import */ var _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dependenciesAny.generated */ "../node_modules/mathjs/es/entry/dependenciesAny.generated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typedDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["typedDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResultSetDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ResultSetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BigNumberDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["BigNumberDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComplexDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ComplexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FractionDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["FractionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["RangeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MatrixDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["MatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DenseMatrixDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["DenseMatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cloneDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIntegerDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["isIntegerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNegativeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["isNegativeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumericDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["isNumericDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasNumericValueDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["hasNumericValueDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPositiveDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["isPositiveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isZeroDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["isZeroDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaNDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["isNaNDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeOfDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["typeOfDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalScalarDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["equalScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SparseMatrixDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["SparseMatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numberDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["numberDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["stringDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "booleanDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["booleanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bignumberDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bignumberDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "complexDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["complexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fractionDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["fractionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matrixDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["matrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitUnitDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["splitUnitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryMinusDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["unaryMinusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryPlusDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["unaryPlusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "absDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["absDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["applyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addScalarDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["addScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cbrtDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cbrtDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceilDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ceilDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cubeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["expDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm1Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["expm1Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fixDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["fixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floorDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["floorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gcdDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["gcdDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lcmDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["lcmDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log10Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["log10Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log2Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["log2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["modDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["multiplyScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["multiplyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRootDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["nthRootDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["signDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sqrtDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squareDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["squareDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtractDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["subtractDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xgcdDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["xgcdDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotMultiplyDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["dotMultiplyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitAndDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bitAndDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitNotDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bitNotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitOrDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bitOrDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitXorDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bitXorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "argDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["argDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conjDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["conjDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "imDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["imDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["reDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "notDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["notDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["orDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["xorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["concatDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "columnDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["columnDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "crossDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["crossDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diagDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["diagDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["filterDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flattenDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["flattenDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["forEachDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataTypeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["getMatrixDataTypeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identityDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["identityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kronDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["kronDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["mapDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diffDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["diffDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onesDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["onesDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rangeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reshapeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["reshapeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resizeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["resizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rowDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rowDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sizeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squeezeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["squeezeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subsetDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["subsetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transposeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["transposeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ctransposeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ctransposeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zerosDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["zerosDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "erfDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["erfDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["modeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prodDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["prodDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["formatDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "printDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["printDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["toDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrimeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["isPrimeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numericDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["numericDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideScalarDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["divideScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "powDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["powDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["roundDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["logDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log1pDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["log1pDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRootsDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["nthRootsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotPowDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["dotPowDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDivideDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["dotDivideDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lsolveDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["lsolveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "usolveDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["usolveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leftShiftDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["leftShiftDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rightArithShiftDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightLogShiftDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rightLogShiftDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "andDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["andDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["compareDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareNaturalDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["compareNaturalDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareTextDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["compareTextDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["equalDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalTextDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["equalTextDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["smallerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerEqDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["smallerEqDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["largerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerEqDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["largerEqDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deepEqualDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["deepEqualDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unequalDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["unequalDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partitionSelectDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["partitionSelectDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sortDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["maxDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["minDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImmutableDenseMatrixDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ImmutableDenseMatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["IndexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FibonacciHeapDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["FibonacciHeapDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpaDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["SpaDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnitDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["UnitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unitDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["unitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sparseDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sparseDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["createUnitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acosDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["acosDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acoshDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["acoshDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acotDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["acotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acothDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["acothDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acscDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["acscDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acschDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["acschDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asecDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["asecDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asechDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["asechDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["asinDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinhDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["asinhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["atanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan2Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["atan2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanhDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["atanhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cosDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cosDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coshDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["coshDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cotDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cothDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cothDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cscDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cscDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cschDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["cschDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["secDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sechDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sechDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sinDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinhDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sinhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["tanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanhDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["tanhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCartesianDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setCartesianDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDifferenceDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setDifferenceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDistinctDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setDistinctDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIntersectDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setIntersectDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIsSubsetDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setIsSubsetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMultiplicityDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setMultiplicityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setPowersetDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setPowersetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSizeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setSizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSymDifferenceDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setSymDifferenceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setUnionDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["setUnionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["addDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hypotDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["hypotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "normDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["normDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["dotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "traceDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["traceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["indexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["NodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccessorNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["AccessorNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ArrayNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssignmentNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["AssignmentNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["BlockNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConditionalNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ConditionalNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConstantNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ConstantNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionAssignmentNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["FunctionAssignmentNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["IndexNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ObjectNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OperatorNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["OperatorNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParenthesisNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ParenthesisNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["RangeNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RelationalNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["RelationalNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SymbolNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["SymbolNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionNodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["FunctionNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["parseDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compileDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["compileDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "evaluateDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["evaluateDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParserDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ParserDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parserDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["parserDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lupDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["lupDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "qrDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["qrDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sluDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sluDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lusolveDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["lusolveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HelpDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["HelpDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChainDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["ChainDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "helpDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["helpDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chainDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["chainDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["detDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["invDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eigsDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["eigsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expmDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["expmDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtmDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sqrtmDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["divideDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distanceDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["distanceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["intersectDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["meanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "medianDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["medianDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "madDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["madDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "varianceDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["varianceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantileSeqDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["quantileSeqDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stdDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["stdDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["combinationsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRepDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["combinationsWithRepDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gammaDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["gammaDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "factorialDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["factorialDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kldivergenceDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["kldivergenceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multinomialDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["multinomialDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permutationsDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["permutationsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pickRandomDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["pickRandomDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["randomDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomIntDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["randomIntDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stirlingS2Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["stirlingS2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bellNumbersDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bellNumbersDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catalanDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["catalanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compositionDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["compositionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simplifyDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["simplifyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "derivativeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["derivativeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rationalizeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rationalizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reviverDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["reviverDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replacerDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["replacerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["eDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["EDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "falseDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["falseDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["iDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InfinityDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["InfinityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN10Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["LN10Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN2Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["LN2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG10EDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["LOG10EDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG2EDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["LOG2EDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NaNDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["NaNDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["nullDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "phiDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["phiDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["piDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PIDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["PIDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT1_2Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["SQRT1_2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT2Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["SQRT2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tauDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["tauDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trueDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["trueDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "versionDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["versionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atomicMassDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["atomicMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "avogadroDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["avogadroDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrMagnetonDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bohrMagnetonDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrRadiusDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["bohrRadiusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boltzmannDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["boltzmannDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classicalElectronRadiusDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["classicalElectronRadiusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conductanceQuantumDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["conductanceQuantumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coulombDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["coulombDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deuteronMassDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["deuteronMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "efimovFactorDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["efimovFactorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electricConstantDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["electricConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electronMassDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["electronMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementaryChargeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["elementaryChargeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "faradayDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["faradayDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fermiCouplingDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["fermiCouplingDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fineStructureDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["fineStructureDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "firstRadiationDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["firstRadiationDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gasConstantDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["gasConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravitationConstantDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["gravitationConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravityDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["gravityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hartreeEnergyDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["hartreeEnergyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inverseConductanceQuantumDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["inverseConductanceQuantumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "klitzingDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["klitzingDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loschmidtDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["loschmidtDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticConstantDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["magneticConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticFluxQuantumDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["magneticFluxQuantumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["molarMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassC12Dependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["molarMassC12Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarPlanckConstantDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["molarPlanckConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarVolumeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["molarVolumeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neutronMassDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["neutronMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nuclearMagnetonDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["nuclearMagnetonDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckChargeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["planckChargeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckConstantDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["planckConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckLengthDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["planckLengthDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckMassDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["planckMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTemperatureDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["planckTemperatureDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTimeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["planckTimeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "protonMassDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["protonMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantumOfCirculationDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["quantumOfCirculationDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reducedPlanckConstantDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["reducedPlanckConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rydbergDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rydbergDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sackurTetrodeDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sackurTetrodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secondRadiationDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["secondRadiationDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "speedOfLightDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["speedOfLightDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stefanBoltzmannDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["stefanBoltzmannDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thomsonCrossSectionDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["thomsonCrossSectionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vacuumImpedanceDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["vacuumImpedanceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "weakMixingAngleDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["weakMixingAngleDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wienDisplacementDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["wienDisplacementDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["applyTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "columnTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["columnTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["filterTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["forEachTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["indexTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["mapTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["maxTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["meanTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["minTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rangeTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rowTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["rowTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subsetTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["subsetTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["concatTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diffTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["diffTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stdTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["stdTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["sumTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "varianceTransformDependencies", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["varianceTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "all", function() { return _dependenciesAny_generated__WEBPACK_IMPORTED_MODULE_7__["all"]; });

/* harmony import */ var _factoriesAny__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../factoriesAny */ "../node_modules/mathjs/es/factoriesAny.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTyped", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTyped"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createResultSet", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createResultSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBigNumberClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBigNumberClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComplexClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createComplexClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFractionClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFractionClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRangeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMatrixClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDenseMatrixClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDenseMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createClone", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createClone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsInteger", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIsInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNegative", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIsNegative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNumeric", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIsNumeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHasNumericValue", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createHasNumericValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsPositive", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIsPositive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsZero", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIsZero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNaN", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIsNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTypeOf", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTypeOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqualScalar", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createEqualScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSparseMatrixClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSparseMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNumber", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createString", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBoolean", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBignumber", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBignumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComplex", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createComplex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFraction", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMatrix", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSplitUnit", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSplitUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnaryMinus", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUnaryMinus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnaryPlus", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUnaryPlus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAbs", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAbs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createApply", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createApply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAddScalar", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAddScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCbrt", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCbrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCeil", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCeil"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCube", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCube"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExp", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExpm1", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createExpm1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFix", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFloor", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFloor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGcd", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createGcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLcm", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLcm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog10", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLog10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog2", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLog2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMod", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultiplyScalar", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMultiplyScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultiply", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMultiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNthRoot", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNthRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSign", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSign"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqrt", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSquare", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSquare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubtract", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSubtract"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createXgcd", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createXgcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotMultiply", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDotMultiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitAnd", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBitAnd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitNot", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBitNot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitOr", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBitOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitXor", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBitXor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createArg", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createArg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConj", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createConj"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIm", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRe", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNot", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOr", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createXor", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createXor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConcat", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createConcat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createColumn", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createColumn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCross", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiag", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDiag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFilter", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFlatten", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFlatten"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createForEach", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createForEach"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGetMatrixDataType", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createGetMatrixDataType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIdentity", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIdentity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKron", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createKron"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMap", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiff", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDiff"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOnes", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createOnes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRange", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReshape", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createReshape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createResize", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createResize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRow", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSize", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqueeze", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSqueeze"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubset", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSubset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTranspose", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTranspose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCtranspose", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCtranspose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createZeros", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createZeros"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createErf", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createErf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createProd", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createProd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFormat", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPrint", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPrint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTo", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsPrime", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIsPrime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNumeric", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNumeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDivideScalar", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDivideScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPow", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRound", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog1p", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLog1p"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNthRoots", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNthRoots"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotPow", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDotPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotDivide", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDotDivide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLsolve", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLsolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUsolve", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUsolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLeftShift", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLeftShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRightArithShift", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRightArithShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRightLogShift", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRightLogShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAnd", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAnd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompare", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCompare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompareNatural", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCompareNatural"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompareText", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCompareText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqual", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqualText", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createEqualText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSmaller", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSmaller"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSmallerEq", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSmallerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLarger", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLarger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLargerEq", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLargerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDeepEqual", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDeepEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnequal", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUnequal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPartitionSelect", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPartitionSelect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSort", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSort"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMax", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMax"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMin", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createImmutableDenseMatrixClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createImmutableDenseMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIndexClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFibonacciHeapClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFibonacciHeapClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSpaClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSpaClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUnitClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitFunction", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUnitFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSparse", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSparse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCreateUnit", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCreateUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcos", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAcos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcosh", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAcosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcot", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAcot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcoth", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAcoth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcsc", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAcsc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcsch", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAcsch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsec", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAsec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsech", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAsech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsin", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAsin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsinh", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAsinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtan", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAtan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtan2", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAtan2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtanh", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAtanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCos", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCosh", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCot", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCoth", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCoth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCsc", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCsc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCsch", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCsch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSec", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSech", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSin", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSinh", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTan", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTanh", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetCartesian", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetCartesian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetDifference", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetDistinct", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetDistinct"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetIntersect", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetIntersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetIsSubset", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetIsSubset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetMultiplicity", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetMultiplicity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetPowerset", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetPowerset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetSize", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetSymDifference", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetSymDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetUnion", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSetUnion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAdd", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAdd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHypot", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createHypot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNorm", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNorm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDot", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTrace", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTrace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndex", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAccessorNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAccessorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createArrayNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createArrayNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAssignmentNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBlockNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBlockNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConditionalNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createConditionalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConstantNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createConstantNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFunctionAssignmentNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFunctionAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIndexNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createObjectNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createObjectNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOperatorNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createOperatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParenthesisNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createParenthesisNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRangeNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRelationalNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRelationalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSymbolNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSymbolNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFunctionNode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFunctionNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParse", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompile", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCompile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEvaluate", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createEvaluate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParserClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createParserClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParser", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createParser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLup", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQr", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createQr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSlu", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSlu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLusolve", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLusolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHelpClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createHelpClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createChainClass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createChainClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHelp", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createHelp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createChain", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createChain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDet", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInv", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createInv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEigs", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createEigs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExpm", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createExpm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqrtm", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSqrtm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDivide", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDivide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDistance", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDistance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIntersect", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIntersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSum", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMean", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMedian", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMedian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMad", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVariance", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createVariance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQuantileSeq", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createQuantileSeq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStd", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createStd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCombinations", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCombinations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCombinationsWithRep", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCombinationsWithRep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGamma", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createGamma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFactorial", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFactorial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKldivergence", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createKldivergence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultinomial", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMultinomial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPermutations", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPermutations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPickRandom", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPickRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRandom", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRandomInt", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRandomInt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStirlingS2", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createStirlingS2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBellNumbers", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBellNumbers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCatalan", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCatalan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComposition", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createComposition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSimplify", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSimplify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDerivative", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDerivative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRationalize", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRationalize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReviver", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createReviver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReplacer", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createReplacer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createE", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUppercaseE", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUppercaseE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFalse", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFalse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createI", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInfinity", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createInfinity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLN10", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLN10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLN2", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLN2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLOG10E", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLOG10E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLOG2E", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLOG2E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNaN", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNull", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPhi", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPhi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPi", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUppercasePi", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createUppercasePi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSQRT1_2", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSQRT1_2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSQRT2", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSQRT2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTau", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTau"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTrue", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createTrue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVersion", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createVersion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtomicMass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAtomicMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAvogadro", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createAvogadro"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBohrMagneton", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBohrMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBohrRadius", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBohrRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBoltzmann", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createClassicalElectronRadius", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createClassicalElectronRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConductanceQuantum", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCoulomb", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createCoulomb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDeuteronMass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDeuteronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEfimovFactor", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createEfimovFactor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElectricConstant", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createElectricConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElectronMass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createElectronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElementaryCharge", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createElementaryCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFaraday", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFaraday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFermiCoupling", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFermiCoupling"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFineStructure", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFineStructure"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFirstRadiation", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFirstRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGasConstant", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createGasConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGravitationConstant", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createGravitationConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGravity", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createGravity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHartreeEnergy", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createHartreeEnergy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInverseConductanceQuantum", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createInverseConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKlitzing", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createKlitzing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLoschmidt", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createLoschmidt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMagneticConstant", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMagneticConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMagneticFluxQuantum", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMagneticFluxQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarMass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMolarMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarMassC12", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMolarMassC12"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarPlanckConstant", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMolarPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarVolume", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMolarVolume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNeutronMass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNeutronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNuclearMagneton", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createNuclearMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckCharge", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPlanckCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckConstant", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckLength", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPlanckLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckMass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPlanckMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckTemperature", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPlanckTemperature"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckTime", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createPlanckTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createProtonMass", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createProtonMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQuantumOfCirculation", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createQuantumOfCirculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReducedPlanckConstant", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createReducedPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRydberg", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRydberg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSackurTetrode", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSackurTetrode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSecondRadiation", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSecondRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSpeedOfLight", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSpeedOfLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStefanBoltzmann", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createStefanBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createThomsonCrossSection", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createThomsonCrossSection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVacuumImpedance", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createVacuumImpedance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createWeakMixingAngle", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createWeakMixingAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createWienDisplacement", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createWienDisplacement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createApplyTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createApplyTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createColumnTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createColumnTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFilterTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createFilterTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createForEachTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createForEachTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createIndexTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMapTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMapTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMaxTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMaxTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMeanTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMeanTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMinTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createMinTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRangeTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRowTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createRowTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubsetTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSubsetTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConcatTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createConcatTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiffTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createDiffTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStdTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createStdTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSumTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createSumTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVarianceTransform", function() { return _factoriesAny__WEBPACK_IMPORTED_MODULE_8__["createVarianceTransform"]; });

/* harmony import */ var _core_create__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/create */ "../node_modules/mathjs/es/core/create.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _core_create__WEBPACK_IMPORTED_MODULE_9__["create"]; });

/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "factory", function() { return _utils_factory__WEBPACK_IMPORTED_MODULE_10__["factory"]; });

// configuration
 // functions and constants



 // error classes



 // dependency groups

 // factory functions

 // core




/***/ }),

/***/ "../node_modules/mathjs/es/entry/pureFunctionsAny.generated.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/entry/pureFunctionsAny.generated.js ***!
  \*********************************************************************/
/*! exports provided: ResultSet, Complex, Range, _false, _null, _true, BigNumber, Matrix, replacer, i, LN10, LOG10E, _NaN, pi, SQRT1_2, tau, efimovFactor, fineStructure, sackurTetrode, weakMixingAngle, Fraction, e, _Infinity, LOG2E, version, DenseMatrix, phi, typed, isInteger, isNumeric, isPositive, isNaN, equalScalar, number, boolean, complex, splitUnit, unaryPlus, apply, cube, expm1, log10, multiplyScalar, sign, square, bitNot, arg, im, not, filter, forEach, map, erf, format, isPrime, acos, acot, acsc, asec, asin, atan, atanh, cosh, coth, csch, sech, sinh, tanh, combinations, pickRandom, randomInt, LN2, clone, hasNumericValue, typeOf, string, fraction, unaryMinus, addScalar, exp, log2, sqrt, conj, getMatrixDataType, mode, print, acosh, acsch, asinh, cos, csc, sin, combinationsWithRep, random, SQRT2, isNegative, SparseMatrix, matrix, cbrt, gcd, mod, nthRoot, xgcd, bitAnd, bitXor, or, concat, diag, identity, ones, reshape, size, subset, zeros, to, round, leftShift, rightLogShift, compare, compareText, smaller, larger, unequal, ImmutableDenseMatrix, FibonacciHeap, sparse, acoth, atan2, sec, add, dot, composition, isZero, abs, floor, multiply, dotMultiply, re, flatten, resize, squeeze, pow, dotPow, rightArithShift, compareNatural, equalText, largerEq, partitionSelect, Index, asech, tan, setDifference, setIntersect, setMultiplicity, setSize, trace, quantileSeq, gamma, bignumber, lcm, bitOr, kron, transpose, numeric, and, smallerEq, sort, min, cot, setDistinct, setPowerset, index, sum, factorial, permutations, ceil, subtract, cross, range, ctranspose, divideScalar, nthRoots, lsolve, equal, max, setCartesian, setSymDifference, hypot, qr, distance, stirlingS2, catalan, fix, column, row, log, dotDivide, deepEqual, Unit, createUnit, setUnion, slu, intersect, bellNumbers, atomicMass, bohrMagneton, boltzmann, conductanceQuantum, deuteronMass, electronMass, faraday, firstRadiation, gravitationConstant, hartreeEnergy, klitzing, magneticConstant, molarMass, molarPlanckConstant, neutronMass, planckCharge, planckLength, planckTemperature, protonMass, reducedPlanckConstant, secondRadiation, stefanBoltzmann, vacuumImpedance, xor, prod, usolve, unit, avogadro, classicalElectronRadius, electricConstant, fermiCoupling, gravity, loschmidt, molarMassC12, nuclearMagneton, planckMass, quantumOfCirculation, speedOfLight, wienDisplacement, diff, Spa, lup, det, bohrRadius, elementaryCharge, inverseConductanceQuantum, molarVolume, planckTime, thomsonCrossSection, log1p, lusolve, inv, expm, divide, median, variance, kldivergence, gasConstant, planckConstant, setIsSubset, sqrtm, mad, multinomial, coulomb, rydberg, mean, eigs, magneticFluxQuantum, norm, std */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResultSet", function() { return ResultSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return Complex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return Range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_false", function() { return _false; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_null", function() { return _null; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_true", function() { return _true; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BigNumber", function() { return BigNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Matrix", function() { return Matrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replacer", function() { return replacer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return i; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LN10", function() { return LN10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOG10E", function() { return LOG10E; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_NaN", function() { return _NaN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQRT1_2", function() { return SQRT1_2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "efimovFactor", function() { return efimovFactor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fineStructure", function() { return fineStructure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sackurTetrode", function() { return sackurTetrode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "weakMixingAngle", function() { return weakMixingAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Fraction", function() { return Fraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return e; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Infinity", function() { return _Infinity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOG2E", function() { return LOG2E; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DenseMatrix", function() { return DenseMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return phi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typed", function() { return typed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInteger", function() { return isInteger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPositive", function() { return isPositive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return isNaN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalScalar", function() { return equalScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "number", function() { return number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return _boolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "complex", function() { return complex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitUnit", function() { return splitUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryPlus", function() { return unaryPlus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apply", function() { return apply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cube", function() { return cube; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expm1", function() { return expm1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log10", function() { return log10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return sign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "square", function() { return square; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitNot", function() { return bitNot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arg", function() { return arg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "im", function() { return im; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "not", function() { return not; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "erf", function() { return erf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrime", function() { return isPrime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acot", function() { return acot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acsc", function() { return acsc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asec", function() { return asec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return atan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanh", function() { return atanh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cosh", function() { return cosh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coth", function() { return coth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csch", function() { return csch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sech", function() { return sech; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinh", function() { return sinh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanh", function() { return tanh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinations", function() { return combinations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickRandom", function() { return pickRandom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomInt", function() { return randomInt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LN2", function() { return LN2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasNumericValue", function() { return hasNumericValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeOf", function() { return typeOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "string", function() { return string; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fraction", function() { return fraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryMinus", function() { return unaryMinus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addScalar", function() { return addScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return exp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log2", function() { return log2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conj", function() { return conj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataType", function() { return getMatrixDataType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mode", function() { return mode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "print", function() { return print; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acosh", function() { return acosh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acsch", function() { return acsch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinh", function() { return asinh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csc", function() { return csc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRep", function() { return combinationsWithRep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQRT2", function() { return SQRT2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNegative", function() { return isNegative; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SparseMatrix", function() { return SparseMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrix", function() { return matrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cbrt", function() { return cbrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gcd", function() { return gcd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mod", function() { return mod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nthRoot", function() { return nthRoot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xgcd", function() { return xgcd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitAnd", function() { return bitAnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitXor", function() { return bitXor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "or", function() { return or; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "diag", function() { return diag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ones", function() { return ones; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reshape", function() { return reshape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "size", function() { return size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subset", function() { return subset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zeros", function() { return zeros; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "to", function() { return to; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "leftShift", function() { return leftShift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightLogShift", function() { return rightLogShift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return compare; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareText", function() { return compareText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smaller", function() { return smaller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "larger", function() { return larger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unequal", function() { return unequal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImmutableDenseMatrix", function() { return ImmutableDenseMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FibonacciHeap", function() { return FibonacciHeap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sparse", function() { return sparse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acoth", function() { return acoth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sec", function() { return sec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "composition", function() { return composition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isZero", function() { return isZero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotMultiply", function() { return dotMultiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "re", function() { return re; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resize", function() { return resize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squeeze", function() { return squeeze; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotPow", function() { return dotPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightArithShift", function() { return rightArithShift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareNatural", function() { return compareNatural; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalText", function() { return equalText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "largerEq", function() { return largerEq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partitionSelect", function() { return partitionSelect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return Index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asech", function() { return asech; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return tan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDifference", function() { return setDifference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIntersect", function() { return setIntersect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMultiplicity", function() { return setMultiplicity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSize", function() { return setSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trace", function() { return trace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantileSeq", function() { return quantileSeq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return gamma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bignumber", function() { return bignumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lcm", function() { return lcm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitOr", function() { return bitOr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kron", function() { return kron; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numeric", function() { return numeric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "and", function() { return and; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smallerEq", function() { return smallerEq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sort", function() { return sort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cot", function() { return cot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDistinct", function() { return setDistinct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setPowerset", function() { return setPowerset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "index", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return sum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "factorial", function() { return factorial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "permutations", function() { return permutations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ctranspose", function() { return ctranspose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divideScalar", function() { return divideScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nthRoots", function() { return nthRoots; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lsolve", function() { return lsolve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equal", function() { return equal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCartesian", function() { return setCartesian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSymDifference", function() { return setSymDifference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hypot", function() { return hypot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "qr", function() { return qr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stirlingS2", function() { return stirlingS2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catalan", function() { return catalan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fix", function() { return fix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "column", function() { return column; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "row", function() { return row; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotDivide", function() { return dotDivide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepEqual", function() { return deepEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Unit", function() { return Unit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnit", function() { return createUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUnion", function() { return setUnion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slu", function() { return slu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return intersect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bellNumbers", function() { return bellNumbers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atomicMass", function() { return atomicMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bohrMagneton", function() { return bohrMagneton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boltzmann", function() { return boltzmann; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conductanceQuantum", function() { return conductanceQuantum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deuteronMass", function() { return deuteronMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "electronMass", function() { return electronMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faraday", function() { return faraday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstRadiation", function() { return firstRadiation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gravitationConstant", function() { return gravitationConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hartreeEnergy", function() { return hartreeEnergy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "klitzing", function() { return klitzing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magneticConstant", function() { return magneticConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarMass", function() { return molarMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarPlanckConstant", function() { return molarPlanckConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "neutronMass", function() { return neutronMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckCharge", function() { return planckCharge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckLength", function() { return planckLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckTemperature", function() { return planckTemperature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "protonMass", function() { return protonMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reducedPlanckConstant", function() { return reducedPlanckConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "secondRadiation", function() { return secondRadiation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stefanBoltzmann", function() { return stefanBoltzmann; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vacuumImpedance", function() { return vacuumImpedance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xor", function() { return xor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prod", function() { return prod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usolve", function() { return usolve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unit", function() { return unit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "avogadro", function() { return avogadro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "classicalElectronRadius", function() { return classicalElectronRadius; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "electricConstant", function() { return electricConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fermiCoupling", function() { return fermiCoupling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gravity", function() { return gravity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loschmidt", function() { return loschmidt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarMassC12", function() { return molarMassC12; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nuclearMagneton", function() { return nuclearMagneton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckMass", function() { return planckMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantumOfCirculation", function() { return quantumOfCirculation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "speedOfLight", function() { return speedOfLight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wienDisplacement", function() { return wienDisplacement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "diff", function() { return diff; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Spa", function() { return Spa; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lup", function() { return lup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "det", function() { return det; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bohrRadius", function() { return bohrRadius; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementaryCharge", function() { return elementaryCharge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverseConductanceQuantum", function() { return inverseConductanceQuantum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "molarVolume", function() { return molarVolume; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckTime", function() { return planckTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thomsonCrossSection", function() { return thomsonCrossSection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log1p", function() { return log1p; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lusolve", function() { return lusolve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inv", function() { return inv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expm", function() { return expm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "median", function() { return median; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return variance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kldivergence", function() { return kldivergence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gasConstant", function() { return gasConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planckConstant", function() { return planckConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIsSubset", function() { return setIsSubset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrtm", function() { return sqrtm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mad", function() { return mad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multinomial", function() { return multinomial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coulomb", function() { return coulomb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rydberg", function() { return rydberg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return mean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eigs", function() { return eigs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magneticFluxQuantum", function() { return magneticFluxQuantum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "norm", function() { return norm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "std", function() { return std; });
/* harmony import */ var _configReadonly__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configReadonly */ "../node_modules/mathjs/es/entry/configReadonly.js");
/* harmony import */ var _factoriesAny__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../factoriesAny */ "../node_modules/mathjs/es/factoriesAny.js");
/**
 * THIS FILE IS AUTO-GENERATED
 * DON'T MAKE CHANGES HERE
 */


var ResultSet = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createResultSet"])({});
var Complex = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createComplexClass"])({});
var Range = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRangeClass"])({});
var _false = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFalse"])({});
var _null = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNull"])({});
var _true = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTrue"])({});
var BigNumber = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBigNumberClass"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var Matrix = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMatrixClass"])({});
var replacer = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createReplacer"])({});
var i = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createI"])({
  Complex: Complex
});
var LN10 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLN10"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var LOG10E = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLOG10E"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var _NaN = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNaN"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var pi = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPi"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var SQRT1_2 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSQRT1_2"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var tau = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTau"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var efimovFactor = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createEfimovFactor"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var fineStructure = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFineStructure"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var sackurTetrode = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSackurTetrode"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var weakMixingAngle = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createWeakMixingAngle"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var Fraction = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFractionClass"])({});
var e = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createE"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var _Infinity = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createInfinity"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var LOG2E = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLOG2E"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var version = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createVersion"])({});
var DenseMatrix = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDenseMatrixClass"])({
  Matrix: Matrix
});
var phi = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPhi"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var typed = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTyped"])({
  BigNumber: BigNumber,
  Complex: Complex,
  DenseMatrix: DenseMatrix,
  Fraction: Fraction
});
var isInteger = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIsInteger"])({
  typed: typed
});
var isNumeric = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIsNumeric"])({
  typed: typed
});
var isPositive = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIsPositive"])({
  typed: typed
});
var isNaN = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIsNaN"])({
  typed: typed
});
var equalScalar = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createEqualScalar"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var number = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNumber"])({
  typed: typed
});

var _boolean = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBoolean"])({
  typed: typed
});


var complex = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createComplex"])({
  Complex: Complex,
  typed: typed
});
var splitUnit = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSplitUnit"])({
  typed: typed
});
var unaryPlus = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createUnaryPlus"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var apply = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createApply"])({
  isInteger: isInteger,
  typed: typed
});
var cube = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCube"])({
  typed: typed
});
var expm1 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createExpm1"])({
  Complex: Complex,
  typed: typed
});
var log10 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLog10"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var multiplyScalar = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMultiplyScalar"])({
  typed: typed
});
var sign = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSign"])({
  BigNumber: BigNumber,
  Fraction: Fraction,
  complex: complex,
  typed: typed
});
var square = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSquare"])({
  typed: typed
});
var bitNot = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBitNot"])({
  typed: typed
});
var arg = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createArg"])({
  typed: typed
});
var im = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIm"])({
  typed: typed
});
var not = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNot"])({
  typed: typed
});
var filter = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFilter"])({
  typed: typed
});
var forEach = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createForEach"])({
  typed: typed
});
var map = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMap"])({
  typed: typed
});
var erf = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createErf"])({
  typed: typed
});
var format = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFormat"])({
  typed: typed
});
var isPrime = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIsPrime"])({
  typed: typed
});
var acos = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAcos"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var acot = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAcot"])({
  BigNumber: BigNumber,
  typed: typed
});
var acsc = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAcsc"])({
  BigNumber: BigNumber,
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var asec = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAsec"])({
  BigNumber: BigNumber,
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var asin = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAsin"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var atan = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAtan"])({
  typed: typed
});
var atanh = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAtanh"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var cosh = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCosh"])({
  typed: typed
});
var coth = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCoth"])({
  BigNumber: BigNumber,
  typed: typed
});
var csch = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCsch"])({
  BigNumber: BigNumber,
  typed: typed
});
var sech = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSech"])({
  BigNumber: BigNumber,
  typed: typed
});
var sinh = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSinh"])({
  typed: typed
});
var tanh = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTanh"])({
  typed: typed
});
var combinations = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCombinations"])({
  typed: typed
});
var pickRandom = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPickRandom"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var randomInt = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRandomInt"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var LN2 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLN2"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var clone = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createClone"])({
  typed: typed
});
var hasNumericValue = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createHasNumericValue"])({
  isNumeric: isNumeric,
  typed: typed
});
var typeOf = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTypeOf"])({
  typed: typed
});
var string = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createString"])({
  typed: typed
});
var fraction = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFraction"])({
  Fraction: Fraction,
  typed: typed
});
var unaryMinus = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createUnaryMinus"])({
  typed: typed
});
var addScalar = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAddScalar"])({
  typed: typed
});
var exp = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createExp"])({
  typed: typed
});
var log2 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLog2"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var sqrt = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSqrt"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var conj = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createConj"])({
  typed: typed
});
var getMatrixDataType = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createGetMatrixDataType"])({
  typed: typed
});
var mode = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMode"])({
  isNaN: isNaN,
  isNumeric: isNumeric,
  typed: typed
});
var print = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPrint"])({
  typed: typed
});
var acosh = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAcosh"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var acsch = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAcsch"])({
  BigNumber: BigNumber,
  typed: typed
});
var asinh = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAsinh"])({
  typed: typed
});
var cos = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCos"])({
  typed: typed
});
var csc = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCsc"])({
  BigNumber: BigNumber,
  typed: typed
});
var sin = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSin"])({
  typed: typed
});
var combinationsWithRep = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCombinationsWithRep"])({
  typed: typed
});
var random = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRandom"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var SQRT2 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSQRT2"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var isNegative = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIsNegative"])({
  typed: typed
});
var SparseMatrix = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSparseMatrixClass"])({
  Matrix: Matrix,
  equalScalar: equalScalar,
  typed: typed
});
var matrix = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMatrix"])({
  DenseMatrix: DenseMatrix,
  Matrix: Matrix,
  SparseMatrix: SparseMatrix,
  typed: typed
});
var cbrt = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCbrt"])({
  BigNumber: BigNumber,
  Complex: Complex,
  Fraction: Fraction,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  isNegative: isNegative,
  matrix: matrix,
  typed: typed,
  unaryMinus: unaryMinus
});
var gcd = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createGcd"])({
  BigNumber: BigNumber,
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var mod = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMod"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var nthRoot = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNthRoot"])({
  BigNumber: BigNumber,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var xgcd = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createXgcd"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var bitAnd = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBitAnd"])({
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var bitXor = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBitXor"])({
  DenseMatrix: DenseMatrix,
  matrix: matrix,
  typed: typed
});
var or = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createOr"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var concat = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createConcat"])({
  isInteger: isInteger,
  matrix: matrix,
  typed: typed
});
var diag = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDiag"])({
  DenseMatrix: DenseMatrix,
  SparseMatrix: SparseMatrix,
  matrix: matrix,
  typed: typed
});
var identity = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIdentity"])({
  BigNumber: BigNumber,
  DenseMatrix: DenseMatrix,
  SparseMatrix: SparseMatrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var ones = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createOnes"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var reshape = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createReshape"])({
  isInteger: isInteger,
  matrix: matrix,
  typed: typed
});
var size = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSize"])({
  matrix: matrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var subset = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSubset"])({
  matrix: matrix,
  typed: typed
});
var zeros = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createZeros"])({
  BigNumber: BigNumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var to = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTo"])({
  matrix: matrix,
  typed: typed
});
var round = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRound"])({
  BigNumber: BigNumber,
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed,
  zeros: zeros
});
var leftShift = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLeftShift"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed,
  zeros: zeros
});
var rightLogShift = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRightLogShift"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed,
  zeros: zeros
});
var compare = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCompare"])({
  BigNumber: BigNumber,
  DenseMatrix: DenseMatrix,
  Fraction: Fraction,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var compareText = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCompareText"])({
  matrix: matrix,
  typed: typed
});
var smaller = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSmaller"])({
  DenseMatrix: DenseMatrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var larger = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLarger"])({
  DenseMatrix: DenseMatrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var unequal = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createUnequal"])({
  DenseMatrix: DenseMatrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var ImmutableDenseMatrix = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createImmutableDenseMatrixClass"])({
  DenseMatrix: DenseMatrix,
  smaller: smaller
});
var FibonacciHeap = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFibonacciHeapClass"])({
  larger: larger,
  smaller: smaller
});
var sparse = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSparse"])({
  SparseMatrix: SparseMatrix,
  typed: typed
});
var acoth = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAcoth"])({
  BigNumber: BigNumber,
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var atan2 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAtan2"])({
  BigNumber: BigNumber,
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var sec = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSec"])({
  BigNumber: BigNumber,
  typed: typed
});
var add = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAdd"])({
  DenseMatrix: DenseMatrix,
  SparseMatrix: SparseMatrix,
  addScalar: addScalar,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var dot = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDot"])({
  addScalar: addScalar,
  conj: conj,
  multiplyScalar: multiplyScalar,
  size: size,
  typed: typed
});
var composition = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createComposition"])({
  addScalar: addScalar,
  combinations: combinations,
  isInteger: isInteger,
  isNegative: isNegative,
  isPositive: isPositive,
  larger: larger,
  typed: typed
});
var isZero = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIsZero"])({
  typed: typed
});
var abs = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAbs"])({
  typed: typed
});
var floor = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFloor"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  round: round,
  typed: typed
});
var multiply = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMultiply"])({
  addScalar: addScalar,
  dot: dot,
  equalScalar: equalScalar,
  matrix: matrix,
  multiplyScalar: multiplyScalar,
  typed: typed
});
var dotMultiply = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDotMultiply"])({
  equalScalar: equalScalar,
  matrix: matrix,
  multiplyScalar: multiplyScalar,
  typed: typed
});
var re = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRe"])({
  typed: typed
});
var flatten = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFlatten"])({
  matrix: matrix,
  typed: typed
});
var resize = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createResize"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix
});
var squeeze = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSqueeze"])({
  matrix: matrix,
  typed: typed
});
var pow = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPow"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  fraction: fraction,
  identity: identity,
  matrix: matrix,
  multiply: multiply,
  number: number,
  typed: typed
});
var dotPow = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDotPow"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  pow: pow,
  typed: typed
});
var rightArithShift = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRightArithShift"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed,
  zeros: zeros
});
var compareNatural = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCompareNatural"])({
  compare: compare,
  typed: typed
});
var equalText = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createEqualText"])({
  compareText: compareText,
  isZero: isZero,
  typed: typed
});
var largerEq = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLargerEq"])({
  DenseMatrix: DenseMatrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var partitionSelect = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPartitionSelect"])({
  compare: compare,
  isNaN: isNaN,
  isNumeric: isNumeric,
  typed: typed
});
var Index = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIndexClass"])({
  ImmutableDenseMatrix: ImmutableDenseMatrix
});
var asech = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAsech"])({
  BigNumber: BigNumber,
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  typed: typed
});
var tan = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTan"])({
  typed: typed
});
var setDifference = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetDifference"])({
  DenseMatrix: DenseMatrix,
  Index: Index,
  compareNatural: compareNatural,
  size: size,
  subset: subset,
  typed: typed
});
var setIntersect = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetIntersect"])({
  DenseMatrix: DenseMatrix,
  Index: Index,
  compareNatural: compareNatural,
  size: size,
  subset: subset,
  typed: typed
});
var setMultiplicity = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetMultiplicity"])({
  Index: Index,
  compareNatural: compareNatural,
  size: size,
  subset: subset,
  typed: typed
});
var setSize = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetSize"])({
  compareNatural: compareNatural,
  typed: typed
});
var trace = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTrace"])({
  add: add,
  matrix: matrix,
  typed: typed
});
var quantileSeq = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createQuantileSeq"])({
  add: add,
  compare: compare,
  multiply: multiply,
  partitionSelect: partitionSelect,
  typed: typed
});
var gamma = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createGamma"])({
  BigNumber: BigNumber,
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  multiplyScalar: multiplyScalar,
  pow: pow,
  typed: typed
});
var bignumber = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBignumber"])({
  BigNumber: BigNumber,
  typed: typed
});
var lcm = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLcm"])({
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var bitOr = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBitOr"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var kron = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createKron"])({
  matrix: matrix,
  multiplyScalar: multiplyScalar,
  typed: typed
});
var transpose = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createTranspose"])({
  matrix: matrix,
  typed: typed
});
var numeric = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNumeric"])({
  bignumber: bignumber,
  fraction: fraction,
  number: number
});
var and = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAnd"])({
  equalScalar: equalScalar,
  matrix: matrix,
  not: not,
  typed: typed,
  zeros: zeros
});
var smallerEq = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSmallerEq"])({
  DenseMatrix: DenseMatrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  matrix: matrix,
  typed: typed
});
var sort = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSort"])({
  compare: compare,
  compareNatural: compareNatural,
  matrix: matrix,
  typed: typed
});
var min = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMin"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  numeric: numeric,
  smaller: smaller,
  typed: typed
});
var cot = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCot"])({
  BigNumber: BigNumber,
  typed: typed
});
var setDistinct = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetDistinct"])({
  DenseMatrix: DenseMatrix,
  Index: Index,
  compareNatural: compareNatural,
  size: size,
  subset: subset,
  typed: typed
});
var setPowerset = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetPowerset"])({
  Index: Index,
  compareNatural: compareNatural,
  size: size,
  subset: subset,
  typed: typed
});
var index = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIndex"])({
  Index: Index,
  typed: typed
});
var sum = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSum"])({
  add: add,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  numeric: numeric,
  typed: typed
});
var factorial = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFactorial"])({
  gamma: gamma,
  typed: typed
});
var permutations = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPermutations"])({
  factorial: factorial,
  typed: typed
});
var ceil = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCeil"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  round: round,
  typed: typed
});
var subtract = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSubtract"])({
  DenseMatrix: DenseMatrix,
  addScalar: addScalar,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed,
  unaryMinus: unaryMinus
});
var cross = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCross"])({
  matrix: matrix,
  multiply: multiply,
  subtract: subtract,
  typed: typed
});
var range = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRange"])({
  bignumber: bignumber,
  matrix: matrix,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  larger: larger,
  largerEq: largerEq,
  smaller: smaller,
  smallerEq: smallerEq,
  typed: typed
});
var ctranspose = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCtranspose"])({
  conj: conj,
  transpose: transpose,
  typed: typed
});
var divideScalar = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDivideScalar"])({
  numeric: numeric,
  typed: typed
});
var nthRoots = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNthRoots"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  divideScalar: divideScalar,
  typed: typed
});
var lsolve = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLsolve"])({
  DenseMatrix: DenseMatrix,
  divideScalar: divideScalar,
  equalScalar: equalScalar,
  matrix: matrix,
  multiplyScalar: multiplyScalar,
  subtract: subtract,
  typed: typed
});
var equal = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createEqual"])({
  DenseMatrix: DenseMatrix,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var max = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMax"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  larger: larger,
  numeric: numeric,
  typed: typed
});
var setCartesian = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetCartesian"])({
  DenseMatrix: DenseMatrix,
  Index: Index,
  compareNatural: compareNatural,
  size: size,
  subset: subset,
  typed: typed
});
var setSymDifference = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetSymDifference"])({
  Index: Index,
  concat: concat,
  setDifference: setDifference,
  size: size,
  subset: subset,
  typed: typed
});
var hypot = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createHypot"])({
  abs: abs,
  addScalar: addScalar,
  divideScalar: divideScalar,
  isPositive: isPositive,
  multiplyScalar: multiplyScalar,
  smaller: smaller,
  sqrt: sqrt,
  typed: typed
});
var qr = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createQr"])({
  addScalar: addScalar,
  complex: complex,
  conj: conj,
  divideScalar: divideScalar,
  equal: equal,
  identity: identity,
  isZero: isZero,
  matrix: matrix,
  multiplyScalar: multiplyScalar,
  sign: sign,
  sqrt: sqrt,
  subtract: subtract,
  typed: typed,
  unaryMinus: unaryMinus,
  zeros: zeros
});
var distance = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDistance"])({
  abs: abs,
  addScalar: addScalar,
  divideScalar: divideScalar,
  multiplyScalar: multiplyScalar,
  sqrt: sqrt,
  subtract: subtract,
  typed: typed,
  unaryMinus: unaryMinus
});
var stirlingS2 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createStirlingS2"])({
  addScalar: addScalar,
  combinations: combinations,
  divideScalar: divideScalar,
  factorial: factorial,
  isInteger: isInteger,
  isNegative: isNegative,
  larger: larger,
  multiplyScalar: multiplyScalar,
  pow: pow,
  subtract: subtract,
  typed: typed
});
var catalan = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCatalan"])({
  addScalar: addScalar,
  combinations: combinations,
  divideScalar: divideScalar,
  isInteger: isInteger,
  isNegative: isNegative,
  multiplyScalar: multiplyScalar,
  typed: typed
});
var fix = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFix"])({
  Complex: Complex,
  ceil: ceil,
  floor: floor,
  typed: typed
});
var column = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createColumn"])({
  Index: Index,
  matrix: matrix,
  range: range,
  typed: typed
});
var row = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRow"])({
  Index: Index,
  matrix: matrix,
  range: range,
  typed: typed
});
var log = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLog"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  divideScalar: divideScalar,
  typed: typed
});
var dotDivide = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDotDivide"])({
  DenseMatrix: DenseMatrix,
  divideScalar: divideScalar,
  equalScalar: equalScalar,
  matrix: matrix,
  typed: typed
});
var deepEqual = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDeepEqual"])({
  equal: equal,
  typed: typed
});
var Unit = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createUnitClass"])({
  BigNumber: BigNumber,
  Complex: Complex,
  Fraction: Fraction,
  abs: abs,
  addScalar: addScalar,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  divideScalar: divideScalar,
  equal: equal,
  fix: fix,
  format: format,
  isNumeric: isNumeric,
  multiplyScalar: multiplyScalar,
  number: number,
  pow: pow,
  round: round,
  subtract: subtract
});
var createUnit = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCreateUnit"])({
  Unit: Unit,
  typed: typed
});
var setUnion = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetUnion"])({
  Index: Index,
  concat: concat,
  setIntersect: setIntersect,
  setSymDifference: setSymDifference,
  size: size,
  subset: subset,
  typed: typed
});
var slu = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSlu"])({
  SparseMatrix: SparseMatrix,
  abs: abs,
  add: add,
  divideScalar: divideScalar,
  larger: larger,
  largerEq: largerEq,
  multiply: multiply,
  subtract: subtract,
  transpose: transpose,
  typed: typed
});
var intersect = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createIntersect"])({
  abs: abs,
  add: add,
  addScalar: addScalar,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  divideScalar: divideScalar,
  equalScalar: equalScalar,
  matrix: matrix,
  multiply: multiply,
  multiplyScalar: multiplyScalar,
  smaller: smaller,
  subtract: subtract,
  typed: typed
});
var bellNumbers = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBellNumbers"])({
  addScalar: addScalar,
  isInteger: isInteger,
  isNegative: isNegative,
  stirlingS2: stirlingS2,
  typed: typed
});
var atomicMass = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAtomicMass"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var bohrMagneton = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBohrMagneton"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var boltzmann = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBoltzmann"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var conductanceQuantum = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createConductanceQuantum"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var deuteronMass = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDeuteronMass"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var electronMass = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createElectronMass"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var faraday = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFaraday"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var firstRadiation = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFirstRadiation"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var gravitationConstant = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createGravitationConstant"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var hartreeEnergy = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createHartreeEnergy"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var klitzing = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createKlitzing"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var magneticConstant = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMagneticConstant"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var molarMass = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMolarMass"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var molarPlanckConstant = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMolarPlanckConstant"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var neutronMass = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNeutronMass"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var planckCharge = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPlanckCharge"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var planckLength = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPlanckLength"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var planckTemperature = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPlanckTemperature"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var protonMass = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createProtonMass"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var reducedPlanckConstant = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createReducedPlanckConstant"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var secondRadiation = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSecondRadiation"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var stefanBoltzmann = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createStefanBoltzmann"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var vacuumImpedance = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createVacuumImpedance"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var xor = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createXor"])({
  DenseMatrix: DenseMatrix,
  matrix: matrix,
  typed: typed
});
var prod = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createProd"])({
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  multiplyScalar: multiplyScalar,
  numeric: numeric,
  typed: typed
});
var usolve = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createUsolve"])({
  DenseMatrix: DenseMatrix,
  divideScalar: divideScalar,
  equalScalar: equalScalar,
  matrix: matrix,
  multiplyScalar: multiplyScalar,
  subtract: subtract,
  typed: typed
});
var unit = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createUnitFunction"])({
  Unit: Unit,
  typed: typed
});
var avogadro = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createAvogadro"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var classicalElectronRadius = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createClassicalElectronRadius"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var electricConstant = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createElectricConstant"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var fermiCoupling = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createFermiCoupling"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var gravity = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createGravity"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var loschmidt = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLoschmidt"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var molarMassC12 = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMolarMassC12"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var nuclearMagneton = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNuclearMagneton"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var planckMass = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPlanckMass"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var quantumOfCirculation = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createQuantumOfCirculation"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var speedOfLight = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSpeedOfLight"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var wienDisplacement = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createWienDisplacement"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var diff = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDiff"])({
  matrix: matrix,
  number: number,
  subtract: subtract,
  typed: typed
});
var Spa = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSpaClass"])({
  FibonacciHeap: FibonacciHeap,
  addScalar: addScalar,
  equalScalar: equalScalar
});
var lup = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLup"])({
  DenseMatrix: DenseMatrix,
  Spa: Spa,
  SparseMatrix: SparseMatrix,
  abs: abs,
  addScalar: addScalar,
  divideScalar: divideScalar,
  equalScalar: equalScalar,
  larger: larger,
  matrix: matrix,
  multiplyScalar: multiplyScalar,
  subtract: subtract,
  typed: typed,
  unaryMinus: unaryMinus
});
var det = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDet"])({
  lup: lup,
  matrix: matrix,
  multiply: multiply,
  subtract: subtract,
  typed: typed,
  unaryMinus: unaryMinus
});
var bohrRadius = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createBohrRadius"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var elementaryCharge = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createElementaryCharge"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var inverseConductanceQuantum = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createInverseConductanceQuantum"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var molarVolume = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMolarVolume"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var planckTime = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPlanckTime"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var thomsonCrossSection = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createThomsonCrossSection"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var log1p = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLog1p"])({
  Complex: Complex,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  divideScalar: divideScalar,
  log: log,
  typed: typed
});
var lusolve = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createLusolve"])({
  DenseMatrix: DenseMatrix,
  lsolve: lsolve,
  lup: lup,
  matrix: matrix,
  slu: slu,
  typed: typed,
  usolve: usolve
});
var inv = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createInv"])({
  abs: abs,
  addScalar: addScalar,
  det: det,
  divideScalar: divideScalar,
  identity: identity,
  matrix: matrix,
  multiply: multiply,
  typed: typed,
  unaryMinus: unaryMinus
});
var expm = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createExpm"])({
  abs: abs,
  add: add,
  identity: identity,
  inv: inv,
  multiply: multiply,
  typed: typed
});
var divide = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createDivide"])({
  divideScalar: divideScalar,
  equalScalar: equalScalar,
  inv: inv,
  matrix: matrix,
  multiply: multiply,
  typed: typed
});
var median = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMedian"])({
  add: add,
  compare: compare,
  divide: divide,
  partitionSelect: partitionSelect,
  typed: typed
});
var variance = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createVariance"])({
  add: add,
  apply: apply,
  divide: divide,
  isNaN: isNaN,
  multiply: multiply,
  subtract: subtract,
  typed: typed
});
var kldivergence = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createKldivergence"])({
  divide: divide,
  dotDivide: dotDivide,
  isNumeric: isNumeric,
  log: log,
  matrix: matrix,
  multiply: multiply,
  sum: sum,
  typed: typed
});
var gasConstant = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createGasConstant"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var planckConstant = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createPlanckConstant"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var setIsSubset = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSetIsSubset"])({
  Index: Index,
  compareNatural: compareNatural,
  size: size,
  subset: subset,
  typed: typed
});
var sqrtm = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createSqrtm"])({
  abs: abs,
  add: add,
  identity: identity,
  inv: inv,
  max: max,
  multiply: multiply,
  size: size,
  sqrt: sqrt,
  subtract: subtract,
  typed: typed
});
var mad = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMad"])({
  abs: abs,
  map: map,
  median: median,
  subtract: subtract,
  typed: typed
});
var multinomial = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMultinomial"])({
  add: add,
  divide: divide,
  factorial: factorial,
  isInteger: isInteger,
  isPositive: isPositive,
  multiply: multiply,
  typed: typed
});
var coulomb = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createCoulomb"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var rydberg = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createRydberg"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var mean = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMean"])({
  add: add,
  divide: divide,
  typed: typed
});
var eigs = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createEigs"])({
  abs: abs,
  add: add,
  addScalar: addScalar,
  atan: atan,
  bignumber: bignumber,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"],
  cos: cos,
  equal: equal,
  inv: inv,
  matrix: matrix,
  multiply: multiply,
  multiplyScalar: multiplyScalar,
  sin: sin,
  subtract: subtract,
  typed: typed
});
var magneticFluxQuantum = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createMagneticFluxQuantum"])({
  BigNumber: BigNumber,
  Unit: Unit,
  config: _configReadonly__WEBPACK_IMPORTED_MODULE_0__["config"]
});
var norm = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createNorm"])({
  abs: abs,
  add: add,
  conj: conj,
  ctranspose: ctranspose,
  eigs: eigs,
  equalScalar: equalScalar,
  larger: larger,
  matrix: matrix,
  multiply: multiply,
  pow: pow,
  smaller: smaller,
  sqrt: sqrt,
  typed: typed
});
var std = /* #__PURE__ */Object(_factoriesAny__WEBPACK_IMPORTED_MODULE_1__["createStd"])({
  sqrt: sqrt,
  typed: typed,
  variance: variance
});

/***/ }),

/***/ "../node_modules/mathjs/es/entry/typeChecks.js":
/*!*****************************************************!*\
  !*** ../node_modules/mathjs/es/entry/typeChecks.js ***!
  \*****************************************************/
/*! exports provided: isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigNumber, isBlockNode, isBoolean, isChain, isCollection, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMatrix, isNode, isNull, isNumber, isString, isUndefined, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isResultSet, isSparseMatrix, isSymbolNode, isUnit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAccessorNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isAccessorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isArrayNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAssignmentNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBigNumber", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBlockNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isBlockNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isChain", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isChain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCollection", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isComplex", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isComplex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isConditionalNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isConditionalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isConstantNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDenseMatrix", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isDenseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFraction", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunctionAssignmentNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunctionNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isHelp", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isHelp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIndex", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIndexNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndexNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatrix", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isObjectNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isOperatorNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isParenthesisNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRange", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRangeNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isRangeNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isRegExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isResultSet", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isResultSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSparseMatrix", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isSparseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbolNode", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUnit", function() { return _utils_is__WEBPACK_IMPORTED_MODULE_0__["isUnit"]; });

// util functions


/***/ }),

/***/ "../node_modules/mathjs/es/error/ArgumentsError.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/error/ArgumentsError.js ***!
  \*********************************************************/
/*! exports provided: ArgumentsError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentsError", function() { return ArgumentsError; });
/**
 * Create a syntax error with the message:
 *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'
 * @param {string} fn     Function name
 * @param {number} count  Actual argument count
 * @param {number} min    Minimum required argument count
 * @param {number} [max]  Maximum required argument count
 * @extends Error
 */
function ArgumentsError(fn, count, min, max) {
  if (!(this instanceof ArgumentsError)) {
    throw new SyntaxError('Constructor must be called with the new operator');
  }

  this.fn = fn;
  this.count = count;
  this.min = min;
  this.max = max;
  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';
  this.stack = new Error().stack;
}
ArgumentsError.prototype = new Error();
ArgumentsError.prototype.constructor = Error;
ArgumentsError.prototype.name = 'ArgumentsError';
ArgumentsError.prototype.isArgumentsError = true;

/***/ }),

/***/ "../node_modules/mathjs/es/error/DimensionError.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/error/DimensionError.js ***!
  \*********************************************************/
/*! exports provided: DimensionError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DimensionError", function() { return DimensionError; });
/**
 * Create a range error with the message:
 *     'Dimension mismatch (<actual size> != <expected size>)'
 * @param {number | number[]} actual        The actual size
 * @param {number | number[]} expected      The expected size
 * @param {string} [relation='!=']          Optional relation between actual
 *                                          and expected size: '!=', '<', etc.
 * @extends RangeError
 */
function DimensionError(actual, expected, relation) {
  if (!(this instanceof DimensionError)) {
    throw new SyntaxError('Constructor must be called with the new operator');
  }

  this.actual = actual;
  this.expected = expected;
  this.relation = relation;
  this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';
  this.stack = new Error().stack;
}
DimensionError.prototype = new RangeError();
DimensionError.prototype.constructor = RangeError;
DimensionError.prototype.name = 'DimensionError';
DimensionError.prototype.isDimensionError = true;

/***/ }),

/***/ "../node_modules/mathjs/es/error/IndexError.js":
/*!*****************************************************!*\
  !*** ../node_modules/mathjs/es/error/IndexError.js ***!
  \*****************************************************/
/*! exports provided: IndexError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexError", function() { return IndexError; });
/**
 * Create a range error with the message:
 *     'Index out of range (index < min)'
 *     'Index out of range (index < max)'
 *
 * @param {number} index     The actual index
 * @param {number} [min=0]   Minimum index (included)
 * @param {number} [max]     Maximum index (excluded)
 * @extends RangeError
 */
function IndexError(index, min, max) {
  if (!(this instanceof IndexError)) {
    throw new SyntaxError('Constructor must be called with the new operator');
  }

  this.index = index;

  if (arguments.length < 3) {
    this.min = 0;
    this.max = min;
  } else {
    this.min = min;
    this.max = max;
  }

  if (this.min !== undefined && this.index < this.min) {
    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';
  } else if (this.max !== undefined && this.index >= this.max) {
    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';
  } else {
    this.message = 'Index out of range (' + this.index + ')';
  }

  this.stack = new Error().stack;
}
IndexError.prototype = new RangeError();
IndexError.prototype.constructor = RangeError;
IndexError.prototype.name = 'IndexError';
IndexError.prototype.isIndexError = true;

/***/ }),

/***/ "../node_modules/mathjs/es/expression/Help.js":
/*!****************************************************!*\
  !*** ../node_modules/mathjs/es/expression/Help.js ***!
  \****************************************************/
/*! exports provided: createHelpClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createHelpClass", function() { return createHelpClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'Help';
var dependencies = ['parse'];
var createHelpClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var parse = _ref.parse;

  /**
   * Documentation object
   * @param {Object} doc  Object containing properties:
   *                      {string} name
   *                      {string} category
   *                      {string} description
   *                      {string[]} syntax
   *                      {string[]} examples
   *                      {string[]} seealso
   * @constructor
   */
  function Help(doc) {
    if (!(this instanceof Help)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (!doc) throw new Error('Argument "doc" missing');
    this.doc = doc;
  }
  /**
   * Attach type information
   */


  Help.prototype.type = 'Help';
  Help.prototype.isHelp = true;
  /**
   * Generate a string representation of the Help object
   * @return {string} Returns a string
   * @private
   */

  Help.prototype.toString = function () {
    var doc = this.doc || {};
    var desc = '\n';

    if (doc.name) {
      desc += 'Name: ' + doc.name + '\n\n';
    }

    if (doc.category) {
      desc += 'Category: ' + doc.category + '\n\n';
    }

    if (doc.description) {
      desc += 'Description:\n    ' + doc.description + '\n\n';
    }

    if (doc.syntax) {
      desc += 'Syntax:\n    ' + doc.syntax.join('\n    ') + '\n\n';
    }

    if (doc.examples) {
      desc += 'Examples:\n';
      var scope = {};

      for (var i = 0; i < doc.examples.length; i++) {
        var expr = doc.examples[i];
        desc += '    ' + expr + '\n';
        var res = void 0;

        try {
          // note: res can be undefined when `expr` is an empty string
          res = parse(expr).compile().evaluate(scope);
        } catch (e) {
          res = e;
        }

        if (res !== undefined && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isHelp"])(res)) {
          desc += '        ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(res, {
            precision: 14
          }) + '\n';
        }
      }

      desc += '\n';
    }

    if (doc.seealso && doc.seealso.length) {
      desc += 'See also: ' + doc.seealso.join(', ') + '\n';
    }

    return desc;
  };
  /**
   * Export the help object to JSON
   */


  Help.prototype.toJSON = function () {
    var obj = Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(this.doc);
    obj.mathjs = 'Help';
    return obj;
  };
  /**
   * Instantiate a Help object from a JSON object
   * @param {Object} json
   * @returns {Help} Returns a new Help object
   */


  Help.fromJSON = function (json) {
    var doc = {};
    Object.keys(json).filter(function (prop) {
      return prop !== 'mathjs';
    }).forEach(function (prop) {
      doc[prop] = json[prop];
    });
    return new Help(doc);
  };
  /**
   * Returns a string representation of the Help object
   */


  Help.prototype.valueOf = Help.prototype.toString;
  return Help;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/Parser.js":
/*!******************************************************!*\
  !*** ../node_modules/mathjs/es/expression/Parser.js ***!
  \******************************************************/
/*! exports provided: createParserClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createParserClass", function() { return createParserClass; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");



var name = 'Parser';
var dependencies = ['parse'];
var createParserClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var parse = _ref.parse;

  /**
   * @constructor Parser
   * Parser contains methods to evaluate or parse expressions, and has a number
   * of convenience methods to get, set, and remove variables from memory. Parser
   * keeps a scope containing variables in memory, which is used for all
   * evaluations.
   *
   * Methods:
   *    const result = parser.evaluate(expr)  // evaluate an expression
   *    const value = parser.get(name)        // retrieve a variable from the parser
   *    const values = parser.getAll()        // retrieve all defined variables
   *    parser.set(name, value)               // set a variable in the parser
   *    parser.remove(name)                   // clear a variable from the
   *                                          // parsers scope
   *    parser.clear()                        // clear the parsers scope
   *
   * Example usage:
   *    const parser = new Parser()
   *    // Note: there is a convenience method which can be used instead:
   *    // const parser = new math.parser()
   *
   *    // evaluate expressions
   *    parser.evaluate('sqrt(3^2 + 4^2)')        // 5
   *    parser.evaluate('sqrt(-4)')               // 2i
   *    parser.evaluate('2 inch in cm')           // 5.08 cm
   *    parser.evaluate('cos(45 deg)')            // 0.7071067811865476
   *
   *    // define variables and functions
   *    parser.evaluate('x = 7 / 2')              // 3.5
   *    parser.evaluate('x + 3')                  // 6.5
   *    parser.evaluate('function f(x, y) = x^y') // f(x, y)
   *    parser.evaluate('f(2, 3)')                // 8
   *
   *    // get and set variables and functions
   *    const x = parser.get('x')                 // 7
   *    const f = parser.get('f')                 // function
   *    const g = f(3, 2)                         // 9
   *    parser.set('h', 500)
   *    const i = parser.evaluate('h / 2')        // 250
   *    parser.set('hello', function (name) {
   *        return 'hello, ' + name + '!'
   *    })
   *    parser.evaluate('hello("user")')          // "hello, user!"
   *
   *    // clear defined functions and variables
   *    parser.clear()
   *
   */
  function Parser() {
    if (!(this instanceof Parser)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this.scope = {};
  }
  /**
   * Attach type information
   */


  Parser.prototype.type = 'Parser';
  Parser.prototype.isParser = true;
  /**
   * Parse and evaluate the given expression
   * @param {string} expr   A string containing an expression, for example "2+3"
   * @return {*} result     The result, or undefined when the expression was empty
   * @throws {Error}
   */

  Parser.prototype.evaluate = function (expr) {
    // TODO: validate arguments
    return parse(expr).compile().evaluate(this.scope);
  };
  /**
   * Get a variable (a function or variable) by name from the parsers scope.
   * Returns undefined when not found
   * @param {string} name
   * @return {* | undefined} value
   */


  Parser.prototype.get = function (name) {
    // TODO: validate arguments
    return name in this.scope ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_2__["getSafeProperty"])(this.scope, name) : undefined;
  };
  /**
   * Get a map with all defined variables
   * @return {Object} values
   */


  Parser.prototype.getAll = function () {
    return Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["extend"])({}, this.scope);
  };
  /**
   * Set a symbol (a function or variable) by name from the parsers scope.
   * @param {string} name
   * @param {* | undefined} value
   */


  Parser.prototype.set = function (name, value) {
    // TODO: validate arguments
    return Object(_utils_customs__WEBPACK_IMPORTED_MODULE_2__["setSafeProperty"])(this.scope, name, value);
  };
  /**
   * Remove a variable from the parsers scope
   * @param {string} name
   */


  Parser.prototype.remove = function (name) {
    // TODO: validate arguments
    delete this.scope[name];
  };
  /**
   * Clear the scope with variables and functions
   */


  Parser.prototype.clear = function () {
    for (var _name in this.scope) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["hasOwnProperty"])(this.scope, _name)) {
        delete this.scope[_name];
      }
    }
  };

  return Parser;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/Infinity.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/Infinity.js ***!
  \*******************************************************************************/
/*! exports provided: InfinityDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InfinityDocs", function() { return InfinityDocs; });
var InfinityDocs = {
  name: 'Infinity',
  category: 'Constants',
  syntax: ['Infinity'],
  description: 'Infinity, a number which is larger than the maximum number that can be handled by a floating point number.',
  examples: ['Infinity', '1 / 0'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LN10.js":
/*!***************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/LN10.js ***!
  \***************************************************************************/
/*! exports provided: LN10Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LN10Docs", function() { return LN10Docs; });
var LN10Docs = {
  name: 'LN10',
  category: 'Constants',
  syntax: ['LN10'],
  description: 'Returns the natural logarithm of 10, approximately equal to 2.302',
  examples: ['LN10', 'log(10)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LN2.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/LN2.js ***!
  \**************************************************************************/
/*! exports provided: LN2Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LN2Docs", function() { return LN2Docs; });
var LN2Docs = {
  name: 'LN2',
  category: 'Constants',
  syntax: ['LN2'],
  description: 'Returns the natural logarithm of 2, approximately equal to 0.693',
  examples: ['LN2', 'log(2)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LOG10E.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/LOG10E.js ***!
  \*****************************************************************************/
/*! exports provided: LOG10EDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOG10EDocs", function() { return LOG10EDocs; });
var LOG10EDocs = {
  name: 'LOG10E',
  category: 'Constants',
  syntax: ['LOG10E'],
  description: 'Returns the base-10 logarithm of E, approximately equal to 0.434',
  examples: ['LOG10E', 'log(e, 10)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LOG2E.js":
/*!****************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/LOG2E.js ***!
  \****************************************************************************/
/*! exports provided: LOG2EDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOG2EDocs", function() { return LOG2EDocs; });
var LOG2EDocs = {
  name: 'LOG2E',
  category: 'Constants',
  syntax: ['LOG2E'],
  description: 'Returns the base-2 logarithm of E, approximately equal to 1.442',
  examples: ['LOG2E', 'log(e, 2)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/NaN.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/NaN.js ***!
  \**************************************************************************/
/*! exports provided: NaNDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NaNDocs", function() { return NaNDocs; });
var NaNDocs = {
  name: 'NaN',
  category: 'Constants',
  syntax: ['NaN'],
  description: 'Not a number',
  examples: ['NaN', '0 / 0'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/SQRT1_2.js":
/*!******************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/SQRT1_2.js ***!
  \******************************************************************************/
/*! exports provided: SQRT12Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQRT12Docs", function() { return SQRT12Docs; });
var SQRT12Docs = {
  name: 'SQRT1_2',
  category: 'Constants',
  syntax: ['SQRT1_2'],
  description: 'Returns the square root of 1/2, approximately equal to 0.707',
  examples: ['SQRT1_2', 'sqrt(1/2)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/SQRT2.js":
/*!****************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/SQRT2.js ***!
  \****************************************************************************/
/*! exports provided: SQRT2Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQRT2Docs", function() { return SQRT2Docs; });
var SQRT2Docs = {
  name: 'SQRT2',
  category: 'Constants',
  syntax: ['SQRT2'],
  description: 'Returns the square root of 2, approximately equal to 1.414',
  examples: ['SQRT2', 'sqrt(2)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/e.js":
/*!************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/e.js ***!
  \************************************************************************/
/*! exports provided: eDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eDocs", function() { return eDocs; });
var eDocs = {
  name: 'e',
  category: 'Constants',
  syntax: ['e'],
  description: 'Euler\'s number, the base of the natural logarithm. Approximately equal to 2.71828',
  examples: ['e', 'e ^ 2', 'exp(2)', 'log(e)'],
  seealso: ['exp']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/false.js":
/*!****************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/false.js ***!
  \****************************************************************************/
/*! exports provided: falseDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "falseDocs", function() { return falseDocs; });
var falseDocs = {
  name: 'false',
  category: 'Constants',
  syntax: ['false'],
  description: 'Boolean value false',
  examples: ['false'],
  seealso: ['true']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/i.js":
/*!************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/i.js ***!
  \************************************************************************/
/*! exports provided: iDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iDocs", function() { return iDocs; });
var iDocs = {
  name: 'i',
  category: 'Constants',
  syntax: ['i'],
  description: 'Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.',
  examples: ['i', 'i * i', 'sqrt(-1)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/null.js":
/*!***************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/null.js ***!
  \***************************************************************************/
/*! exports provided: nullDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nullDocs", function() { return nullDocs; });
var nullDocs = {
  name: 'null',
  category: 'Constants',
  syntax: ['null'],
  description: 'Value null',
  examples: ['null'],
  seealso: ['true', 'false']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/phi.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/phi.js ***!
  \**************************************************************************/
/*! exports provided: phiDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phiDocs", function() { return phiDocs; });
var phiDocs = {
  name: 'phi',
  category: 'Constants',
  syntax: ['phi'],
  description: 'Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...',
  examples: ['phi'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/pi.js":
/*!*************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/pi.js ***!
  \*************************************************************************/
/*! exports provided: piDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "piDocs", function() { return piDocs; });
var piDocs = {
  name: 'pi',
  category: 'Constants',
  syntax: ['pi'],
  description: 'The number pi is a mathematical constant that is the ratio of a circle\'s circumference to its diameter, and is approximately equal to 3.14159',
  examples: ['pi', 'sin(pi/2)'],
  seealso: ['tau']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/tau.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/tau.js ***!
  \**************************************************************************/
/*! exports provided: tauDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tauDocs", function() { return tauDocs; });
var tauDocs = {
  name: 'tau',
  category: 'Constants',
  syntax: ['tau'],
  description: 'Tau is the ratio constant of a circle\'s circumference to radius, equal to 2 * pi, approximately 6.2832.',
  examples: ['tau', '2 * pi'],
  seealso: ['pi']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/true.js":
/*!***************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/true.js ***!
  \***************************************************************************/
/*! exports provided: trueDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trueDocs", function() { return trueDocs; });
var trueDocs = {
  name: 'true',
  category: 'Constants',
  syntax: ['true'],
  description: 'Boolean value true',
  examples: ['true'],
  seealso: ['false']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/constants/version.js":
/*!******************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/constants/version.js ***!
  \******************************************************************************/
/*! exports provided: versionDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "versionDocs", function() { return versionDocs; });
var versionDocs = {
  name: 'version',
  category: 'Constants',
  syntax: ['version'],
  description: 'A string with the version number of math.js',
  examples: ['version'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/bignumber.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/bignumber.js ***!
  \***********************************************************************************/
/*! exports provided: bignumberDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bignumberDocs", function() { return bignumberDocs; });
var bignumberDocs = {
  name: 'bignumber',
  category: 'Construction',
  syntax: ['bignumber(x)'],
  description: 'Create a big number from a number or string.',
  examples: ['0.1 + 0.2', 'bignumber(0.1) + bignumber(0.2)', 'bignumber("7.2")', 'bignumber("7.2e500")', 'bignumber([0.1, 0.2, 0.3])'],
  seealso: ['boolean', 'complex', 'fraction', 'index', 'matrix', 'string', 'unit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/boolean.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/boolean.js ***!
  \*********************************************************************************/
/*! exports provided: booleanDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "booleanDocs", function() { return booleanDocs; });
var booleanDocs = {
  name: 'boolean',
  category: 'Construction',
  syntax: ['x', 'boolean(x)'],
  description: 'Convert a string or number into a boolean.',
  examples: ['boolean(0)', 'boolean(1)', 'boolean(3)', 'boolean("true")', 'boolean("false")', 'boolean([1, 0, 1, 1])'],
  seealso: ['bignumber', 'complex', 'index', 'matrix', 'number', 'string', 'unit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/complex.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/complex.js ***!
  \*********************************************************************************/
/*! exports provided: complexDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "complexDocs", function() { return complexDocs; });
var complexDocs = {
  name: 'complex',
  category: 'Construction',
  syntax: ['complex()', 'complex(re, im)', 'complex(string)'],
  description: 'Create a complex number.',
  examples: ['complex()', 'complex(2, 3)', 'complex("7 - 2i")'],
  seealso: ['bignumber', 'boolean', 'index', 'matrix', 'number', 'string', 'unit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/createUnit.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/createUnit.js ***!
  \************************************************************************************/
/*! exports provided: createUnitDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnitDocs", function() { return createUnitDocs; });
var createUnitDocs = {
  name: 'createUnit',
  category: 'Construction',
  syntax: ['createUnit(definitions)', 'createUnit(name, definition)'],
  description: 'Create a user-defined unit and register it with the Unit type.',
  examples: ['createUnit("foo")', 'createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})', 'createUnit("mph", "1 mile/hour")'],
  seealso: ['unit', 'splitUnit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/fraction.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/fraction.js ***!
  \**********************************************************************************/
/*! exports provided: fractionDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fractionDocs", function() { return fractionDocs; });
var fractionDocs = {
  name: 'fraction',
  category: 'Construction',
  syntax: ['fraction(num)', 'fraction(num,den)'],
  description: 'Create a fraction from a number or from a numerator and denominator.',
  examples: ['fraction(0.125)', 'fraction(1, 3) + fraction(2, 5)'],
  seealso: ['bignumber', 'boolean', 'complex', 'index', 'matrix', 'string', 'unit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/index.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/index.js ***!
  \*******************************************************************************/
/*! exports provided: indexDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexDocs", function() { return indexDocs; });
var indexDocs = {
  name: 'index',
  category: 'Construction',
  syntax: ['[start]', '[start:end]', '[start:step:end]', '[start1, start 2, ...]', '[start1:end1, start2:end2, ...]', '[start1:step1:end1, start2:step2:end2, ...]'],
  description: 'Create an index to get or replace a subset of a matrix',
  examples: ['[]', '[1, 2, 3]', 'A = [1, 2, 3; 4, 5, 6]', 'A[1, :]', 'A[1, 2] = 50', 'A[0:2, 0:2] = ones(2, 2)'],
  seealso: ['bignumber', 'boolean', 'complex', 'matrix,', 'number', 'range', 'string', 'unit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/matrix.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/matrix.js ***!
  \********************************************************************************/
/*! exports provided: matrixDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrixDocs", function() { return matrixDocs; });
var matrixDocs = {
  name: 'matrix',
  category: 'Construction',
  syntax: ['[]', '[a1, b1, ...; a2, b2, ...]', 'matrix()', 'matrix("dense")', 'matrix([...])'],
  description: 'Create a matrix.',
  examples: ['[]', '[1, 2, 3]', '[1, 2, 3; 4, 5, 6]', 'matrix()', 'matrix([3, 4])', 'matrix([3, 4; 5, 6], "sparse")', 'matrix([3, 4; 5, 6], "sparse", "number")'],
  seealso: ['bignumber', 'boolean', 'complex', 'index', 'number', 'string', 'unit', 'sparse']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/number.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/number.js ***!
  \********************************************************************************/
/*! exports provided: numberDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberDocs", function() { return numberDocs; });
var numberDocs = {
  name: 'number',
  category: 'Construction',
  syntax: ['x', 'number(x)', 'number(unit, valuelessUnit)'],
  description: 'Create a number or convert a string or boolean into a number.',
  examples: ['2', '2e3', '4.05', 'number(2)', 'number("7.2")', 'number(true)', 'number([true, false, true, true])', 'number(unit("52cm"), "m")'],
  seealso: ['bignumber', 'boolean', 'complex', 'fraction', 'index', 'matrix', 'string', 'unit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/sparse.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/sparse.js ***!
  \********************************************************************************/
/*! exports provided: sparseDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sparseDocs", function() { return sparseDocs; });
var sparseDocs = {
  name: 'sparse',
  category: 'Construction',
  syntax: ['sparse()', 'sparse([a1, b1, ...; a1, b2, ...])', 'sparse([a1, b1, ...; a1, b2, ...], "number")'],
  description: 'Create a sparse matrix.',
  examples: ['sparse()', 'sparse([3, 4; 5, 6])', 'sparse([3, 0; 5, 0], "number")'],
  seealso: ['bignumber', 'boolean', 'complex', 'index', 'number', 'string', 'unit', 'matrix']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/splitUnit.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/splitUnit.js ***!
  \***********************************************************************************/
/*! exports provided: splitUnitDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitUnitDocs", function() { return splitUnitDocs; });
var splitUnitDocs = {
  name: 'splitUnit',
  category: 'Construction',
  syntax: ['splitUnit(unit: Unit, parts: Unit[])'],
  description: 'Split a unit in an array of units whose sum is equal to the original unit.',
  examples: ['splitUnit(1 m, ["feet", "inch"])'],
  seealso: ['unit', 'createUnit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/string.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/string.js ***!
  \********************************************************************************/
/*! exports provided: stringDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringDocs", function() { return stringDocs; });
var stringDocs = {
  name: 'string',
  category: 'Construction',
  syntax: ['"text"', 'string(x)'],
  description: 'Create a string or convert a value to a string',
  examples: ['"Hello World!"', 'string(4.2)', 'string(3 + 2i)'],
  seealso: ['bignumber', 'boolean', 'complex', 'index', 'matrix', 'number', 'unit']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/construction/unit.js":
/*!******************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/construction/unit.js ***!
  \******************************************************************************/
/*! exports provided: unitDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unitDocs", function() { return unitDocs; });
var unitDocs = {
  name: 'unit',
  category: 'Construction',
  syntax: ['value unit', 'unit(value, unit)', 'unit(string)'],
  description: 'Create a unit.',
  examples: ['5.5 mm', '3 inch', 'unit(7.1, "kilogram")', 'unit("23 deg")'],
  seealso: ['bignumber', 'boolean', 'complex', 'index', 'matrix', 'number', 'string']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/core/config.js":
/*!************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/core/config.js ***!
  \************************************************************************/
/*! exports provided: configDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "configDocs", function() { return configDocs; });
var configDocs = {
  name: 'config',
  category: 'Core',
  syntax: ['config()', 'config(options)'],
  description: 'Get configuration or change configuration.',
  examples: ['config()', '1/3 + 1/4', 'config({number: "Fraction"})', '1/3 + 1/4'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/core/import.js":
/*!************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/core/import.js ***!
  \************************************************************************/
/*! exports provided: importDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "importDocs", function() { return importDocs; });
var importDocs = {
  name: 'import',
  category: 'Core',
  syntax: ['import(functions)', 'import(functions, options)'],
  description: 'Import functions or constants from an object.',
  examples: ['import({myFn: f(x)=x^2, myConstant: 32 })', 'myFn(2)', 'myConstant'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/core/typed.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/core/typed.js ***!
  \***********************************************************************/
/*! exports provided: typedDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typedDocs", function() { return typedDocs; });
var typedDocs = {
  name: 'typed',
  category: 'Core',
  syntax: ['typed(signatures)', 'typed(name, signatures)'],
  description: 'Create a typed function.',
  examples: ['double = typed({ "number, number": f(x)=x+x })', 'double(2)', 'double("hello")'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/embeddedDocs.js":
/*!*************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/embeddedDocs.js ***!
  \*************************************************************************/
/*! exports provided: embeddedDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "embeddedDocs", function() { return embeddedDocs; });
/* harmony import */ var _construction_bignumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./construction/bignumber */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/bignumber.js");
/* harmony import */ var _function_utils_typeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./function/utils/typeOf */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/typeOf.js");
/* harmony import */ var _function_utils_isZero__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./function/utils/isZero */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isZero.js");
/* harmony import */ var _function_utils_isPrime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./function/utils/isPrime */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isPrime.js");
/* harmony import */ var _function_utils_isPositive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./function/utils/isPositive */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isPositive.js");
/* harmony import */ var _function_utils_isNumeric__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./function/utils/isNumeric */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNumeric.js");
/* harmony import */ var _function_utils_hasNumericValue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./function/utils/hasNumericValue */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/hasNumericValue.js");
/* harmony import */ var _function_utils_isNegative__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./function/utils/isNegative */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNegative.js");
/* harmony import */ var _function_utils_isInteger__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./function/utils/isInteger */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isInteger.js");
/* harmony import */ var _function_utils_isNaN__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./function/utils/isNaN */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNaN.js");
/* harmony import */ var _function_utils_format__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./function/utils/format */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/format.js");
/* harmony import */ var _function_utils_clone__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./function/utils/clone */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/clone.js");
/* harmony import */ var _function_units_to__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./function/units/to */ "../node_modules/mathjs/es/expression/embeddedDocs/function/units/to.js");
/* harmony import */ var _function_trigonometry_tanh__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./function/trigonometry/tanh */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/tanh.js");
/* harmony import */ var _function_trigonometry_tan__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./function/trigonometry/tan */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/tan.js");
/* harmony import */ var _function_trigonometry_sinh__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./function/trigonometry/sinh */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sinh.js");
/* harmony import */ var _function_trigonometry_sech__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./function/trigonometry/sech */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sech.js");
/* harmony import */ var _function_trigonometry_sec__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./function/trigonometry/sec */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sec.js");
/* harmony import */ var _function_trigonometry_csch__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./function/trigonometry/csch */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/csch.js");
/* harmony import */ var _function_trigonometry_csc__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./function/trigonometry/csc */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/csc.js");
/* harmony import */ var _function_trigonometry_coth__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./function/trigonometry/coth */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/coth.js");
/* harmony import */ var _function_trigonometry_cot__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./function/trigonometry/cot */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cot.js");
/* harmony import */ var _function_trigonometry_cosh__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./function/trigonometry/cosh */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cosh.js");
/* harmony import */ var _function_trigonometry_cos__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./function/trigonometry/cos */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cos.js");
/* harmony import */ var _function_trigonometry_atan2__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./function/trigonometry/atan2 */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atan2.js");
/* harmony import */ var _function_trigonometry_atanh__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./function/trigonometry/atanh */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atanh.js");
/* harmony import */ var _function_trigonometry_atan__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./function/trigonometry/atan */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atan.js");
/* harmony import */ var _function_trigonometry_asinh__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./function/trigonometry/asinh */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asinh.js");
/* harmony import */ var _function_trigonometry_asin__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./function/trigonometry/asin */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asin.js");
/* harmony import */ var _function_trigonometry_asech__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./function/trigonometry/asech */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asech.js");
/* harmony import */ var _function_trigonometry_asec__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./function/trigonometry/asec */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asec.js");
/* harmony import */ var _function_trigonometry_acsch__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./function/trigonometry/acsch */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acsch.js");
/* harmony import */ var _function_trigonometry_acsc__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./function/trigonometry/acsc */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acsc.js");
/* harmony import */ var _function_trigonometry_acoth__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./function/trigonometry/acoth */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acoth.js");
/* harmony import */ var _function_trigonometry_acot__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./function/trigonometry/acot */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acot.js");
/* harmony import */ var _function_trigonometry_acosh__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./function/trigonometry/acosh */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acosh.js");
/* harmony import */ var _function_trigonometry_acos__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./function/trigonometry/acos */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acos.js");
/* harmony import */ var _function_statistics_sum__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./function/statistics/sum */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/sum.js");
/* harmony import */ var _function_statistics_std__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./function/statistics/std */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/std.js");
/* harmony import */ var _function_statistics_quantileSeq__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./function/statistics/quantileSeq */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js");
/* harmony import */ var _function_statistics_prod__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./function/statistics/prod */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/prod.js");
/* harmony import */ var _function_statistics_mode__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./function/statistics/mode */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mode.js");
/* harmony import */ var _function_statistics_min__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./function/statistics/min */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/min.js");
/* harmony import */ var _function_statistics_median__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./function/statistics/median */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/median.js");
/* harmony import */ var _function_statistics_mean__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./function/statistics/mean */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mean.js");
/* harmony import */ var _function_statistics_max__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./function/statistics/max */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/max.js");
/* harmony import */ var _function_statistics_mad__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./function/statistics/mad */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mad.js");
/* harmony import */ var _function_special_erf__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./function/special/erf */ "../node_modules/mathjs/es/expression/embeddedDocs/function/special/erf.js");
/* harmony import */ var _function_set_setUnion__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./function/set/setUnion */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setUnion.js");
/* harmony import */ var _function_set_setSymDifference__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./function/set/setSymDifference */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setSymDifference.js");
/* harmony import */ var _function_set_setSize__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./function/set/setSize */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setSize.js");
/* harmony import */ var _function_set_setPowerset__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./function/set/setPowerset */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setPowerset.js");
/* harmony import */ var _function_set_setMultiplicity__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./function/set/setMultiplicity */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setMultiplicity.js");
/* harmony import */ var _function_set_setIsSubset__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./function/set/setIsSubset */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setIsSubset.js");
/* harmony import */ var _function_set_setIntersect__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./function/set/setIntersect */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setIntersect.js");
/* harmony import */ var _function_set_setDistinct__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./function/set/setDistinct */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setDistinct.js");
/* harmony import */ var _function_set_setDifference__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./function/set/setDifference */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setDifference.js");
/* harmony import */ var _function_set_setCartesian__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./function/set/setCartesian */ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setCartesian.js");
/* harmony import */ var _function_relational_unequal__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./function/relational/unequal */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/unequal.js");
/* harmony import */ var _function_relational_smallerEq__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./function/relational/smallerEq */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/smallerEq.js");
/* harmony import */ var _function_relational_smaller__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./function/relational/smaller */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/smaller.js");
/* harmony import */ var _function_relational_largerEq__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./function/relational/largerEq */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/largerEq.js");
/* harmony import */ var _function_relational_larger__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./function/relational/larger */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/larger.js");
/* harmony import */ var _function_relational_equalText__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./function/relational/equalText */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/equalText.js");
/* harmony import */ var _function_relational_equal__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./function/relational/equal */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/equal.js");
/* harmony import */ var _function_relational_deepEqual__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./function/relational/deepEqual */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/deepEqual.js");
/* harmony import */ var _function_relational_compareText__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./function/relational/compareText */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compareText.js");
/* harmony import */ var _function_relational_compareNatural__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./function/relational/compareNatural */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compareNatural.js");
/* harmony import */ var _function_relational_compare__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./function/relational/compare */ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compare.js");
/* harmony import */ var _function_probability_randomInt__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./function/probability/randomInt */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/randomInt.js");
/* harmony import */ var _function_probability_random__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./function/probability/random */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/random.js");
/* harmony import */ var _function_probability_pickRandom__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./function/probability/pickRandom */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/pickRandom.js");
/* harmony import */ var _function_probability_permutations__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./function/probability/permutations */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/permutations.js");
/* harmony import */ var _function_probability_multinomial__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./function/probability/multinomial */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/multinomial.js");
/* harmony import */ var _function_probability_kldivergence__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./function/probability/kldivergence */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/kldivergence.js");
/* harmony import */ var _function_probability_gamma__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./function/probability/gamma */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/gamma.js");
/* harmony import */ var _function_probability_factorial__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./function/probability/factorial */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/factorial.js");
/* harmony import */ var _function_probability_combinations__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./function/probability/combinations */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/combinations.js");
/* harmony import */ var _function_probability_combinationsWithRep__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./function/probability/combinationsWithRep */ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/combinationsWithRep.js");
/* harmony import */ var _function_matrix_zeros__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./function/matrix/zeros */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/zeros.js");
/* harmony import */ var _function_matrix_transpose__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./function/matrix/transpose */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/transpose.js");
/* harmony import */ var _function_matrix_trace__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./function/matrix/trace */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/trace.js");
/* harmony import */ var _function_matrix_subset__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./function/matrix/subset */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/subset.js");
/* harmony import */ var _function_matrix_squeeze__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./function/matrix/squeeze */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/squeeze.js");
/* harmony import */ var _function_matrix_sort__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./function/matrix/sort */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/sort.js");
/* harmony import */ var _function_matrix_size__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./function/matrix/size */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/size.js");
/* harmony import */ var _function_matrix_diff__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./function/matrix/diff */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/diff.js");
/* harmony import */ var _function_matrix_reshape__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./function/matrix/reshape */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/reshape.js");
/* harmony import */ var _function_matrix_resize__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./function/matrix/resize */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/resize.js");
/* harmony import */ var _function_matrix_range__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./function/matrix/range */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/range.js");
/* harmony import */ var _function_matrix_partitionSelect__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./function/matrix/partitionSelect */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/partitionSelect.js");
/* harmony import */ var _function_matrix_ones__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./function/matrix/ones */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/ones.js");
/* harmony import */ var _function_matrix_map__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./function/matrix/map */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/map.js");
/* harmony import */ var _function_matrix_kron__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./function/matrix/kron */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/kron.js");
/* harmony import */ var _function_matrix_inv__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./function/matrix/inv */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/inv.js");
/* harmony import */ var _function_matrix_forEach__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./function/matrix/forEach */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/forEach.js");
/* harmony import */ var _function_matrix_flatten__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./function/matrix/flatten */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/flatten.js");
/* harmony import */ var _function_matrix_filter__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./function/matrix/filter */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/filter.js");
/* harmony import */ var _function_matrix_identity__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./function/matrix/identity */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/identity.js");
/* harmony import */ var _function_matrix_getMatrixDataType__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./function/matrix/getMatrixDataType */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/getMatrixDataType.js");
/* harmony import */ var _function_matrix_dot__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./function/matrix/dot */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/dot.js");
/* harmony import */ var _function_matrix_diag__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./function/matrix/diag */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/diag.js");
/* harmony import */ var _function_matrix_det__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./function/matrix/det */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/det.js");
/* harmony import */ var _function_matrix_ctranspose__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./function/matrix/ctranspose */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/ctranspose.js");
/* harmony import */ var _function_matrix_cross__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./function/matrix/cross */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/cross.js");
/* harmony import */ var _function_matrix_concat__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./function/matrix/concat */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/concat.js");
/* harmony import */ var _function_logical_xor__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./function/logical/xor */ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/xor.js");
/* harmony import */ var _function_logical_or__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./function/logical/or */ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/or.js");
/* harmony import */ var _function_logical_not__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./function/logical/not */ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/not.js");
/* harmony import */ var _function_logical_and__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./function/logical/and */ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/and.js");
/* harmony import */ var _function_geometry_intersect__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./function/geometry/intersect */ "../node_modules/mathjs/es/expression/embeddedDocs/function/geometry/intersect.js");
/* harmony import */ var _function_geometry_distance__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./function/geometry/distance */ "../node_modules/mathjs/es/expression/embeddedDocs/function/geometry/distance.js");
/* harmony import */ var _function_expression_help__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./function/expression/help */ "../node_modules/mathjs/es/expression/embeddedDocs/function/expression/help.js");
/* harmony import */ var _function_expression_evaluate__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./function/expression/evaluate */ "../node_modules/mathjs/es/expression/embeddedDocs/function/expression/evaluate.js");
/* harmony import */ var _function_complex_im__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./function/complex/im */ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/im.js");
/* harmony import */ var _function_complex_re__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./function/complex/re */ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/re.js");
/* harmony import */ var _function_complex_conj__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./function/complex/conj */ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/conj.js");
/* harmony import */ var _function_complex_arg__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./function/complex/arg */ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/arg.js");
/* harmony import */ var _core_typed__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./core/typed */ "../node_modules/mathjs/es/expression/embeddedDocs/core/typed.js");
/* harmony import */ var _core_import__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./core/import */ "../node_modules/mathjs/es/expression/embeddedDocs/core/import.js");
/* harmony import */ var _core_config__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./core/config */ "../node_modules/mathjs/es/expression/embeddedDocs/core/config.js");
/* harmony import */ var _function_combinatorics_stirlingS2__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./function/combinatorics/stirlingS2 */ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/stirlingS2.js");
/* harmony import */ var _function_combinatorics_composition__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./function/combinatorics/composition */ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/composition.js");
/* harmony import */ var _function_combinatorics_catalan__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./function/combinatorics/catalan */ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/catalan.js");
/* harmony import */ var _function_combinatorics_bellNumbers__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./function/combinatorics/bellNumbers */ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/bellNumbers.js");
/* harmony import */ var _function_bitwise_rightLogShift__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./function/bitwise/rightLogShift */ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/rightLogShift.js");
/* harmony import */ var _function_bitwise_rightArithShift__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./function/bitwise/rightArithShift */ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/rightArithShift.js");
/* harmony import */ var _function_bitwise_leftShift__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./function/bitwise/leftShift */ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/leftShift.js");
/* harmony import */ var _function_bitwise_bitXor__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./function/bitwise/bitXor */ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitXor.js");
/* harmony import */ var _function_bitwise_bitOr__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./function/bitwise/bitOr */ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js");
/* harmony import */ var _function_bitwise_bitNot__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./function/bitwise/bitNot */ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitNot.js");
/* harmony import */ var _function_bitwise_bitAnd__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./function/bitwise/bitAnd */ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitAnd.js");
/* harmony import */ var _function_arithmetic_xgcd__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./function/arithmetic/xgcd */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/xgcd.js");
/* harmony import */ var _function_arithmetic_unaryPlus__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./function/arithmetic/unaryPlus */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/unaryPlus.js");
/* harmony import */ var _function_arithmetic_unaryMinus__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./function/arithmetic/unaryMinus */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/unaryMinus.js");
/* harmony import */ var _function_arithmetic_square__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./function/arithmetic/square */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/square.js");
/* harmony import */ var _function_arithmetic_sqrtm__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./function/arithmetic/sqrtm */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sqrtm.js");
/* harmony import */ var _function_arithmetic_sqrt__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./function/arithmetic/sqrt */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sqrt.js");
/* harmony import */ var _function_arithmetic_sign__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./function/arithmetic/sign */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sign.js");
/* harmony import */ var _function_arithmetic_round__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./function/arithmetic/round */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/round.js");
/* harmony import */ var _function_arithmetic_pow__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./function/arithmetic/pow */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/pow.js");
/* harmony import */ var _function_arithmetic_nthRoots__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./function/arithmetic/nthRoots */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/nthRoots.js");
/* harmony import */ var _function_arithmetic_nthRoot__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./function/arithmetic/nthRoot */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/nthRoot.js");
/* harmony import */ var _function_arithmetic_norm__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./function/arithmetic/norm */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/norm.js");
/* harmony import */ var _function_arithmetic_multiply__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./function/arithmetic/multiply */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/multiply.js");
/* harmony import */ var _function_arithmetic_mod__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./function/arithmetic/mod */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/mod.js");
/* harmony import */ var _function_arithmetic_log10__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./function/arithmetic/log10 */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log10.js");
/* harmony import */ var _function_arithmetic_log1p__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./function/arithmetic/log1p */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log1p.js");
/* harmony import */ var _function_arithmetic_log2__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./function/arithmetic/log2 */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log2.js");
/* harmony import */ var _function_arithmetic_log__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./function/arithmetic/log */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log.js");
/* harmony import */ var _function_arithmetic_lcm__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./function/arithmetic/lcm */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/lcm.js");
/* harmony import */ var _function_arithmetic_hypot__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./function/arithmetic/hypot */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/hypot.js");
/* harmony import */ var _function_arithmetic_gcd__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./function/arithmetic/gcd */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/gcd.js");
/* harmony import */ var _function_arithmetic_floor__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./function/arithmetic/floor */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/floor.js");
/* harmony import */ var _function_arithmetic_fix__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./function/arithmetic/fix */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/fix.js");
/* harmony import */ var _function_arithmetic_expm1__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./function/arithmetic/expm1 */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/expm1.js");
/* harmony import */ var _function_arithmetic_expm__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./function/arithmetic/expm */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/expm.js");
/* harmony import */ var _function_matrix_eigs__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./function/matrix/eigs */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/eigs.js");
/* harmony import */ var _function_arithmetic_exp__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./function/arithmetic/exp */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/exp.js");
/* harmony import */ var _function_arithmetic_dotMultiply__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./function/arithmetic/dotMultiply */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotMultiply.js");
/* harmony import */ var _function_arithmetic_dotDivide__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./function/arithmetic/dotDivide */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotDivide.js");
/* harmony import */ var _function_arithmetic_divide__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./function/arithmetic/divide */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/divide.js");
/* harmony import */ var _function_arithmetic_cube__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./function/arithmetic/cube */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/cube.js");
/* harmony import */ var _function_arithmetic_ceil__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./function/arithmetic/ceil */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/ceil.js");
/* harmony import */ var _function_arithmetic_cbrt__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./function/arithmetic/cbrt */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/cbrt.js");
/* harmony import */ var _function_arithmetic_add__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./function/arithmetic/add */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/add.js");
/* harmony import */ var _function_arithmetic_abs__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./function/arithmetic/abs */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/abs.js");
/* harmony import */ var _function_algebra_qr__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./function/algebra/qr */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/qr.js");
/* harmony import */ var _function_algebra_usolve__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./function/algebra/usolve */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/usolve.js");
/* harmony import */ var _function_algebra_slu__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./function/algebra/slu */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/slu.js");
/* harmony import */ var _function_algebra_rationalize__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./function/algebra/rationalize */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/rationalize.js");
/* harmony import */ var _function_algebra_simplify__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./function/algebra/simplify */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/simplify.js");
/* harmony import */ var _function_algebra_lup__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./function/algebra/lup */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lup.js");
/* harmony import */ var _function_algebra_lsolve__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./function/algebra/lsolve */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lsolve.js");
/* harmony import */ var _function_algebra_derivative__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./function/algebra/derivative */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/derivative.js");
/* harmony import */ var _constants_version__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./constants/version */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/version.js");
/* harmony import */ var _constants_true__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./constants/true */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/true.js");
/* harmony import */ var _constants_tau__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./constants/tau */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/tau.js");
/* harmony import */ var _constants_SQRT2__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./constants/SQRT2 */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/SQRT2.js");
/* harmony import */ var _constants_SQRT1_2__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./constants/SQRT1_2 */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/SQRT1_2.js");
/* harmony import */ var _constants_phi__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./constants/phi */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/phi.js");
/* harmony import */ var _constants_pi__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./constants/pi */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/pi.js");
/* harmony import */ var _constants_null__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./constants/null */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/null.js");
/* harmony import */ var _constants_NaN__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./constants/NaN */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/NaN.js");
/* harmony import */ var _constants_LOG10E__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./constants/LOG10E */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LOG10E.js");
/* harmony import */ var _constants_LOG2E__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./constants/LOG2E */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LOG2E.js");
/* harmony import */ var _constants_LN10__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./constants/LN10 */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LN10.js");
/* harmony import */ var _constants_LN2__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./constants/LN2 */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/LN2.js");
/* harmony import */ var _constants_Infinity__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./constants/Infinity */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/Infinity.js");
/* harmony import */ var _constants_i__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./constants/i */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/i.js");
/* harmony import */ var _constants_false__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./constants/false */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/false.js");
/* harmony import */ var _constants_e__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./constants/e */ "../node_modules/mathjs/es/expression/embeddedDocs/constants/e.js");
/* harmony import */ var _construction_unit__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./construction/unit */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/unit.js");
/* harmony import */ var _construction_string__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./construction/string */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/string.js");
/* harmony import */ var _construction_splitUnit__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./construction/splitUnit */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/splitUnit.js");
/* harmony import */ var _construction_sparse__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./construction/sparse */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/sparse.js");
/* harmony import */ var _construction_number__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./construction/number */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/number.js");
/* harmony import */ var _construction_matrix__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./construction/matrix */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/matrix.js");
/* harmony import */ var _construction__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./construction */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/index.js");
/* harmony import */ var _construction_fraction__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./construction/fraction */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/fraction.js");
/* harmony import */ var _construction_createUnit__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ./construction/createUnit */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/createUnit.js");
/* harmony import */ var _construction_complex__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ./construction/complex */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/complex.js");
/* harmony import */ var _construction_boolean__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ./construction/boolean */ "../node_modules/mathjs/es/expression/embeddedDocs/construction/boolean.js");
/* harmony import */ var _function_arithmetic_dotPow__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ./function/arithmetic/dotPow */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotPow.js");
/* harmony import */ var _function_algebra_lusolve__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ./function/algebra/lusolve */ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lusolve.js");
/* harmony import */ var _function_arithmetic_subtract__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ./function/arithmetic/subtract */ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/subtract.js");
/* harmony import */ var _function_statistics_variance__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ./function/statistics/variance */ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/variance.js");
/* harmony import */ var _function_trigonometry_sin__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ./function/trigonometry/sin */ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sin.js");
/* harmony import */ var _function_utils_numeric__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ./function/utils/numeric */ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/numeric.js");
/* harmony import */ var _function_matrix_column__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ./function/matrix/column */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/column.js");
/* harmony import */ var _function_matrix_row__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ./function/matrix/row */ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/row.js");



















































































































































































































var embeddedDocs = {
  // construction functions
  bignumber: _construction_bignumber__WEBPACK_IMPORTED_MODULE_0__["bignumberDocs"],
  "boolean": _construction_boolean__WEBPACK_IMPORTED_MODULE_202__["booleanDocs"],
  complex: _construction_complex__WEBPACK_IMPORTED_MODULE_201__["complexDocs"],
  createUnit: _construction_createUnit__WEBPACK_IMPORTED_MODULE_200__["createUnitDocs"],
  fraction: _construction_fraction__WEBPACK_IMPORTED_MODULE_199__["fractionDocs"],
  index: _construction__WEBPACK_IMPORTED_MODULE_198__["indexDocs"],
  matrix: _construction_matrix__WEBPACK_IMPORTED_MODULE_197__["matrixDocs"],
  number: _construction_number__WEBPACK_IMPORTED_MODULE_196__["numberDocs"],
  sparse: _construction_sparse__WEBPACK_IMPORTED_MODULE_195__["sparseDocs"],
  splitUnit: _construction_splitUnit__WEBPACK_IMPORTED_MODULE_194__["splitUnitDocs"],
  string: _construction_string__WEBPACK_IMPORTED_MODULE_193__["stringDocs"],
  unit: _construction_unit__WEBPACK_IMPORTED_MODULE_192__["unitDocs"],
  // constants
  e: _constants_e__WEBPACK_IMPORTED_MODULE_191__["eDocs"],
  E: _constants_e__WEBPACK_IMPORTED_MODULE_191__["eDocs"],
  "false": _constants_false__WEBPACK_IMPORTED_MODULE_190__["falseDocs"],
  i: _constants_i__WEBPACK_IMPORTED_MODULE_189__["iDocs"],
  Infinity: _constants_Infinity__WEBPACK_IMPORTED_MODULE_188__["InfinityDocs"],
  LN2: _constants_LN2__WEBPACK_IMPORTED_MODULE_187__["LN2Docs"],
  LN10: _constants_LN10__WEBPACK_IMPORTED_MODULE_186__["LN10Docs"],
  LOG2E: _constants_LOG2E__WEBPACK_IMPORTED_MODULE_185__["LOG2EDocs"],
  LOG10E: _constants_LOG10E__WEBPACK_IMPORTED_MODULE_184__["LOG10EDocs"],
  NaN: _constants_NaN__WEBPACK_IMPORTED_MODULE_183__["NaNDocs"],
  "null": _constants_null__WEBPACK_IMPORTED_MODULE_182__["nullDocs"],
  pi: _constants_pi__WEBPACK_IMPORTED_MODULE_181__["piDocs"],
  PI: _constants_pi__WEBPACK_IMPORTED_MODULE_181__["piDocs"],
  phi: _constants_phi__WEBPACK_IMPORTED_MODULE_180__["phiDocs"],
  SQRT1_2: _constants_SQRT1_2__WEBPACK_IMPORTED_MODULE_179__["SQRT12Docs"],
  SQRT2: _constants_SQRT2__WEBPACK_IMPORTED_MODULE_178__["SQRT2Docs"],
  tau: _constants_tau__WEBPACK_IMPORTED_MODULE_177__["tauDocs"],
  "true": _constants_true__WEBPACK_IMPORTED_MODULE_176__["trueDocs"],
  version: _constants_version__WEBPACK_IMPORTED_MODULE_175__["versionDocs"],
  // physical constants
  // TODO: more detailed docs for physical constants
  speedOfLight: {
    description: 'Speed of light in vacuum',
    examples: ['speedOfLight']
  },
  gravitationConstant: {
    description: 'Newtonian constant of gravitation',
    examples: ['gravitationConstant']
  },
  planckConstant: {
    description: 'Planck constant',
    examples: ['planckConstant']
  },
  reducedPlanckConstant: {
    description: 'Reduced Planck constant',
    examples: ['reducedPlanckConstant']
  },
  magneticConstant: {
    description: 'Magnetic constant (vacuum permeability)',
    examples: ['magneticConstant']
  },
  electricConstant: {
    description: 'Electric constant (vacuum permeability)',
    examples: ['electricConstant']
  },
  vacuumImpedance: {
    description: 'Characteristic impedance of vacuum',
    examples: ['vacuumImpedance']
  },
  coulomb: {
    description: 'Coulomb\'s constant',
    examples: ['coulomb']
  },
  elementaryCharge: {
    description: 'Elementary charge',
    examples: ['elementaryCharge']
  },
  bohrMagneton: {
    description: 'Borh magneton',
    examples: ['bohrMagneton']
  },
  conductanceQuantum: {
    description: 'Conductance quantum',
    examples: ['conductanceQuantum']
  },
  inverseConductanceQuantum: {
    description: 'Inverse conductance quantum',
    examples: ['inverseConductanceQuantum']
  },
  // josephson: {description: 'Josephson constant', examples: ['josephson']},
  magneticFluxQuantum: {
    description: 'Magnetic flux quantum',
    examples: ['magneticFluxQuantum']
  },
  nuclearMagneton: {
    description: 'Nuclear magneton',
    examples: ['nuclearMagneton']
  },
  klitzing: {
    description: 'Von Klitzing constant',
    examples: ['klitzing']
  },
  bohrRadius: {
    description: 'Borh radius',
    examples: ['bohrRadius']
  },
  classicalElectronRadius: {
    description: 'Classical electron radius',
    examples: ['classicalElectronRadius']
  },
  electronMass: {
    description: 'Electron mass',
    examples: ['electronMass']
  },
  fermiCoupling: {
    description: 'Fermi coupling constant',
    examples: ['fermiCoupling']
  },
  fineStructure: {
    description: 'Fine-structure constant',
    examples: ['fineStructure']
  },
  hartreeEnergy: {
    description: 'Hartree energy',
    examples: ['hartreeEnergy']
  },
  protonMass: {
    description: 'Proton mass',
    examples: ['protonMass']
  },
  deuteronMass: {
    description: 'Deuteron Mass',
    examples: ['deuteronMass']
  },
  neutronMass: {
    description: 'Neutron mass',
    examples: ['neutronMass']
  },
  quantumOfCirculation: {
    description: 'Quantum of circulation',
    examples: ['quantumOfCirculation']
  },
  rydberg: {
    description: 'Rydberg constant',
    examples: ['rydberg']
  },
  thomsonCrossSection: {
    description: 'Thomson cross section',
    examples: ['thomsonCrossSection']
  },
  weakMixingAngle: {
    description: 'Weak mixing angle',
    examples: ['weakMixingAngle']
  },
  efimovFactor: {
    description: 'Efimov factor',
    examples: ['efimovFactor']
  },
  atomicMass: {
    description: 'Atomic mass constant',
    examples: ['atomicMass']
  },
  avogadro: {
    description: 'Avogadro\'s number',
    examples: ['avogadro']
  },
  boltzmann: {
    description: 'Boltzmann constant',
    examples: ['boltzmann']
  },
  faraday: {
    description: 'Faraday constant',
    examples: ['faraday']
  },
  firstRadiation: {
    description: 'First radiation constant',
    examples: ['firstRadiation']
  },
  loschmidt: {
    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',
    examples: ['loschmidt']
  },
  gasConstant: {
    description: 'Gas constant',
    examples: ['gasConstant']
  },
  molarPlanckConstant: {
    description: 'Molar Planck constant',
    examples: ['molarPlanckConstant']
  },
  molarVolume: {
    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',
    examples: ['molarVolume']
  },
  sackurTetrode: {
    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',
    examples: ['sackurTetrode']
  },
  secondRadiation: {
    description: 'Second radiation constant',
    examples: ['secondRadiation']
  },
  stefanBoltzmann: {
    description: 'Stefan-Boltzmann constant',
    examples: ['stefanBoltzmann']
  },
  wienDisplacement: {
    description: 'Wien displacement law constant',
    examples: ['wienDisplacement']
  },
  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},
  molarMass: {
    description: 'Molar mass constant',
    examples: ['molarMass']
  },
  molarMassC12: {
    description: 'Molar mass constant of carbon-12',
    examples: ['molarMassC12']
  },
  gravity: {
    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',
    examples: ['gravity']
  },
  planckLength: {
    description: 'Planck length',
    examples: ['planckLength']
  },
  planckMass: {
    description: 'Planck mass',
    examples: ['planckMass']
  },
  planckTime: {
    description: 'Planck time',
    examples: ['planckTime']
  },
  planckCharge: {
    description: 'Planck charge',
    examples: ['planckCharge']
  },
  planckTemperature: {
    description: 'Planck temperature',
    examples: ['planckTemperature']
  },
  // functions - algebra
  derivative: _function_algebra_derivative__WEBPACK_IMPORTED_MODULE_174__["derivativeDocs"],
  lsolve: _function_algebra_lsolve__WEBPACK_IMPORTED_MODULE_173__["lsolveDocs"],
  lup: _function_algebra_lup__WEBPACK_IMPORTED_MODULE_172__["lupDocs"],
  lusolve: _function_algebra_lusolve__WEBPACK_IMPORTED_MODULE_204__["lusolveDocs"],
  simplify: _function_algebra_simplify__WEBPACK_IMPORTED_MODULE_171__["simplifyDocs"],
  rationalize: _function_algebra_rationalize__WEBPACK_IMPORTED_MODULE_170__["rationalizeDocs"],
  slu: _function_algebra_slu__WEBPACK_IMPORTED_MODULE_169__["sluDocs"],
  usolve: _function_algebra_usolve__WEBPACK_IMPORTED_MODULE_168__["usolveDocs"],
  qr: _function_algebra_qr__WEBPACK_IMPORTED_MODULE_167__["qrDocs"],
  // functions - arithmetic
  abs: _function_arithmetic_abs__WEBPACK_IMPORTED_MODULE_166__["absDocs"],
  add: _function_arithmetic_add__WEBPACK_IMPORTED_MODULE_165__["addDocs"],
  cbrt: _function_arithmetic_cbrt__WEBPACK_IMPORTED_MODULE_164__["cbrtDocs"],
  ceil: _function_arithmetic_ceil__WEBPACK_IMPORTED_MODULE_163__["ceilDocs"],
  cube: _function_arithmetic_cube__WEBPACK_IMPORTED_MODULE_162__["cubeDocs"],
  divide: _function_arithmetic_divide__WEBPACK_IMPORTED_MODULE_161__["divideDocs"],
  dotDivide: _function_arithmetic_dotDivide__WEBPACK_IMPORTED_MODULE_160__["dotDivideDocs"],
  dotMultiply: _function_arithmetic_dotMultiply__WEBPACK_IMPORTED_MODULE_159__["dotMultiplyDocs"],
  dotPow: _function_arithmetic_dotPow__WEBPACK_IMPORTED_MODULE_203__["dotPowDocs"],
  exp: _function_arithmetic_exp__WEBPACK_IMPORTED_MODULE_158__["expDocs"],
  expm: _function_arithmetic_expm__WEBPACK_IMPORTED_MODULE_156__["expmDocs"],
  expm1: _function_arithmetic_expm1__WEBPACK_IMPORTED_MODULE_155__["expm1Docs"],
  fix: _function_arithmetic_fix__WEBPACK_IMPORTED_MODULE_154__["fixDocs"],
  floor: _function_arithmetic_floor__WEBPACK_IMPORTED_MODULE_153__["floorDocs"],
  gcd: _function_arithmetic_gcd__WEBPACK_IMPORTED_MODULE_152__["gcdDocs"],
  hypot: _function_arithmetic_hypot__WEBPACK_IMPORTED_MODULE_151__["hypotDocs"],
  lcm: _function_arithmetic_lcm__WEBPACK_IMPORTED_MODULE_150__["lcmDocs"],
  log: _function_arithmetic_log__WEBPACK_IMPORTED_MODULE_149__["logDocs"],
  log2: _function_arithmetic_log2__WEBPACK_IMPORTED_MODULE_148__["log2Docs"],
  log1p: _function_arithmetic_log1p__WEBPACK_IMPORTED_MODULE_147__["log1pDocs"],
  log10: _function_arithmetic_log10__WEBPACK_IMPORTED_MODULE_146__["log10Docs"],
  mod: _function_arithmetic_mod__WEBPACK_IMPORTED_MODULE_145__["modDocs"],
  multiply: _function_arithmetic_multiply__WEBPACK_IMPORTED_MODULE_144__["multiplyDocs"],
  norm: _function_arithmetic_norm__WEBPACK_IMPORTED_MODULE_143__["normDocs"],
  nthRoot: _function_arithmetic_nthRoot__WEBPACK_IMPORTED_MODULE_142__["nthRootDocs"],
  nthRoots: _function_arithmetic_nthRoots__WEBPACK_IMPORTED_MODULE_141__["nthRootsDocs"],
  pow: _function_arithmetic_pow__WEBPACK_IMPORTED_MODULE_140__["powDocs"],
  round: _function_arithmetic_round__WEBPACK_IMPORTED_MODULE_139__["roundDocs"],
  sign: _function_arithmetic_sign__WEBPACK_IMPORTED_MODULE_138__["signDocs"],
  sqrt: _function_arithmetic_sqrt__WEBPACK_IMPORTED_MODULE_137__["sqrtDocs"],
  sqrtm: _function_arithmetic_sqrtm__WEBPACK_IMPORTED_MODULE_136__["sqrtmDocs"],
  square: _function_arithmetic_square__WEBPACK_IMPORTED_MODULE_135__["squareDocs"],
  subtract: _function_arithmetic_subtract__WEBPACK_IMPORTED_MODULE_205__["subtractDocs"],
  unaryMinus: _function_arithmetic_unaryMinus__WEBPACK_IMPORTED_MODULE_134__["unaryMinusDocs"],
  unaryPlus: _function_arithmetic_unaryPlus__WEBPACK_IMPORTED_MODULE_133__["unaryPlusDocs"],
  xgcd: _function_arithmetic_xgcd__WEBPACK_IMPORTED_MODULE_132__["xgcdDocs"],
  // functions - bitwise
  bitAnd: _function_bitwise_bitAnd__WEBPACK_IMPORTED_MODULE_131__["bitAndDocs"],
  bitNot: _function_bitwise_bitNot__WEBPACK_IMPORTED_MODULE_130__["bitNotDocs"],
  bitOr: _function_bitwise_bitOr__WEBPACK_IMPORTED_MODULE_129__["bitOrDocs"],
  bitXor: _function_bitwise_bitXor__WEBPACK_IMPORTED_MODULE_128__["bitXorDocs"],
  leftShift: _function_bitwise_leftShift__WEBPACK_IMPORTED_MODULE_127__["leftShiftDocs"],
  rightArithShift: _function_bitwise_rightArithShift__WEBPACK_IMPORTED_MODULE_126__["rightArithShiftDocs"],
  rightLogShift: _function_bitwise_rightLogShift__WEBPACK_IMPORTED_MODULE_125__["rightLogShiftDocs"],
  // functions - combinatorics
  bellNumbers: _function_combinatorics_bellNumbers__WEBPACK_IMPORTED_MODULE_124__["bellNumbersDocs"],
  catalan: _function_combinatorics_catalan__WEBPACK_IMPORTED_MODULE_123__["catalanDocs"],
  composition: _function_combinatorics_composition__WEBPACK_IMPORTED_MODULE_122__["compositionDocs"],
  stirlingS2: _function_combinatorics_stirlingS2__WEBPACK_IMPORTED_MODULE_121__["stirlingS2Docs"],
  // functions - core
  config: _core_config__WEBPACK_IMPORTED_MODULE_120__["configDocs"],
  "import": _core_import__WEBPACK_IMPORTED_MODULE_119__["importDocs"],
  typed: _core_typed__WEBPACK_IMPORTED_MODULE_118__["typedDocs"],
  // functions - complex
  arg: _function_complex_arg__WEBPACK_IMPORTED_MODULE_117__["argDocs"],
  conj: _function_complex_conj__WEBPACK_IMPORTED_MODULE_116__["conjDocs"],
  re: _function_complex_re__WEBPACK_IMPORTED_MODULE_115__["reDocs"],
  im: _function_complex_im__WEBPACK_IMPORTED_MODULE_114__["imDocs"],
  // functions - expression
  evaluate: _function_expression_evaluate__WEBPACK_IMPORTED_MODULE_113__["evaluateDocs"],
  help: _function_expression_help__WEBPACK_IMPORTED_MODULE_112__["helpDocs"],
  // functions - geometry
  distance: _function_geometry_distance__WEBPACK_IMPORTED_MODULE_111__["distanceDocs"],
  intersect: _function_geometry_intersect__WEBPACK_IMPORTED_MODULE_110__["intersectDocs"],
  // functions - logical
  and: _function_logical_and__WEBPACK_IMPORTED_MODULE_109__["andDocs"],
  not: _function_logical_not__WEBPACK_IMPORTED_MODULE_108__["notDocs"],
  or: _function_logical_or__WEBPACK_IMPORTED_MODULE_107__["orDocs"],
  xor: _function_logical_xor__WEBPACK_IMPORTED_MODULE_106__["xorDocs"],
  // functions - matrix
  concat: _function_matrix_concat__WEBPACK_IMPORTED_MODULE_105__["concatDocs"],
  cross: _function_matrix_cross__WEBPACK_IMPORTED_MODULE_104__["crossDocs"],
  column: _function_matrix_column__WEBPACK_IMPORTED_MODULE_209__["columnDocs"],
  ctranspose: _function_matrix_ctranspose__WEBPACK_IMPORTED_MODULE_103__["ctransposeDocs"],
  det: _function_matrix_det__WEBPACK_IMPORTED_MODULE_102__["detDocs"],
  diag: _function_matrix_diag__WEBPACK_IMPORTED_MODULE_101__["diagDocs"],
  diff: _function_matrix_diff__WEBPACK_IMPORTED_MODULE_86__["diffDocs"],
  dot: _function_matrix_dot__WEBPACK_IMPORTED_MODULE_100__["dotDocs"],
  getMatrixDataType: _function_matrix_getMatrixDataType__WEBPACK_IMPORTED_MODULE_99__["getMatrixDataTypeDocs"],
  identity: _function_matrix_identity__WEBPACK_IMPORTED_MODULE_98__["identityDocs"],
  filter: _function_matrix_filter__WEBPACK_IMPORTED_MODULE_97__["filterDocs"],
  flatten: _function_matrix_flatten__WEBPACK_IMPORTED_MODULE_96__["flattenDocs"],
  forEach: _function_matrix_forEach__WEBPACK_IMPORTED_MODULE_95__["forEachDocs"],
  inv: _function_matrix_inv__WEBPACK_IMPORTED_MODULE_94__["invDocs"],
  eigs: _function_matrix_eigs__WEBPACK_IMPORTED_MODULE_157__["eigsDocs"],
  kron: _function_matrix_kron__WEBPACK_IMPORTED_MODULE_93__["kronDocs"],
  map: _function_matrix_map__WEBPACK_IMPORTED_MODULE_92__["mapDocs"],
  ones: _function_matrix_ones__WEBPACK_IMPORTED_MODULE_91__["onesDocs"],
  partitionSelect: _function_matrix_partitionSelect__WEBPACK_IMPORTED_MODULE_90__["partitionSelectDocs"],
  range: _function_matrix_range__WEBPACK_IMPORTED_MODULE_89__["rangeDocs"],
  resize: _function_matrix_resize__WEBPACK_IMPORTED_MODULE_88__["resizeDocs"],
  reshape: _function_matrix_reshape__WEBPACK_IMPORTED_MODULE_87__["reshapeDocs"],
  row: _function_matrix_row__WEBPACK_IMPORTED_MODULE_210__["rowDocs"],
  size: _function_matrix_size__WEBPACK_IMPORTED_MODULE_85__["sizeDocs"],
  sort: _function_matrix_sort__WEBPACK_IMPORTED_MODULE_84__["sortDocs"],
  squeeze: _function_matrix_squeeze__WEBPACK_IMPORTED_MODULE_83__["squeezeDocs"],
  subset: _function_matrix_subset__WEBPACK_IMPORTED_MODULE_82__["subsetDocs"],
  trace: _function_matrix_trace__WEBPACK_IMPORTED_MODULE_81__["traceDocs"],
  transpose: _function_matrix_transpose__WEBPACK_IMPORTED_MODULE_80__["transposeDocs"],
  zeros: _function_matrix_zeros__WEBPACK_IMPORTED_MODULE_79__["zerosDocs"],
  // functions - probability
  combinations: _function_probability_combinations__WEBPACK_IMPORTED_MODULE_77__["combinationsDocs"],
  combinationsWithRep: _function_probability_combinationsWithRep__WEBPACK_IMPORTED_MODULE_78__["combinationsWithRepDocs"],
  // distribution: distributionDocs,
  factorial: _function_probability_factorial__WEBPACK_IMPORTED_MODULE_76__["factorialDocs"],
  gamma: _function_probability_gamma__WEBPACK_IMPORTED_MODULE_75__["gammaDocs"],
  kldivergence: _function_probability_kldivergence__WEBPACK_IMPORTED_MODULE_74__["kldivergenceDocs"],
  multinomial: _function_probability_multinomial__WEBPACK_IMPORTED_MODULE_73__["multinomialDocs"],
  permutations: _function_probability_permutations__WEBPACK_IMPORTED_MODULE_72__["permutationsDocs"],
  pickRandom: _function_probability_pickRandom__WEBPACK_IMPORTED_MODULE_71__["pickRandomDocs"],
  random: _function_probability_random__WEBPACK_IMPORTED_MODULE_70__["randomDocs"],
  randomInt: _function_probability_randomInt__WEBPACK_IMPORTED_MODULE_69__["randomIntDocs"],
  // functions - relational
  compare: _function_relational_compare__WEBPACK_IMPORTED_MODULE_68__["compareDocs"],
  compareNatural: _function_relational_compareNatural__WEBPACK_IMPORTED_MODULE_67__["compareNaturalDocs"],
  compareText: _function_relational_compareText__WEBPACK_IMPORTED_MODULE_66__["compareTextDocs"],
  deepEqual: _function_relational_deepEqual__WEBPACK_IMPORTED_MODULE_65__["deepEqualDocs"],
  equal: _function_relational_equal__WEBPACK_IMPORTED_MODULE_64__["equalDocs"],
  equalText: _function_relational_equalText__WEBPACK_IMPORTED_MODULE_63__["equalTextDocs"],
  larger: _function_relational_larger__WEBPACK_IMPORTED_MODULE_62__["largerDocs"],
  largerEq: _function_relational_largerEq__WEBPACK_IMPORTED_MODULE_61__["largerEqDocs"],
  smaller: _function_relational_smaller__WEBPACK_IMPORTED_MODULE_60__["smallerDocs"],
  smallerEq: _function_relational_smallerEq__WEBPACK_IMPORTED_MODULE_59__["smallerEqDocs"],
  unequal: _function_relational_unequal__WEBPACK_IMPORTED_MODULE_58__["unequalDocs"],
  // functions - set
  setCartesian: _function_set_setCartesian__WEBPACK_IMPORTED_MODULE_57__["setCartesianDocs"],
  setDifference: _function_set_setDifference__WEBPACK_IMPORTED_MODULE_56__["setDifferenceDocs"],
  setDistinct: _function_set_setDistinct__WEBPACK_IMPORTED_MODULE_55__["setDistinctDocs"],
  setIntersect: _function_set_setIntersect__WEBPACK_IMPORTED_MODULE_54__["setIntersectDocs"],
  setIsSubset: _function_set_setIsSubset__WEBPACK_IMPORTED_MODULE_53__["setIsSubsetDocs"],
  setMultiplicity: _function_set_setMultiplicity__WEBPACK_IMPORTED_MODULE_52__["setMultiplicityDocs"],
  setPowerset: _function_set_setPowerset__WEBPACK_IMPORTED_MODULE_51__["setPowersetDocs"],
  setSize: _function_set_setSize__WEBPACK_IMPORTED_MODULE_50__["setSizeDocs"],
  setSymDifference: _function_set_setSymDifference__WEBPACK_IMPORTED_MODULE_49__["setSymDifferenceDocs"],
  setUnion: _function_set_setUnion__WEBPACK_IMPORTED_MODULE_48__["setUnionDocs"],
  // functions - special
  erf: _function_special_erf__WEBPACK_IMPORTED_MODULE_47__["erfDocs"],
  // functions - statistics
  mad: _function_statistics_mad__WEBPACK_IMPORTED_MODULE_46__["madDocs"],
  max: _function_statistics_max__WEBPACK_IMPORTED_MODULE_45__["maxDocs"],
  mean: _function_statistics_mean__WEBPACK_IMPORTED_MODULE_44__["meanDocs"],
  median: _function_statistics_median__WEBPACK_IMPORTED_MODULE_43__["medianDocs"],
  min: _function_statistics_min__WEBPACK_IMPORTED_MODULE_42__["minDocs"],
  mode: _function_statistics_mode__WEBPACK_IMPORTED_MODULE_41__["modeDocs"],
  prod: _function_statistics_prod__WEBPACK_IMPORTED_MODULE_40__["prodDocs"],
  quantileSeq: _function_statistics_quantileSeq__WEBPACK_IMPORTED_MODULE_39__["quantileSeqDocs"],
  std: _function_statistics_std__WEBPACK_IMPORTED_MODULE_38__["stdDocs"],
  sum: _function_statistics_sum__WEBPACK_IMPORTED_MODULE_37__["sumDocs"],
  variance: _function_statistics_variance__WEBPACK_IMPORTED_MODULE_206__["varianceDocs"],
  // functions - trigonometry
  acos: _function_trigonometry_acos__WEBPACK_IMPORTED_MODULE_36__["acosDocs"],
  acosh: _function_trigonometry_acosh__WEBPACK_IMPORTED_MODULE_35__["acoshDocs"],
  acot: _function_trigonometry_acot__WEBPACK_IMPORTED_MODULE_34__["acotDocs"],
  acoth: _function_trigonometry_acoth__WEBPACK_IMPORTED_MODULE_33__["acothDocs"],
  acsc: _function_trigonometry_acsc__WEBPACK_IMPORTED_MODULE_32__["acscDocs"],
  acsch: _function_trigonometry_acsch__WEBPACK_IMPORTED_MODULE_31__["acschDocs"],
  asec: _function_trigonometry_asec__WEBPACK_IMPORTED_MODULE_30__["asecDocs"],
  asech: _function_trigonometry_asech__WEBPACK_IMPORTED_MODULE_29__["asechDocs"],
  asin: _function_trigonometry_asin__WEBPACK_IMPORTED_MODULE_28__["asinDocs"],
  asinh: _function_trigonometry_asinh__WEBPACK_IMPORTED_MODULE_27__["asinhDocs"],
  atan: _function_trigonometry_atan__WEBPACK_IMPORTED_MODULE_26__["atanDocs"],
  atanh: _function_trigonometry_atanh__WEBPACK_IMPORTED_MODULE_25__["atanhDocs"],
  atan2: _function_trigonometry_atan2__WEBPACK_IMPORTED_MODULE_24__["atan2Docs"],
  cos: _function_trigonometry_cos__WEBPACK_IMPORTED_MODULE_23__["cosDocs"],
  cosh: _function_trigonometry_cosh__WEBPACK_IMPORTED_MODULE_22__["coshDocs"],
  cot: _function_trigonometry_cot__WEBPACK_IMPORTED_MODULE_21__["cotDocs"],
  coth: _function_trigonometry_coth__WEBPACK_IMPORTED_MODULE_20__["cothDocs"],
  csc: _function_trigonometry_csc__WEBPACK_IMPORTED_MODULE_19__["cscDocs"],
  csch: _function_trigonometry_csch__WEBPACK_IMPORTED_MODULE_18__["cschDocs"],
  sec: _function_trigonometry_sec__WEBPACK_IMPORTED_MODULE_17__["secDocs"],
  sech: _function_trigonometry_sech__WEBPACK_IMPORTED_MODULE_16__["sechDocs"],
  sin: _function_trigonometry_sin__WEBPACK_IMPORTED_MODULE_207__["sinDocs"],
  sinh: _function_trigonometry_sinh__WEBPACK_IMPORTED_MODULE_15__["sinhDocs"],
  tan: _function_trigonometry_tan__WEBPACK_IMPORTED_MODULE_14__["tanDocs"],
  tanh: _function_trigonometry_tanh__WEBPACK_IMPORTED_MODULE_13__["tanhDocs"],
  // functions - units
  to: _function_units_to__WEBPACK_IMPORTED_MODULE_12__["toDocs"],
  // functions - utils
  clone: _function_utils_clone__WEBPACK_IMPORTED_MODULE_11__["cloneDocs"],
  format: _function_utils_format__WEBPACK_IMPORTED_MODULE_10__["formatDocs"],
  isNaN: _function_utils_isNaN__WEBPACK_IMPORTED_MODULE_9__["isNaNDocs"],
  isInteger: _function_utils_isInteger__WEBPACK_IMPORTED_MODULE_8__["isIntegerDocs"],
  isNegative: _function_utils_isNegative__WEBPACK_IMPORTED_MODULE_7__["isNegativeDocs"],
  isNumeric: _function_utils_isNumeric__WEBPACK_IMPORTED_MODULE_5__["isNumericDocs"],
  hasNumericValue: _function_utils_hasNumericValue__WEBPACK_IMPORTED_MODULE_6__["hasNumericValueDocs"],
  isPositive: _function_utils_isPositive__WEBPACK_IMPORTED_MODULE_4__["isPositiveDocs"],
  isPrime: _function_utils_isPrime__WEBPACK_IMPORTED_MODULE_3__["isPrimeDocs"],
  isZero: _function_utils_isZero__WEBPACK_IMPORTED_MODULE_2__["isZeroDocs"],
  // print: printDocs // TODO: add documentation for print as soon as the parser supports objects.
  typeOf: _function_utils_typeOf__WEBPACK_IMPORTED_MODULE_1__["typeOfDocs"],
  numeric: _function_utils_numeric__WEBPACK_IMPORTED_MODULE_208__["numericDocs"]
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/derivative.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/derivative.js ***!
  \****************************************************************************************/
/*! exports provided: derivativeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "derivativeDocs", function() { return derivativeDocs; });
var derivativeDocs = {
  name: 'derivative',
  category: 'Algebra',
  syntax: ['derivative(expr, variable)', 'derivative(expr, variable, {simplify: boolean})'],
  description: 'Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.',
  examples: ['derivative("2x^3", "x")', 'derivative("2x^3", "x", {simplify: false})', 'derivative("2x^2 + 3x + 4", "x")', 'derivative("sin(2x)", "x")', 'f = parse("x^2 + x")', 'x = parse("x")', 'df = derivative(f, x)', 'df.evaluate({x: 3})'],
  seealso: ['simplify', 'parse', 'evaluate']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lsolve.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lsolve.js ***!
  \************************************************************************************/
/*! exports provided: lsolveDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lsolveDocs", function() { return lsolveDocs; });
var lsolveDocs = {
  name: 'lsolve',
  category: 'Algebra',
  syntax: ['x=lsolve(L, b)'],
  description: 'Solves the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.',
  examples: ['a = [-2, 3; 2, 1]', 'b = [11, 9]', 'x = lsolve(a, b)'],
  seealso: ['lup', 'lusolve', 'usolve', 'matrix', 'sparse']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lup.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lup.js ***!
  \*********************************************************************************/
/*! exports provided: lupDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lupDocs", function() { return lupDocs; });
var lupDocs = {
  name: 'lup',
  category: 'Algebra',
  syntax: ['lup(m)'],
  description: 'Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U',
  examples: ['lup([[2, 1], [1, 4]])', 'lup(matrix([[2, 1], [1, 4]]))', 'lup(sparse([[2, 1], [1, 4]]))'],
  seealso: ['lusolve', 'lsolve', 'usolve', 'matrix', 'sparse', 'slu', 'qr']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lusolve.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/lusolve.js ***!
  \*************************************************************************************/
/*! exports provided: lusolveDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lusolveDocs", function() { return lusolveDocs; });
var lusolveDocs = {
  name: 'lusolve',
  category: 'Algebra',
  syntax: ['x=lusolve(A, b)', 'x=lusolve(lu, b)'],
  description: 'Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.',
  examples: ['a = [-2, 3; 2, 1]', 'b = [11, 9]', 'x = lusolve(a, b)'],
  seealso: ['lup', 'slu', 'lsolve', 'usolve', 'matrix', 'sparse']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/qr.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/qr.js ***!
  \********************************************************************************/
/*! exports provided: qrDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "qrDocs", function() { return qrDocs; });
var qrDocs = {
  name: 'qr',
  category: 'Algebra',
  syntax: ['qr(A)'],
  description: 'Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.',
  examples: ['qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])'],
  seealso: ['lup', 'slu', 'matrix']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/rationalize.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/rationalize.js ***!
  \*****************************************************************************************/
/*! exports provided: rationalizeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rationalizeDocs", function() { return rationalizeDocs; });
var rationalizeDocs = {
  name: 'rationalize',
  category: 'Algebra',
  syntax: ['rationalize(expr)', 'rationalize(expr, scope)', 'rationalize(expr, scope, detailed)'],
  description: 'Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.',
  examples: ['rationalize("2x/y - y/(x+1)")', 'rationalize("2x/y - y/(x+1)", true)'],
  seealso: ['simplify']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/simplify.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/simplify.js ***!
  \**************************************************************************************/
/*! exports provided: simplifyDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simplifyDocs", function() { return simplifyDocs; });
var simplifyDocs = {
  name: 'simplify',
  category: 'Algebra',
  syntax: ['simplify(expr)', 'simplify(expr, rules)'],
  description: 'Simplify an expression tree.',
  examples: ['simplify("3 + 2 / 4")', 'simplify("2x + x")', 'f = parse("x * (x + 2 + x)")', 'simplified = simplify(f)', 'simplified.evaluate({x: 2})'],
  seealso: ['derivative', 'parse', 'evaluate']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/slu.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/slu.js ***!
  \*********************************************************************************/
/*! exports provided: sluDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sluDocs", function() { return sluDocs; });
var sluDocs = {
  name: 'slu',
  category: 'Algebra',
  syntax: ['slu(A, order, threshold)'],
  description: 'Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U',
  examples: ['slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)'],
  seealso: ['lusolve', 'lsolve', 'usolve', 'matrix', 'sparse', 'lup', 'qr']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/usolve.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/algebra/usolve.js ***!
  \************************************************************************************/
/*! exports provided: usolveDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usolveDocs", function() { return usolveDocs; });
var usolveDocs = {
  name: 'usolve',
  category: 'Algebra',
  syntax: ['x=usolve(U, b)'],
  description: 'Solves the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.',
  examples: ['x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])'],
  seealso: ['lup', 'lusolve', 'lsolve', 'matrix', 'sparse']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/abs.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/abs.js ***!
  \************************************************************************************/
/*! exports provided: absDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "absDocs", function() { return absDocs; });
var absDocs = {
  name: 'abs',
  category: 'Arithmetic',
  syntax: ['abs(x)'],
  description: 'Compute the absolute value.',
  examples: ['abs(3.5)', 'abs(-4.2)'],
  seealso: ['sign']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/add.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/add.js ***!
  \************************************************************************************/
/*! exports provided: addDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDocs", function() { return addDocs; });
var addDocs = {
  name: 'add',
  category: 'Operators',
  syntax: ['x + y', 'add(x, y)'],
  description: 'Add two values.',
  examples: ['a = 2.1 + 3.6', 'a - 3.6', '3 + 2i', '3 cm + 2 inch', '"2.3" + "4"'],
  seealso: ['subtract']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/cbrt.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/cbrt.js ***!
  \*************************************************************************************/
/*! exports provided: cbrtDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cbrtDocs", function() { return cbrtDocs; });
var cbrtDocs = {
  name: 'cbrt',
  category: 'Arithmetic',
  syntax: ['cbrt(x)', 'cbrt(x, allRoots)'],
  description: 'Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned',
  examples: ['cbrt(64)', 'cube(4)', 'cbrt(-8)', 'cbrt(2 + 3i)', 'cbrt(8i)', 'cbrt(8i, true)', 'cbrt(27 m^3)'],
  seealso: ['square', 'sqrt', 'cube', 'multiply']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/ceil.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/ceil.js ***!
  \*************************************************************************************/
/*! exports provided: ceilDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceilDocs", function() { return ceilDocs; });
var ceilDocs = {
  name: 'ceil',
  category: 'Arithmetic',
  syntax: ['ceil(x)'],
  description: 'Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.',
  examples: ['ceil(3.2)', 'ceil(3.8)', 'ceil(-4.2)'],
  seealso: ['floor', 'fix', 'round']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/cube.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/cube.js ***!
  \*************************************************************************************/
/*! exports provided: cubeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubeDocs", function() { return cubeDocs; });
var cubeDocs = {
  name: 'cube',
  category: 'Arithmetic',
  syntax: ['cube(x)'],
  description: 'Compute the cube of a value. The cube of x is x * x * x.',
  examples: ['cube(2)', '2^3', '2 * 2 * 2'],
  seealso: ['multiply', 'square', 'pow']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/divide.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/divide.js ***!
  \***************************************************************************************/
/*! exports provided: divideDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divideDocs", function() { return divideDocs; });
var divideDocs = {
  name: 'divide',
  category: 'Operators',
  syntax: ['x / y', 'divide(x, y)'],
  description: 'Divide two values.',
  examples: ['a = 2 / 3', 'a * 3', '4.5 / 2', '3 + 4 / 2', '(3 + 4) / 2', '18 km / 4.5'],
  seealso: ['multiply']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotDivide.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotDivide.js ***!
  \******************************************************************************************/
/*! exports provided: dotDivideDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotDivideDocs", function() { return dotDivideDocs; });
var dotDivideDocs = {
  name: 'dotDivide',
  category: 'Operators',
  syntax: ['x ./ y', 'dotDivide(x, y)'],
  description: 'Divide two values element wise.',
  examples: ['a = [1, 2, 3; 4, 5, 6]', 'b = [2, 1, 1; 3, 2, 5]', 'a ./ b'],
  seealso: ['multiply', 'dotMultiply', 'divide']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotMultiply.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotMultiply.js ***!
  \********************************************************************************************/
/*! exports provided: dotMultiplyDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotMultiplyDocs", function() { return dotMultiplyDocs; });
var dotMultiplyDocs = {
  name: 'dotMultiply',
  category: 'Operators',
  syntax: ['x .* y', 'dotMultiply(x, y)'],
  description: 'Multiply two values element wise.',
  examples: ['a = [1, 2, 3; 4, 5, 6]', 'b = [2, 1, 1; 3, 2, 5]', 'a .* b'],
  seealso: ['multiply', 'divide', 'dotDivide']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotPow.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/dotPow.js ***!
  \***************************************************************************************/
/*! exports provided: dotPowDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotPowDocs", function() { return dotPowDocs; });
var dotPowDocs = {
  name: 'dotPow',
  category: 'Operators',
  syntax: ['x .^ y', 'dotPow(x, y)'],
  description: 'Calculates the power of x to y element wise.',
  examples: ['a = [1, 2, 3; 4, 5, 6]', 'a .^ 2'],
  seealso: ['pow']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/exp.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/exp.js ***!
  \************************************************************************************/
/*! exports provided: expDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expDocs", function() { return expDocs; });
var expDocs = {
  name: 'exp',
  category: 'Arithmetic',
  syntax: ['exp(x)'],
  description: 'Calculate the exponent of a value.',
  examples: ['exp(1.3)', 'e ^ 1.3', 'log(exp(1.3))', 'x = 2.4', '(exp(i*x) == cos(x) + i*sin(x))   # Euler\'s formula'],
  seealso: ['expm', 'expm1', 'pow', 'log']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/expm.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/expm.js ***!
  \*************************************************************************************/
/*! exports provided: expmDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expmDocs", function() { return expmDocs; });
var expmDocs = {
  name: 'expm',
  category: 'Arithmetic',
  syntax: ['exp(x)'],
  description: 'Compute the matrix exponential, expm(A) = e^A. ' + 'The matrix must be square. ' + 'Not to be confused with exp(a), which performs element-wise exponentiation.',
  examples: ['expm([[0,2],[0,0]])'],
  seealso: ['exp']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/expm1.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/expm1.js ***!
  \**************************************************************************************/
/*! exports provided: expm1Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expm1Docs", function() { return expm1Docs; });
var expm1Docs = {
  name: 'expm1',
  category: 'Arithmetic',
  syntax: ['expm1(x)'],
  description: 'Calculate the value of subtracting 1 from the exponential value.',
  examples: ['expm1(2)', 'pow(e, 2) - 1', 'log(expm1(2) + 1)'],
  seealso: ['exp', 'pow', 'log']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/fix.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/fix.js ***!
  \************************************************************************************/
/*! exports provided: fixDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixDocs", function() { return fixDocs; });
var fixDocs = {
  name: 'fix',
  category: 'Arithmetic',
  syntax: ['fix(x)'],
  description: 'Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.',
  examples: ['fix(3.2)', 'fix(3.8)', 'fix(-4.2)', 'fix(-4.8)'],
  seealso: ['ceil', 'floor', 'round']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/floor.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/floor.js ***!
  \**************************************************************************************/
/*! exports provided: floorDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floorDocs", function() { return floorDocs; });
var floorDocs = {
  name: 'floor',
  category: 'Arithmetic',
  syntax: ['floor(x)'],
  description: 'Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.',
  examples: ['floor(3.2)', 'floor(3.8)', 'floor(-4.2)'],
  seealso: ['ceil', 'fix', 'round']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/gcd.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/gcd.js ***!
  \************************************************************************************/
/*! exports provided: gcdDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gcdDocs", function() { return gcdDocs; });
var gcdDocs = {
  name: 'gcd',
  category: 'Arithmetic',
  syntax: ['gcd(a, b)', 'gcd(a, b, c, ...)'],
  description: 'Compute the greatest common divisor.',
  examples: ['gcd(8, 12)', 'gcd(-4, 6)', 'gcd(25, 15, -10)'],
  seealso: ['lcm', 'xgcd']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/hypot.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/hypot.js ***!
  \**************************************************************************************/
/*! exports provided: hypotDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hypotDocs", function() { return hypotDocs; });
var hypotDocs = {
  name: 'hypot',
  category: 'Arithmetic',
  syntax: ['hypot(a, b, c, ...)', 'hypot([a, b, c, ...])'],
  description: 'Calculate the hypotenusa of a list with values. ',
  examples: ['hypot(3, 4)', 'sqrt(3^2 + 4^2)', 'hypot(-2)', 'hypot([3, 4, 5])'],
  seealso: ['abs', 'norm']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/lcm.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/lcm.js ***!
  \************************************************************************************/
/*! exports provided: lcmDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lcmDocs", function() { return lcmDocs; });
var lcmDocs = {
  name: 'lcm',
  category: 'Arithmetic',
  syntax: ['lcm(x, y)'],
  description: 'Compute the least common multiple.',
  examples: ['lcm(4, 6)', 'lcm(6, 21)', 'lcm(6, 21, 5)'],
  seealso: ['gcd']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log.js ***!
  \************************************************************************************/
/*! exports provided: logDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logDocs", function() { return logDocs; });
var logDocs = {
  name: 'log',
  category: 'Arithmetic',
  syntax: ['log(x)', 'log(x, base)'],
  description: 'Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).',
  examples: ['log(3.5)', 'a = log(2.4)', 'exp(a)', '10 ^ 4', 'log(10000, 10)', 'log(10000) / log(10)', 'b = log(1024, 2)', '2 ^ b'],
  seealso: ['exp', 'log1p', 'log2', 'log10']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log10.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log10.js ***!
  \**************************************************************************************/
/*! exports provided: log10Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log10Docs", function() { return log10Docs; });
var log10Docs = {
  name: 'log10',
  category: 'Arithmetic',
  syntax: ['log10(x)'],
  description: 'Compute the 10-base logarithm of a value.',
  examples: ['log10(0.00001)', 'log10(10000)', '10 ^ 4', 'log(10000) / log(10)', 'log(10000, 10)'],
  seealso: ['exp', 'log']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log1p.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log1p.js ***!
  \**************************************************************************************/
/*! exports provided: log1pDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log1pDocs", function() { return log1pDocs; });
var log1pDocs = {
  name: 'log1p',
  category: 'Arithmetic',
  syntax: ['log1p(x)', 'log1p(x, base)'],
  description: 'Calculate the logarithm of a `value+1`',
  examples: ['log1p(2.5)', 'exp(log1p(1.4))', 'pow(10, 4)', 'log1p(9999, 10)', 'log1p(9999) / log(10)'],
  seealso: ['exp', 'log', 'log2', 'log10']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log2.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/log2.js ***!
  \*************************************************************************************/
/*! exports provided: log2Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log2Docs", function() { return log2Docs; });
var log2Docs = {
  name: 'log2',
  category: 'Arithmetic',
  syntax: ['log2(x)'],
  description: 'Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.',
  examples: ['log2(0.03125)', 'log2(16)', 'log2(16) / log2(2)', 'pow(2, 4)'],
  seealso: ['exp', 'log1p', 'log', 'log10']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/mod.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/mod.js ***!
  \************************************************************************************/
/*! exports provided: modDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modDocs", function() { return modDocs; });
var modDocs = {
  name: 'mod',
  category: 'Operators',
  syntax: ['x % y', 'x mod y', 'mod(x, y)'],
  description: 'Calculates the modulus, the remainder of an integer division.',
  examples: ['7 % 3', '11 % 2', '10 mod 4', 'isOdd(x) = x % 2', 'isOdd(2)', 'isOdd(3)'],
  seealso: ['divide']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/multiply.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/multiply.js ***!
  \*****************************************************************************************/
/*! exports provided: multiplyDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyDocs", function() { return multiplyDocs; });
var multiplyDocs = {
  name: 'multiply',
  category: 'Operators',
  syntax: ['x * y', 'multiply(x, y)'],
  description: 'multiply two values.',
  examples: ['a = 2.1 * 3.4', 'a / 3.4', '2 * 3 + 4', '2 * (3 + 4)', '3 * 2.1 km'],
  seealso: ['divide']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/norm.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/norm.js ***!
  \*************************************************************************************/
/*! exports provided: normDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normDocs", function() { return normDocs; });
var normDocs = {
  name: 'norm',
  category: 'Arithmetic',
  syntax: ['norm(x)', 'norm(x, p)'],
  description: 'Calculate the norm of a number, vector or matrix.',
  examples: ['abs(-3.5)', 'norm(-3.5)', 'norm(3 - 4i)', 'norm([1, 2, -3], Infinity)', 'norm([1, 2, -3], -Infinity)', 'norm([3, 4], 2)', 'norm([[1, 2], [3, 4]], 1)', 'norm([[1, 2], [3, 4]], "inf")', 'norm([[1, 2], [3, 4]], "fro")']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/nthRoot.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/nthRoot.js ***!
  \****************************************************************************************/
/*! exports provided: nthRootDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nthRootDocs", function() { return nthRootDocs; });
var nthRootDocs = {
  name: 'nthRoot',
  category: 'Arithmetic',
  syntax: ['nthRoot(a)', 'nthRoot(a, root)'],
  description: 'Calculate the nth root of a value. ' + 'The principal nth root of a positive real number A, ' + 'is the positive real solution of the equation "x^root = A".',
  examples: ['4 ^ 3', 'nthRoot(64, 3)', 'nthRoot(9, 2)', 'sqrt(9)'],
  seealso: ['nthRoots', 'pow', 'sqrt']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/nthRoots.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/nthRoots.js ***!
  \*****************************************************************************************/
/*! exports provided: nthRootsDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nthRootsDocs", function() { return nthRootsDocs; });
var nthRootsDocs = {
  name: 'nthRoots',
  category: 'Arithmetic',
  syntax: ['nthRoots(A)', 'nthRoots(A, root)'],
  description: '' + 'Calculate the nth roots of a value. ' + 'An nth root of a positive real number A, ' + 'is a positive real solution of the equation "x^root = A". ' + 'This function returns an array of complex values.',
  examples: ['nthRoots(1)', 'nthRoots(1, 3)'],
  seealso: ['sqrt', 'pow', 'nthRoot']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/pow.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/pow.js ***!
  \************************************************************************************/
/*! exports provided: powDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "powDocs", function() { return powDocs; });
var powDocs = {
  name: 'pow',
  category: 'Operators',
  syntax: ['x ^ y', 'pow(x, y)'],
  description: 'Calculates the power of x to y, x^y.',
  examples: ['2^3', '2*2*2', '1 + e ^ (pi * i)'],
  seealso: ['multiply', 'nthRoot', 'nthRoots', 'sqrt']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/round.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/round.js ***!
  \**************************************************************************************/
/*! exports provided: roundDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "roundDocs", function() { return roundDocs; });
var roundDocs = {
  name: 'round',
  category: 'Arithmetic',
  syntax: ['round(x)', 'round(x, n)'],
  description: 'round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.',
  examples: ['round(3.2)', 'round(3.8)', 'round(-4.2)', 'round(-4.8)', 'round(pi, 3)', 'round(123.45678, 2)'],
  seealso: ['ceil', 'floor', 'fix']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sign.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sign.js ***!
  \*************************************************************************************/
/*! exports provided: signDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signDocs", function() { return signDocs; });
var signDocs = {
  name: 'sign',
  category: 'Arithmetic',
  syntax: ['sign(x)'],
  description: 'Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.',
  examples: ['sign(3.5)', 'sign(-4.2)', 'sign(0)'],
  seealso: ['abs']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sqrt.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sqrt.js ***!
  \*************************************************************************************/
/*! exports provided: sqrtDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrtDocs", function() { return sqrtDocs; });
var sqrtDocs = {
  name: 'sqrt',
  category: 'Arithmetic',
  syntax: ['sqrt(x)'],
  description: 'Compute the square root value. If x = y * y, then y is the square root of x.',
  examples: ['sqrt(25)', '5 * 5', 'sqrt(-1)'],
  seealso: ['square', 'sqrtm', 'multiply', 'nthRoot', 'nthRoots', 'pow']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sqrtm.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/sqrtm.js ***!
  \**************************************************************************************/
/*! exports provided: sqrtmDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrtmDocs", function() { return sqrtmDocs; });
var sqrtmDocs = {
  name: 'sqrtm',
  category: 'Arithmetic',
  syntax: ['sqrtm(x)'],
  description: 'Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.',
  examples: ['sqrtm([[1, 2], [3, 4]])'],
  seealso: ['sqrt', 'abs', 'square', 'multiply']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/square.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/square.js ***!
  \***************************************************************************************/
/*! exports provided: squareDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squareDocs", function() { return squareDocs; });
var squareDocs = {
  name: 'square',
  category: 'Arithmetic',
  syntax: ['square(x)'],
  description: 'Compute the square of a value. The square of x is x * x.',
  examples: ['square(3)', 'sqrt(9)', '3^2', '3 * 3'],
  seealso: ['multiply', 'pow', 'sqrt', 'cube']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/subtract.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/subtract.js ***!
  \*****************************************************************************************/
/*! exports provided: subtractDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtractDocs", function() { return subtractDocs; });
var subtractDocs = {
  name: 'subtract',
  category: 'Operators',
  syntax: ['x - y', 'subtract(x, y)'],
  description: 'subtract two values.',
  examples: ['a = 5.3 - 2', 'a + 2', '2/3 - 1/6', '2 * 3 - 3', '2.1 km - 500m'],
  seealso: ['add']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/unaryMinus.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/unaryMinus.js ***!
  \*******************************************************************************************/
/*! exports provided: unaryMinusDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryMinusDocs", function() { return unaryMinusDocs; });
var unaryMinusDocs = {
  name: 'unaryMinus',
  category: 'Operators',
  syntax: ['-x', 'unaryMinus(x)'],
  description: 'Inverse the sign of a value. Converts booleans and strings to numbers.',
  examples: ['-4.5', '-(-5.6)', '-"22"'],
  seealso: ['add', 'subtract', 'unaryPlus']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/unaryPlus.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/unaryPlus.js ***!
  \******************************************************************************************/
/*! exports provided: unaryPlusDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryPlusDocs", function() { return unaryPlusDocs; });
var unaryPlusDocs = {
  name: 'unaryPlus',
  category: 'Operators',
  syntax: ['+x', 'unaryPlus(x)'],
  description: 'Converts booleans and strings to numbers.',
  examples: ['+true', '+"2"'],
  seealso: ['add', 'subtract', 'unaryMinus']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/xgcd.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/arithmetic/xgcd.js ***!
  \*************************************************************************************/
/*! exports provided: xgcdDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xgcdDocs", function() { return xgcdDocs; });
var xgcdDocs = {
  name: 'xgcd',
  category: 'Arithmetic',
  syntax: ['xgcd(a, b)'],
  description: 'Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.',
  examples: ['xgcd(8, 12)', 'gcd(8, 12)', 'xgcd(36163, 21199)'],
  seealso: ['gcd', 'lcm']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitAnd.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitAnd.js ***!
  \************************************************************************************/
/*! exports provided: bitAndDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitAndDocs", function() { return bitAndDocs; });
var bitAndDocs = {
  name: 'bitAnd',
  category: 'Bitwise',
  syntax: ['x & y', 'bitAnd(x, y)'],
  description: 'Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0',
  examples: ['5 & 3', 'bitAnd(53, 131)', '[1, 12, 31] & 42'],
  seealso: ['bitNot', 'bitOr', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitNot.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitNot.js ***!
  \************************************************************************************/
/*! exports provided: bitNotDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitNotDocs", function() { return bitNotDocs; });
var bitNotDocs = {
  name: 'bitNot',
  category: 'Bitwise',
  syntax: ['~x', 'bitNot(x)'],
  description: 'Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.',
  examples: ['~1', '~2', 'bitNot([2, -3, 4])'],
  seealso: ['bitAnd', 'bitOr', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js ***!
  \***********************************************************************************/
/*! exports provided: bitOrDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitOrDocs", function() { return bitOrDocs; });
var bitOrDocs = {
  name: 'bitOr',
  category: 'Bitwise',
  syntax: ['x | y', 'bitOr(x, y)'],
  description: 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',
  examples: ['5 | 3', 'bitOr([1, 2, 3], 4)'],
  seealso: ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitXor.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitXor.js ***!
  \************************************************************************************/
/*! exports provided: bitXorDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitXorDocs", function() { return bitXorDocs; });
var bitXorDocs = {
  name: 'bitXor',
  category: 'Bitwise',
  syntax: ['bitXor(x, y)'],
  description: 'Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.',
  examples: ['bitOr(1, 2)', 'bitXor([2, 3, 4], 4)'],
  seealso: ['bitAnd', 'bitNot', 'bitOr', 'leftShift', 'rightArithShift', 'rightLogShift']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/leftShift.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/leftShift.js ***!
  \***************************************************************************************/
/*! exports provided: leftShiftDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "leftShiftDocs", function() { return leftShiftDocs; });
var leftShiftDocs = {
  name: 'leftShift',
  category: 'Bitwise',
  syntax: ['x << y', 'leftShift(x, y)'],
  description: 'Bitwise left logical shift of a value x by y number of bits.',
  examples: ['4 << 1', '8 >> 1'],
  seealso: ['bitAnd', 'bitNot', 'bitOr', 'bitXor', 'rightArithShift', 'rightLogShift']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/rightArithShift.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/rightArithShift.js ***!
  \*********************************************************************************************/
/*! exports provided: rightArithShiftDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftDocs", function() { return rightArithShiftDocs; });
var rightArithShiftDocs = {
  name: 'rightArithShift',
  category: 'Bitwise',
  syntax: ['x >> y', 'rightArithShift(x, y)'],
  description: 'Bitwise right arithmetic shift of a value x by y number of bits.',
  examples: ['8 >> 1', '4 << 1', '-12 >> 2'],
  seealso: ['bitAnd', 'bitNot', 'bitOr', 'bitXor', 'leftShift', 'rightLogShift']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/rightLogShift.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/rightLogShift.js ***!
  \*******************************************************************************************/
/*! exports provided: rightLogShiftDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightLogShiftDocs", function() { return rightLogShiftDocs; });
var rightLogShiftDocs = {
  name: 'rightLogShift',
  category: 'Bitwise',
  syntax: ['x >>> y', 'rightLogShift(x, y)'],
  description: 'Bitwise right logical shift of a value x by y number of bits.',
  examples: ['8 >>> 1', '4 << 1', '-12 >>> 2'],
  seealso: ['bitAnd', 'bitNot', 'bitOr', 'bitXor', 'leftShift', 'rightArithShift']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/bellNumbers.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/bellNumbers.js ***!
  \***********************************************************************************************/
/*! exports provided: bellNumbersDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bellNumbersDocs", function() { return bellNumbersDocs; });
var bellNumbersDocs = {
  name: 'bellNumbers',
  category: 'Combinatorics',
  syntax: ['bellNumbers(n)'],
  description: 'The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.',
  examples: ['bellNumbers(3)', 'bellNumbers(8)'],
  seealso: ['stirlingS2']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/catalan.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/catalan.js ***!
  \*******************************************************************************************/
/*! exports provided: catalanDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catalanDocs", function() { return catalanDocs; });
var catalanDocs = {
  name: 'catalan',
  category: 'Combinatorics',
  syntax: ['catalan(n)'],
  description: 'The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.',
  examples: ['catalan(3)', 'catalan(8)'],
  seealso: ['bellNumbers']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/composition.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/composition.js ***!
  \***********************************************************************************************/
/*! exports provided: compositionDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compositionDocs", function() { return compositionDocs; });
var compositionDocs = {
  name: 'composition',
  category: 'Combinatorics',
  syntax: ['composition(n, k)'],
  description: 'The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.',
  examples: ['composition(5, 3)'],
  seealso: ['combinations']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/stirlingS2.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/combinatorics/stirlingS2.js ***!
  \**********************************************************************************************/
/*! exports provided: stirlingS2Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stirlingS2Docs", function() { return stirlingS2Docs; });
var stirlingS2Docs = {
  name: 'stirlingS2',
  category: 'Combinatorics',
  syntax: ['stirlingS2(n, k)'],
  description: 'he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.',
  examples: ['stirlingS2(5, 3)'],
  seealso: ['bellNumbers']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/arg.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/complex/arg.js ***!
  \*********************************************************************************/
/*! exports provided: argDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "argDocs", function() { return argDocs; });
var argDocs = {
  name: 'arg',
  category: 'Complex',
  syntax: ['arg(x)'],
  description: 'Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).',
  examples: ['arg(2 + 2i)', 'atan2(3, 2)', 'arg(2 + 3i)'],
  seealso: ['re', 'im', 'conj', 'abs']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/conj.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/complex/conj.js ***!
  \**********************************************************************************/
/*! exports provided: conjDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conjDocs", function() { return conjDocs; });
var conjDocs = {
  name: 'conj',
  category: 'Complex',
  syntax: ['conj(x)'],
  description: 'Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.',
  examples: ['conj(2 + 3i)', 'conj(2 - 3i)', 'conj(-5.2i)'],
  seealso: ['re', 'im', 'abs', 'arg']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/im.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/complex/im.js ***!
  \********************************************************************************/
/*! exports provided: imDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imDocs", function() { return imDocs; });
var imDocs = {
  name: 'im',
  category: 'Complex',
  syntax: ['im(x)'],
  description: 'Get the imaginary part of a complex number.',
  examples: ['im(2 + 3i)', 're(2 + 3i)', 'im(-5.2i)', 'im(2.4)'],
  seealso: ['re', 'conj', 'abs', 'arg']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/complex/re.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/complex/re.js ***!
  \********************************************************************************/
/*! exports provided: reDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reDocs", function() { return reDocs; });
var reDocs = {
  name: 're',
  category: 'Complex',
  syntax: ['re(x)'],
  description: 'Get the real part of a complex number.',
  examples: ['re(2 + 3i)', 'im(2 + 3i)', 're(-5.2i)', 're(2.4)'],
  seealso: ['im', 'conj', 'abs', 'arg']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/expression/evaluate.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/expression/evaluate.js ***!
  \*****************************************************************************************/
/*! exports provided: evaluateDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "evaluateDocs", function() { return evaluateDocs; });
var evaluateDocs = {
  name: 'evaluate',
  category: 'Expression',
  syntax: ['evaluate(expression)', 'evaluate([expr1, expr2, expr3, ...])'],
  description: 'Evaluate an expression or an array with expressions.',
  examples: ['evaluate("2 + 3")', 'evaluate("sqrt(" + 4 + ")")'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/expression/help.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/expression/help.js ***!
  \*************************************************************************************/
/*! exports provided: helpDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "helpDocs", function() { return helpDocs; });
var helpDocs = {
  name: 'help',
  category: 'Expression',
  syntax: ['help(object)', 'help(string)'],
  description: 'Display documentation on a function or data type.',
  examples: ['help(sqrt)', 'help("complex")'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/geometry/distance.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/geometry/distance.js ***!
  \***************************************************************************************/
/*! exports provided: distanceDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distanceDocs", function() { return distanceDocs; });
var distanceDocs = {
  name: 'distance',
  category: 'Geometry',
  syntax: ['distance([x1, y1], [x2, y2])', 'distance([[x1, y1], [x2, y2]])'],
  description: 'Calculates the Euclidean distance between two points.',
  examples: ['distance([0,0], [4,4])', 'distance([[0,0], [4,4]])'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/geometry/intersect.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/geometry/intersect.js ***!
  \****************************************************************************************/
/*! exports provided: intersectDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectDocs", function() { return intersectDocs; });
var intersectDocs = {
  name: 'intersect',
  category: 'Geometry',
  syntax: ['intersect(expr1, expr2, expr3, expr4)', 'intersect(expr1, expr2, expr3)'],
  description: 'Computes the intersection point of lines and/or planes.',
  examples: ['intersect([0, 0], [10, 10], [10, 0], [0, 10])', 'intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/and.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/logical/and.js ***!
  \*********************************************************************************/
/*! exports provided: andDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "andDocs", function() { return andDocs; });
var andDocs = {
  name: 'and',
  category: 'Logical',
  syntax: ['x and y', 'and(x, y)'],
  description: 'Logical and. Test whether two values are both defined with a nonzero/nonempty value.',
  examples: ['true and false', 'true and true', '2 and 4'],
  seealso: ['not', 'or', 'xor']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/not.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/logical/not.js ***!
  \*********************************************************************************/
/*! exports provided: notDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notDocs", function() { return notDocs; });
var notDocs = {
  name: 'not',
  category: 'Logical',
  syntax: ['not x', 'not(x)'],
  description: 'Logical not. Flips the boolean value of given argument.',
  examples: ['not true', 'not false', 'not 2', 'not 0'],
  seealso: ['and', 'or', 'xor']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/or.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/logical/or.js ***!
  \********************************************************************************/
/*! exports provided: orDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orDocs", function() { return orDocs; });
var orDocs = {
  name: 'or',
  category: 'Logical',
  syntax: ['x or y', 'or(x, y)'],
  description: 'Logical or. Test if at least one value is defined with a nonzero/nonempty value.',
  examples: ['true or false', 'false or false', '0 or 4'],
  seealso: ['not', 'and', 'xor']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/logical/xor.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/logical/xor.js ***!
  \*********************************************************************************/
/*! exports provided: xorDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xorDocs", function() { return xorDocs; });
var xorDocs = {
  name: 'xor',
  category: 'Logical',
  syntax: ['x xor y', 'xor(x, y)'],
  description: 'Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.',
  examples: ['true xor false', 'false xor false', 'true xor true', '0 xor 4'],
  seealso: ['not', 'and', 'or']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/column.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/column.js ***!
  \***********************************************************************************/
/*! exports provided: columnDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "columnDocs", function() { return columnDocs; });
var columnDocs = {
  name: 'column',
  category: 'Matrix',
  syntax: ['column(x, index)'],
  description: 'Return a column from a matrix or array.',
  examples: ['A = [[1, 2], [3, 4]]', 'column(A, 1)', 'column(A, 2)'],
  seealso: ['row']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/concat.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/concat.js ***!
  \***********************************************************************************/
/*! exports provided: concatDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatDocs", function() { return concatDocs; });
var concatDocs = {
  name: 'concat',
  category: 'Matrix',
  syntax: ['concat(A, B, C, ...)', 'concat(A, B, C, ..., dim)'],
  description: 'Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.',
  examples: ['A = [1, 2; 5, 6]', 'B = [3, 4; 7, 8]', 'concat(A, B)', 'concat(A, B, 1)', 'concat(A, B, 2)'],
  seealso: ['det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/cross.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/cross.js ***!
  \**********************************************************************************/
/*! exports provided: crossDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "crossDocs", function() { return crossDocs; });
var crossDocs = {
  name: 'cross',
  category: 'Matrix',
  syntax: ['cross(A, B)'],
  description: 'Calculate the cross product for two vectors in three dimensional space.',
  examples: ['cross([1, 1, 0],  [0, 1, 1])', 'cross([3, -3, 1], [4, 9, 2])', 'cross([2, 3, 4],  [5, 6, 7])'],
  seealso: ['multiply', 'dot']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/ctranspose.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/ctranspose.js ***!
  \***************************************************************************************/
/*! exports provided: ctransposeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ctransposeDocs", function() { return ctransposeDocs; });
var ctransposeDocs = {
  name: 'ctranspose',
  category: 'Matrix',
  syntax: ['x\'', 'ctranspose(x)'],
  description: 'Complex Conjugate and Transpose a matrix',
  examples: ['a = [1, 2, 3; 4, 5, 6]', 'a\'', 'ctranspose(a)'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/det.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/det.js ***!
  \********************************************************************************/
/*! exports provided: detDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detDocs", function() { return detDocs; });
var detDocs = {
  name: 'det',
  category: 'Matrix',
  syntax: ['det(x)'],
  description: 'Calculate the determinant of a matrix',
  examples: ['det([1, 2; 3, 4])', 'det([-2, 2, 3; -1, 1, 3; 2, 0, -1])'],
  seealso: ['concat', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/diag.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/diag.js ***!
  \*********************************************************************************/
/*! exports provided: diagDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "diagDocs", function() { return diagDocs; });
var diagDocs = {
  name: 'diag',
  category: 'Matrix',
  syntax: ['diag(x)', 'diag(x, k)'],
  description: 'Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.',
  examples: ['diag(1:3)', 'diag(1:3, 1)', 'a = [1, 2, 3; 4, 5, 6; 7, 8, 9]', 'diag(a)'],
  seealso: ['concat', 'det', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/diff.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/diff.js ***!
  \*********************************************************************************/
/*! exports provided: diffDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "diffDocs", function() { return diffDocs; });
var diffDocs = {
  name: 'diff',
  category: 'Matrix',
  syntax: ['diff(arr)', 'diff(arr, dim)'],
  description: ['Create a new matrix or array with the difference of the passed matrix or array.', 'Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference', 'If no dimension parameter is passed it is assumed as dimension 0', 'Dimension is zero-based in javascript and one-based in the parser', 'Arrays must be \'rectangular\' meaning arrays like [1, 2]', 'If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays'],
  examples: ['diff([1, 2, 4, 7, 0])', 'diff([1, 2, 4, 7, 0], 0)', 'diff(matrix([1, 2, 4, 7, 0]))', 'diff([[1, 2], [3, 4]])', 'diff([[1, 2], [3, 4]], 0)', 'diff([[1, 2], [3, 4]], 1)', 'diff([[1, 2], [3, 4]], bignumber(1))', 'diff(matrix([[1, 2], [3, 4]]), 1)', 'diff([[1, 2], matrix([3, 4])], 1)'],
  seealso: ['subtract', 'partitionSelect']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/dot.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/dot.js ***!
  \********************************************************************************/
/*! exports provided: dotDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dotDocs", function() { return dotDocs; });
var dotDocs = {
  name: 'dot',
  category: 'Matrix',
  syntax: ['dot(A, B)', 'A * B'],
  description: 'Calculate the dot product of two vectors. ' + 'The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] ' + 'is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn',
  examples: ['dot([2, 4, 1], [2, 2, 3])', '[2, 4, 1] * [2, 2, 3]'],
  seealso: ['multiply', 'cross']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/eigs.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/eigs.js ***!
  \*********************************************************************************/
/*! exports provided: eigsDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eigsDocs", function() { return eigsDocs; });
var eigsDocs = {
  name: 'eigs',
  category: 'Matrix',
  syntax: ['eigs(x)'],
  description: 'Calculate the eigenvalues and eigenvectors of a real symmetric matrix',
  examples: ['eigs([[5, 2.3], [2.3, 1]])'],
  seealso: ['inv']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/filter.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/filter.js ***!
  \***********************************************************************************/
/*! exports provided: filterDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterDocs", function() { return filterDocs; });
var filterDocs = {
  name: 'filter',
  category: 'Matrix',
  syntax: ['filter(x, test)'],
  description: 'Filter items in a matrix.',
  examples: ['isPositive(x) = x > 0', 'filter([6, -2, -1, 4, 3], isPositive)', 'filter([6, -2, 0, 1, 0], x != 0)'],
  seealso: ['sort', 'map', 'forEach']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/flatten.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/flatten.js ***!
  \************************************************************************************/
/*! exports provided: flattenDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flattenDocs", function() { return flattenDocs; });
var flattenDocs = {
  name: 'flatten',
  category: 'Matrix',
  syntax: ['flatten(x)'],
  description: 'Flatten a multi dimensional matrix into a single dimensional matrix.',
  examples: ['a = [1, 2, 3; 4, 5, 6]', 'size(a)', 'b = flatten(a)', 'size(b)'],
  seealso: ['concat', 'resize', 'size', 'squeeze']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/forEach.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/forEach.js ***!
  \************************************************************************************/
/*! exports provided: forEachDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachDocs", function() { return forEachDocs; });
var forEachDocs = {
  name: 'forEach',
  category: 'Matrix',
  syntax: ['forEach(x, callback)'],
  description: 'Iterates over all elements of a matrix/array, and executes the given callback function.',
  examples: ['forEach([1, 2, 3], function(val) { console.log(val) })'],
  seealso: ['map', 'sort', 'filter']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/getMatrixDataType.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/getMatrixDataType.js ***!
  \**********************************************************************************************/
/*! exports provided: getMatrixDataTypeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataTypeDocs", function() { return getMatrixDataTypeDocs; });
var getMatrixDataTypeDocs = {
  name: 'getMatrixDataType',
  category: 'Matrix',
  syntax: ['getMatrixDataType(x)'],
  description: 'Find the data type of all elements in a matrix or array, ' + 'for example "number" if all items are a number ' + 'and "Complex" if all values are complex numbers. ' + 'If a matrix contains more than one data type, it will return "mixed".',
  examples: ['getMatrixDataType([1, 2, 3])', 'getMatrixDataType([[5 cm], [2 inch]])', 'getMatrixDataType([1, "text"])', 'getMatrixDataType([1, bignumber(4)])'],
  seealso: ['matrix', 'sparse', 'typeOf']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/identity.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/identity.js ***!
  \*************************************************************************************/
/*! exports provided: identityDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identityDocs", function() { return identityDocs; });
var identityDocs = {
  name: 'identity',
  category: 'Matrix',
  syntax: ['identity(n)', 'identity(m, n)', 'identity([m, n])'],
  description: 'Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.',
  examples: ['identity(3)', 'identity(3, 5)', 'a = [1, 2, 3; 4, 5, 6]', 'identity(size(a))'],
  seealso: ['concat', 'det', 'diag', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/inv.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/inv.js ***!
  \********************************************************************************/
/*! exports provided: invDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invDocs", function() { return invDocs; });
var invDocs = {
  name: 'inv',
  category: 'Matrix',
  syntax: ['inv(x)'],
  description: 'Calculate the inverse of a matrix',
  examples: ['inv([1, 2; 3, 4])', 'inv(4)', '1 / 4'],
  seealso: ['concat', 'det', 'diag', 'identity', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/kron.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/kron.js ***!
  \*********************************************************************************/
/*! exports provided: kronDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kronDocs", function() { return kronDocs; });
var kronDocs = {
  name: 'kron',
  category: 'Matrix',
  syntax: ['kron(x, y)'],
  description: 'Calculates the kronecker product of 2 matrices or vectors.',
  examples: ['kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])', 'kron([1,1], [2,3,4])'],
  seealso: ['multiply', 'dot', 'cross']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/map.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/map.js ***!
  \********************************************************************************/
/*! exports provided: mapDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapDocs", function() { return mapDocs; });
var mapDocs = {
  name: 'map',
  category: 'Matrix',
  syntax: ['map(x, callback)'],
  description: 'Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.',
  examples: ['map([1, 2, 3], square)'],
  seealso: ['filter', 'forEach']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/ones.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/ones.js ***!
  \*********************************************************************************/
/*! exports provided: onesDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onesDocs", function() { return onesDocs; });
var onesDocs = {
  name: 'ones',
  category: 'Matrix',
  syntax: ['ones(m)', 'ones(m, n)', 'ones(m, n, p, ...)', 'ones([m])', 'ones([m, n])', 'ones([m, n, p, ...])'],
  description: 'Create a matrix containing ones.',
  examples: ['ones(3)', 'ones(3, 5)', 'ones([2,3]) * 4.5', 'a = [1, 2, 3; 4, 5, 6]', 'ones(size(a))'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/partitionSelect.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/partitionSelect.js ***!
  \********************************************************************************************/
/*! exports provided: partitionSelectDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partitionSelectDocs", function() { return partitionSelectDocs; });
var partitionSelectDocs = {
  name: 'partitionSelect',
  category: 'Matrix',
  syntax: ['partitionSelect(x, k)', 'partitionSelect(x, k, compare)'],
  description: 'Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.',
  examples: ['partitionSelect([5, 10, 1], 2)', 'partitionSelect(["C", "B", "A", "D"], 1)'],
  seealso: ['sort']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/range.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/range.js ***!
  \**********************************************************************************/
/*! exports provided: rangeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeDocs", function() { return rangeDocs; });
var rangeDocs = {
  name: 'range',
  category: 'Type',
  syntax: ['start:end', 'start:step:end', 'range(start, end)', 'range(start, end, step)', 'range(string)'],
  description: 'Create a range. Lower bound of the range is included, upper bound is excluded.',
  examples: ['1:5', '3:-1:-3', 'range(3, 7)', 'range(0, 12, 2)', 'range("4:10")', 'a = [1, 2, 3, 4; 5, 6, 7, 8]', 'a[1:2, 1:2]'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/reshape.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/reshape.js ***!
  \************************************************************************************/
/*! exports provided: reshapeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reshapeDocs", function() { return reshapeDocs; });
var reshapeDocs = {
  name: 'reshape',
  category: 'Matrix',
  syntax: ['reshape(x, sizes)'],
  description: 'Reshape a multi dimensional array to fit the specified dimensions.',
  examples: ['reshape([1, 2, 3, 4, 5, 6], [2, 3])', 'reshape([[1, 2], [3, 4]], [1, 4])', 'reshape([[1, 2], [3, 4]], [4])'],
  seealso: ['size', 'squeeze', 'resize']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/resize.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/resize.js ***!
  \***********************************************************************************/
/*! exports provided: resizeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeDocs", function() { return resizeDocs; });
var resizeDocs = {
  name: 'resize',
  category: 'Matrix',
  syntax: ['resize(x, size)', 'resize(x, size, defaultValue)'],
  description: 'Resize a matrix.',
  examples: ['resize([1,2,3,4,5], [3])', 'resize([1,2,3], [5])', 'resize([1,2,3], [5], -1)', 'resize(2, [2, 3])', 'resize("hello", [8], "!")'],
  seealso: ['size', 'subset', 'squeeze', 'reshape']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/row.js":
/*!********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/row.js ***!
  \********************************************************************************/
/*! exports provided: rowDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rowDocs", function() { return rowDocs; });
var rowDocs = {
  name: 'row',
  category: 'Matrix',
  syntax: ['row(x, index)'],
  description: 'Return a row from a matrix or array.',
  examples: ['A = [[1, 2], [3, 4]]', 'row(A, 1)', 'row(A, 2)'],
  seealso: ['column']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/size.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/size.js ***!
  \*********************************************************************************/
/*! exports provided: sizeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sizeDocs", function() { return sizeDocs; });
var sizeDocs = {
  name: 'size',
  category: 'Matrix',
  syntax: ['size(x)'],
  description: 'Calculate the size of a matrix.',
  examples: ['size(2.3)', 'size("hello world")', 'a = [1, 2; 3, 4; 5, 6]', 'size(a)', 'size(1:6)'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/sort.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/sort.js ***!
  \*********************************************************************************/
/*! exports provided: sortDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortDocs", function() { return sortDocs; });
var sortDocs = {
  name: 'sort',
  category: 'Matrix',
  syntax: ['sort(x)', 'sort(x, compare)'],
  description: 'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',
  examples: ['sort([5, 10, 1])', 'sort(["C", "B", "A", "D"])', 'sortByLength(a, b) = size(a)[1] - size(b)[1]', 'sort(["Langdon", "Tom", "Sara"], sortByLength)', 'sort(["10", "1", "2"], "natural")'],
  seealso: ['map', 'filter', 'forEach']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/squeeze.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/squeeze.js ***!
  \************************************************************************************/
/*! exports provided: squeezeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squeezeDocs", function() { return squeezeDocs; });
var squeezeDocs = {
  name: 'squeeze',
  category: 'Matrix',
  syntax: ['squeeze(x)'],
  description: 'Remove inner and outer singleton dimensions from a matrix.',
  examples: ['a = zeros(3,2,1)', 'size(squeeze(a))', 'b = zeros(1,1,3)', 'size(squeeze(b))'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'subset', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/subset.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/subset.js ***!
  \***********************************************************************************/
/*! exports provided: subsetDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subsetDocs", function() { return subsetDocs; });
var subsetDocs = {
  name: 'subset',
  category: 'Matrix',
  syntax: ['value(index)', 'value(index) = replacement', 'subset(value, [index])', 'subset(value, [index], replacement)'],
  description: 'Get or set a subset of a matrix or string. ' + 'Indexes are one-based. ' + 'Both the ranges lower-bound and upper-bound are included.',
  examples: ['d = [1, 2; 3, 4]', 'e = []', 'e[1, 1:2] = [5, 6]', 'e[2, :] = [7, 8]', 'f = d * e', 'f[2, 1]', 'f[:, 1]'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'trace', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/trace.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/trace.js ***!
  \**********************************************************************************/
/*! exports provided: traceDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "traceDocs", function() { return traceDocs; });
var traceDocs = {
  name: 'trace',
  category: 'Matrix',
  syntax: ['trace(A)'],
  description: 'Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.',
  examples: ['A = [1, 2, 3; -1, 2, 3; 2, 0, 3]', 'trace(A)'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'transpose', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/transpose.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/transpose.js ***!
  \**************************************************************************************/
/*! exports provided: transposeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transposeDocs", function() { return transposeDocs; });
var transposeDocs = {
  name: 'transpose',
  category: 'Matrix',
  syntax: ['x\'', 'transpose(x)'],
  description: 'Transpose a matrix',
  examples: ['a = [1, 2, 3; 4, 5, 6]', 'a\'', 'transpose(a)'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'zeros']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/zeros.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/matrix/zeros.js ***!
  \**********************************************************************************/
/*! exports provided: zerosDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zerosDocs", function() { return zerosDocs; });
var zerosDocs = {
  name: 'zeros',
  category: 'Matrix',
  syntax: ['zeros(m)', 'zeros(m, n)', 'zeros(m, n, p, ...)', 'zeros([m])', 'zeros([m, n])', 'zeros([m, n, p, ...])'],
  description: 'Create a matrix containing zeros.',
  examples: ['zeros(3)', 'zeros(3, 5)', 'a = [1, 2, 3; 4, 5, 6]', 'zeros(size(a))'],
  seealso: ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/combinations.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/combinations.js ***!
  \**********************************************************************************************/
/*! exports provided: combinationsDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinationsDocs", function() { return combinationsDocs; });
var combinationsDocs = {
  name: 'combinations',
  category: 'Probability',
  syntax: ['combinations(n, k)'],
  description: 'Compute the number of combinations of n items taken k at a time',
  examples: ['combinations(7, 5)'],
  seealso: ['combinationsWithRep', 'permutations', 'factorial']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/combinationsWithRep.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/combinationsWithRep.js ***!
  \*****************************************************************************************************/
/*! exports provided: combinationsWithRepDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRepDocs", function() { return combinationsWithRepDocs; });
var combinationsWithRepDocs = {
  name: 'combinationsWithRep',
  category: 'Probability',
  syntax: ['combinationsWithRep(n, k)'],
  description: 'Compute the number of combinations of n items taken k at a time with replacements.',
  examples: ['combinationsWithRep(7, 5)'],
  seealso: ['combinations', 'permutations', 'factorial']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/factorial.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/factorial.js ***!
  \*******************************************************************************************/
/*! exports provided: factorialDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "factorialDocs", function() { return factorialDocs; });
var factorialDocs = {
  name: 'factorial',
  category: 'Probability',
  syntax: ['n!', 'factorial(n)'],
  description: 'Compute the factorial of a value',
  examples: ['5!', '5 * 4 * 3 * 2 * 1', '3!'],
  seealso: ['combinations', 'combinationsWithRep', 'permutations', 'gamma']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/gamma.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/gamma.js ***!
  \***************************************************************************************/
/*! exports provided: gammaDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gammaDocs", function() { return gammaDocs; });
var gammaDocs = {
  name: 'gamma',
  category: 'Probability',
  syntax: ['gamma(n)'],
  description: 'Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.',
  examples: ['gamma(4)', '3!', 'gamma(1/2)', 'sqrt(pi)'],
  seealso: ['factorial']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/kldivergence.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/kldivergence.js ***!
  \**********************************************************************************************/
/*! exports provided: kldivergenceDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kldivergenceDocs", function() { return kldivergenceDocs; });
var kldivergenceDocs = {
  name: 'kldivergence',
  category: 'Probability',
  syntax: ['kldivergence(x, y)'],
  description: 'Calculate the Kullback-Leibler (KL) divergence  between two distributions.',
  examples: ['kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/multinomial.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/multinomial.js ***!
  \*********************************************************************************************/
/*! exports provided: multinomialDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multinomialDocs", function() { return multinomialDocs; });
var multinomialDocs = {
  name: 'multinomial',
  category: 'Probability',
  syntax: ['multinomial(A)'],
  description: 'Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.',
  examples: ['multinomial([1, 2, 1])'],
  seealso: ['combinations', 'factorial']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/permutations.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/permutations.js ***!
  \**********************************************************************************************/
/*! exports provided: permutationsDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "permutationsDocs", function() { return permutationsDocs; });
var permutationsDocs = {
  name: 'permutations',
  category: 'Probability',
  syntax: ['permutations(n)', 'permutations(n, k)'],
  description: 'Compute the number of permutations of n items taken k at a time',
  examples: ['permutations(5)', 'permutations(5, 3)'],
  seealso: ['combinations', 'combinationsWithRep', 'factorial']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/pickRandom.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/pickRandom.js ***!
  \********************************************************************************************/
/*! exports provided: pickRandomDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickRandomDocs", function() { return pickRandomDocs; });
var pickRandomDocs = {
  name: 'pickRandom',
  category: 'Probability',
  syntax: ['pickRandom(array)', 'pickRandom(array, number)', 'pickRandom(array, weights)', 'pickRandom(array, number, weights)', 'pickRandom(array, weights, number)'],
  description: 'Pick a random entry from a given array.',
  examples: ['pickRandom(0:10)', 'pickRandom([1, 3, 1, 6])', 'pickRandom([1, 3, 1, 6], 2)', 'pickRandom([1, 3, 1, 6], [2, 3, 2, 1])', 'pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])', 'pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)'],
  seealso: ['random', 'randomInt']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/random.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/random.js ***!
  \****************************************************************************************/
/*! exports provided: randomDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomDocs", function() { return randomDocs; });
var randomDocs = {
  name: 'random',
  category: 'Probability',
  syntax: ['random()', 'random(max)', 'random(min, max)', 'random(size)', 'random(size, max)', 'random(size, min, max)'],
  description: 'Return a random number.',
  examples: ['random()', 'random(10, 20)', 'random([2, 3])'],
  seealso: ['pickRandom', 'randomInt']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/probability/randomInt.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/probability/randomInt.js ***!
  \*******************************************************************************************/
/*! exports provided: randomIntDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomIntDocs", function() { return randomIntDocs; });
var randomIntDocs = {
  name: 'randomInt',
  category: 'Probability',
  syntax: ['randomInt(max)', 'randomInt(min, max)', 'randomInt(size)', 'randomInt(size, max)', 'randomInt(size, min, max)'],
  description: 'Return a random integer number',
  examples: ['randomInt(10, 20)', 'randomInt([2, 3], 10)'],
  seealso: ['pickRandom', 'random']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compare.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compare.js ***!
  \****************************************************************************************/
/*! exports provided: compareDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareDocs", function() { return compareDocs; });
var compareDocs = {
  name: 'compare',
  category: 'Relational',
  syntax: ['compare(x, y)'],
  description: 'Compare two values. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',
  examples: ['compare(2, 3)', 'compare(3, 2)', 'compare(2, 2)', 'compare(5cm, 40mm)', 'compare(2, [1, 2, 3])'],
  seealso: ['equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compareNatural', 'compareText']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compareNatural.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compareNatural.js ***!
  \***********************************************************************************************/
/*! exports provided: compareNaturalDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareNaturalDocs", function() { return compareNaturalDocs; });
var compareNaturalDocs = {
  name: 'compareNatural',
  category: 'Relational',
  syntax: ['compareNatural(x, y)'],
  description: 'Compare two values of any type in a deterministic, natural way. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',
  examples: ['compareNatural(2, 3)', 'compareNatural(3, 2)', 'compareNatural(2, 2)', 'compareNatural(5cm, 40mm)', 'compareNatural("2", "10")', 'compareNatural(2 + 3i, 2 + 4i)', 'compareNatural([1, 2, 4], [1, 2, 3])', 'compareNatural([1, 5], [1, 2, 3])', 'compareNatural([1, 2], [1, 2])', 'compareNatural({a: 2}, {a: 4})'],
  seealso: ['equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compare', 'compareText']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compareText.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/compareText.js ***!
  \********************************************************************************************/
/*! exports provided: compareTextDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareTextDocs", function() { return compareTextDocs; });
var compareTextDocs = {
  name: 'compareText',
  category: 'Relational',
  syntax: ['compareText(x, y)'],
  description: 'Compare two strings lexically. Comparison is case sensitive. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',
  examples: ['compareText("B", "A")', 'compareText("A", "B")', 'compareText("A", "A")', 'compareText("2", "10")', 'compare("2", "10")', 'compare(2, 10)', 'compareNatural("2", "10")', 'compareText("B", ["A", "B", "C"])'],
  seealso: ['compare', 'compareNatural']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/deepEqual.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/deepEqual.js ***!
  \******************************************************************************************/
/*! exports provided: deepEqualDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepEqualDocs", function() { return deepEqualDocs; });
var deepEqualDocs = {
  name: 'deepEqual',
  category: 'Relational',
  syntax: ['deepEqual(x, y)'],
  description: 'Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.',
  examples: ['deepEqual([1,3,4], [1,3,4])', 'deepEqual([1,3,4], [1,3])'],
  seealso: ['equal', 'unequal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/equal.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/equal.js ***!
  \**************************************************************************************/
/*! exports provided: equalDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalDocs", function() { return equalDocs; });
var equalDocs = {
  name: 'equal',
  category: 'Relational',
  syntax: ['x == y', 'equal(x, y)'],
  description: 'Check equality of two values. Returns true if the values are equal, and false if not.',
  examples: ['2+2 == 3', '2+2 == 4', 'a = 3.2', 'b = 6-2.8', 'a == b', '50cm == 0.5m'],
  seealso: ['unequal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare', 'deepEqual', 'equalText']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/equalText.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/equalText.js ***!
  \******************************************************************************************/
/*! exports provided: equalTextDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalTextDocs", function() { return equalTextDocs; });
var equalTextDocs = {
  name: 'equalText',
  category: 'Relational',
  syntax: ['equalText(x, y)'],
  description: 'Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.',
  examples: ['equalText("Hello", "Hello")', 'equalText("a", "A")', 'equal("2e3", "2000")', 'equalText("2e3", "2000")', 'equalText("B", ["A", "B", "C"])'],
  seealso: ['compare', 'compareNatural', 'compareText', 'equal']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/larger.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/larger.js ***!
  \***************************************************************************************/
/*! exports provided: largerDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "largerDocs", function() { return largerDocs; });
var largerDocs = {
  name: 'larger',
  category: 'Relational',
  syntax: ['x > y', 'larger(x, y)'],
  description: 'Check if value x is larger than y. Returns true if x is larger than y, and false if not.',
  examples: ['2 > 3', '5 > 2*2', 'a = 3.3', 'b = 6-2.8', '(a > b)', '(b < a)', '5 cm > 2 inch'],
  seealso: ['equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compare']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/largerEq.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/largerEq.js ***!
  \*****************************************************************************************/
/*! exports provided: largerEqDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "largerEqDocs", function() { return largerEqDocs; });
var largerEqDocs = {
  name: 'largerEq',
  category: 'Relational',
  syntax: ['x >= y', 'largerEq(x, y)'],
  description: 'Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.',
  examples: ['2 >= 1+1', '2 > 1+1', 'a = 3.2', 'b = 6-2.8', '(a >= b)'],
  seealso: ['equal', 'unequal', 'smallerEq', 'smaller', 'compare']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/smaller.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/smaller.js ***!
  \****************************************************************************************/
/*! exports provided: smallerDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smallerDocs", function() { return smallerDocs; });
var smallerDocs = {
  name: 'smaller',
  category: 'Relational',
  syntax: ['x < y', 'smaller(x, y)'],
  description: 'Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.',
  examples: ['2 < 3', '5 < 2*2', 'a = 3.3', 'b = 6-2.8', '(a < b)', '5 cm < 2 inch'],
  seealso: ['equal', 'unequal', 'larger', 'smallerEq', 'largerEq', 'compare']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/smallerEq.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/smallerEq.js ***!
  \******************************************************************************************/
/*! exports provided: smallerEqDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smallerEqDocs", function() { return smallerEqDocs; });
var smallerEqDocs = {
  name: 'smallerEq',
  category: 'Relational',
  syntax: ['x <= y', 'smallerEq(x, y)'],
  description: 'Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.',
  examples: ['2 <= 1+1', '2 < 1+1', 'a = 3.2', 'b = 6-2.8', '(a <= b)'],
  seealso: ['equal', 'unequal', 'larger', 'smaller', 'largerEq', 'compare']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/relational/unequal.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/relational/unequal.js ***!
  \****************************************************************************************/
/*! exports provided: unequalDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unequalDocs", function() { return unequalDocs; });
var unequalDocs = {
  name: 'unequal',
  category: 'Relational',
  syntax: ['x != y', 'unequal(x, y)'],
  description: 'Check unequality of two values. Returns true if the values are unequal, and false if they are equal.',
  examples: ['2+2 != 3', '2+2 != 4', 'a = 3.2', 'b = 6-2.8', 'a != b', '50cm != 0.5m', '5 cm != 2 inch'],
  seealso: ['equal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare', 'deepEqual']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setCartesian.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setCartesian.js ***!
  \**************************************************************************************/
/*! exports provided: setCartesianDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCartesianDocs", function() { return setCartesianDocs; });
var setCartesianDocs = {
  name: 'setCartesian',
  category: 'Set',
  syntax: ['setCartesian(set1, set2)'],
  description: 'Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',
  examples: ['setCartesian([1, 2], [3, 4])'],
  seealso: ['setUnion', 'setIntersect', 'setDifference', 'setPowerset']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setDifference.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setDifference.js ***!
  \***************************************************************************************/
/*! exports provided: setDifferenceDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDifferenceDocs", function() { return setDifferenceDocs; });
var setDifferenceDocs = {
  name: 'setDifference',
  category: 'Set',
  syntax: ['setDifference(set1, set2)'],
  description: 'Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',
  examples: ['setDifference([1, 2, 3, 4], [3, 4, 5, 6])', 'setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],
  seealso: ['setUnion', 'setIntersect', 'setSymDifference']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setDistinct.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setDistinct.js ***!
  \*************************************************************************************/
/*! exports provided: setDistinctDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDistinctDocs", function() { return setDistinctDocs; });
var setDistinctDocs = {
  name: 'setDistinct',
  category: 'Set',
  syntax: ['setDistinct(set)'],
  description: 'Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',
  examples: ['setDistinct([1, 1, 1, 2, 2, 3])'],
  seealso: ['setMultiplicity']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setIntersect.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setIntersect.js ***!
  \**************************************************************************************/
/*! exports provided: setIntersectDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIntersectDocs", function() { return setIntersectDocs; });
var setIntersectDocs = {
  name: 'setIntersect',
  category: 'Set',
  syntax: ['setIntersect(set1, set2)'],
  description: 'Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',
  examples: ['setIntersect([1, 2, 3, 4], [3, 4, 5, 6])', 'setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],
  seealso: ['setUnion', 'setDifference']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setIsSubset.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setIsSubset.js ***!
  \*************************************************************************************/
/*! exports provided: setIsSubsetDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIsSubsetDocs", function() { return setIsSubsetDocs; });
var setIsSubsetDocs = {
  name: 'setIsSubset',
  category: 'Set',
  syntax: ['setIsSubset(set1, set2)'],
  description: 'Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',
  examples: ['setIsSubset([1, 2], [3, 4, 5, 6])', 'setIsSubset([3, 4], [3, 4, 5, 6])'],
  seealso: ['setUnion', 'setIntersect', 'setDifference']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setMultiplicity.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setMultiplicity.js ***!
  \*****************************************************************************************/
/*! exports provided: setMultiplicityDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMultiplicityDocs", function() { return setMultiplicityDocs; });
var setMultiplicityDocs = {
  name: 'setMultiplicity',
  category: 'Set',
  syntax: ['setMultiplicity(element, set)'],
  description: 'Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',
  examples: ['setMultiplicity(1, [1, 2, 2, 4])', 'setMultiplicity(2, [1, 2, 2, 4])'],
  seealso: ['setDistinct', 'setSize']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setPowerset.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setPowerset.js ***!
  \*************************************************************************************/
/*! exports provided: setPowersetDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setPowersetDocs", function() { return setPowersetDocs; });
var setPowersetDocs = {
  name: 'setPowerset',
  category: 'Set',
  syntax: ['setPowerset(set)'],
  description: 'Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.',
  examples: ['setPowerset([1, 2, 3])'],
  seealso: ['setCartesian']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setSize.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setSize.js ***!
  \*********************************************************************************/
/*! exports provided: setSizeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSizeDocs", function() { return setSizeDocs; });
var setSizeDocs = {
  name: 'setSize',
  category: 'Set',
  syntax: ['setSize(set)', 'setSize(set, unique)'],
  description: 'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',
  examples: ['setSize([1, 2, 2, 4])', 'setSize([1, 2, 2, 4], true)'],
  seealso: ['setUnion', 'setIntersect', 'setDifference']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setSymDifference.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setSymDifference.js ***!
  \******************************************************************************************/
/*! exports provided: setSymDifferenceDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSymDifferenceDocs", function() { return setSymDifferenceDocs; });
var setSymDifferenceDocs = {
  name: 'setSymDifference',
  category: 'Set',
  syntax: ['setSymDifference(set1, set2)'],
  description: 'Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',
  examples: ['setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])', 'setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],
  seealso: ['setUnion', 'setIntersect', 'setDifference']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/set/setUnion.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/set/setUnion.js ***!
  \**********************************************************************************/
/*! exports provided: setUnionDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUnionDocs", function() { return setUnionDocs; });
var setUnionDocs = {
  name: 'setUnion',
  category: 'Set',
  syntax: ['setUnion(set1, set2)'],
  description: 'Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',
  examples: ['setUnion([1, 2, 3, 4], [3, 4, 5, 6])', 'setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],
  seealso: ['setIntersect', 'setDifference']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/special/erf.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/special/erf.js ***!
  \*********************************************************************************/
/*! exports provided: erfDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "erfDocs", function() { return erfDocs; });
var erfDocs = {
  name: 'erf',
  category: 'Special',
  syntax: ['erf(x)'],
  description: 'Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x',
  examples: ['erf(0.2)', 'erf(-0.5)', 'erf(4)'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mad.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mad.js ***!
  \************************************************************************************/
/*! exports provided: madDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "madDocs", function() { return madDocs; });
var madDocs = {
  name: 'mad',
  category: 'Statistics',
  syntax: ['mad(a, b, c, ...)', 'mad(A)'],
  description: 'Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.',
  examples: ['mad(10, 20, 30)', 'mad([1, 2, 3])'],
  seealso: ['mean', 'median', 'std', 'abs']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/max.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/max.js ***!
  \************************************************************************************/
/*! exports provided: maxDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxDocs", function() { return maxDocs; });
var maxDocs = {
  name: 'max',
  category: 'Statistics',
  syntax: ['max(a, b, c, ...)', 'max(A)', 'max(A, dim)'],
  description: 'Compute the maximum value of a list of values.',
  examples: ['max(2, 3, 4, 1)', 'max([2, 3, 4, 1])', 'max([2, 5; 4, 3])', 'max([2, 5; 4, 3], 1)', 'max([2, 5; 4, 3], 2)', 'max(2.7, 7.1, -4.5, 2.0, 4.1)', 'min(2.7, 7.1, -4.5, 2.0, 4.1)'],
  seealso: ['mean', 'median', 'min', 'prod', 'std', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mean.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mean.js ***!
  \*************************************************************************************/
/*! exports provided: meanDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "meanDocs", function() { return meanDocs; });
var meanDocs = {
  name: 'mean',
  category: 'Statistics',
  syntax: ['mean(a, b, c, ...)', 'mean(A)', 'mean(A, dim)'],
  description: 'Compute the arithmetic mean of a list of values.',
  examples: ['mean(2, 3, 4, 1)', 'mean([2, 3, 4, 1])', 'mean([2, 5; 4, 3])', 'mean([2, 5; 4, 3], 1)', 'mean([2, 5; 4, 3], 2)', 'mean([1.0, 2.7, 3.2, 4.0])'],
  seealso: ['max', 'median', 'min', 'prod', 'std', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/median.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/median.js ***!
  \***************************************************************************************/
/*! exports provided: medianDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "medianDocs", function() { return medianDocs; });
var medianDocs = {
  name: 'median',
  category: 'Statistics',
  syntax: ['median(a, b, c, ...)', 'median(A)'],
  description: 'Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.',
  examples: ['median(5, 2, 7)', 'median([3, -1, 5, 7])'],
  seealso: ['max', 'mean', 'min', 'prod', 'std', 'sum', 'variance', 'quantileSeq']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/min.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/min.js ***!
  \************************************************************************************/
/*! exports provided: minDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minDocs", function() { return minDocs; });
var minDocs = {
  name: 'min',
  category: 'Statistics',
  syntax: ['min(a, b, c, ...)', 'min(A)', 'min(A, dim)'],
  description: 'Compute the minimum value of a list of values.',
  examples: ['min(2, 3, 4, 1)', 'min([2, 3, 4, 1])', 'min([2, 5; 4, 3])', 'min([2, 5; 4, 3], 1)', 'min([2, 5; 4, 3], 2)', 'min(2.7, 7.1, -4.5, 2.0, 4.1)', 'max(2.7, 7.1, -4.5, 2.0, 4.1)'],
  seealso: ['max', 'mean', 'median', 'prod', 'std', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mode.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/mode.js ***!
  \*************************************************************************************/
/*! exports provided: modeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modeDocs", function() { return modeDocs; });
var modeDocs = {
  name: 'mode',
  category: 'Statistics',
  syntax: ['mode(a, b, c, ...)', 'mode(A)', 'mode(A, a, b, B, c, ...)'],
  description: 'Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.',
  examples: ['mode(2, 1, 4, 3, 1)', 'mode([1, 2.7, 3.2, 4, 2.7])', 'mode(1, 4, 6, 1, 6)'],
  seealso: ['max', 'mean', 'min', 'median', 'prod', 'std', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/prod.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/prod.js ***!
  \*************************************************************************************/
/*! exports provided: prodDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prodDocs", function() { return prodDocs; });
var prodDocs = {
  name: 'prod',
  category: 'Statistics',
  syntax: ['prod(a, b, c, ...)', 'prod(A)'],
  description: 'Compute the product of all values.',
  examples: ['prod(2, 3, 4)', 'prod([2, 3, 4])', 'prod([2, 5; 4, 3])'],
  seealso: ['max', 'mean', 'min', 'median', 'min', 'std', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js ***!
  \********************************************************************************************/
/*! exports provided: quantileSeqDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantileSeqDocs", function() { return quantileSeqDocs; });
var quantileSeqDocs = {
  name: 'quantileSeq',
  category: 'Statistics',
  syntax: ['quantileSeq(A, prob[, sorted])', 'quantileSeq(A, [prob1, prob2, ...][, sorted])', 'quantileSeq(A, N[, sorted])'],
  description: 'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',
  examples: ['quantileSeq([3, -1, 5, 7], 0.5)', 'quantileSeq([3, -1, 5, 7], [1/3, 2/3])', 'quantileSeq([3, -1, 5, 7], 2)', 'quantileSeq([-1, 3, 5, 7], 0.5, true)'],
  seealso: ['mean', 'median', 'min', 'max', 'prod', 'std', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/std.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/std.js ***!
  \************************************************************************************/
/*! exports provided: stdDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stdDocs", function() { return stdDocs; });
var stdDocs = {
  name: 'std',
  category: 'Statistics',
  syntax: ['std(a, b, c, ...)', 'std(A)', 'std(A, normalization)'],
  description: 'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
  examples: ['std(2, 4, 6)', 'std([2, 4, 6, 8])', 'std([2, 4, 6, 8], "uncorrected")', 'std([2, 4, 6, 8], "biased")', 'std([1, 2, 3; 4, 5, 6])'],
  seealso: ['max', 'mean', 'min', 'median', 'prod', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/sum.js":
/*!************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/sum.js ***!
  \************************************************************************************/
/*! exports provided: sumDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sumDocs", function() { return sumDocs; });
var sumDocs = {
  name: 'sum',
  category: 'Statistics',
  syntax: ['sum(a, b, c, ...)', 'sum(A)'],
  description: 'Compute the sum of all values.',
  examples: ['sum(2, 3, 4, 1)', 'sum([2, 3, 4, 1])', 'sum([2, 5; 4, 3])'],
  seealso: ['max', 'mean', 'median', 'min', 'prod', 'std', 'sum', 'variance']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/variance.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/statistics/variance.js ***!
  \*****************************************************************************************/
/*! exports provided: varianceDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "varianceDocs", function() { return varianceDocs; });
var varianceDocs = {
  name: 'variance',
  category: 'Statistics',
  syntax: ['variance(a, b, c, ...)', 'variance(A)', 'variance(A, normalization)'],
  description: 'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
  examples: ['variance(2, 4, 6)', 'variance([2, 4, 6, 8])', 'variance([2, 4, 6, 8], "uncorrected")', 'variance([2, 4, 6, 8], "biased")', 'variance([1, 2, 3; 4, 5, 6])'],
  seealso: ['max', 'mean', 'min', 'median', 'min', 'prod', 'std', 'sum']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acos.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acos.js ***!
  \***************************************************************************************/
/*! exports provided: acosDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acosDocs", function() { return acosDocs; });
var acosDocs = {
  name: 'acos',
  category: 'Trigonometry',
  syntax: ['acos(x)'],
  description: 'Compute the inverse cosine of a value in radians.',
  examples: ['acos(0.5)', 'acos(cos(2.3))'],
  seealso: ['cos', 'atan', 'asin']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acosh.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acosh.js ***!
  \****************************************************************************************/
/*! exports provided: acoshDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acoshDocs", function() { return acoshDocs; });
var acoshDocs = {
  name: 'acosh',
  category: 'Trigonometry',
  syntax: ['acosh(x)'],
  description: 'Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.',
  examples: ['acosh(1.5)'],
  seealso: ['cosh', 'asinh', 'atanh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acot.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acot.js ***!
  \***************************************************************************************/
/*! exports provided: acotDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acotDocs", function() { return acotDocs; });
var acotDocs = {
  name: 'acot',
  category: 'Trigonometry',
  syntax: ['acot(x)'],
  description: 'Calculate the inverse cotangent of a value.',
  examples: ['acot(0.5)', 'acot(cot(0.5))', 'acot(2)'],
  seealso: ['cot', 'atan']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acoth.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acoth.js ***!
  \****************************************************************************************/
/*! exports provided: acothDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acothDocs", function() { return acothDocs; });
var acothDocs = {
  name: 'acoth',
  category: 'Trigonometry',
  syntax: ['acoth(x)'],
  description: 'Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.',
  examples: ['acoth(2)', 'acoth(0.5)'],
  seealso: ['acsch', 'asech']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acsc.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acsc.js ***!
  \***************************************************************************************/
/*! exports provided: acscDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acscDocs", function() { return acscDocs; });
var acscDocs = {
  name: 'acsc',
  category: 'Trigonometry',
  syntax: ['acsc(x)'],
  description: 'Calculate the inverse cotangent of a value.',
  examples: ['acsc(2)', 'acsc(csc(0.5))', 'acsc(0.5)'],
  seealso: ['csc', 'asin', 'asec']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acsch.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/acsch.js ***!
  \****************************************************************************************/
/*! exports provided: acschDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acschDocs", function() { return acschDocs; });
var acschDocs = {
  name: 'acsch',
  category: 'Trigonometry',
  syntax: ['acsch(x)'],
  description: 'Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.',
  examples: ['acsch(0.5)'],
  seealso: ['asech', 'acoth']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asec.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asec.js ***!
  \***************************************************************************************/
/*! exports provided: asecDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asecDocs", function() { return asecDocs; });
var asecDocs = {
  name: 'asec',
  category: 'Trigonometry',
  syntax: ['asec(x)'],
  description: 'Calculate the inverse secant of a value.',
  examples: ['asec(0.5)', 'asec(sec(0.5))', 'asec(2)'],
  seealso: ['acos', 'acot', 'acsc']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asech.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asech.js ***!
  \****************************************************************************************/
/*! exports provided: asechDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asechDocs", function() { return asechDocs; });
var asechDocs = {
  name: 'asech',
  category: 'Trigonometry',
  syntax: ['asech(x)'],
  description: 'Calculate the inverse secant of a value.',
  examples: ['asech(0.5)'],
  seealso: ['acsch', 'acoth']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asin.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asin.js ***!
  \***************************************************************************************/
/*! exports provided: asinDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinDocs", function() { return asinDocs; });
var asinDocs = {
  name: 'asin',
  category: 'Trigonometry',
  syntax: ['asin(x)'],
  description: 'Compute the inverse sine of a value in radians.',
  examples: ['asin(0.5)', 'asin(sin(0.5))'],
  seealso: ['sin', 'acos', 'atan']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asinh.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/asinh.js ***!
  \****************************************************************************************/
/*! exports provided: asinhDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinhDocs", function() { return asinhDocs; });
var asinhDocs = {
  name: 'asinh',
  category: 'Trigonometry',
  syntax: ['asinh(x)'],
  description: 'Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.',
  examples: ['asinh(0.5)'],
  seealso: ['acosh', 'atanh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atan.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atan.js ***!
  \***************************************************************************************/
/*! exports provided: atanDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanDocs", function() { return atanDocs; });
var atanDocs = {
  name: 'atan',
  category: 'Trigonometry',
  syntax: ['atan(x)'],
  description: 'Compute the inverse tangent of a value in radians.',
  examples: ['atan(0.5)', 'atan(tan(0.5))'],
  seealso: ['tan', 'acos', 'asin']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atan2.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atan2.js ***!
  \****************************************************************************************/
/*! exports provided: atan2Docs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2Docs", function() { return atan2Docs; });
var atan2Docs = {
  name: 'atan2',
  category: 'Trigonometry',
  syntax: ['atan2(y, x)'],
  description: 'Computes the principal value of the arc tangent of y/x in radians.',
  examples: ['atan2(2, 2) / pi', 'angle = 60 deg in rad', 'x = cos(angle)', 'y = sin(angle)', 'atan2(y, x)'],
  seealso: ['sin', 'cos', 'tan']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atanh.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/atanh.js ***!
  \****************************************************************************************/
/*! exports provided: atanhDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanhDocs", function() { return atanhDocs; });
var atanhDocs = {
  name: 'atanh',
  category: 'Trigonometry',
  syntax: ['atanh(x)'],
  description: 'Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.',
  examples: ['atanh(0.5)'],
  seealso: ['acosh', 'asinh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cos.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cos.js ***!
  \**************************************************************************************/
/*! exports provided: cosDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cosDocs", function() { return cosDocs; });
var cosDocs = {
  name: 'cos',
  category: 'Trigonometry',
  syntax: ['cos(x)'],
  description: 'Compute the cosine of x in radians.',
  examples: ['cos(2)', 'cos(pi / 4) ^ 2', 'cos(180 deg)', 'cos(60 deg)', 'sin(0.2)^2 + cos(0.2)^2'],
  seealso: ['acos', 'sin', 'tan']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cosh.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cosh.js ***!
  \***************************************************************************************/
/*! exports provided: coshDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coshDocs", function() { return coshDocs; });
var coshDocs = {
  name: 'cosh',
  category: 'Trigonometry',
  syntax: ['cosh(x)'],
  description: 'Compute the hyperbolic cosine of x in radians.',
  examples: ['cosh(0.5)'],
  seealso: ['sinh', 'tanh', 'coth']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cot.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/cot.js ***!
  \**************************************************************************************/
/*! exports provided: cotDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cotDocs", function() { return cotDocs; });
var cotDocs = {
  name: 'cot',
  category: 'Trigonometry',
  syntax: ['cot(x)'],
  description: 'Compute the cotangent of x in radians. Defined as 1/tan(x)',
  examples: ['cot(2)', '1 / tan(2)'],
  seealso: ['sec', 'csc', 'tan']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/coth.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/coth.js ***!
  \***************************************************************************************/
/*! exports provided: cothDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cothDocs", function() { return cothDocs; });
var cothDocs = {
  name: 'coth',
  category: 'Trigonometry',
  syntax: ['coth(x)'],
  description: 'Compute the hyperbolic cotangent of x in radians.',
  examples: ['coth(2)', '1 / tanh(2)'],
  seealso: ['sech', 'csch', 'tanh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/csc.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/csc.js ***!
  \**************************************************************************************/
/*! exports provided: cscDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cscDocs", function() { return cscDocs; });
var cscDocs = {
  name: 'csc',
  category: 'Trigonometry',
  syntax: ['csc(x)'],
  description: 'Compute the cosecant of x in radians. Defined as 1/sin(x)',
  examples: ['csc(2)', '1 / sin(2)'],
  seealso: ['sec', 'cot', 'sin']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/csch.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/csch.js ***!
  \***************************************************************************************/
/*! exports provided: cschDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cschDocs", function() { return cschDocs; });
var cschDocs = {
  name: 'csch',
  category: 'Trigonometry',
  syntax: ['csch(x)'],
  description: 'Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)',
  examples: ['csch(2)', '1 / sinh(2)'],
  seealso: ['sech', 'coth', 'sinh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sec.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sec.js ***!
  \**************************************************************************************/
/*! exports provided: secDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "secDocs", function() { return secDocs; });
var secDocs = {
  name: 'sec',
  category: 'Trigonometry',
  syntax: ['sec(x)'],
  description: 'Compute the secant of x in radians. Defined as 1/cos(x)',
  examples: ['sec(2)', '1 / cos(2)'],
  seealso: ['cot', 'csc', 'cos']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sech.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sech.js ***!
  \***************************************************************************************/
/*! exports provided: sechDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sechDocs", function() { return sechDocs; });
var sechDocs = {
  name: 'sech',
  category: 'Trigonometry',
  syntax: ['sech(x)'],
  description: 'Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)',
  examples: ['sech(2)', '1 / cosh(2)'],
  seealso: ['coth', 'csch', 'cosh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sin.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sin.js ***!
  \**************************************************************************************/
/*! exports provided: sinDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinDocs", function() { return sinDocs; });
var sinDocs = {
  name: 'sin',
  category: 'Trigonometry',
  syntax: ['sin(x)'],
  description: 'Compute the sine of x in radians.',
  examples: ['sin(2)', 'sin(pi / 4) ^ 2', 'sin(90 deg)', 'sin(30 deg)', 'sin(0.2)^2 + cos(0.2)^2'],
  seealso: ['asin', 'cos', 'tan']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sinh.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/sinh.js ***!
  \***************************************************************************************/
/*! exports provided: sinhDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinhDocs", function() { return sinhDocs; });
var sinhDocs = {
  name: 'sinh',
  category: 'Trigonometry',
  syntax: ['sinh(x)'],
  description: 'Compute the hyperbolic sine of x in radians.',
  examples: ['sinh(0.5)'],
  seealso: ['cosh', 'tanh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/tan.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/tan.js ***!
  \**************************************************************************************/
/*! exports provided: tanDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanDocs", function() { return tanDocs; });
var tanDocs = {
  name: 'tan',
  category: 'Trigonometry',
  syntax: ['tan(x)'],
  description: 'Compute the tangent of x in radians.',
  examples: ['tan(0.5)', 'sin(0.5) / cos(0.5)', 'tan(pi / 4)', 'tan(45 deg)'],
  seealso: ['atan', 'sin', 'cos']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/tanh.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/trigonometry/tanh.js ***!
  \***************************************************************************************/
/*! exports provided: tanhDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanhDocs", function() { return tanhDocs; });
var tanhDocs = {
  name: 'tanh',
  category: 'Trigonometry',
  syntax: ['tanh(x)'],
  description: 'Compute the hyperbolic tangent of x in radians.',
  examples: ['tanh(0.5)', 'sinh(0.5) / cosh(0.5)'],
  seealso: ['sinh', 'cosh']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/units/to.js":
/*!******************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/units/to.js ***!
  \******************************************************************************/
/*! exports provided: toDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toDocs", function() { return toDocs; });
var toDocs = {
  name: 'to',
  category: 'Units',
  syntax: ['x to unit', 'to(x, unit)'],
  description: 'Change the unit of a value.',
  examples: ['5 inch to cm', '3.2kg to g', '16 bytes in bits'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/clone.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/clone.js ***!
  \*********************************************************************************/
/*! exports provided: cloneDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneDocs", function() { return cloneDocs; });
var cloneDocs = {
  name: 'clone',
  category: 'Utils',
  syntax: ['clone(x)'],
  description: 'Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices',
  examples: ['clone(3.5)', 'clone(2 - 4i)', 'clone(45 deg)', 'clone([1, 2; 3, 4])', 'clone("hello world")'],
  seealso: []
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/format.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/format.js ***!
  \**********************************************************************************/
/*! exports provided: formatDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDocs", function() { return formatDocs; });
var formatDocs = {
  name: 'format',
  category: 'Utils',
  syntax: ['format(value)', 'format(value, precision)'],
  description: 'Format a value of any type as string.',
  examples: ['format(2.3)', 'format(3 - 4i)', 'format([])', 'format(pi, 3)'],
  seealso: ['print']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/hasNumericValue.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/hasNumericValue.js ***!
  \*******************************************************************************************/
/*! exports provided: hasNumericValueDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasNumericValueDocs", function() { return hasNumericValueDocs; });
var hasNumericValueDocs = {
  name: 'hasNumericValue',
  category: 'Utils',
  syntax: ['hasNumericValue(x)'],
  description: 'Test whether a value is an numeric value. ' + 'In case of a string, true is returned if the string contains a numeric value.',
  examples: ['hasNumericValue(2)', 'hasNumericValue("2")', 'isNumeric("2")', 'hasNumericValue(0)', 'hasNumericValue(bignumber(500))', 'hasNumericValue(fraction(0.125))', 'hasNumericValue(2 + 3i)', 'hasNumericValue([2.3, "foo", false])'],
  seealso: ['isInteger', 'isZero', 'isNegative', 'isPositive', 'isNaN', 'isNumeric']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isInteger.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isInteger.js ***!
  \*************************************************************************************/
/*! exports provided: isIntegerDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIntegerDocs", function() { return isIntegerDocs; });
var isIntegerDocs = {
  name: 'isInteger',
  category: 'Utils',
  syntax: ['isInteger(x)'],
  description: 'Test whether a value is an integer number.',
  examples: ['isInteger(2)', 'isInteger(3.5)', 'isInteger([3, 0.5, -2])'],
  seealso: ['isNegative', 'isNumeric', 'isPositive', 'isZero']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNaN.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNaN.js ***!
  \*********************************************************************************/
/*! exports provided: isNaNDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNaNDocs", function() { return isNaNDocs; });
var isNaNDocs = {
  name: 'isNaN',
  category: 'Utils',
  syntax: ['isNaN(x)'],
  description: 'Test whether a value is NaN (not a number)',
  examples: ['isNaN(2)', 'isNaN(0 / 0)', 'isNaN(NaN)', 'isNaN(Infinity)'],
  seealso: ['isNegative', 'isNumeric', 'isPositive', 'isZero']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNegative.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNegative.js ***!
  \**************************************************************************************/
/*! exports provided: isNegativeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNegativeDocs", function() { return isNegativeDocs; });
var isNegativeDocs = {
  name: 'isNegative',
  category: 'Utils',
  syntax: ['isNegative(x)'],
  description: 'Test whether a value is negative: smaller than zero.',
  examples: ['isNegative(2)', 'isNegative(0)', 'isNegative(-4)', 'isNegative([3, 0.5, -2])'],
  seealso: ['isInteger', 'isNumeric', 'isPositive', 'isZero']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNumeric.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isNumeric.js ***!
  \*************************************************************************************/
/*! exports provided: isNumericDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumericDocs", function() { return isNumericDocs; });
var isNumericDocs = {
  name: 'isNumeric',
  category: 'Utils',
  syntax: ['isNumeric(x)'],
  description: 'Test whether a value is a numeric value. ' + 'Returns true when the input is a number, BigNumber, Fraction, or boolean.',
  examples: ['isNumeric(2)', 'isNumeric("2")', 'hasNumericValue("2")', 'isNumeric(0)', 'isNumeric(bignumber(500))', 'isNumeric(fraction(0.125))', 'isNumeric(2 + 3i)', 'isNumeric([2.3, "foo", false])'],
  seealso: ['isInteger', 'isZero', 'isNegative', 'isPositive', 'isNaN', 'hasNumericValue']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isPositive.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isPositive.js ***!
  \**************************************************************************************/
/*! exports provided: isPositiveDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPositiveDocs", function() { return isPositiveDocs; });
var isPositiveDocs = {
  name: 'isPositive',
  category: 'Utils',
  syntax: ['isPositive(x)'],
  description: 'Test whether a value is positive: larger than zero.',
  examples: ['isPositive(2)', 'isPositive(0)', 'isPositive(-4)', 'isPositive([3, 0.5, -2])'],
  seealso: ['isInteger', 'isNumeric', 'isNegative', 'isZero']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isPrime.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isPrime.js ***!
  \***********************************************************************************/
/*! exports provided: isPrimeDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrimeDocs", function() { return isPrimeDocs; });
var isPrimeDocs = {
  name: 'isPrime',
  category: 'Utils',
  syntax: ['isPrime(x)'],
  description: 'Test whether a value is prime: has no divisors other than itself and one.',
  examples: ['isPrime(3)', 'isPrime(-2)', 'isPrime([2, 17, 100])'],
  seealso: ['isInteger', 'isNumeric', 'isNegative', 'isZero']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isZero.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/isZero.js ***!
  \**********************************************************************************/
/*! exports provided: isZeroDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isZeroDocs", function() { return isZeroDocs; });
var isZeroDocs = {
  name: 'isZero',
  category: 'Utils',
  syntax: ['isZero(x)'],
  description: 'Test whether a value is zero.',
  examples: ['isZero(2)', 'isZero(0)', 'isZero(-4)', 'isZero([3, 0, -2, 0])'],
  seealso: ['isInteger', 'isNumeric', 'isNegative', 'isPositive']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/numeric.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/numeric.js ***!
  \***********************************************************************************/
/*! exports provided: numericDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numericDocs", function() { return numericDocs; });
var numericDocs = {
  name: 'numeric',
  category: 'Utils',
  syntax: ['numeric(x)'],
  description: 'Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.',
  examples: ['numeric("4")', 'numeric("4", "number")', 'numeric("4", "BigNumber")', 'numeric("4", "Fraction)', 'numeric(4, "Fraction")', 'numeric(fraction(2, 5), "number)'],
  seealso: ['number', 'fraction', 'bignumber', 'string', 'format']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/embeddedDocs/function/utils/typeOf.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/embeddedDocs/function/utils/typeOf.js ***!
  \**********************************************************************************/
/*! exports provided: typeOfDocs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeOfDocs", function() { return typeOfDocs; });
var typeOfDocs = {
  name: 'typeOf',
  category: 'Utils',
  syntax: ['typeOf(x)'],
  description: 'Get the type of a variable.',
  examples: ['typeOf(3.5)', 'typeOf(2 - 4i)', 'typeOf(45 deg)', 'typeOf("hello world")'],
  seealso: ['getMatrixDataType']
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/function/compile.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/function/compile.js ***!
  \****************************************************************/
/*! exports provided: createCompile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCompile", function() { return createCompile; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'compile';
var dependencies = ['typed', 'parse'];
var createCompile = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      parse = _ref.parse;

  /**
   * Parse and compile an expression.
   * Returns a an object with a function `evaluate([scope])` to evaluate the
   * compiled expression.
   *
   * Syntax:
   *
   *     math.compile(expr)                       // returns one node
   *     math.compile([expr1, expr2, expr3, ...]) // returns an array with nodes
   *
   * Examples:
   *
   *     const code1 = math.compile('sqrt(3^2 + 4^2)')
   *     code1.evaluate() // 5
   *
   *     let scope = {a: 3, b: 4}
   *     const code2 = math.compile('a * b') // 12
   *     code2.evaluate(scope) // 12
   *     scope.a = 5
   *     code2.evaluate(scope) // 20
   *
   *     const nodes = math.compile(['a = 3', 'b = 4', 'a * b'])
   *     nodes[2].evaluate() // 12
   *
   * See also:
   *
   *    parse, evaluate
   *
   * @param {string | string[] | Array | Matrix} expr
   *            The expression to be compiled
   * @return {{evaluate: Function} | Array.<{evaluate: Function}>} code
   *            An object with the compiled expression
   * @throws {Error}
   */
  return typed(name, {
    string: function string(expr) {
      return parse(expr).compile();
    },
    'Array | Matrix': function ArrayMatrix(expr) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(expr, function (entry) {
        return parse(entry).compile();
      });
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/function/evaluate.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/function/evaluate.js ***!
  \*****************************************************************/
/*! exports provided: createEvaluate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEvaluate", function() { return createEvaluate; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'evaluate';
var dependencies = ['typed', 'parse'];
var createEvaluate = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      parse = _ref.parse;

  /**
   * Evaluate an expression.
   *
   * Note the evaluating arbitrary expressions may involve security risks,
   * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.
   *
   * Syntax:
   *
   *     math.evaluate(expr)
   *     math.evaluate(expr, scope)
   *     math.evaluate([expr1, expr2, expr3, ...])
   *     math.evaluate([expr1, expr2, expr3, ...], scope)
   *
   * Example:
   *
   *     math.evaluate('(2+3)/4')                // 1.25
   *     math.evaluate('sqrt(3^2 + 4^2)')        // 5
   *     math.evaluate('sqrt(-4)')               // 2i
   *     math.evaluate(['a=3', 'b=4', 'a*b'])    // [3, 4, 12]
   *
   *     let scope = {a:3, b:4}
   *     math.evaluate('a * b', scope)           // 12
   *
   * See also:
   *
   *    parse, compile
   *
   * @param {string | string[] | Matrix} expr   The expression to be evaluated
   * @param {Object} [scope]                    Scope to read/write variables
   * @return {*} The result of the expression
   * @throws {Error}
   */
  return typed(name, {
    string: function string(expr) {
      var scope = {};
      return parse(expr).compile().evaluate(scope);
    },
    'string, Object': function stringObject(expr, scope) {
      return parse(expr).compile().evaluate(scope);
    },
    'Array | Matrix': function ArrayMatrix(expr) {
      var scope = {};
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(expr, function (entry) {
        return parse(entry).compile().evaluate(scope);
      });
    },
    'Array | Matrix, Object': function ArrayMatrixObject(expr, scope) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(expr, function (entry) {
        return parse(entry).compile().evaluate(scope);
      });
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/function/help.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/function/help.js ***!
  \*************************************************************/
/*! exports provided: createHelp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createHelp", function() { return createHelp; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _embeddedDocs_embeddedDocs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../embeddedDocs/embeddedDocs */ "../node_modules/mathjs/es/expression/embeddedDocs/embeddedDocs.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");




var name = 'help';
var dependencies = ['typed', 'mathWithTransform', 'Help'];
var createHelp = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      mathWithTransform = _ref.mathWithTransform,
      Help = _ref.Help;

  /**
   * Retrieve help on a function or data type.
   * Help files are retrieved from the embedded documentation in math.docs.
   *
   * Syntax:
   *
   *    math.help(search)
   *
   * Examples:
   *
   *    console.log(math.help('sin').toString())
   *    console.log(math.help(math.add).toString())
   *    console.log(math.help(math.add).toJSON())
   *
   * @param {Function | string | Object} search   A function or function name
   *                                              for which to get help
   * @return {Help} A help object
   */
  return typed(name, {
    any: function any(search) {
      var prop;
      var searchName = search;

      if (typeof search !== 'string') {
        for (prop in mathWithTransform) {
          // search in functions and constants
          if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(mathWithTransform, prop) && search === mathWithTransform[prop]) {
            searchName = prop;
            break;
          }
        }
        /* TODO: implement help for data types
         if (!text) {
         // search data type
         for (prop in math.type) {
         if (hasOwnProperty(math, prop)) {
         if (search === math.type[prop]) {
         text = prop
         break
         }
         }
         }
         }
         */

      }

      var doc = Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["getSafeProperty"])(_embeddedDocs_embeddedDocs__WEBPACK_IMPORTED_MODULE_2__["embeddedDocs"], searchName);

      if (!doc) {
        var searchText = typeof searchName === 'function' ? searchName.name : searchName;
        throw new Error('No documentation found on "' + searchText + '"');
      }

      return new Help(doc);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/function/parser.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/function/parser.js ***!
  \***************************************************************/
/*! exports provided: createParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createParser", function() { return createParser; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'parser';
var dependencies = ['typed', 'Parser'];
var createParser = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Parser = _ref.Parser;

  /**
   * Create a parser. The function creates a new `math.Parser` object.
   *
   * Syntax:
   *
   *    math.parser()
   *
   * Examples:
   *
   *     const parser = new math.parser()
   *
   *     // evaluate expressions
   *     const a = parser.evaluate('sqrt(3^2 + 4^2)') // 5
   *     const b = parser.evaluate('sqrt(-4)')        // 2i
   *     const c = parser.evaluate('2 inch in cm')    // 5.08 cm
   *     const d = parser.evaluate('cos(45 deg)')     // 0.7071067811865476
   *
   *     // define variables and functions
   *     parser.evaluate('x = 7 / 2')                 // 3.5
   *     parser.evaluate('x + 3')                     // 6.5
   *     parser.evaluate('function f(x, y) = x^y')    // f(x, y)
   *     parser.evaluate('f(2, 3)')                   // 8
   *
   *     // get and set variables and functions
   *     const x = parser.get('x')                // 7
   *     const f = parser.get('f')                // function
   *     const g = f(3, 2)                        // 9
   *     parser.set('h', 500)
   *     const i = parser.evaluate('h / 2')       // 250
   *     parser.set('hello', function (name) {
   *       return 'hello, ' + name + '!'
   *     })
   *     parser.evaluate('hello("user")')         // "hello, user!"
   *
   *     // clear defined functions and variables
   *     parser.clear()
   *
   * See also:
   *
   *    evaluate, compile, parse
   *
   * @return {Parser} Parser
   */
  return typed(name, {
    '': function _() {
      return new Parser();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/keywords.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/expression/keywords.js ***!
  \********************************************************/
/*! exports provided: keywords */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keywords", function() { return keywords; });
// Reserved keywords not allowed to use in the parser
var keywords = {
  end: true
};

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/AccessorNode.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/AccessorNode.js ***!
  \*****************************************************************/
/*! exports provided: createAccessorNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAccessorNode", function() { return createAccessorNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_access__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/access */ "../node_modules/mathjs/es/expression/node/utils/access.js");




var name = 'AccessorNode';
var dependencies = ['subset', 'Node'];
var createAccessorNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var subset = _ref.subset,
      Node = _ref.Node;
  var access = Object(_utils_access__WEBPACK_IMPORTED_MODULE_3__["accessFactory"])({
    subset: subset
  });
  /**
   * @constructor AccessorNode
   * @extends {Node}
   * Access an object property or get a matrix subset
   *
   * @param {Node} object                 The object from which to retrieve
   *                                      a property or subset.
   * @param {IndexNode} index             IndexNode containing ranges
   */

  function AccessorNode(object, index) {
    if (!(this instanceof AccessorNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(object)) {
      throw new TypeError('Node expected for parameter "object"');
    }

    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndexNode"])(index)) {
      throw new TypeError('IndexNode expected for parameter "index"');
    }

    this.object = object || null;
    this.index = index; // readonly property name

    Object.defineProperty(this, 'name', {
      get: function () {
        if (this.index) {
          return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';
        } else {
          return this.object.name || '';
        }
      }.bind(this),
      set: function set() {
        throw new Error('Cannot assign a new name, name is read-only');
      }
    });
  }

  AccessorNode.prototype = new Node();
  AccessorNode.prototype.type = 'AccessorNode';
  AccessorNode.prototype.isAccessorNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  AccessorNode.prototype._compile = function (math, argNames) {
    var evalObject = this.object._compile(math, argNames);

    var evalIndex = this.index._compile(math, argNames);

    if (this.index.isObjectProperty()) {
      var prop = this.index.getObjectProperty();
      return function evalAccessorNode(scope, args, context) {
        return Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["getSafeProperty"])(evalObject(scope, args, context), prop);
      };
    } else {
      return function evalAccessorNode(scope, args, context) {
        var object = evalObject(scope, args, context);
        var index = evalIndex(scope, args, object); // we pass object here instead of context

        return access(object, index);
      };
    }
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  AccessorNode.prototype.forEach = function (callback) {
    callback(this.object, 'object', this);
    callback(this.index, 'index', this);
  };
  /**
   * Create a new AccessorNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {AccessorNode} Returns a transformed copy of the node
   */


  AccessorNode.prototype.map = function (callback) {
    return new AccessorNode(this._ifNode(callback(this.object, 'object', this)), this._ifNode(callback(this.index, 'index', this)));
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {AccessorNode}
   */


  AccessorNode.prototype.clone = function () {
    return new AccessorNode(this.object, this.index);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string}
   */


  AccessorNode.prototype._toString = function (options) {
    var object = this.object.toString(options);

    if (needParenthesis(this.object)) {
      object = '(' + object + ')';
    }

    return object + this.index.toString(options);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string}
   */


  AccessorNode.prototype.toHTML = function (options) {
    var object = this.object.toHTML(options);

    if (needParenthesis(this.object)) {
      object = '<span class="math-parenthesis math-round-parenthesis">(</span>' + object + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    return object + this.index.toHTML(options);
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string}
   */


  AccessorNode.prototype._toTex = function (options) {
    var object = this.object.toTex(options);

    if (needParenthesis(this.object)) {
      object = '\\left(\' + object + \'\\right)';
    }

    return object + this.index.toTex(options);
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  AccessorNode.prototype.toJSON = function () {
    return {
      mathjs: 'AccessorNode',
      object: this.object,
      index: this.index
    };
  };
  /**
   * Instantiate an AccessorNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "AccessorNode", object: ..., index: ...}`,
   *                       where mathjs is optional
   * @returns {AccessorNode}
   */


  AccessorNode.fromJSON = function (json) {
    return new AccessorNode(json.object, json.index);
  };
  /**
   * Are parenthesis needed?
   * @private
   */


  function needParenthesis(node) {
    // TODO: maybe make a method on the nodes which tells whether they need parenthesis?
    return !(Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isAccessorNode"])(node) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArrayNode"])(node) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(node) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionNode"])(node) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isObjectNode"])(node) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"])(node) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(node));
  }

  return AccessorNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/ArrayNode.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/ArrayNode.js ***!
  \**************************************************************/
/*! exports provided: createArrayNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createArrayNode", function() { return createArrayNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'ArrayNode';
var dependencies = ['Node'];
var createArrayNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * @constructor ArrayNode
   * @extends {Node}
   * Holds an 1-dimensional array with items
   * @param {Node[]} [items]   1 dimensional array with items
   */
  function ArrayNode(items) {
    if (!(this instanceof ArrayNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this.items = items || []; // validate input

    if (!Array.isArray(this.items) || !this.items.every(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])) {
      throw new TypeError('Array containing Nodes expected');
    }
  }

  ArrayNode.prototype = new Node();
  ArrayNode.prototype.type = 'ArrayNode';
  ArrayNode.prototype.isArrayNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  ArrayNode.prototype._compile = function (math, argNames) {
    var evalItems = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(this.items, function (item) {
      return item._compile(math, argNames);
    });
    var asMatrix = math.config.matrix !== 'Array';

    if (asMatrix) {
      var matrix = math.matrix;
      return function evalArrayNode(scope, args, context) {
        return matrix(Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(evalItems, function (evalItem) {
          return evalItem(scope, args, context);
        }));
      };
    } else {
      return function evalArrayNode(scope, args, context) {
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(evalItems, function (evalItem) {
          return evalItem(scope, args, context);
        });
      };
    }
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  ArrayNode.prototype.forEach = function (callback) {
    for (var i = 0; i < this.items.length; i++) {
      var node = this.items[i];
      callback(node, 'items[' + i + ']', this);
    }
  };
  /**
   * Create a new ArrayNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {ArrayNode} Returns a transformed copy of the node
   */


  ArrayNode.prototype.map = function (callback) {
    var items = [];

    for (var i = 0; i < this.items.length; i++) {
      items[i] = this._ifNode(callback(this.items[i], 'items[' + i + ']', this));
    }

    return new ArrayNode(items);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {ArrayNode}
   */


  ArrayNode.prototype.clone = function () {
    return new ArrayNode(this.items.slice(0));
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  ArrayNode.prototype._toString = function (options) {
    var items = this.items.map(function (node) {
      return node.toString(options);
    });
    return '[' + items.join(', ') + ']';
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  ArrayNode.prototype.toJSON = function () {
    return {
      mathjs: 'ArrayNode',
      items: this.items
    };
  };
  /**
   * Instantiate an ArrayNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "ArrayNode", items: [...]}`,
   *                       where mathjs is optional
   * @returns {ArrayNode}
   */


  ArrayNode.fromJSON = function (json) {
    return new ArrayNode(json.items);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  ArrayNode.prototype.toHTML = function (options) {
    var items = this.items.map(function (node) {
      return node.toHTML(options);
    });
    return '<span class="math-parenthesis math-square-parenthesis">[</span>' + items.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-square-parenthesis">]</span>';
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  ArrayNode.prototype._toTex = function (options) {
    var s = '\\begin{bmatrix}';
    this.items.forEach(function (node) {
      if (node.items) {
        s += node.items.map(function (childNode) {
          return childNode.toTex(options);
        }).join('&');
      } else {
        s += node.toTex(options);
      } // new line


      s += '\\\\';
    });
    s += '\\end{bmatrix}';
    return s;
  };

  return ArrayNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/AssignmentNode.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/AssignmentNode.js ***!
  \*******************************************************************/
/*! exports provided: createAssignmentNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAssignmentNode", function() { return createAssignmentNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_access__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/access */ "../node_modules/mathjs/es/expression/node/utils/access.js");
/* harmony import */ var _utils_assign__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/assign */ "../node_modules/mathjs/es/expression/node/utils/assign.js");
/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operators */ "../node_modules/mathjs/es/expression/operators.js");






var name = 'AssignmentNode';
var dependencies = ['subset', '?matrix', // FIXME: should not be needed at all, should be handled by subset
'Node'];
var createAssignmentNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var subset = _ref.subset,
      matrix = _ref.matrix,
      Node = _ref.Node;
  var access = Object(_utils_access__WEBPACK_IMPORTED_MODULE_3__["accessFactory"])({
    subset: subset
  });
  var assign = Object(_utils_assign__WEBPACK_IMPORTED_MODULE_4__["assignFactory"])({
    subset: subset,
    matrix: matrix
  });
  /**
   * @constructor AssignmentNode
   * @extends {Node}
   *
   * Define a symbol, like `a=3.2`, update a property like `a.b=3.2`, or
   * replace a subset of a matrix like `A[2,2]=42`.
   *
   * Syntax:
   *
   *     new AssignmentNode(symbol, value)
   *     new AssignmentNode(object, index, value)
   *
   * Usage:
   *
   *    new AssignmentNode(new SymbolNode('a'), new ConstantNode(2))                       // a=2
   *    new AssignmentNode(new SymbolNode('a'), new IndexNode('b'), new ConstantNode(2))   // a.b=2
   *    new AssignmentNode(new SymbolNode('a'), new IndexNode(1, 2), new ConstantNode(3))  // a[1,2]=3
   *
   * @param {SymbolNode | AccessorNode} object  Object on which to assign a value
   * @param {IndexNode} [index=null]            Index, property name or matrix
   *                                            index. Optional. If not provided
   *                                            and `object` is a SymbolNode,
   *                                            the property is assigned to the
   *                                            global scope.
   * @param {Node} value                        The value to be assigned
   */

  function AssignmentNode(object, index, value) {
    if (!(this instanceof AssignmentNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this.object = object;
    this.index = value ? index : null;
    this.value = value || index; // validate input

    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(object) && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isAccessorNode"])(object)) {
      throw new TypeError('SymbolNode or AccessorNode expected as "object"');
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(object) && object.name === 'end') {
      throw new Error('Cannot assign to symbol "end"');
    }

    if (this.index && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndexNode"])(this.index)) {
      // index is optional
      throw new TypeError('IndexNode expected as "index"');
    }

    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(this.value)) {
      throw new TypeError('Node expected as "value"');
    } // readonly property name


    Object.defineProperty(this, 'name', {
      get: function () {
        if (this.index) {
          return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';
        } else {
          return this.object.name || '';
        }
      }.bind(this),
      set: function set() {
        throw new Error('Cannot assign a new name, name is read-only');
      }
    });
  }

  AssignmentNode.prototype = new Node();
  AssignmentNode.prototype.type = 'AssignmentNode';
  AssignmentNode.prototype.isAssignmentNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  AssignmentNode.prototype._compile = function (math, argNames) {
    var evalObject = this.object._compile(math, argNames);

    var evalIndex = this.index ? this.index._compile(math, argNames) : null;

    var evalValue = this.value._compile(math, argNames);

    var name = this.object.name;

    if (!this.index) {
      // apply a variable to the scope, for example `a=2`
      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(this.object)) {
        throw new TypeError('SymbolNode expected as object');
      }

      return function evalAssignmentNode(scope, args, context) {
        return Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["setSafeProperty"])(scope, name, evalValue(scope, args, context));
      };
    } else if (this.index.isObjectProperty()) {
      // apply an object property for example `a.b=2`
      var prop = this.index.getObjectProperty();
      return function evalAssignmentNode(scope, args, context) {
        var object = evalObject(scope, args, context);
        var value = evalValue(scope, args, context);
        return Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["setSafeProperty"])(object, prop, value);
      };
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(this.object)) {
      // update a matrix subset, for example `a[2]=3`
      return function evalAssignmentNode(scope, args, context) {
        var childObject = evalObject(scope, args, context);
        var value = evalValue(scope, args, context);
        var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context

        Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["setSafeProperty"])(scope, name, assign(childObject, index, value));
        return value;
      };
    } else {
      // isAccessorNode(node.object) === true
      // update a matrix subset, for example `a.b[2]=3`
      // we will not use the compile function of the AccessorNode, but compile it
      // ourselves here as we need the parent object of the AccessorNode:
      // wee need to apply the updated object to parent object
      var evalParentObject = this.object.object._compile(math, argNames);

      if (this.object.index.isObjectProperty()) {
        var parentProp = this.object.index.getObjectProperty();
        return function evalAssignmentNode(scope, args, context) {
          var parent = evalParentObject(scope, args, context);
          var childObject = Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["getSafeProperty"])(parent, parentProp);
          var index = evalIndex(scope, args, childObject); // Important: we pass childObject instead of context

          var value = evalValue(scope, args, context);
          Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["setSafeProperty"])(parent, parentProp, assign(childObject, index, value));
          return value;
        };
      } else {
        // if some parameters use the 'end' parameter, we need to calculate the size
        var evalParentIndex = this.object.index._compile(math, argNames);

        return function evalAssignmentNode(scope, args, context) {
          var parent = evalParentObject(scope, args, context);
          var parentIndex = evalParentIndex(scope, args, parent); // Important: we pass parent instead of context

          var childObject = access(parent, parentIndex);
          var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context

          var value = evalValue(scope, args, context);
          assign(parent, parentIndex, assign(childObject, index, value));
          return value;
        };
      }
    }
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  AssignmentNode.prototype.forEach = function (callback) {
    callback(this.object, 'object', this);

    if (this.index) {
      callback(this.index, 'index', this);
    }

    callback(this.value, 'value', this);
  };
  /**
   * Create a new AssignmentNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {AssignmentNode} Returns a transformed copy of the node
   */


  AssignmentNode.prototype.map = function (callback) {
    var object = this._ifNode(callback(this.object, 'object', this));

    var index = this.index ? this._ifNode(callback(this.index, 'index', this)) : null;

    var value = this._ifNode(callback(this.value, 'value', this));

    return new AssignmentNode(object, index, value);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {AssignmentNode}
   */


  AssignmentNode.prototype.clone = function () {
    return new AssignmentNode(this.object, this.index, this.value);
  };
  /*
   * Is parenthesis needed?
   * @param {node} node
   * @param {string} [parenthesis='keep']
   * @private
   */


  function needParenthesis(node, parenthesis) {
    if (!parenthesis) {
      parenthesis = 'keep';
    }

    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_5__["getPrecedence"])(node, parenthesis);
    var exprPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_5__["getPrecedence"])(node.value, parenthesis);
    return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;
  }
  /**
   * Get string representation
   * @param {Object} options
   * @return {string}
   */


  AssignmentNode.prototype._toString = function (options) {
    var object = this.object.toString(options);
    var index = this.index ? this.index.toString(options) : '';
    var value = this.value.toString(options);

    if (needParenthesis(this, options && options.parenthesis)) {
      value = '(' + value + ')';
    }

    return object + index + ' = ' + value;
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  AssignmentNode.prototype.toJSON = function () {
    return {
      mathjs: 'AssignmentNode',
      object: this.object,
      index: this.index,
      value: this.value
    };
  };
  /**
   * Instantiate an AssignmentNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "AssignmentNode", object: ..., index: ..., value: ...}`,
   *                       where mathjs is optional
   * @returns {AssignmentNode}
   */


  AssignmentNode.fromJSON = function (json) {
    return new AssignmentNode(json.object, json.index, json.value);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string}
   */


  AssignmentNode.prototype.toHTML = function (options) {
    var object = this.object.toHTML(options);
    var index = this.index ? this.index.toHTML(options) : '';
    var value = this.value.toHTML(options);

    if (needParenthesis(this, options && options.parenthesis)) {
      value = '<span class="math-paranthesis math-round-parenthesis">(</span>' + value + '<span class="math-paranthesis math-round-parenthesis">)</span>';
    }

    return object + index + '<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' + value;
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string}
   */


  AssignmentNode.prototype._toTex = function (options) {
    var object = this.object.toTex(options);
    var index = this.index ? this.index.toTex(options) : '';
    var value = this.value.toTex(options);

    if (needParenthesis(this, options && options.parenthesis)) {
      value = "\\left(".concat(value, "\\right)");
    }

    return object + index + ':=' + value;
  };

  return AssignmentNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/BlockNode.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/BlockNode.js ***!
  \**************************************************************/
/*! exports provided: createBlockNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBlockNode", function() { return createBlockNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'BlockNode';
var dependencies = ['ResultSet', 'Node'];
var createBlockNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var ResultSet = _ref.ResultSet,
      Node = _ref.Node;

  /**
   * @constructor BlockNode
   * @extends {Node}
   * Holds a set with blocks
   * @param {Array.<{node: Node} | {node: Node, visible: boolean}>} blocks
   *            An array with blocks, where a block is constructed as an Object
   *            with properties block, which is a Node, and visible, which is
   *            a boolean. The property visible is optional and is true by default
   */
  function BlockNode(blocks) {
    if (!(this instanceof BlockNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // validate input, copy blocks


    if (!Array.isArray(blocks)) throw new Error('Array expected');
    this.blocks = blocks.map(function (block) {
      var node = block && block.node;
      var visible = block && block.visible !== undefined ? block.visible : true;
      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(node)) throw new TypeError('Property "node" must be a Node');
      if (typeof visible !== 'boolean') throw new TypeError('Property "visible" must be a boolean');
      return {
        node: node,
        visible: visible
      };
    });
  }

  BlockNode.prototype = new Node();
  BlockNode.prototype.type = 'BlockNode';
  BlockNode.prototype.isBlockNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  BlockNode.prototype._compile = function (math, argNames) {
    var evalBlocks = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(this.blocks, function (block) {
      return {
        evaluate: block.node._compile(math, argNames),
        visible: block.visible
      };
    });
    return function evalBlockNodes(scope, args, context) {
      var results = [];
      Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["forEach"])(evalBlocks, function evalBlockNode(block) {
        var result = block.evaluate(scope, args, context);

        if (block.visible) {
          results.push(result);
        }
      });
      return new ResultSet(results);
    };
  };
  /**
   * Execute a callback for each of the child blocks of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  BlockNode.prototype.forEach = function (callback) {
    for (var i = 0; i < this.blocks.length; i++) {
      callback(this.blocks[i].node, 'blocks[' + i + '].node', this);
    }
  };
  /**
   * Create a new BlockNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {BlockNode} Returns a transformed copy of the node
   */


  BlockNode.prototype.map = function (callback) {
    var blocks = [];

    for (var i = 0; i < this.blocks.length; i++) {
      var block = this.blocks[i];

      var node = this._ifNode(callback(block.node, 'blocks[' + i + '].node', this));

      blocks[i] = {
        node: node,
        visible: block.visible
      };
    }

    return new BlockNode(blocks);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {BlockNode}
   */


  BlockNode.prototype.clone = function () {
    var blocks = this.blocks.map(function (block) {
      return {
        node: block.node,
        visible: block.visible
      };
    });
    return new BlockNode(blocks);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  BlockNode.prototype._toString = function (options) {
    return this.blocks.map(function (param) {
      return param.node.toString(options) + (param.visible ? '' : ';');
    }).join('\n');
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  BlockNode.prototype.toJSON = function () {
    return {
      mathjs: 'BlockNode',
      blocks: this.blocks
    };
  };
  /**
   * Instantiate an BlockNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "BlockNode", blocks: [{node: ..., visible: false}, ...]}`,
   *                       where mathjs is optional
   * @returns {BlockNode}
   */


  BlockNode.fromJSON = function (json) {
    return new BlockNode(json.blocks);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  BlockNode.prototype.toHTML = function (options) {
    return this.blocks.map(function (param) {
      return param.node.toHTML(options) + (param.visible ? '' : '<span class="math-separator">;</span>');
    }).join('<span class="math-separator"><br /></span>');
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  BlockNode.prototype._toTex = function (options) {
    return this.blocks.map(function (param) {
      return param.node.toTex(options) + (param.visible ? '' : ';');
    }).join('\\;\\;\n');
  };

  return BlockNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/ConditionalNode.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/ConditionalNode.js ***!
  \********************************************************************/
/*! exports provided: createConditionalNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConditionalNode", function() { return createConditionalNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators */ "../node_modules/mathjs/es/expression/operators.js");



var name = 'ConditionalNode';
var dependencies = ['Node'];
var createConditionalNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * A lazy evaluating conditional operator: 'condition ? trueExpr : falseExpr'
   *
   * @param {Node} condition   Condition, must result in a boolean
   * @param {Node} trueExpr    Expression evaluated when condition is true
   * @param {Node} falseExpr   Expression evaluated when condition is true
   *
   * @constructor ConditionalNode
   * @extends {Node}
   */
  function ConditionalNode(condition, trueExpr, falseExpr) {
    if (!(this instanceof ConditionalNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(condition)) throw new TypeError('Parameter condition must be a Node');
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(trueExpr)) throw new TypeError('Parameter trueExpr must be a Node');
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(falseExpr)) throw new TypeError('Parameter falseExpr must be a Node');
    this.condition = condition;
    this.trueExpr = trueExpr;
    this.falseExpr = falseExpr;
  }

  ConditionalNode.prototype = new Node();
  ConditionalNode.prototype.type = 'ConditionalNode';
  ConditionalNode.prototype.isConditionalNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  ConditionalNode.prototype._compile = function (math, argNames) {
    var evalCondition = this.condition._compile(math, argNames);

    var evalTrueExpr = this.trueExpr._compile(math, argNames);

    var evalFalseExpr = this.falseExpr._compile(math, argNames);

    return function evalConditionalNode(scope, args, context) {
      return testCondition(evalCondition(scope, args, context)) ? evalTrueExpr(scope, args, context) : evalFalseExpr(scope, args, context);
    };
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  ConditionalNode.prototype.forEach = function (callback) {
    callback(this.condition, 'condition', this);
    callback(this.trueExpr, 'trueExpr', this);
    callback(this.falseExpr, 'falseExpr', this);
  };
  /**
   * Create a new ConditionalNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {ConditionalNode} Returns a transformed copy of the node
   */


  ConditionalNode.prototype.map = function (callback) {
    return new ConditionalNode(this._ifNode(callback(this.condition, 'condition', this)), this._ifNode(callback(this.trueExpr, 'trueExpr', this)), this._ifNode(callback(this.falseExpr, 'falseExpr', this)));
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {ConditionalNode}
   */


  ConditionalNode.prototype.clone = function () {
    return new ConditionalNode(this.condition, this.trueExpr, this.falseExpr);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   */


  ConditionalNode.prototype._toString = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode
    // or have lower or equal precedence
    // NOTE: enclosing all OperatorNodes in parentheses is a decision
    // purely based on aesthetics and readability

    var condition = this.condition.toString(options);
    var conditionPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this.condition, parenthesis);

    if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {
      condition = '(' + condition + ')';
    }

    var trueExpr = this.trueExpr.toString(options);
    var truePrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this.trueExpr, parenthesis);

    if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {
      trueExpr = '(' + trueExpr + ')';
    }

    var falseExpr = this.falseExpr.toString(options);
    var falsePrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this.falseExpr, parenthesis);

    if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {
      falseExpr = '(' + falseExpr + ')';
    }

    return condition + ' ? ' + trueExpr + ' : ' + falseExpr;
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  ConditionalNode.prototype.toJSON = function () {
    return {
      mathjs: 'ConditionalNode',
      condition: this.condition,
      trueExpr: this.trueExpr,
      falseExpr: this.falseExpr
    };
  };
  /**
   * Instantiate an ConditionalNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "ConditionalNode", "condition": ..., "trueExpr": ..., "falseExpr": ...}`,
   *                       where mathjs is optional
   * @returns {ConditionalNode}
   */


  ConditionalNode.fromJSON = function (json) {
    return new ConditionalNode(json.condition, json.trueExpr, json.falseExpr);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   */


  ConditionalNode.prototype.toHTML = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode
    // or have lower or equal precedence
    // NOTE: enclosing all OperatorNodes in parentheses is a decision
    // purely based on aesthetics and readability

    var condition = this.condition.toHTML(options);
    var conditionPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this.condition, parenthesis);

    if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {
      condition = '<span class="math-parenthesis math-round-parenthesis">(</span>' + condition + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    var trueExpr = this.trueExpr.toHTML(options);
    var truePrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this.trueExpr, parenthesis);

    if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {
      trueExpr = '<span class="math-parenthesis math-round-parenthesis">(</span>' + trueExpr + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    var falseExpr = this.falseExpr.toHTML(options);
    var falsePrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(this.falseExpr, parenthesis);

    if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {
      falseExpr = '<span class="math-parenthesis math-round-parenthesis">(</span>' + falseExpr + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    return condition + '<span class="math-operator math-conditional-operator">?</span>' + trueExpr + '<span class="math-operator math-conditional-operator">:</span>' + falseExpr;
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  ConditionalNode.prototype._toTex = function (options) {
    return '\\begin{cases} {' + this.trueExpr.toTex(options) + '}, &\\quad{\\text{if }\\;' + this.condition.toTex(options) + '}\\\\{' + this.falseExpr.toTex(options) + '}, &\\quad{\\text{otherwise}}\\end{cases}';
  };
  /**
   * Test whether a condition is met
   * @param {*} condition
   * @returns {boolean} true if condition is true or non-zero, else false
   */


  function testCondition(condition) {
    if (typeof condition === 'number' || typeof condition === 'boolean' || typeof condition === 'string') {
      return !!condition;
    }

    if (condition) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(condition)) {
        return !condition.isZero();
      }

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isComplex"])(condition)) {
        return !!(condition.re || condition.im);
      }

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isUnit"])(condition)) {
        return !!condition.value;
      }
    }

    if (condition === null || condition === undefined) {
      return false;
    }

    throw new TypeError('Unsupported type of condition "' + Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(condition) + '"');
  }

  return ConditionalNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/ConstantNode.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/ConstantNode.js ***!
  \*****************************************************************/
/*! exports provided: createConstantNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConstantNode", function() { return createConstantNode; });
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_latex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/latex */ "../node_modules/mathjs/es/utils/latex.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'ConstantNode';
var dependencies = ['Node'];
var createConstantNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * A ConstantNode holds a constant value like a number or string.
   *
   * Usage:
   *
   *     new ConstantNode(2.3)
   *     new ConstantNode('hello')
   *
   * @param {*} value    Value can be any type (number, BigNumber, string, ...)
   * @constructor ConstantNode
   * @extends {Node}
   */
  function ConstantNode(value) {
    if (!(this instanceof ConstantNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this.value = value;
  }

  ConstantNode.prototype = new Node();
  ConstantNode.prototype.type = 'ConstantNode';
  ConstantNode.prototype.isConstantNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  ConstantNode.prototype._compile = function (math, argNames) {
    var value = this.value;
    return function evalConstantNode() {
      return value;
    };
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  ConstantNode.prototype.forEach = function (callback) {// nothing to do, we don't have childs
  };
  /**
   * Create a new ConstantNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node) : Node} callback
   * @returns {ConstantNode} Returns a clone of the node
   */


  ConstantNode.prototype.map = function (callback) {
    return this.clone();
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {ConstantNode}
   */


  ConstantNode.prototype.clone = function () {
    return new ConstantNode(this.value);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   */


  ConstantNode.prototype._toString = function (options) {
    return Object(_utils_string__WEBPACK_IMPORTED_MODULE_0__["format"])(this.value, options);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   */


  ConstantNode.prototype.toHTML = function (options) {
    var value = this._toString(options);

    switch (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["typeOf"])(this.value)) {
      case 'number':
      case 'BigNumber':
      case 'Fraction':
        return '<span class="math-number">' + value + '</span>';

      case 'string':
        return '<span class="math-string">' + value + '</span>';

      case 'boolean':
        return '<span class="math-boolean">' + value + '</span>';

      case 'null':
        return '<span class="math-null-symbol">' + value + '</span>';

      case 'undefined':
        return '<span class="math-undefined">' + value + '</span>';

      default:
        return '<span class="math-symbol">' + value + '</span>';
    }
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  ConstantNode.prototype.toJSON = function () {
    return {
      mathjs: 'ConstantNode',
      value: this.value
    };
  };
  /**
   * Instantiate a ConstantNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "SymbolNode", value: 2.3}`,
   *                       where mathjs is optional
   * @returns {ConstantNode}
   */


  ConstantNode.fromJSON = function (json) {
    return new ConstantNode(json.value);
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  ConstantNode.prototype._toTex = function (options) {
    var value = this._toString(options);

    switch (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["typeOf"])(this.value)) {
      case 'string':
        return '\\mathtt{' + Object(_utils_latex__WEBPACK_IMPORTED_MODULE_2__["escapeLatex"])(value) + '}';

      case 'number':
      case 'BigNumber':
        {
          if (!isFinite(this.value)) {
            return this.value.valueOf() < 0 ? '-\\infty' : '\\infty';
          }

          var index = value.toLowerCase().indexOf('e');

          if (index !== -1) {
            return value.substring(0, index) + '\\cdot10^{' + value.substring(index + 1) + '}';
          }
        }
        return value;

      case 'Fraction':
        return this.value.toLatex();

      default:
        return value;
    }
  };

  return ConstantNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/FunctionAssignmentNode.js":
/*!***************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/FunctionAssignmentNode.js ***!
  \***************************************************************************/
/*! exports provided: createFunctionAssignmentNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFunctionAssignmentNode", function() { return createFunctionAssignmentNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _keywords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keywords */ "../node_modules/mathjs/es/expression/keywords.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_latex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/latex */ "../node_modules/mathjs/es/utils/latex.js");
/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operators */ "../node_modules/mathjs/es/expression/operators.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");








var name = 'FunctionAssignmentNode';
var dependencies = ['typed', 'Node'];
var createFunctionAssignmentNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_7__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Node = _ref.Node;

  /**
   * @constructor FunctionAssignmentNode
   * @extends {Node}
   * Function assignment
   *
   * @param {string} name           Function name
   * @param {string[] | Array.<{name: string, type: string}>} params
   *                                Array with function parameter names, or an
   *                                array with objects containing the name
   *                                and type of the parameter
   * @param {Node} expr             The function expression
   */
  function FunctionAssignmentNode(name, params, expr) {
    if (!(this instanceof FunctionAssignmentNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // validate input


    if (typeof name !== 'string') throw new TypeError('String expected for parameter "name"');
    if (!Array.isArray(params)) throw new TypeError('Array containing strings or objects expected for parameter "params"');
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(expr)) throw new TypeError('Node expected for parameter "expr"');
    if (name in _keywords__WEBPACK_IMPORTED_MODULE_1__["keywords"]) throw new Error('Illegal function name, "' + name + '" is a reserved keyword');
    this.name = name;
    this.params = params.map(function (param) {
      return param && param.name || param;
    });
    this.types = params.map(function (param) {
      return param && param.type || 'any';
    });
    this.expr = expr;
  }

  FunctionAssignmentNode.prototype = new Node();
  FunctionAssignmentNode.prototype.type = 'FunctionAssignmentNode';
  FunctionAssignmentNode.prototype.isFunctionAssignmentNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  FunctionAssignmentNode.prototype._compile = function (math, argNames) {
    var childArgNames = Object.create(argNames);
    Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["forEach"])(this.params, function (param) {
      childArgNames[param] = true;
    }); // compile the function expression with the child args

    var evalExpr = this.expr._compile(math, childArgNames);

    var name = this.name;
    var params = this.params;
    var signature = Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["join"])(this.types, ',');
    var syntax = name + '(' + Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["join"])(this.params, ', ') + ')';
    return function evalFunctionAssignmentNode(scope, args, context) {
      var signatures = {};

      signatures[signature] = function () {
        var childArgs = Object.create(args);

        for (var i = 0; i < params.length; i++) {
          childArgs[params[i]] = arguments[i];
        }

        return evalExpr(scope, childArgs, context);
      };

      var fn = typed(name, signatures);
      fn.syntax = syntax;
      Object(_utils_customs__WEBPACK_IMPORTED_MODULE_6__["setSafeProperty"])(scope, name, fn);
      return fn;
    };
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  FunctionAssignmentNode.prototype.forEach = function (callback) {
    callback(this.expr, 'expr', this);
  };
  /**
   * Create a new FunctionAssignmentNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {FunctionAssignmentNode} Returns a transformed copy of the node
   */


  FunctionAssignmentNode.prototype.map = function (callback) {
    var expr = this._ifNode(callback(this.expr, 'expr', this));

    return new FunctionAssignmentNode(this.name, this.params.slice(0), expr);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {FunctionAssignmentNode}
   */


  FunctionAssignmentNode.prototype.clone = function () {
    return new FunctionAssignmentNode(this.name, this.params.slice(0), this.expr);
  };
  /**
   * Is parenthesis needed?
   * @param {Node} node
   * @param {Object} parenthesis
   * @private
   */


  function needParenthesis(node, parenthesis) {
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_5__["getPrecedence"])(node, parenthesis);
    var exprPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_5__["getPrecedence"])(node.expr, parenthesis);
    return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;
  }
  /**
   * get string representation
   * @param {Object} options
   * @return {string} str
   */


  FunctionAssignmentNode.prototype._toString = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var expr = this.expr.toString(options);

    if (needParenthesis(this, parenthesis)) {
      expr = '(' + expr + ')';
    }

    return this.name + '(' + this.params.join(', ') + ') = ' + expr;
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  FunctionAssignmentNode.prototype.toJSON = function () {
    var types = this.types;
    return {
      mathjs: 'FunctionAssignmentNode',
      name: this.name,
      params: this.params.map(function (param, index) {
        return {
          name: param,
          type: types[index]
        };
      }),
      expr: this.expr
    };
  };
  /**
   * Instantiate an FunctionAssignmentNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "FunctionAssignmentNode", name: ..., params: ..., expr: ...}`,
   *                       where mathjs is optional
   * @returns {FunctionAssignmentNode}
   */


  FunctionAssignmentNode.fromJSON = function (json) {
    return new FunctionAssignmentNode(json.name, json.params, json.expr);
  };
  /**
   * get HTML representation
   * @param {Object} options
   * @return {string} str
   */


  FunctionAssignmentNode.prototype.toHTML = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var params = [];

    for (var i = 0; i < this.params.length; i++) {
      params.push('<span class="math-symbol math-parameter">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.params[i]) + '</span>');
    }

    var expr = this.expr.toHTML(options);

    if (needParenthesis(this, parenthesis)) {
      expr = '<span class="math-parenthesis math-round-parenthesis">(</span>' + expr + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    return '<span class="math-function">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.name) + '</span>' + '<span class="math-parenthesis math-round-parenthesis">(</span>' + params.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' + expr;
  };
  /**
   * get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  FunctionAssignmentNode.prototype._toTex = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var expr = this.expr.toTex(options);

    if (needParenthesis(this, parenthesis)) {
      expr = "\\left(".concat(expr, "\\right)");
    }

    return '\\mathrm{' + this.name + '}\\left(' + this.params.map(_utils_latex__WEBPACK_IMPORTED_MODULE_4__["toSymbol"]).join(',') + '\\right):=' + expr;
  };

  return FunctionAssignmentNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/FunctionNode.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/FunctionNode.js ***!
  \*****************************************************************/
/*! exports provided: createFunctionNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFunctionNode", function() { return createFunctionNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_latex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/latex */ "../node_modules/mathjs/es/utils/latex.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }








var name = 'FunctionNode';
var dependencies = ['math', 'Node', 'SymbolNode'];
var createFunctionNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var math = _ref.math,
      Node = _ref.Node,
      SymbolNode = _ref.SymbolNode;

  /**
   * @constructor FunctionNode
   * @extends {./Node}
   * invoke a list with arguments on a node
   * @param {./Node | string} fn Node resolving with a function on which to invoke
   *                             the arguments, typically a SymboNode or AccessorNode
   * @param {./Node[]} args
   */
  function FunctionNode(fn, args) {
    if (!(this instanceof FunctionNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (typeof fn === 'string') {
      fn = new SymbolNode(fn);
    } // validate input


    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(fn)) throw new TypeError('Node expected as parameter "fn"');

    if (!Array.isArray(args) || !args.every(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])) {
      throw new TypeError('Array containing Nodes expected for parameter "args"');
    }

    this.fn = fn;
    this.args = args || []; // readonly property name

    Object.defineProperty(this, 'name', {
      get: function () {
        return this.fn.name || '';
      }.bind(this),
      set: function set() {
        throw new Error('Cannot assign a new name, name is read-only');
      }
    });
  }

  FunctionNode.prototype = new Node();
  FunctionNode.prototype.type = 'FunctionNode';
  FunctionNode.prototype.isFunctionNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  FunctionNode.prototype._compile = function (math, argNames) {
    if (!(this instanceof FunctionNode)) {
      throw new TypeError('No valid FunctionNode');
    } // compile arguments


    var evalArgs = Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["map"])(this.args, function (arg) {
      return arg._compile(math, argNames);
    });

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(this.fn)) {
      // we can statically determine whether the function has an rawArgs property
      var _name = this.fn.name;
      var fn = _name in math ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_4__["getSafeProperty"])(math, _name) : undefined;
      var isRaw = typeof fn === 'function' && fn.rawArgs === true;

      if (isRaw) {
        // pass unevaluated parameters (nodes) to the function
        // "raw" evaluation
        var rawArgs = this.args;
        return function evalFunctionNode(scope, args, context) {
          return (_name in scope ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_4__["getSafeProperty"])(scope, _name) : fn)(rawArgs, math, _extends({}, scope, args));
        };
      } else {
        // "regular" evaluation
        if (evalArgs.length === 1) {
          var evalArg0 = evalArgs[0];
          return function evalFunctionNode(scope, args, context) {
            return (_name in scope ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_4__["getSafeProperty"])(scope, _name) : fn)(evalArg0(scope, args, context));
          };
        } else if (evalArgs.length === 2) {
          var _evalArg = evalArgs[0];
          var evalArg1 = evalArgs[1];
          return function evalFunctionNode(scope, args, context) {
            return (_name in scope ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_4__["getSafeProperty"])(scope, _name) : fn)(_evalArg(scope, args, context), evalArg1(scope, args, context));
          };
        } else {
          return function evalFunctionNode(scope, args, context) {
            return (_name in scope ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_4__["getSafeProperty"])(scope, _name) : fn).apply(null, Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["map"])(evalArgs, function (evalArg) {
              return evalArg(scope, args, context);
            }));
          };
        }
      }
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isAccessorNode"])(this.fn) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndexNode"])(this.fn.index) && this.fn.index.isObjectProperty()) {
      // execute the function with the right context: the object of the AccessorNode
      var evalObject = this.fn.object._compile(math, argNames);

      var prop = this.fn.index.getObjectProperty();
      var _rawArgs = this.args;
      return function evalFunctionNode(scope, args, context) {
        var object = evalObject(scope, args, context);
        Object(_utils_customs__WEBPACK_IMPORTED_MODULE_4__["validateSafeMethod"])(object, prop);
        var isRaw = object[prop] && object[prop].rawArgs;
        return isRaw ? object[prop](_rawArgs, math, _extends({}, scope, args)) // "raw" evaluation
        : object[prop].apply(object, Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["map"])(evalArgs, function (evalArg) {
          // "regular" evaluation
          return evalArg(scope, args, context);
        }));
      };
    } else {
      // node.fn.isAccessorNode && !node.fn.index.isObjectProperty()
      // we have to dynamically determine whether the function has a rawArgs property
      var evalFn = this.fn._compile(math, argNames);

      var _rawArgs2 = this.args;
      return function evalFunctionNode(scope, args, context) {
        var fn = evalFn(scope, args, context);
        var isRaw = fn && fn.rawArgs;
        return isRaw ? fn(_rawArgs2, math, _extends({}, scope, args)) // "raw" evaluation
        : fn.apply(fn, Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["map"])(evalArgs, function (evalArg) {
          // "regular" evaluation
          return evalArg(scope, args, context);
        }));
      };
    }
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  FunctionNode.prototype.forEach = function (callback) {
    callback(this.fn, 'fn', this);

    for (var i = 0; i < this.args.length; i++) {
      callback(this.args[i], 'args[' + i + ']', this);
    }
  };
  /**
   * Create a new FunctionNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {FunctionNode} Returns a transformed copy of the node
   */


  FunctionNode.prototype.map = function (callback) {
    var fn = this._ifNode(callback(this.fn, 'fn', this));

    var args = [];

    for (var i = 0; i < this.args.length; i++) {
      args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));
    }

    return new FunctionNode(fn, args);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {FunctionNode}
   */


  FunctionNode.prototype.clone = function () {
    return new FunctionNode(this.fn, this.args.slice(0));
  }; // backup Node's toString function
  // @private


  var nodeToString = FunctionNode.prototype.toString;
  /**
   * Get string representation. (wrapper function)
   * This overrides parts of Node's toString function.
   * If callback is an object containing callbacks, it
   * calls the correct callback for the current node,
   * otherwise it falls back to calling Node's toString
   * function.
   *
   * @param {Object} options
   * @return {string} str
   * @override
   */

  FunctionNode.prototype.toString = function (options) {
    var customString;
    var name = this.fn.toString(options);

    if (options && _typeof(options.handler) === 'object' && Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(options.handler, name)) {
      // callback is a map of callback functions
      customString = options.handler[name](this, options);
    }

    if (typeof customString !== 'undefined') {
      return customString;
    } // fall back to Node's toString


    return nodeToString.call(this, options);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   */


  FunctionNode.prototype._toString = function (options) {
    var args = this.args.map(function (arg) {
      return arg.toString(options);
    });
    var fn = Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionAssignmentNode"])(this.fn) ? '(' + this.fn.toString(options) + ')' : this.fn.toString(options); // format the arguments like "add(2, 4.2)"

    return fn + '(' + args.join(', ') + ')';
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  FunctionNode.prototype.toJSON = function () {
    return {
      mathjs: 'FunctionNode',
      fn: this.fn,
      args: this.args
    };
  };
  /**
   * Instantiate an AssignmentNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "FunctionNode", fn: ..., args: ...}`,
   *                       where mathjs is optional
   * @returns {FunctionNode}
   */


  FunctionNode.fromJSON = function (json) {
    return new FunctionNode(json.fn, json.args);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   */


  FunctionNode.prototype.toHTML = function (options) {
    var args = this.args.map(function (arg) {
      return arg.toHTML(options);
    }); // format the arguments like "add(2, 4.2)"

    return '<span class="math-function">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["escape"])(this.fn) + '</span><span class="math-paranthesis math-round-parenthesis">(</span>' + args.join('<span class="math-separator">,</span>') + '<span class="math-paranthesis math-round-parenthesis">)</span>';
  };
  /*
   * Expand a LaTeX template
   *
   * @param {string} template
   * @param {Node} node
   * @param {Object} options
   * @private
   **/


  function expandTemplate(template, node, options) {
    var latex = ''; // Match everything of the form ${identifier} or ${identifier[2]} or $$
    // while submatching identifier and 2 (in the second case)

    var regex = new RegExp('\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)', 'ig');
    var inputPos = 0; // position in the input string

    var match;

    while ((match = regex.exec(template)) !== null) {
      // go through all matches
      // add everything in front of the match to the LaTeX string
      latex += template.substring(inputPos, match.index);
      inputPos = match.index;

      if (match[0] === '$$') {
        // escaped dollar sign
        latex += '$';
        inputPos++;
      } else {
        // template parameter
        inputPos += match[0].length;
        var property = node[match[1]];

        if (!property) {
          throw new ReferenceError('Template: Property ' + match[1] + ' does not exist.');
        }

        if (match[2] === undefined) {
          // no square brackets
          switch (_typeof(property)) {
            case 'string':
              latex += property;
              break;

            case 'object':
              if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(property)) {
                latex += property.toTex(options);
              } else if (Array.isArray(property)) {
                // make array of Nodes into comma separated list
                latex += property.map(function (arg, index) {
                  if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(arg)) {
                    return arg.toTex(options);
                  }

                  throw new TypeError('Template: ' + match[1] + '[' + index + '] is not a Node.');
                }).join(',');
              } else {
                throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');
              }

              break;

            default:
              throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');
          }
        } else {
          // with square brackets
          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(property[match[2]] && property[match[2]])) {
            latex += property[match[2]].toTex(options);
          } else {
            throw new TypeError('Template: ' + match[1] + '[' + match[2] + '] is not a Node.');
          }
        }
      }
    }

    latex += template.slice(inputPos); // append rest of the template

    return latex;
  } // backup Node's toTex function
  // @private


  var nodeToTex = FunctionNode.prototype.toTex;
  /**
   * Get LaTeX representation. (wrapper function)
   * This overrides parts of Node's toTex function.
   * If callback is an object containing callbacks, it
   * calls the correct callback for the current node,
   * otherwise it falls back to calling Node's toTex
   * function.
   *
   * @param {Object} options
   * @return {string}
   */

  FunctionNode.prototype.toTex = function (options) {
    var customTex;

    if (options && _typeof(options.handler) === 'object' && Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(options.handler, this.name)) {
      // callback is a map of callback functions
      customTex = options.handler[this.name](this, options);
    }

    if (typeof customTex !== 'undefined') {
      return customTex;
    } // fall back to Node's toTex


    return nodeToTex.call(this, options);
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  FunctionNode.prototype._toTex = function (options) {
    var args = this.args.map(function (arg) {
      // get LaTeX of the arguments
      return arg.toTex(options);
    });
    var latexConverter;

    if (_utils_latex__WEBPACK_IMPORTED_MODULE_6__["latexFunctions"][this.name]) {
      latexConverter = _utils_latex__WEBPACK_IMPORTED_MODULE_6__["latexFunctions"][this.name];
    } // toTex property on the function itself


    if (math[this.name] && (typeof math[this.name].toTex === 'function' || _typeof(math[this.name].toTex) === 'object' || typeof math[this.name].toTex === 'string')) {
      // .toTex is a callback function
      latexConverter = math[this.name].toTex;
    }

    var customToTex;

    switch (_typeof(latexConverter)) {
      case 'function':
        // a callback function
        customToTex = latexConverter(this, options);
        break;

      case 'string':
        // a template string
        customToTex = expandTemplate(latexConverter, this, options);
        break;

      case 'object':
        // an object with different "converters" for different numbers of arguments
        switch (_typeof(latexConverter[args.length])) {
          case 'function':
            customToTex = latexConverter[args.length](this, options);
            break;

          case 'string':
            customToTex = expandTemplate(latexConverter[args.length], this, options);
            break;
        }

    }

    if (typeof customToTex !== 'undefined') {
      return customToTex;
    }

    return expandTemplate(_utils_latex__WEBPACK_IMPORTED_MODULE_6__["defaultTemplate"], this, options);
  };
  /**
   * Get identifier.
   * @return {string}
   */


  FunctionNode.prototype.getIdentifier = function () {
    return this.type + ':' + this.name;
  };

  return FunctionNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/IndexNode.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/IndexNode.js ***!
  \**************************************************************/
/*! exports provided: createIndexNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIndexNode", function() { return createIndexNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }






var name = 'IndexNode';
var dependencies = ['Range', 'Node', 'size'];
var createIndexNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var Range = _ref.Range,
      Node = _ref.Node,
      size = _ref.size;

  /**
   * @constructor IndexNode
   * @extends Node
   *
   * Describes a subset of a matrix or an object property.
   * Cannot be used on its own, needs to be used within an AccessorNode or
   * AssignmentNode.
   *
   * @param {Node[]} dimensions
   * @param {boolean} [dotNotation=false]  Optional property describing whether
   *                                       this index was written using dot
   *                                       notation like `a.b`, or using bracket
   *                                       notation like `a["b"]` (default).
   *                                       Used to stringify an IndexNode.
   */
  function IndexNode(dimensions, dotNotation) {
    if (!(this instanceof IndexNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this.dimensions = dimensions;
    this.dotNotation = dotNotation || false; // validate input

    if (!Array.isArray(dimensions) || !dimensions.every(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])) {
      throw new TypeError('Array containing Nodes expected for parameter "dimensions"');
    }

    if (this.dotNotation && !this.isObjectProperty()) {
      throw new Error('dotNotation only applicable for object properties');
    }
  }

  IndexNode.prototype = new Node();
  IndexNode.prototype.type = 'IndexNode';
  IndexNode.prototype.isIndexNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  IndexNode.prototype._compile = function (math, argNames) {
    // TODO: implement support for bignumber (currently bignumbers are silently
    //       reduced to numbers when changing the value to zero-based)
    // TODO: Optimization: when the range values are ConstantNodes,
    //       we can beforehand resolve the zero-based value
    // optimization for a simple object property
    var evalDimensions = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(this.dimensions, function (range, i) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isRangeNode"])(range)) {
        if (range.needsEnd()) {
          // create a range containing end (like '4:end')
          var childArgNames = Object.create(argNames);
          childArgNames.end = true;

          var evalStart = range.start._compile(math, childArgNames);

          var evalEnd = range.end._compile(math, childArgNames);

          var evalStep = range.step ? range.step._compile(math, childArgNames) : function () {
            return 1;
          };
          return function evalDimension(scope, args, context) {
            var s = size(context).valueOf();
            var childArgs = Object.create(args);
            childArgs.end = s[i];
            return createRange(evalStart(scope, childArgs, context), evalEnd(scope, childArgs, context), evalStep(scope, childArgs, context));
          };
        } else {
          // create range
          var _evalStart = range.start._compile(math, argNames);

          var _evalEnd = range.end._compile(math, argNames);

          var _evalStep = range.step ? range.step._compile(math, argNames) : function () {
            return 1;
          };

          return function evalDimension(scope, args, context) {
            return createRange(_evalStart(scope, args, context), _evalEnd(scope, args, context), _evalStep(scope, args, context));
          };
        }
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(range) && range.name === 'end') {
        // SymbolNode 'end'
        var _childArgNames = Object.create(argNames);

        _childArgNames.end = true;

        var evalRange = range._compile(math, _childArgNames);

        return function evalDimension(scope, args, context) {
          var s = size(context).valueOf();
          var childArgs = Object.create(args);
          childArgs.end = s[i];
          return evalRange(scope, childArgs, context);
        };
      } else {
        // ConstantNode
        var _evalRange = range._compile(math, argNames);

        return function evalDimension(scope, args, context) {
          return _evalRange(scope, args, context);
        };
      }
    });
    var index = Object(_utils_customs__WEBPACK_IMPORTED_MODULE_4__["getSafeProperty"])(math, 'index');
    return function evalIndexNode(scope, args, context) {
      var dimensions = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(evalDimensions, function (evalDimension) {
        return evalDimension(scope, args, context);
      });
      return index.apply(void 0, _toConsumableArray(dimensions));
    };
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  IndexNode.prototype.forEach = function (callback) {
    for (var i = 0; i < this.dimensions.length; i++) {
      callback(this.dimensions[i], 'dimensions[' + i + ']', this);
    }
  };
  /**
   * Create a new IndexNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {IndexNode} Returns a transformed copy of the node
   */


  IndexNode.prototype.map = function (callback) {
    var dimensions = [];

    for (var i = 0; i < this.dimensions.length; i++) {
      dimensions[i] = this._ifNode(callback(this.dimensions[i], 'dimensions[' + i + ']', this));
    }

    return new IndexNode(dimensions, this.dotNotation);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {IndexNode}
   */


  IndexNode.prototype.clone = function () {
    return new IndexNode(this.dimensions.slice(0), this.dotNotation);
  };
  /**
   * Test whether this IndexNode contains a single property name
   * @return {boolean}
   */


  IndexNode.prototype.isObjectProperty = function () {
    return this.dimensions.length === 1 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(this.dimensions[0]) && typeof this.dimensions[0].value === 'string';
  };
  /**
   * Returns the property name if IndexNode contains a property.
   * If not, returns null.
   * @return {string | null}
   */


  IndexNode.prototype.getObjectProperty = function () {
    return this.isObjectProperty() ? this.dimensions[0].value : null;
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   */


  IndexNode.prototype._toString = function (options) {
    // format the parameters like "[1, 0:5]"
    return this.dotNotation ? '.' + this.getObjectProperty() : '[' + this.dimensions.join(', ') + ']';
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  IndexNode.prototype.toJSON = function () {
    return {
      mathjs: 'IndexNode',
      dimensions: this.dimensions,
      dotNotation: this.dotNotation
    };
  };
  /**
   * Instantiate an IndexNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "IndexNode", dimensions: [...], dotNotation: false}`,
   *                       where mathjs is optional
   * @returns {IndexNode}
   */


  IndexNode.fromJSON = function (json) {
    return new IndexNode(json.dimensions, json.dotNotation);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   */


  IndexNode.prototype.toHTML = function (options) {
    // format the parameters like "[1, 0:5]"
    var dimensions = [];

    for (var i = 0; i < this.dimensions.length; i++) {
      dimensions[i] = this.dimensions[i].toHTML();
    }

    if (this.dotNotation) {
      return '<span class="math-operator math-accessor-operator">.</span>' + '<span class="math-symbol math-property">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.getObjectProperty()) + '</span>';
    } else {
      return '<span class="math-parenthesis math-square-parenthesis">[</span>' + dimensions.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-square-parenthesis">]</span>';
    }
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  IndexNode.prototype._toTex = function (options) {
    var dimensions = this.dimensions.map(function (range) {
      return range.toTex(options);
    });
    return this.dotNotation ? '.' + this.getObjectProperty() + '' : '_{' + dimensions.join(',') + '}';
  }; // helper function to create a Range from start, step and end


  function createRange(start, end, step) {
    return new Range(Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(start) ? start.toNumber() : start, Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(end) ? end.toNumber() : end, Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(step) ? step.toNumber() : step);
  }

  return IndexNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/Node.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/Node.js ***!
  \*********************************************************/
/*! exports provided: createNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNode", function() { return createNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _keywords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keywords */ "../node_modules/mathjs/es/expression/keywords.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }





var name = 'Node';
var dependencies = ['mathWithTransform'];
var createNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var mathWithTransform = _ref.mathWithTransform;

  /**
   * Node
   */
  function Node() {
    if (!(this instanceof Node)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }
  }
  /**
   * Evaluate the node
   * @param {Object} [scope]  Scope to read/write variables
   * @return {*}              Returns the result
   */


  Node.prototype.evaluate = function (scope) {
    return this.compile().evaluate(scope);
  };

  Node.prototype.type = 'Node';
  Node.prototype.isNode = true;
  Node.prototype.comment = '';
  /**
   * Compile the node into an optimized, evauatable JavaScript function
   * @return {{evaluate: function([Object])}} object
   *                Returns an object with a function 'evaluate',
   *                which can be invoked as expr.evaluate([scope: Object]),
   *                where scope is an optional object with
   *                variables.
   */

  Node.prototype.compile = function () {
    var expr = this._compile(mathWithTransform, {});

    var args = {};
    var context = null;

    function evaluate(scope) {
      var s = scope || {};

      _validateScope(s);

      return expr(s, args, context);
    }

    return {
      evaluate: evaluate
    };
  };
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */


  Node.prototype._compile = function (math, argNames) {
    throw new Error('Method _compile should be implemented by type ' + this.type);
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  Node.prototype.forEach = function (callback) {
    // must be implemented by each of the Node implementations
    throw new Error('Cannot run forEach on a Node interface');
  };
  /**
   * Create a new Node having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {OperatorNode} Returns a transformed copy of the node
   */


  Node.prototype.map = function (callback) {
    // must be implemented by each of the Node implementations
    throw new Error('Cannot run map on a Node interface');
  };
  /**
   * Validate whether an object is a Node, for use with map
   * @param {Node} node
   * @returns {Node} Returns the input if it's a node, else throws an Error
   * @protected
   */


  Node.prototype._ifNode = function (node) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(node)) {
      throw new TypeError('Callback function must return a Node');
    }

    return node;
  };
  /**
   * Recursively traverse all nodes in a node tree. Executes given callback for
   * this node and each of its child nodes.
   * @param {function(node: Node, path: string, parent: Node)} callback
   *          A callback called for every node in the node tree.
   */


  Node.prototype.traverse = function (callback) {
    // execute callback for itself
    callback(this, null, null); // eslint-disable-line standard/no-callback-literal
    // recursively traverse over all childs of a node

    function _traverse(node, callback) {
      node.forEach(function (child, path, parent) {
        callback(child, path, parent);

        _traverse(child, callback);
      });
    }

    _traverse(this, callback);
  };
  /**
   * Recursively transform a node tree via a transform function.
   *
   * For example, to replace all nodes of type SymbolNode having name 'x' with a
   * ConstantNode with value 2:
   *
   *     const res = Node.transform(function (node, path, parent) {
   *       if (node && node.isSymbolNode) && (node.name === 'x')) {
   *         return new ConstantNode(2)
   *       }
   *       else {
   *         return node
   *       }
   *     })
   *
   * @param {function(node: Node, path: string, parent: Node) : Node} callback
   *          A mapping function accepting a node, and returning
   *          a replacement for the node or the original node.
   *          Signature: callback(node: Node, index: string, parent: Node) : Node
   * @return {Node} Returns the original node or its replacement
   */


  Node.prototype.transform = function (callback) {
    function _transform(child, path, parent) {
      var replacement = callback(child, path, parent);

      if (replacement !== child) {
        // stop iterating when the node is replaced
        return replacement;
      }

      return child.map(_transform);
    }

    return _transform(this, null, null);
  };
  /**
   * Find any node in the node tree matching given filter function. For example, to
   * find all nodes of type SymbolNode having name 'x':
   *
   *     const results = Node.filter(function (node) {
   *       return (node && node.isSymbolNode) && (node.name === 'x')
   *     })
   *
   * @param {function(node: Node, path: string, parent: Node) : Node} callback
   *            A test function returning true when a node matches, and false
   *            otherwise. Function signature:
   *            callback(node: Node, index: string, parent: Node) : boolean
   * @return {Node[]} nodes       An array with nodes matching given filter criteria
   */


  Node.prototype.filter = function (callback) {
    var nodes = [];
    this.traverse(function (node, path, parent) {
      if (callback(node, path, parent)) {
        nodes.push(node);
      }
    });
    return nodes;
  };
  /**
   * Create a shallow clone of this node
   * @return {Node}
   */


  Node.prototype.clone = function () {
    // must be implemented by each of the Node implementations
    throw new Error('Cannot clone a Node interface');
  };
  /**
   * Create a deep clone of this node
   * @return {Node}
   */


  Node.prototype.cloneDeep = function () {
    return this.map(function (node) {
      return node.cloneDeep();
    });
  };
  /**
   * Deep compare this node with another node.
   * @param {Node} other
   * @return {boolean} Returns true when both nodes are of the same type and
   *                   contain the same values (as do their childs)
   */


  Node.prototype.equals = function (other) {
    return other ? Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["deepStrictEqual"])(this, other) : false;
  };
  /**
   * Get string representation. (wrapper function)
   *
   * This function can get an object of the following form:
   * {
   *    handler: //This can be a callback function of the form
   *             // "function callback(node, options)"or
   *             // a map that maps function names (used in FunctionNodes)
   *             // to callbacks
   *    parenthesis: "keep" //the parenthesis option (This is optional)
   * }
   *
   * @param {Object} [options]
   * @return {string}
   */


  Node.prototype.toString = function (options) {
    var customString;

    if (options && _typeof(options) === 'object') {
      switch (_typeof(options.handler)) {
        case 'object':
        case 'undefined':
          break;

        case 'function':
          customString = options.handler(this, options);
          break;

        default:
          throw new TypeError('Object or function expected as callback');
      }
    }

    if (typeof customString !== 'undefined') {
      return customString;
    }

    return this._toString(options);
  };
  /**
   * Get a JSON representation of the node
   * Both .toJSON() and the static .fromJSON(json) should be implemented by all
   * implementations of Node
   * @returns {Object}
   */


  Node.prototype.toJSON = function () {
    throw new Error('Cannot serialize object: toJSON not implemented by ' + this.type);
  };
  /**
   * Get HTML representation. (wrapper function)
   *
   * This function can get an object of the following form:
   * {
   *    handler: //This can be a callback function of the form
   *             // "function callback(node, options)" or
   *             // a map that maps function names (used in FunctionNodes)
   *             // to callbacks
   *    parenthesis: "keep" //the parenthesis option (This is optional)
   * }
   *
   * @param {Object} [options]
   * @return {string}
   */


  Node.prototype.toHTML = function (options) {
    var customString;

    if (options && _typeof(options) === 'object') {
      switch (_typeof(options.handler)) {
        case 'object':
        case 'undefined':
          break;

        case 'function':
          customString = options.handler(this, options);
          break;

        default:
          throw new TypeError('Object or function expected as callback');
      }
    }

    if (typeof customString !== 'undefined') {
      return customString;
    }

    return this.toHTML(options);
  };
  /**
   * Internal function to generate the string output.
   * This has to be implemented by every Node
   *
   * @throws {Error}
   */


  Node.prototype._toString = function () {
    // must be implemented by each of the Node implementations
    throw new Error('_toString not implemented for ' + this.type);
  };
  /**
   * Get LaTeX representation. (wrapper function)
   *
   * This function can get an object of the following form:
   * {
   *    handler: //This can be a callback function of the form
   *             // "function callback(node, options)"or
   *             // a map that maps function names (used in FunctionNodes)
   *             // to callbacks
   *    parenthesis: "keep" //the parenthesis option (This is optional)
   * }
   *
   * @param {Object} [options]
   * @return {string}
   */


  Node.prototype.toTex = function (options) {
    var customTex;

    if (options && _typeof(options) === 'object') {
      switch (_typeof(options.handler)) {
        case 'object':
        case 'undefined':
          break;

        case 'function':
          customTex = options.handler(this, options);
          break;

        default:
          throw new TypeError('Object or function expected as callback');
      }
    }

    if (typeof customTex !== 'undefined') {
      return customTex;
    }

    return this._toTex(options);
  };
  /**
   * Internal function to generate the LaTeX output.
   * This has to be implemented by every Node
   *
   * @param {Object} [options]
   * @throws {Error}
   */


  Node.prototype._toTex = function (options) {
    // must be implemented by each of the Node implementations
    throw new Error('_toTex not implemented for ' + this.type);
  };
  /**
   * Get identifier.
   * @return {string}
   */


  Node.prototype.getIdentifier = function () {
    return this.type;
  };
  /**
   * Get the content of the current Node.
   * @return {Node} node
   **/


  Node.prototype.getContent = function () {
    return this;
  };
  /**
   * Validate the symbol names of a scope.
   * Throws an error when the scope contains an illegal symbol.
   * @param {Object} scope
   */


  function _validateScope(scope) {
    for (var symbol in scope) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(scope, symbol)) {
        if (symbol in _keywords__WEBPACK_IMPORTED_MODULE_1__["keywords"]) {
          throw new Error('Scope contains an illegal symbol, "' + symbol + '" is a reserved keyword');
        }
      }
    }
  }

  return Node;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/ObjectNode.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/ObjectNode.js ***!
  \***************************************************************/
/*! exports provided: createObjectNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createObjectNode", function() { return createObjectNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }






var name = 'ObjectNode';
var dependencies = ['Node'];
var createObjectNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_4__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * @constructor ObjectNode
   * @extends {Node}
   * Holds an object with keys/values
   * @param {Object.<string, Node>} [properties]   object with key/value pairs
   */
  function ObjectNode(properties) {
    if (!(this instanceof ObjectNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this.properties = properties || {}; // validate input

    if (properties) {
      if (!(_typeof(properties) === 'object') || !Object.keys(properties).every(function (key) {
        return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(properties[key]);
      })) {
        throw new TypeError('Object containing Nodes expected');
      }
    }
  }

  ObjectNode.prototype = new Node();
  ObjectNode.prototype.type = 'ObjectNode';
  ObjectNode.prototype.isObjectNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  ObjectNode.prototype._compile = function (math, argNames) {
    var evalEntries = {};

    for (var key in this.properties) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.properties, key)) {
        // we stringify/parse the key here to resolve unicode characters,
        // so you cannot create a key like {"co\\u006Estructor": null}
        var stringifiedKey = Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["stringify"])(key);
        var parsedKey = JSON.parse(stringifiedKey);

        if (!Object(_utils_customs__WEBPACK_IMPORTED_MODULE_2__["isSafeProperty"])(this.properties, parsedKey)) {
          throw new Error('No access to property "' + parsedKey + '"');
        }

        evalEntries[parsedKey] = this.properties[key]._compile(math, argNames);
      }
    }

    return function evalObjectNode(scope, args, context) {
      var obj = {};

      for (var _key in evalEntries) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(evalEntries, _key)) {
          obj[_key] = evalEntries[_key](scope, args, context);
        }
      }

      return obj;
    };
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  ObjectNode.prototype.forEach = function (callback) {
    for (var key in this.properties) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.properties, key)) {
        callback(this.properties[key], 'properties[' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["stringify"])(key) + ']', this);
      }
    }
  };
  /**
   * Create a new ObjectNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {ObjectNode} Returns a transformed copy of the node
   */


  ObjectNode.prototype.map = function (callback) {
    var properties = {};

    for (var key in this.properties) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.properties, key)) {
        properties[key] = this._ifNode(callback(this.properties[key], 'properties[' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["stringify"])(key) + ']', this));
      }
    }

    return new ObjectNode(properties);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {ObjectNode}
   */


  ObjectNode.prototype.clone = function () {
    var properties = {};

    for (var key in this.properties) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.properties, key)) {
        properties[key] = this.properties[key];
      }
    }

    return new ObjectNode(properties);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  ObjectNode.prototype._toString = function (options) {
    var entries = [];

    for (var key in this.properties) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.properties, key)) {
        entries.push(Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["stringify"])(key) + ': ' + this.properties[key].toString(options));
      }
    }

    return '{' + entries.join(', ') + '}';
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  ObjectNode.prototype.toJSON = function () {
    return {
      mathjs: 'ObjectNode',
      properties: this.properties
    };
  };
  /**
   * Instantiate an OperatorNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "ObjectNode", "properties": {...}}`,
   *                       where mathjs is optional
   * @returns {ObjectNode}
   */


  ObjectNode.fromJSON = function (json) {
    return new ObjectNode(json.properties);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  ObjectNode.prototype.toHTML = function (options) {
    var entries = [];

    for (var key in this.properties) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.properties, key)) {
        entries.push('<span class="math-symbol math-property">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["escape"])(key) + '</span>' + '<span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>' + this.properties[key].toHTML(options));
      }
    }

    return '<span class="math-parenthesis math-curly-parenthesis">{</span>' + entries.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-curly-parenthesis">}</span>';
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  ObjectNode.prototype._toTex = function (options) {
    var entries = [];

    for (var key in this.properties) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.properties, key)) {
        entries.push('\\mathbf{' + key + ':} & ' + this.properties[key].toTex(options) + '\\\\');
      }
    }

    return "\\left\\{\\begin{array}{ll}".concat(entries.join('\n'), "\\end{array}\\right\\}");
  };

  return ObjectNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/OperatorNode.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/OperatorNode.js ***!
  \*****************************************************************/
/*! exports provided: createOperatorNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOperatorNode", function() { return createOperatorNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operators */ "../node_modules/mathjs/es/expression/operators.js");
/* harmony import */ var _utils_latex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/latex */ "../node_modules/mathjs/es/utils/latex.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");







var name = 'OperatorNode';
var dependencies = ['Node'];
var createOperatorNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_6__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * @constructor OperatorNode
   * @extends {Node}
   * An operator with two arguments, like 2+3
   *
   * @param {string} op           Operator name, for example '+'
   * @param {string} fn           Function name, for example 'add'
   * @param {Node[]} args         Operator arguments
   * @param {boolean} [implicit]  Is this an implicit multiplication?
   */
  function OperatorNode(op, fn, args, implicit) {
    if (!(this instanceof OperatorNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // validate input


    if (typeof op !== 'string') {
      throw new TypeError('string expected for parameter "op"');
    }

    if (typeof fn !== 'string') {
      throw new TypeError('string expected for parameter "fn"');
    }

    if (!Array.isArray(args) || !args.every(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])) {
      throw new TypeError('Array containing Nodes expected for parameter "args"');
    }

    this.implicit = implicit === true;
    this.op = op;
    this.fn = fn;
    this.args = args || [];
  }

  OperatorNode.prototype = new Node();
  OperatorNode.prototype.type = 'OperatorNode';
  OperatorNode.prototype.isOperatorNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  OperatorNode.prototype._compile = function (math, argNames) {
    // validate fn
    if (typeof this.fn !== 'string' || !Object(_utils_customs__WEBPACK_IMPORTED_MODULE_3__["isSafeMethod"])(math, this.fn)) {
      if (!math[this.fn]) {
        throw new Error('Function ' + this.fn + ' missing in provided namespace "math"');
      } else {
        throw new Error('No access to function "' + this.fn + '"');
      }
    }

    var fn = Object(_utils_customs__WEBPACK_IMPORTED_MODULE_3__["getSafeProperty"])(math, this.fn);
    var evalArgs = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(this.args, function (arg) {
      return arg._compile(math, argNames);
    });

    if (evalArgs.length === 1) {
      var evalArg0 = evalArgs[0];
      return function evalOperatorNode(scope, args, context) {
        return fn(evalArg0(scope, args, context));
      };
    } else if (evalArgs.length === 2) {
      var _evalArg = evalArgs[0];
      var evalArg1 = evalArgs[1];
      return function evalOperatorNode(scope, args, context) {
        return fn(_evalArg(scope, args, context), evalArg1(scope, args, context));
      };
    } else {
      return function evalOperatorNode(scope, args, context) {
        return fn.apply(null, Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["map"])(evalArgs, function (evalArg) {
          return evalArg(scope, args, context);
        }));
      };
    }
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  OperatorNode.prototype.forEach = function (callback) {
    for (var i = 0; i < this.args.length; i++) {
      callback(this.args[i], 'args[' + i + ']', this);
    }
  };
  /**
   * Create a new OperatorNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {OperatorNode} Returns a transformed copy of the node
   */


  OperatorNode.prototype.map = function (callback) {
    var args = [];

    for (var i = 0; i < this.args.length; i++) {
      args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));
    }

    return new OperatorNode(this.op, this.fn, args, this.implicit);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {OperatorNode}
   */


  OperatorNode.prototype.clone = function () {
    return new OperatorNode(this.op, this.fn, this.args.slice(0), this.implicit);
  };
  /**
   * Check whether this is an unary OperatorNode:
   * has exactly one argument, like `-a`.
   * @return {boolean} Returns true when an unary operator node, false otherwise.
   */


  OperatorNode.prototype.isUnary = function () {
    return this.args.length === 1;
  };
  /**
   * Check whether this is a binary OperatorNode:
   * has exactly two arguments, like `a + b`.
   * @return {boolean} Returns true when a binary operator node, false otherwise.
   */


  OperatorNode.prototype.isBinary = function () {
    return this.args.length === 2;
  };
  /**
   * Calculate which parentheses are necessary. Gets an OperatorNode
   * (which is the root of the tree) and an Array of Nodes
   * (this.args) and returns an array where 'true' means that an argument
   * has to be enclosed in parentheses whereas 'false' means the opposite.
   *
   * @param {OperatorNode} root
   * @param {string} parenthesis
   * @param {Node[]} args
   * @param {boolean} latex
   * @return {boolean[]}
   * @private
   */


  function calculateNecessaryParentheses(root, parenthesis, implicit, args, latex) {
    // precedence of the root OperatorNode
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getPrecedence"])(root, parenthesis);
    var associativity = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getAssociativity"])(root, parenthesis);

    if (parenthesis === 'all' || args.length > 2 && root.getIdentifier() !== 'OperatorNode:add' && root.getIdentifier() !== 'OperatorNode:multiply') {
      return args.map(function (arg) {
        switch (arg.getContent().type) {
          // Nodes that don't need extra parentheses
          case 'ArrayNode':
          case 'ConstantNode':
          case 'SymbolNode':
          case 'ParenthesisNode':
            return false;

          default:
            return true;
        }
      });
    }

    var result;

    switch (args.length) {
      case 0:
        result = [];
        break;

      case 1:
        // unary operators
        {
          // precedence of the operand
          var operandPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getPrecedence"])(args[0], parenthesis); // handle special cases for LaTeX, where some of the parentheses aren't needed

          if (latex && operandPrecedence !== null) {
            var operandIdentifier;
            var rootIdentifier;

            if (parenthesis === 'keep') {
              operandIdentifier = args[0].getIdentifier();
              rootIdentifier = root.getIdentifier();
            } else {
              // Ignore Parenthesis Nodes when not in 'keep' mode
              operandIdentifier = args[0].getContent().getIdentifier();
              rootIdentifier = root.getContent().getIdentifier();
            }

            if (_operators__WEBPACK_IMPORTED_MODULE_4__["properties"][precedence][rootIdentifier].latexLeftParens === false) {
              result = [false];
              break;
            }

            if (_operators__WEBPACK_IMPORTED_MODULE_4__["properties"][operandPrecedence][operandIdentifier].latexParens === false) {
              result = [false];
              break;
            }
          }

          if (operandPrecedence === null) {
            // if the operand has no defined precedence, no parens are needed
            result = [false];
            break;
          }

          if (operandPrecedence <= precedence) {
            // if the operands precedence is lower, parens are needed
            result = [true];
            break;
          } // otherwise, no parens needed


          result = [false];
        }
        break;

      case 2:
        // binary operators
        {
          var lhsParens; // left hand side needs parenthesis?
          // precedence of the left hand side

          var lhsPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getPrecedence"])(args[0], parenthesis); // is the root node associative with the left hand side

          var assocWithLhs = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["isAssociativeWith"])(root, args[0], parenthesis);

          if (lhsPrecedence === null) {
            // if the left hand side has no defined precedence, no parens are needed
            // FunctionNode for example
            lhsParens = false;
          } else if (lhsPrecedence === precedence && associativity === 'right' && !assocWithLhs) {
            // In case of equal precedence, if the root node is left associative
            // parens are **never** necessary for the left hand side.
            // If it is right associative however, parens are necessary
            // if the root node isn't associative with the left hand side
            lhsParens = true;
          } else if (lhsPrecedence < precedence) {
            lhsParens = true;
          } else {
            lhsParens = false;
          }

          var rhsParens; // right hand side needs parenthesis?
          // precedence of the right hand side

          var rhsPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getPrecedence"])(args[1], parenthesis); // is the root node associative with the right hand side?

          var assocWithRhs = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["isAssociativeWith"])(root, args[1], parenthesis);

          if (rhsPrecedence === null) {
            // if the right hand side has no defined precedence, no parens are needed
            // FunctionNode for example
            rhsParens = false;
          } else if (rhsPrecedence === precedence && associativity === 'left' && !assocWithRhs) {
            // In case of equal precedence, if the root node is right associative
            // parens are **never** necessary for the right hand side.
            // If it is left associative however, parens are necessary
            // if the root node isn't associative with the right hand side
            rhsParens = true;
          } else if (rhsPrecedence < precedence) {
            rhsParens = true;
          } else {
            rhsParens = false;
          } // handle special cases for LaTeX, where some of the parentheses aren't needed


          if (latex) {
            var _rootIdentifier;

            var lhsIdentifier;
            var rhsIdentifier;

            if (parenthesis === 'keep') {
              _rootIdentifier = root.getIdentifier();
              lhsIdentifier = root.args[0].getIdentifier();
              rhsIdentifier = root.args[1].getIdentifier();
            } else {
              // Ignore ParenthesisNodes when not in 'keep' mode
              _rootIdentifier = root.getContent().getIdentifier();
              lhsIdentifier = root.args[0].getContent().getIdentifier();
              rhsIdentifier = root.args[1].getContent().getIdentifier();
            }

            if (lhsPrecedence !== null) {
              if (_operators__WEBPACK_IMPORTED_MODULE_4__["properties"][precedence][_rootIdentifier].latexLeftParens === false) {
                lhsParens = false;
              }

              if (_operators__WEBPACK_IMPORTED_MODULE_4__["properties"][lhsPrecedence][lhsIdentifier].latexParens === false) {
                lhsParens = false;
              }
            }

            if (rhsPrecedence !== null) {
              if (_operators__WEBPACK_IMPORTED_MODULE_4__["properties"][precedence][_rootIdentifier].latexRightParens === false) {
                rhsParens = false;
              }

              if (_operators__WEBPACK_IMPORTED_MODULE_4__["properties"][rhsPrecedence][rhsIdentifier].latexParens === false) {
                rhsParens = false;
              }
            }
          }

          result = [lhsParens, rhsParens];
        }
        break;

      default:
        if (root.getIdentifier() === 'OperatorNode:add' || root.getIdentifier() === 'OperatorNode:multiply') {
          result = args.map(function (arg) {
            var argPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getPrecedence"])(arg, parenthesis);
            var assocWithArg = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["isAssociativeWith"])(root, arg, parenthesis);
            var argAssociativity = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getAssociativity"])(arg, parenthesis);

            if (argPrecedence === null) {
              // if the argument has no defined precedence, no parens are needed
              return false;
            } else if (precedence === argPrecedence && associativity === argAssociativity && !assocWithArg) {
              return true;
            } else if (argPrecedence < precedence) {
              return true;
            }

            return false;
          });
        }

        break;
    } // handles an edge case of 'auto' parentheses with implicit multiplication of ConstantNode
    // In that case print parentheses for ParenthesisNodes even though they normally wouldn't be
    // printed.


    if (args.length >= 2 && root.getIdentifier() === 'OperatorNode:multiply' && root.implicit && parenthesis === 'auto' && implicit === 'hide') {
      result = args.map(function (arg, index) {
        var isParenthesisNode = arg.getIdentifier() === 'ParenthesisNode';

        if (result[index] || isParenthesisNode) {
          // put in parenthesis?
          return true;
        }

        return false;
      });
    }

    return result;
  }
  /**
   * Get string representation.
   * @param {Object} options
   * @return {string} str
   */


  OperatorNode.prototype._toString = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var implicit = options && options.implicit ? options.implicit : 'hide';
    var args = this.args;
    var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);

    if (args.length === 1) {
      // unary operators
      var assoc = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getAssociativity"])(this, parenthesis);
      var operand = args[0].toString(options);

      if (parens[0]) {
        operand = '(' + operand + ')';
      } // for example for "not", we want a space between operand and argument


      var opIsNamed = /[a-zA-Z]+/.test(this.op);

      if (assoc === 'right') {
        // prefix operator
        return this.op + (opIsNamed ? ' ' : '') + operand;
      } else if (assoc === 'left') {
        // postfix
        return operand + (opIsNamed ? ' ' : '') + this.op;
      } // fall back to postfix


      return operand + this.op;
    } else if (args.length === 2) {
      var lhs = args[0].toString(options); // left hand side

      var rhs = args[1].toString(options); // right hand side

      if (parens[0]) {
        // left hand side in parenthesis?
        lhs = '(' + lhs + ')';
      }

      if (parens[1]) {
        // right hand side in parenthesis?
        rhs = '(' + rhs + ')';
      }

      if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {
        return lhs + ' ' + rhs;
      }

      return lhs + ' ' + this.op + ' ' + rhs;
    } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {
      var stringifiedArgs = args.map(function (arg, index) {
        arg = arg.toString(options);

        if (parens[index]) {
          // put in parenthesis?
          arg = '(' + arg + ')';
        }

        return arg;
      });

      if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {
        return stringifiedArgs.join(' ');
      }

      return stringifiedArgs.join(' ' + this.op + ' ');
    } else {
      // fallback to formatting as a function call
      return this.fn + '(' + this.args.join(', ') + ')';
    }
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  OperatorNode.prototype.toJSON = function () {
    return {
      mathjs: 'OperatorNode',
      op: this.op,
      fn: this.fn,
      args: this.args,
      implicit: this.implicit
    };
  };
  /**
   * Instantiate an OperatorNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "OperatorNode", "op": "+", "fn": "add", "args": [...], "implicit": false}`,
   *                       where mathjs is optional
   * @returns {OperatorNode}
   */


  OperatorNode.fromJSON = function (json) {
    return new OperatorNode(json.op, json.fn, json.args, json.implicit);
  };
  /**
   * Get HTML representation.
   * @param {Object} options
   * @return {string} str
   */


  OperatorNode.prototype.toHTML = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var implicit = options && options.implicit ? options.implicit : 'hide';
    var args = this.args;
    var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);

    if (args.length === 1) {
      // unary operators
      var assoc = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getAssociativity"])(this, parenthesis);
      var operand = args[0].toHTML(options);

      if (parens[0]) {
        operand = '<span class="math-parenthesis math-round-parenthesis">(</span>' + operand + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }

      if (assoc === 'right') {
        // prefix operator
        return '<span class="math-operator math-unary-operator math-lefthand-unary-operator">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.op) + '</span>' + operand;
      } else {
        // postfix when assoc === 'left' or undefined
        return operand + '<span class="math-operator math-unary-operator math-righthand-unary-operator">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.op) + '</span>';
      }
    } else if (args.length === 2) {
      // binary operatoes
      var lhs = args[0].toHTML(options); // left hand side

      var rhs = args[1].toHTML(options); // right hand side

      if (parens[0]) {
        // left hand side in parenthesis?
        lhs = '<span class="math-parenthesis math-round-parenthesis">(</span>' + lhs + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }

      if (parens[1]) {
        // right hand side in parenthesis?
        rhs = '<span class="math-parenthesis math-round-parenthesis">(</span>' + rhs + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }

      if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {
        return lhs + '<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>' + rhs;
      }

      return lhs + '<span class="math-operator math-binary-operator math-explicit-binary-operator">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.op) + '</span>' + rhs;
    } else {
      var stringifiedArgs = args.map(function (arg, index) {
        arg = arg.toHTML(options);

        if (parens[index]) {
          // put in parenthesis?
          arg = '<span class="math-parenthesis math-round-parenthesis">(</span>' + arg + '<span class="math-parenthesis math-round-parenthesis">)</span>';
        }

        return arg;
      });

      if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {
        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {
          return stringifiedArgs.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>');
        }

        return stringifiedArgs.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.op) + '</span>');
      } else {
        // fallback to formatting as a function call
        return '<span class="math-function">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["escape"])(this.fn) + '</span><span class="math-paranthesis math-round-parenthesis">(</span>' + stringifiedArgs.join('<span class="math-separator">,</span>') + '<span class="math-paranthesis math-round-parenthesis">)</span>';
      }
    }
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  OperatorNode.prototype._toTex = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var implicit = options && options.implicit ? options.implicit : 'hide';
    var args = this.args;
    var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, true);
    var op = _utils_latex__WEBPACK_IMPORTED_MODULE_5__["latexOperators"][this.fn];
    op = typeof op === 'undefined' ? this.op : op; // fall back to using this.op

    if (args.length === 1) {
      // unary operators
      var assoc = Object(_operators__WEBPACK_IMPORTED_MODULE_4__["getAssociativity"])(this, parenthesis);
      var operand = args[0].toTex(options);

      if (parens[0]) {
        operand = "\\left(".concat(operand, "\\right)");
      }

      if (assoc === 'right') {
        // prefix operator
        return op + operand;
      } else if (assoc === 'left') {
        // postfix operator
        return operand + op;
      } // fall back to postfix


      return operand + op;
    } else if (args.length === 2) {
      // binary operators
      var lhs = args[0]; // left hand side

      var lhsTex = lhs.toTex(options);

      if (parens[0]) {
        lhsTex = "\\left(".concat(lhsTex, "\\right)");
      }

      var rhs = args[1]; // right hand side

      var rhsTex = rhs.toTex(options);

      if (parens[1]) {
        rhsTex = "\\left(".concat(rhsTex, "\\right)");
      } // handle some exceptions (due to the way LaTeX works)


      var lhsIdentifier;

      if (parenthesis === 'keep') {
        lhsIdentifier = lhs.getIdentifier();
      } else {
        // Ignore ParenthesisNodes if in 'keep' mode
        lhsIdentifier = lhs.getContent().getIdentifier();
      }

      switch (this.getIdentifier()) {
        case 'OperatorNode:divide':
          // op contains '\\frac' at this point
          return op + '{' + lhsTex + '}' + '{' + rhsTex + '}';

        case 'OperatorNode:pow':
          lhsTex = '{' + lhsTex + '}';
          rhsTex = '{' + rhsTex + '}';

          switch (lhsIdentifier) {
            case 'ConditionalNode': //

            case 'OperatorNode:divide':
              lhsTex = "\\left(".concat(lhsTex, "\\right)");
          }

          break;

        case 'OperatorNode:multiply':
          if (this.implicit && implicit === 'hide') {
            return lhsTex + '~' + rhsTex;
          }

      }

      return lhsTex + op + rhsTex;
    } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {
      var texifiedArgs = args.map(function (arg, index) {
        arg = arg.toTex(options);

        if (parens[index]) {
          arg = "\\left(".concat(arg, "\\right)");
        }

        return arg;
      });

      if (this.getIdentifier() === 'OperatorNode:multiply' && this.implicit) {
        return texifiedArgs.join('~');
      }

      return texifiedArgs.join(op);
    } else {
      // fall back to formatting as a function call
      // as this is a fallback, it doesn't use
      // fancy function names
      return '\\mathrm{' + this.fn + '}\\left(' + args.map(function (arg) {
        return arg.toTex(options);
      }).join(',') + '\\right)';
    }
  };
  /**
   * Get identifier.
   * @return {string}
   */


  OperatorNode.prototype.getIdentifier = function () {
    return this.type + ':' + this.fn;
  };

  return OperatorNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/ParenthesisNode.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/ParenthesisNode.js ***!
  \********************************************************************/
/*! exports provided: createParenthesisNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createParenthesisNode", function() { return createParenthesisNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'ParenthesisNode';
var dependencies = ['Node'];
var createParenthesisNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * @constructor ParenthesisNode
   * @extends {Node}
   * A parenthesis node describes manual parenthesis from the user input
   * @param {Node} content
   * @extends {Node}
   */
  function ParenthesisNode(content) {
    if (!(this instanceof ParenthesisNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // validate input


    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(content)) {
      throw new TypeError('Node expected for parameter "content"');
    }

    this.content = content;
  }

  ParenthesisNode.prototype = new Node();
  ParenthesisNode.prototype.type = 'ParenthesisNode';
  ParenthesisNode.prototype.isParenthesisNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  ParenthesisNode.prototype._compile = function (math, argNames) {
    return this.content._compile(math, argNames);
  };
  /**
   * Get the content of the current Node.
   * @return {Node} content
   * @override
   **/


  ParenthesisNode.prototype.getContent = function () {
    return this.content.getContent();
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  ParenthesisNode.prototype.forEach = function (callback) {
    callback(this.content, 'content', this);
  };
  /**
   * Create a new ParenthesisNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node) : Node} callback
   * @returns {ParenthesisNode} Returns a clone of the node
   */


  ParenthesisNode.prototype.map = function (callback) {
    var content = callback(this.content, 'content', this);
    return new ParenthesisNode(content);
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {ParenthesisNode}
   */


  ParenthesisNode.prototype.clone = function () {
    return new ParenthesisNode(this.content);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  ParenthesisNode.prototype._toString = function (options) {
    if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {
      return '(' + this.content.toString(options) + ')';
    }

    return this.content.toString(options);
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  ParenthesisNode.prototype.toJSON = function () {
    return {
      mathjs: 'ParenthesisNode',
      content: this.content
    };
  };
  /**
   * Instantiate an ParenthesisNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "ParenthesisNode", "content": ...}`,
   *                       where mathjs is optional
   * @returns {ParenthesisNode}
   */


  ParenthesisNode.fromJSON = function (json) {
    return new ParenthesisNode(json.content);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  ParenthesisNode.prototype.toHTML = function (options) {
    if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {
      return '<span class="math-parenthesis math-round-parenthesis">(</span>' + this.content.toHTML(options) + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    return this.content.toHTML(options);
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  ParenthesisNode.prototype._toTex = function (options) {
    if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {
      return "\\left(".concat(this.content.toTex(options), "\\right)");
    }

    return this.content.toTex(options);
  };

  return ParenthesisNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/RangeNode.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/RangeNode.js ***!
  \**************************************************************/
/*! exports provided: createRangeNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRangeNode", function() { return createRangeNode; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators */ "../node_modules/mathjs/es/expression/operators.js");



var name = 'RangeNode';
var dependencies = ['Node'];
var createRangeNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * @constructor RangeNode
   * @extends {Node}
   * create a range
   * @param {Node} start  included lower-bound
   * @param {Node} end    included upper-bound
   * @param {Node} [step] optional step
   */
  function RangeNode(start, end, step) {
    if (!(this instanceof RangeNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // validate inputs


    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(start)) throw new TypeError('Node expected');
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(end)) throw new TypeError('Node expected');
    if (step && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(step)) throw new TypeError('Node expected');
    if (arguments.length > 3) throw new Error('Too many arguments');
    this.start = start; // included lower-bound

    this.end = end; // included upper-bound

    this.step = step || null; // optional step
  }

  RangeNode.prototype = new Node();
  RangeNode.prototype.type = 'RangeNode';
  RangeNode.prototype.isRangeNode = true;
  /**
   * Check whether the RangeNode needs the `end` symbol to be defined.
   * This end is the size of the Matrix in current dimension.
   * @return {boolean}
   */

  RangeNode.prototype.needsEnd = function () {
    // find all `end` symbols in this RangeNode
    var endSymbols = this.filter(function (node) {
      return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(node) && node.name === 'end';
    });
    return endSymbols.length > 0;
  };
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */


  RangeNode.prototype._compile = function (math, argNames) {
    var range = math.range;

    var evalStart = this.start._compile(math, argNames);

    var evalEnd = this.end._compile(math, argNames);

    if (this.step) {
      var evalStep = this.step._compile(math, argNames);

      return function evalRangeNode(scope, args, context) {
        return range(evalStart(scope, args, context), evalEnd(scope, args, context), evalStep(scope, args, context));
      };
    } else {
      return function evalRangeNode(scope, args, context) {
        return range(evalStart(scope, args, context), evalEnd(scope, args, context));
      };
    }
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  RangeNode.prototype.forEach = function (callback) {
    callback(this.start, 'start', this);
    callback(this.end, 'end', this);

    if (this.step) {
      callback(this.step, 'step', this);
    }
  };
  /**
   * Create a new RangeNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {RangeNode} Returns a transformed copy of the node
   */


  RangeNode.prototype.map = function (callback) {
    return new RangeNode(this._ifNode(callback(this.start, 'start', this)), this._ifNode(callback(this.end, 'end', this)), this.step && this._ifNode(callback(this.step, 'step', this)));
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {RangeNode}
   */


  RangeNode.prototype.clone = function () {
    return new RangeNode(this.start, this.end, this.step && this.step);
  };
  /**
   * Calculate the necessary parentheses
   * @param {Node} node
   * @param {string} parenthesis
   * @return {Object} parentheses
   * @private
   */


  function calculateNecessaryParentheses(node, parenthesis) {
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(node, parenthesis);
    var parens = {};
    var startPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(node.start, parenthesis);
    parens.start = startPrecedence !== null && startPrecedence <= precedence || parenthesis === 'all';

    if (node.step) {
      var stepPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(node.step, parenthesis);
      parens.step = stepPrecedence !== null && stepPrecedence <= precedence || parenthesis === 'all';
    }

    var endPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_2__["getPrecedence"])(node.end, parenthesis);
    parens.end = endPrecedence !== null && endPrecedence <= precedence || parenthesis === 'all';
    return parens;
  }
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   */


  RangeNode.prototype._toString = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop

    var str;
    var start = this.start.toString(options);

    if (parens.start) {
      start = '(' + start + ')';
    }

    str = start;

    if (this.step) {
      var step = this.step.toString(options);

      if (parens.step) {
        step = '(' + step + ')';
      }

      str += ':' + step;
    }

    var end = this.end.toString(options);

    if (parens.end) {
      end = '(' + end + ')';
    }

    str += ':' + end;
    return str;
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  RangeNode.prototype.toJSON = function () {
    return {
      mathjs: 'RangeNode',
      start: this.start,
      end: this.end,
      step: this.step
    };
  };
  /**
   * Instantiate an RangeNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "RangeNode", "start": ..., "end": ..., "step": ...}`,
   *                       where mathjs is optional
   * @returns {RangeNode}
   */


  RangeNode.fromJSON = function (json) {
    return new RangeNode(json.start, json.end, json.step);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   */


  RangeNode.prototype.toHTML = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop

    var str;
    var start = this.start.toHTML(options);

    if (parens.start) {
      start = '<span class="math-parenthesis math-round-parenthesis">(</span>' + start + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    str = start;

    if (this.step) {
      var step = this.step.toHTML(options);

      if (parens.step) {
        step = '<span class="math-parenthesis math-round-parenthesis">(</span>' + step + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }

      str += '<span class="math-operator math-range-operator">:</span>' + step;
    }

    var end = this.end.toHTML(options);

    if (parens.end) {
      end = '<span class="math-parenthesis math-round-parenthesis">(</span>' + end + '<span class="math-parenthesis math-round-parenthesis">)</span>';
    }

    str += '<span class="math-operator math-range-operator">:</span>' + end;
    return str;
  };
  /**
   * Get LaTeX representation
   * @params {Object} options
   * @return {string} str
   */


  RangeNode.prototype._toTex = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var parens = calculateNecessaryParentheses(this, parenthesis);
    var str = this.start.toTex(options);

    if (parens.start) {
      str = "\\left(".concat(str, "\\right)");
    }

    if (this.step) {
      var step = this.step.toTex(options);

      if (parens.step) {
        step = "\\left(".concat(step, "\\right)");
      }

      str += ':' + step;
    }

    var end = this.end.toTex(options);

    if (parens.end) {
      end = "\\left(".concat(end, "\\right)");
    }

    str += ':' + end;
    return str;
  };

  return RangeNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/RelationalNode.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/RelationalNode.js ***!
  \*******************************************************************/
/*! exports provided: createRelationalNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRelationalNode", function() { return createRelationalNode; });
/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operators */ "../node_modules/mathjs/es/expression/operators.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _utils_latex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/latex */ "../node_modules/mathjs/es/utils/latex.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");





var name = 'RelationalNode';
var dependencies = ['Node'];
var createRelationalNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_4__["factory"])(name, dependencies, function (_ref) {
  var Node = _ref.Node;

  /**
   * A node representing a chained conditional expression, such as 'x > y > z'
   *
   * @param {String[]} conditionals   An array of conditional operators used to compare the parameters
   * @param {Node[]} params   The parameters that will be compared
   *
   * @constructor RelationalNode
   * @extends {Node}
   */
  function RelationalNode(conditionals, params) {
    if (!(this instanceof RelationalNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (!Array.isArray(conditionals)) throw new TypeError('Parameter conditionals must be an array');
    if (!Array.isArray(params)) throw new TypeError('Parameter params must be an array');
    if (conditionals.length !== params.length - 1) throw new TypeError('Parameter params must contain exactly one more element than parameter conditionals');
    this.conditionals = conditionals;
    this.params = params;
  }

  RelationalNode.prototype = new Node();
  RelationalNode.prototype.type = 'RelationalNode';
  RelationalNode.prototype.isRelationalNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  RelationalNode.prototype._compile = function (math, argNames) {
    var self = this;
    var compiled = this.params.map(function (p) {
      return p._compile(math, argNames);
    });
    return function evalRelationalNode(scope, args, context) {
      var evalLhs;
      var evalRhs = compiled[0](scope, args, context);

      for (var i = 0; i < self.conditionals.length; i++) {
        evalLhs = evalRhs;
        evalRhs = compiled[i + 1](scope, args, context);
        var condFn = Object(_utils_customs__WEBPACK_IMPORTED_MODULE_2__["getSafeProperty"])(math, self.conditionals[i]);

        if (!condFn(evalLhs, evalRhs)) {
          return false;
        }
      }

      return true;
    };
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  RelationalNode.prototype.forEach = function (callback) {
    var _this = this;

    this.params.forEach(function (n, i) {
      return callback(n, 'params[' + i + ']', _this);
    }, this);
  };
  /**
   * Create a new RelationalNode having its childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node): Node} callback
   * @returns {RelationalNode} Returns a transformed copy of the node
   */


  RelationalNode.prototype.map = function (callback) {
    var _this2 = this;

    return new RelationalNode(this.conditionals.slice(), this.params.map(function (n, i) {
      return _this2._ifNode(callback(n, 'params[' + i + ']', _this2));
    }, this));
  };
  /**
   * Create a clone of this node, a shallow copy
   * @return {RelationalNode}
   */


  RelationalNode.prototype.clone = function () {
    return new RelationalNode(this.conditionals, this.params);
  };
  /**
   * Get string representation.
   * @param {Object} options
   * @return {string} str
   */


  RelationalNode.prototype._toString = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_0__["getPrecedence"])(this, parenthesis);
    var paramStrings = this.params.map(function (p, index) {
      var paramPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_0__["getPrecedence"])(p, parenthesis);
      return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '(' + p.toString(options) + ')' : p.toString(options);
    });
    var operatorMap = {
      equal: '==',
      unequal: '!=',
      smaller: '<',
      larger: '>',
      smallerEq: '<=',
      largerEq: '>='
    };
    var ret = paramStrings[0];

    for (var i = 0; i < this.conditionals.length; i++) {
      ret += ' ' + operatorMap[this.conditionals[i]] + ' ' + paramStrings[i + 1];
    }

    return ret;
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  RelationalNode.prototype.toJSON = function () {
    return {
      mathjs: 'RelationalNode',
      conditionals: this.conditionals,
      params: this.params
    };
  };
  /**
   * Instantiate a RelationalNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "RelationalNode", "condition": ..., "trueExpr": ..., "falseExpr": ...}`,
   *                       where mathjs is optional
   * @returns {RelationalNode}
   */


  RelationalNode.fromJSON = function (json) {
    return new RelationalNode(json.conditionals, json.params);
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   */


  RelationalNode.prototype.toHTML = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_0__["getPrecedence"])(this, parenthesis);
    var paramStrings = this.params.map(function (p, index) {
      var paramPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_0__["getPrecedence"])(p, parenthesis);
      return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '<span class="math-parenthesis math-round-parenthesis">(</span>' + p.toHTML(options) + '<span class="math-parenthesis math-round-parenthesis">)</span>' : p.toHTML(options);
    });
    var operatorMap = {
      equal: '==',
      unequal: '!=',
      smaller: '<',
      larger: '>',
      smallerEq: '<=',
      largerEq: '>='
    };
    var ret = paramStrings[0];

    for (var i = 0; i < this.conditionals.length; i++) {
      ret += '<span class="math-operator math-binary-operator math-explicit-binary-operator">' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["escape"])(operatorMap[this.conditionals[i]]) + '</span>' + paramStrings[i + 1];
    }

    return ret;
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   */


  RelationalNode.prototype._toTex = function (options) {
    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';
    var precedence = Object(_operators__WEBPACK_IMPORTED_MODULE_0__["getPrecedence"])(this, parenthesis);
    var paramStrings = this.params.map(function (p, index) {
      var paramPrecedence = Object(_operators__WEBPACK_IMPORTED_MODULE_0__["getPrecedence"])(p, parenthesis);
      return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '\\left(' + p.toTex(options) + '\right)' : p.toTex(options);
    });
    var ret = paramStrings[0];

    for (var i = 0; i < this.conditionals.length; i++) {
      ret += _utils_latex__WEBPACK_IMPORTED_MODULE_3__["latexOperators"][this.conditionals[i]] + paramStrings[i + 1];
    }

    return ret;
  };

  return RelationalNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/SymbolNode.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/SymbolNode.js ***!
  \***************************************************************/
/*! exports provided: createSymbolNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSymbolNode", function() { return createSymbolNode; });
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_latex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/latex */ "../node_modules/mathjs/es/utils/latex.js");




var name = 'SymbolNode';
var dependencies = ['math', '?Unit', 'Node'];
var createSymbolNode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var math = _ref.math,
      Unit = _ref.Unit,
      Node = _ref.Node;

  /**
   * Check whether some name is a valueless unit like "inch".
   * @param {string} name
   * @return {boolean}
   */
  function isValuelessUnit(name) {
    return Unit ? Unit.isValuelessUnit(name) : false;
  }
  /**
   * @constructor SymbolNode
   * @extends {Node}
   * A symbol node can hold and resolve a symbol
   * @param {string} name
   * @extends {Node}
   */


  function SymbolNode(name) {
    if (!(this instanceof SymbolNode)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // validate input


    if (typeof name !== 'string') throw new TypeError('String expected for parameter "name"');
    this.name = name;
  }

  SymbolNode.prototype = new Node();
  SymbolNode.prototype.type = 'SymbolNode';
  SymbolNode.prototype.isSymbolNode = true;
  /**
   * Compile a node into a JavaScript function.
   * This basically pre-calculates as much as possible and only leaves open
   * calculations which depend on a dynamic scope with variables.
   * @param {Object} math     Math.js namespace with functions and constants.
   * @param {Object} argNames An object with argument names as key and `true`
   *                          as value. Used in the SymbolNode to optimize
   *                          for arguments from user assigned functions
   *                          (see FunctionAssignmentNode) or special symbols
   *                          like `end` (see IndexNode).
   * @return {function} Returns a function which can be called like:
   *                        evalNode(scope: Object, args: Object, context: *)
   */

  SymbolNode.prototype._compile = function (math, argNames) {
    var name = this.name;

    if (argNames[name] === true) {
      // this is a FunctionAssignment argument
      // (like an x when inside the expression of a function assignment `f(x) = ...`)
      return function (scope, args, context) {
        return args[name];
      };
    } else if (name in math) {
      return function (scope, args, context) {
        return name in scope ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["getSafeProperty"])(scope, name) : Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["getSafeProperty"])(math, name);
      };
    } else {
      var isUnit = isValuelessUnit(name);
      return function (scope, args, context) {
        return name in scope ? Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["getSafeProperty"])(scope, name) : isUnit ? new Unit(null, name) : undef(name);
      };
    }
  };
  /**
   * Execute a callback for each of the child nodes of this node
   * @param {function(child: Node, path: string, parent: Node)} callback
   */


  SymbolNode.prototype.forEach = function (callback) {// nothing to do, we don't have childs
  };
  /**
   * Create a new SymbolNode having it's childs be the results of calling
   * the provided callback function for each of the childs of the original node.
   * @param {function(child: Node, path: string, parent: Node) : Node} callback
   * @returns {SymbolNode} Returns a clone of the node
   */


  SymbolNode.prototype.map = function (callback) {
    return this.clone();
  };
  /**
   * Throws an error 'Undefined symbol {name}'
   * @param {string} name
   */


  function undef(name) {
    throw new Error('Undefined symbol ' + name);
  }
  /**
   * Create a clone of this node, a shallow copy
   * @return {SymbolNode}
   */


  SymbolNode.prototype.clone = function () {
    return new SymbolNode(this.name);
  };
  /**
   * Get string representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  SymbolNode.prototype._toString = function (options) {
    return this.name;
  };
  /**
   * Get HTML representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  SymbolNode.prototype.toHTML = function (options) {
    var name = Object(_utils_string__WEBPACK_IMPORTED_MODULE_0__["escape"])(this.name);

    if (name === 'true' || name === 'false') {
      return '<span class="math-symbol math-boolean">' + name + '</span>';
    } else if (name === 'i') {
      return '<span class="math-symbol math-imaginary-symbol">' + name + '</span>';
    } else if (name === 'Infinity') {
      return '<span class="math-symbol math-infinity-symbol">' + name + '</span>';
    } else if (name === 'NaN') {
      return '<span class="math-symbol math-nan-symbol">' + name + '</span>';
    } else if (name === 'null') {
      return '<span class="math-symbol math-null-symbol">' + name + '</span>';
    } else if (name === 'undefined') {
      return '<span class="math-symbol math-undefined-symbol">' + name + '</span>';
    }

    return '<span class="math-symbol">' + name + '</span>';
  };
  /**
   * Get a JSON representation of the node
   * @returns {Object}
   */


  SymbolNode.prototype.toJSON = function () {
    return {
      mathjs: 'SymbolNode',
      name: this.name
    };
  };
  /**
   * Instantiate a SymbolNode from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "SymbolNode", name: "x"}`,
   *                       where mathjs is optional
   * @returns {SymbolNode}
   */


  SymbolNode.fromJSON = function (json) {
    return new SymbolNode(json.name);
  };
  /**
   * Get LaTeX representation
   * @param {Object} options
   * @return {string} str
   * @override
   */


  SymbolNode.prototype._toTex = function (options) {
    var isUnit = false;

    if (typeof math[this.name] === 'undefined' && isValuelessUnit(this.name)) {
      isUnit = true;
    }

    var symbol = Object(_utils_latex__WEBPACK_IMPORTED_MODULE_3__["toSymbol"])(this.name, isUnit);

    if (symbol[0] === '\\') {
      // no space needed if the symbol starts with '\'
      return symbol;
    } // the space prevents symbols from breaking stuff like '\cdot' if it's written right before the symbol


    return ' ' + symbol;
  };

  return SymbolNode;
}, {
  isClass: true,
  isNode: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/utils/access.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/utils/access.js ***!
  \*****************************************************************/
/*! exports provided: accessFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessFactory", function() { return accessFactory; });
/* harmony import */ var _transform_utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../transform/utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function accessFactory(_ref) {
  var subset = _ref.subset;

  /**
   * Retrieve part of an object:
   *
   * - Retrieve a property from an object
   * - Retrieve a part of a string
   * - Retrieve a matrix subset
   *
   * @param {Object | Array | Matrix | string} object
   * @param {Index} index
   * @return {Object | Array | Matrix | string} Returns the subset
   */
  return function access(object, index) {
    try {
      if (Array.isArray(object)) {
        return subset(object, index);
      } else if (object && typeof object.subset === 'function') {
        // Matrix
        return object.subset(index);
      } else if (typeof object === 'string') {
        // TODO: move getStringSubset into a separate util file, use that
        return subset(object, index);
      } else if (_typeof(object) === 'object') {
        if (!index.isObjectProperty()) {
          throw new TypeError('Cannot apply a numeric index as object property');
        }

        return Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["getSafeProperty"])(object, index.getObjectProperty());
      } else {
        throw new TypeError('Cannot apply index: unsupported type of object');
      }
    } catch (err) {
      throw Object(_transform_utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__["errorTransform"])(err);
    }
  };
}

/***/ }),

/***/ "../node_modules/mathjs/es/expression/node/utils/assign.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/node/utils/assign.js ***!
  \*****************************************************************/
/*! exports provided: assignFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assignFactory", function() { return assignFactory; });
/* harmony import */ var _transform_utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../transform/utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function assignFactory(_ref) {
  var subset = _ref.subset,
      matrix = _ref.matrix;

  /**
   * Replace part of an object:
   *
   * - Assign a property to an object
   * - Replace a part of a string
   * - Replace a matrix subset
   *
   * @param {Object | Array | Matrix | string} object
   * @param {Index} index
   * @param {*} value
   * @return {Object | Array | Matrix | string} Returns the original object
   *                                            except in case of a string
   */
  // TODO: change assign to return the value instead of the object
  return function assign(object, index, value) {
    try {
      if (Array.isArray(object)) {
        // we use matrix.subset here instead of the function subset because we must not clone the contents
        return matrix(object).subset(index, value).valueOf();
      } else if (object && typeof object.subset === 'function') {
        // Matrix
        return object.subset(index, value);
      } else if (typeof object === 'string') {
        // TODO: move setStringSubset into a separate util file, use that
        return subset(object, index, value);
      } else if (_typeof(object) === 'object') {
        if (!index.isObjectProperty()) {
          throw TypeError('Cannot apply a numeric index as object property');
        }

        Object(_utils_customs__WEBPACK_IMPORTED_MODULE_1__["setSafeProperty"])(object, index.getObjectProperty(), value);
        return object;
      } else {
        throw new TypeError('Cannot apply index: unsupported type of object');
      }
    } catch (err) {
      throw Object(_transform_utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__["errorTransform"])(err);
    }
  };
}

/***/ }),

/***/ "../node_modules/mathjs/es/expression/operators.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/expression/operators.js ***!
  \*********************************************************/
/*! exports provided: properties, getPrecedence, getAssociativity, isAssociativeWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "properties", function() { return properties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPrecedence", function() { return getPrecedence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAssociativity", function() { return getAssociativity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAssociativeWith", function() { return isAssociativeWith; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/object */ "../node_modules/mathjs/es/utils/object.js");
// list of identifiers of nodes in order of their precedence
// also contains information about left/right associativity
// and which other operator the operator is associative with
// Example:
// addition is associative with addition and subtraction, because:
// (a+b)+c=a+(b+c)
// (a+b)-c=a+(b-c)
//
// postfix operators are left associative, prefix operators
// are right associative
//
// It's also possible to set the following properties:
// latexParens: if set to false, this node doesn't need to be enclosed
//              in parentheses when using LaTeX
// latexLeftParens: if set to false, this !OperatorNode's!
//                  left argument doesn't need to be enclosed
//                  in parentheses
// latexRightParens: the same for the right argument

var properties = [{
  // assignment
  AssignmentNode: {},
  FunctionAssignmentNode: {}
}, {
  // conditional expression
  ConditionalNode: {
    latexLeftParens: false,
    latexRightParens: false,
    latexParens: false // conditionals don't need parentheses in LaTeX because
    // they are 2 dimensional

  }
}, {
  // logical or
  'OperatorNode:or': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // logical xor
  'OperatorNode:xor': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // logical and
  'OperatorNode:and': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // bitwise or
  'OperatorNode:bitOr': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // bitwise xor
  'OperatorNode:bitXor': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // bitwise and
  'OperatorNode:bitAnd': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // relational operators
  'OperatorNode:equal': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:unequal': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:smaller': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:larger': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:smallerEq': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:largerEq': {
    associativity: 'left',
    associativeWith: []
  },
  RelationalNode: {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // bitshift operators
  'OperatorNode:leftShift': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:rightArithShift': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:rightLogShift': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // unit conversion
  'OperatorNode:to': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // range
  RangeNode: {}
}, {
  // addition, subtraction
  'OperatorNode:add': {
    associativity: 'left',
    associativeWith: ['OperatorNode:add', 'OperatorNode:subtract']
  },
  'OperatorNode:subtract': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // multiply, divide, modulus
  'OperatorNode:multiply': {
    associativity: 'left',
    associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'Operator:dotMultiply', 'Operator:dotDivide']
  },
  'OperatorNode:divide': {
    associativity: 'left',
    associativeWith: [],
    latexLeftParens: false,
    latexRightParens: false,
    latexParens: false // fractions don't require parentheses because
    // they're 2 dimensional, so parens aren't needed
    // in LaTeX

  },
  'OperatorNode:dotMultiply': {
    associativity: 'left',
    associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'OperatorNode:dotMultiply', 'OperatorNode:doDivide']
  },
  'OperatorNode:dotDivide': {
    associativity: 'left',
    associativeWith: []
  },
  'OperatorNode:mod': {
    associativity: 'left',
    associativeWith: []
  }
}, {
  // unary prefix operators
  'OperatorNode:unaryPlus': {
    associativity: 'right'
  },
  'OperatorNode:unaryMinus': {
    associativity: 'right'
  },
  'OperatorNode:bitNot': {
    associativity: 'right'
  },
  'OperatorNode:not': {
    associativity: 'right'
  }
}, {
  // exponentiation
  'OperatorNode:pow': {
    associativity: 'right',
    associativeWith: [],
    latexRightParens: false // the exponent doesn't need parentheses in
    // LaTeX because it's 2 dimensional
    // (it's on top)

  },
  'OperatorNode:dotPow': {
    associativity: 'right',
    associativeWith: []
  }
}, {
  // factorial
  'OperatorNode:factorial': {
    associativity: 'left'
  }
}, {
  // matrix transpose
  'OperatorNode:transpose': {
    associativity: 'left'
  }
}];
/**
 * Get the precedence of a Node.
 * Higher number for higher precedence, starting with 0.
 * Returns null if the precedence is undefined.
 *
 * @param {Node} _node
 * @param {string} parenthesis
 * @return {number | null}
 */

function getPrecedence(_node, parenthesis) {
  var node = _node;

  if (parenthesis !== 'keep') {
    // ParenthesisNodes are only ignored when not in 'keep' mode
    node = _node.getContent();
  }

  var identifier = node.getIdentifier();

  for (var i = 0; i < properties.length; i++) {
    if (identifier in properties[i]) {
      return i;
    }
  }

  return null;
}
/**
 * Get the associativity of an operator (left or right).
 * Returns a string containing 'left' or 'right' or null if
 * the associativity is not defined.
 *
 * @param {Node}
 * @param {string} parenthesis
 * @return {string|null}
 * @throws {Error}
 */

function getAssociativity(_node, parenthesis) {
  var node = _node;

  if (parenthesis !== 'keep') {
    // ParenthesisNodes are only ignored when not in 'keep' mode
    node = _node.getContent();
  }

  var identifier = node.getIdentifier();
  var index = getPrecedence(node, parenthesis);

  if (index === null) {
    // node isn't in the list
    return null;
  }

  var property = properties[index][identifier];

  if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["hasOwnProperty"])(property, 'associativity')) {
    if (property.associativity === 'left') {
      return 'left';
    }

    if (property.associativity === 'right') {
      return 'right';
    } // associativity is invalid


    throw Error('\'' + identifier + '\' has the invalid associativity \'' + property.associativity + '\'.');
  } // associativity is undefined


  return null;
}
/**
 * Check if an operator is associative with another operator.
 * Returns either true or false or null if not defined.
 *
 * @param {Node} nodeA
 * @param {Node} nodeB
 * @param {string} parenthesis
 * @return {boolean | null}
 */

function isAssociativeWith(nodeA, nodeB, parenthesis) {
  // ParenthesisNodes are only ignored when not in 'keep' mode
  var a = parenthesis !== 'keep' ? nodeA.getContent() : nodeA;
  var b = parenthesis !== 'keep' ? nodeA.getContent() : nodeB;
  var identifierA = a.getIdentifier();
  var identifierB = b.getIdentifier();
  var index = getPrecedence(a, parenthesis);

  if (index === null) {
    // node isn't in the list
    return null;
  }

  var property = properties[index][identifierA];

  if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["hasOwnProperty"])(property, 'associativeWith') && property.associativeWith instanceof Array) {
    for (var i = 0; i < property.associativeWith.length; i++) {
      if (property.associativeWith[i] === identifierB) {
        return true;
      }
    }

    return false;
  } // associativeWith is not defined


  return null;
}

/***/ }),

/***/ "../node_modules/mathjs/es/expression/parse.js":
/*!*****************************************************!*\
  !*** ../node_modules/mathjs/es/expression/parse.js ***!
  \*****************************************************/
/*! exports provided: createParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createParse", function() { return createParse; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/object */ "../node_modules/mathjs/es/utils/object.js");
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }





var name = 'parse';
var dependencies = ['typed', 'numeric', 'config', 'AccessorNode', 'ArrayNode', 'AssignmentNode', 'BlockNode', 'ConditionalNode', 'ConstantNode', 'FunctionAssignmentNode', 'FunctionNode', 'IndexNode', 'ObjectNode', 'OperatorNode', 'ParenthesisNode', 'RangeNode', 'RelationalNode', 'SymbolNode'];
var createParse = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      numeric = _ref.numeric,
      config = _ref.config,
      AccessorNode = _ref.AccessorNode,
      ArrayNode = _ref.ArrayNode,
      AssignmentNode = _ref.AssignmentNode,
      BlockNode = _ref.BlockNode,
      ConditionalNode = _ref.ConditionalNode,
      ConstantNode = _ref.ConstantNode,
      FunctionAssignmentNode = _ref.FunctionAssignmentNode,
      FunctionNode = _ref.FunctionNode,
      IndexNode = _ref.IndexNode,
      ObjectNode = _ref.ObjectNode,
      OperatorNode = _ref.OperatorNode,
      ParenthesisNode = _ref.ParenthesisNode,
      RangeNode = _ref.RangeNode,
      RelationalNode = _ref.RelationalNode,
      SymbolNode = _ref.SymbolNode;

  /**
   * Parse an expression. Returns a node tree, which can be evaluated by
   * invoking node.evaluate().
   *
   * Note the evaluating arbitrary expressions may involve security risks,
   * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.
   *
   * Syntax:
   *
   *     math.parse(expr)
   *     math.parse(expr, options)
   *     math.parse([expr1, expr2, expr3, ...])
   *     math.parse([expr1, expr2, expr3, ...], options)
   *
   * Example:
   *
   *     const node1 = math.parse('sqrt(3^2 + 4^2)')
   *     node1.compile().evaluate() // 5
   *
   *     let scope = {a:3, b:4}
   *     const node2 = math.parse('a * b') // 12
   *     const code2 = node2.compile()
   *     code2.evaluate(scope) // 12
   *     scope.a = 5
   *     code2.evaluate(scope) // 20
   *
   *     const nodes = math.parse(['a = 3', 'b = 4', 'a * b'])
   *     nodes[2].compile().evaluate() // 12
   *
   * See also:
   *
   *     evaluate, compile
   *
   * @param {string | string[] | Matrix} expr          Expression to be parsed
   * @param {{nodes: Object<string, Node>}} [options]  Available options:
   *                                                   - `nodes` a set of custom nodes
   * @return {Node | Node[]} node
   * @throws {Error}
   */
  var parse = typed(name, {
    string: function string(expression) {
      return parseStart(expression, {});
    },
    'Array | Matrix': function ArrayMatrix(expressions) {
      return parseMultiple(expressions, {});
    },
    'string, Object': function stringObject(expression, options) {
      var extraNodes = options.nodes !== undefined ? options.nodes : {};
      return parseStart(expression, extraNodes);
    },
    'Array | Matrix, Object': parseMultiple
  });

  function parseMultiple(expressions) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var extraNodes = options.nodes !== undefined ? options.nodes : {}; // parse an array or matrix with expressions

    return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_2__["deepMap"])(expressions, function (elem) {
      if (typeof elem !== 'string') throw new TypeError('String expected');
      return parseStart(elem, extraNodes);
    });
  } // token types enumeration


  var TOKENTYPE = {
    NULL: 0,
    DELIMITER: 1,
    NUMBER: 2,
    SYMBOL: 3,
    UNKNOWN: 4
  }; // map with all delimiters

  var DELIMITERS = {
    ',': true,
    '(': true,
    ')': true,
    '[': true,
    ']': true,
    '{': true,
    '}': true,
    '"': true,
    '\'': true,
    ';': true,
    '+': true,
    '-': true,
    '*': true,
    '.*': true,
    '/': true,
    './': true,
    '%': true,
    '^': true,
    '.^': true,
    '~': true,
    '!': true,
    '&': true,
    '|': true,
    '^|': true,
    '=': true,
    ':': true,
    '?': true,
    '==': true,
    '!=': true,
    '<': true,
    '>': true,
    '<=': true,
    '>=': true,
    '<<': true,
    '>>': true,
    '>>>': true
  }; // map with all named delimiters

  var NAMED_DELIMITERS = {
    mod: true,
    to: true,
    "in": true,
    and: true,
    xor: true,
    or: true,
    not: true
  };
  var CONSTANTS = {
    "true": true,
    "false": false,
    "null": null,
    undefined: undefined
  };
  var NUMERIC_CONSTANTS = ['NaN', 'Infinity'];

  function initialState() {
    return {
      extraNodes: {},
      // current extra nodes, must be careful not to mutate
      expression: '',
      // current expression
      comment: '',
      // last parsed comment
      index: 0,
      // current index in expr
      token: '',
      // current token
      tokenType: TOKENTYPE.NULL,
      // type of the token
      nestingLevel: 0,
      // level of nesting inside parameters, used to ignore newline characters
      conditionalLevel: null // when a conditional is being parsed, the level of the conditional is stored here

    };
  }
  /**
   * View upto `length` characters of the expression starting at the current character.
   *
   * @param {Object} state
   * @param {number} [length=1] Number of characters to view
   * @returns {string}
   * @private
   */


  function currentString(state, length) {
    return state.expression.substr(state.index, length);
  }
  /**
   * View the current character. Returns '' if end of expression is reached.
   *
   * @param {Object} state
   * @returns {string}
   * @private
   */


  function currentCharacter(state) {
    return currentString(state, 1);
  }
  /**
   * Get the next character from the expression.
   * The character is stored into the char c. If the end of the expression is
   * reached, the function puts an empty string in c.
   * @private
   */


  function next(state) {
    state.index++;
  }
  /**
   * Preview the previous character from the expression.
   * @return {string} cNext
   * @private
   */


  function prevCharacter(state) {
    return state.expression.charAt(state.index - 1);
  }
  /**
   * Preview the next character from the expression.
   * @return {string} cNext
   * @private
   */


  function nextCharacter(state) {
    return state.expression.charAt(state.index + 1);
  }
  /**
   * Get next token in the current string expr.
   * The token and token type are available as token and tokenType
   * @private
   */


  function getToken(state) {
    state.tokenType = TOKENTYPE.NULL;
    state.token = '';
    state.comment = ''; // skip over whitespaces
    // space, tab, and newline when inside parameters

    while (parse.isWhitespace(currentCharacter(state), state.nestingLevel)) {
      next(state);
    } // skip comment


    if (currentCharacter(state) === '#') {
      while (currentCharacter(state) !== '\n' && currentCharacter(state) !== '') {
        state.comment += currentCharacter(state);
        next(state);
      }
    } // check for end of expression


    if (currentCharacter(state) === '') {
      // token is still empty
      state.tokenType = TOKENTYPE.DELIMITER;
      return;
    } // check for new line character


    if (currentCharacter(state) === '\n' && !state.nestingLevel) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = currentCharacter(state);
      next(state);
      return;
    }

    var c1 = currentCharacter(state);
    var c2 = currentString(state, 2);
    var c3 = currentString(state, 3);

    if (c3.length === 3 && DELIMITERS[c3]) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = c3;
      next(state);
      next(state);
      next(state);
      return;
    } // check for delimiters consisting of 2 characters


    if (c2.length === 2 && DELIMITERS[c2]) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = c2;
      next(state);
      next(state);
      return;
    } // check for delimiters consisting of 1 character


    if (DELIMITERS[c1]) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = c1;
      next(state);
      return;
    } // check for a number


    if (parse.isDigitDot(c1)) {
      state.tokenType = TOKENTYPE.NUMBER; // get number, can have a single dot

      if (currentCharacter(state) === '.') {
        state.token += currentCharacter(state);
        next(state);

        if (!parse.isDigit(currentCharacter(state))) {
          // this is no number, it is just a dot (can be dot notation)
          state.tokenType = TOKENTYPE.DELIMITER;
        }
      } else {
        while (parse.isDigit(currentCharacter(state))) {
          state.token += currentCharacter(state);
          next(state);
        }

        if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {
          state.token += currentCharacter(state);
          next(state);
        }
      }

      while (parse.isDigit(currentCharacter(state))) {
        state.token += currentCharacter(state);
        next(state);
      } // check for exponential notation like "2.3e-4", "1.23e50" or "2e+4"


      if (currentCharacter(state) === 'E' || currentCharacter(state) === 'e') {
        if (parse.isDigit(nextCharacter(state)) || nextCharacter(state) === '-' || nextCharacter(state) === '+') {
          state.token += currentCharacter(state);
          next(state);

          if (currentCharacter(state) === '+' || currentCharacter(state) === '-') {
            state.token += currentCharacter(state);
            next(state);
          } // Scientific notation MUST be followed by an exponent


          if (!parse.isDigit(currentCharacter(state))) {
            throw createSyntaxError(state, 'Digit expected, got "' + currentCharacter(state) + '"');
          }

          while (parse.isDigit(currentCharacter(state))) {
            state.token += currentCharacter(state);
            next(state);
          }

          if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {
            throw createSyntaxError(state, 'Digit expected, got "' + currentCharacter(state) + '"');
          }
        } else if (nextCharacter(state) === '.') {
          next(state);
          throw createSyntaxError(state, 'Digit expected, got "' + currentCharacter(state) + '"');
        }
      }

      return;
    } // check for variables, functions, named operators


    if (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state))) {
      while (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state)) || parse.isDigit(currentCharacter(state))) {
        state.token += currentCharacter(state);
        next(state);
      }

      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(NAMED_DELIMITERS, state.token)) {
        state.tokenType = TOKENTYPE.DELIMITER;
      } else {
        state.tokenType = TOKENTYPE.SYMBOL;
      }

      return;
    } // something unknown is found, wrong characters -> a syntax error


    state.tokenType = TOKENTYPE.UNKNOWN;

    while (currentCharacter(state) !== '') {
      state.token += currentCharacter(state);
      next(state);
    }

    throw createSyntaxError(state, 'Syntax error in part "' + state.token + '"');
  }
  /**
   * Get next token and skip newline tokens
   */


  function getTokenSkipNewline(state) {
    do {
      getToken(state);
    } while (state.token === '\n'); // eslint-disable-line no-unmodified-loop-condition

  }
  /**
   * Open parameters.
   * New line characters will be ignored until closeParams(state) is called
   */


  function openParams(state) {
    state.nestingLevel++;
  }
  /**
   * Close parameters.
   * New line characters will no longer be ignored
   */


  function closeParams(state) {
    state.nestingLevel--;
  }
  /**
   * Checks whether the current character `c` is a valid alpha character:
   *
   * - A latin letter (upper or lower case) Ascii: a-z, A-Z
   * - An underscore                        Ascii: _
   * - A dollar sign                        Ascii: $
   * - A latin letter with accents          Unicode: \u00C0 - \u02AF
   * - A greek letter                       Unicode: \u0370 - \u03FF
   * - A mathematical alphanumeric symbol   Unicode: \u{1D400} - \u{1D7FF} excluding invalid code points
   *
   * The previous and next characters are needed to determine whether
   * this character is part of a unicode surrogate pair.
   *
   * @param {string} c      Current character in the expression
   * @param {string} cPrev  Previous character
   * @param {string} cNext  Next character
   * @return {boolean}
   */


  parse.isAlpha = function isAlpha(c, cPrev, cNext) {
    return parse.isValidLatinOrGreek(c) || parse.isValidMathSymbol(c, cNext) || parse.isValidMathSymbol(cPrev, c);
  };
  /**
   * Test whether a character is a valid latin, greek, or letter-like character
   * @param {string} c
   * @return {boolean}
   */


  parse.isValidLatinOrGreek = function isValidLatinOrGreek(c) {
    return /^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(c);
  };
  /**
   * Test whether two given 16 bit characters form a surrogate pair of a
   * unicode math symbol.
   *
   * https://unicode-table.com/en/
   * https://www.wikiwand.com/en/Mathematical_operators_and_symbols_in_Unicode
   *
   * Note: In ES6 will be unicode aware:
   * https://stackoverflow.com/questions/280712/javascript-unicode-regexes
   * https://mathiasbynens.be/notes/es6-unicode-regex
   *
   * @param {string} high
   * @param {string} low
   * @return {boolean}
   */


  parse.isValidMathSymbol = function isValidMathSymbol(high, low) {
    return /^[\uD835]$/.test(high) && /^[\uDC00-\uDFFF]$/.test(low) && /^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(low);
  };
  /**
   * Check whether given character c is a white space character: space, tab, or enter
   * @param {string} c
   * @param {number} nestingLevel
   * @return {boolean}
   */


  parse.isWhitespace = function isWhitespace(c, nestingLevel) {
    // TODO: also take '\r' carriage return as newline? Or does that give problems on mac?
    return c === ' ' || c === '\t' || c === '\n' && nestingLevel > 0;
  };
  /**
   * Test whether the character c is a decimal mark (dot).
   * This is the case when it's not the start of a delimiter '.*', './', or '.^'
   * @param {string} c
   * @param {string} cNext
   * @return {boolean}
   */


  parse.isDecimalMark = function isDecimalMark(c, cNext) {
    return c === '.' && cNext !== '/' && cNext !== '*' && cNext !== '^';
  };
  /**
   * checks if the given char c is a digit or dot
   * @param {string} c   a string with one character
   * @return {boolean}
   */


  parse.isDigitDot = function isDigitDot(c) {
    return c >= '0' && c <= '9' || c === '.';
  };
  /**
   * checks if the given char c is a digit
   * @param {string} c   a string with one character
   * @return {boolean}
   */


  parse.isDigit = function isDigit(c) {
    return c >= '0' && c <= '9';
  };
  /**
   * Start of the parse levels below, in order of precedence
   * @return {Node} node
   * @private
   */


  function parseStart(expression, extraNodes) {
    var state = initialState();

    _extends(state, {
      expression: expression,
      extraNodes: extraNodes
    });

    getToken(state);
    var node = parseBlock(state); // check for garbage at the end of the expression
    // an expression ends with a empty character '' and tokenType DELIMITER

    if (state.token !== '') {
      if (state.tokenType === TOKENTYPE.DELIMITER) {
        // user entered a not existing operator like "//"
        // TODO: give hints for aliases, for example with "<>" give as hint " did you mean !== ?"
        throw createError(state, 'Unexpected operator ' + state.token);
      } else {
        throw createSyntaxError(state, 'Unexpected part "' + state.token + '"');
      }
    }

    return node;
  }
  /**
   * Parse a block with expressions. Expressions can be separated by a newline
   * character '\n', or by a semicolon ';'. In case of a semicolon, no output
   * of the preceding line is returned.
   * @return {Node} node
   * @private
   */


  function parseBlock(state) {
    var node;
    var blocks = [];
    var visible;

    if (state.token !== '' && state.token !== '\n' && state.token !== ';') {
      node = parseAssignment(state);
      node.comment = state.comment;
    } // TODO: simplify this loop


    while (state.token === '\n' || state.token === ';') {
      // eslint-disable-line no-unmodified-loop-condition
      if (blocks.length === 0 && node) {
        visible = state.token !== ';';
        blocks.push({
          node: node,
          visible: visible
        });
      }

      getToken(state);

      if (state.token !== '\n' && state.token !== ';' && state.token !== '') {
        node = parseAssignment(state);
        node.comment = state.comment;
        visible = state.token !== ';';
        blocks.push({
          node: node,
          visible: visible
        });
      }
    }

    if (blocks.length > 0) {
      return new BlockNode(blocks);
    } else {
      if (!node) {
        node = new ConstantNode(undefined);
        node.comment = state.comment;
      }

      return node;
    }
  }
  /**
   * Assignment of a function or variable,
   * - can be a variable like 'a=2.3'
   * - or a updating an existing variable like 'matrix(2,3:5)=[6,7,8]'
   * - defining a function like 'f(x) = x^2'
   * @return {Node} node
   * @private
   */


  function parseAssignment(state) {
    var name, args, value, valid;
    var node = parseConditional(state);

    if (state.token === '=') {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSymbolNode"])(node)) {
        // parse a variable assignment like 'a = 2/3'
        name = node.name;
        getTokenSkipNewline(state);
        value = parseAssignment(state);
        return new AssignmentNode(new SymbolNode(name), value);
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isAccessorNode"])(node)) {
        // parse a matrix subset assignment like 'A[1,2] = 4'
        getTokenSkipNewline(state);
        value = parseAssignment(state);
        return new AssignmentNode(node.object, node.index, value);
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isFunctionNode"])(node) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSymbolNode"])(node.fn)) {
        // parse function assignment like 'f(x) = x^2'
        valid = true;
        args = [];
        name = node.name;
        node.args.forEach(function (arg, index) {
          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSymbolNode"])(arg)) {
            args[index] = arg.name;
          } else {
            valid = false;
          }
        });

        if (valid) {
          getTokenSkipNewline(state);
          value = parseAssignment(state);
          return new FunctionAssignmentNode(name, args, value);
        }
      }

      throw createSyntaxError(state, 'Invalid left hand side of assignment operator =');
    }

    return node;
  }
  /**
   * conditional operation
   *
   *     condition ? truePart : falsePart
   *
   * Note: conditional operator is right-associative
   *
   * @return {Node} node
   * @private
   */


  function parseConditional(state) {
    var node = parseLogicalOr(state);

    while (state.token === '?') {
      // eslint-disable-line no-unmodified-loop-condition
      // set a conditional level, the range operator will be ignored as long
      // as conditionalLevel === state.nestingLevel.
      var prev = state.conditionalLevel;
      state.conditionalLevel = state.nestingLevel;
      getTokenSkipNewline(state);
      var condition = node;
      var trueExpr = parseAssignment(state);
      if (state.token !== ':') throw createSyntaxError(state, 'False part of conditional expression expected');
      state.conditionalLevel = null;
      getTokenSkipNewline(state);
      var falseExpr = parseAssignment(state); // Note: check for conditional operator again, right associativity

      node = new ConditionalNode(condition, trueExpr, falseExpr); // restore the previous conditional level

      state.conditionalLevel = prev;
    }

    return node;
  }
  /**
   * logical or, 'x or y'
   * @return {Node} node
   * @private
   */


  function parseLogicalOr(state) {
    var node = parseLogicalXor(state);

    while (state.token === 'or') {
      // eslint-disable-line no-unmodified-loop-condition
      getTokenSkipNewline(state);
      node = new OperatorNode('or', 'or', [node, parseLogicalXor(state)]);
    }

    return node;
  }
  /**
   * logical exclusive or, 'x xor y'
   * @return {Node} node
   * @private
   */


  function parseLogicalXor(state) {
    var node = parseLogicalAnd(state);

    while (state.token === 'xor') {
      // eslint-disable-line no-unmodified-loop-condition
      getTokenSkipNewline(state);
      node = new OperatorNode('xor', 'xor', [node, parseLogicalAnd(state)]);
    }

    return node;
  }
  /**
   * logical and, 'x and y'
   * @return {Node} node
   * @private
   */


  function parseLogicalAnd(state) {
    var node = parseBitwiseOr(state);

    while (state.token === 'and') {
      // eslint-disable-line no-unmodified-loop-condition
      getTokenSkipNewline(state);
      node = new OperatorNode('and', 'and', [node, parseBitwiseOr(state)]);
    }

    return node;
  }
  /**
   * bitwise or, 'x | y'
   * @return {Node} node
   * @private
   */


  function parseBitwiseOr(state) {
    var node = parseBitwiseXor(state);

    while (state.token === '|') {
      // eslint-disable-line no-unmodified-loop-condition
      getTokenSkipNewline(state);
      node = new OperatorNode('|', 'bitOr', [node, parseBitwiseXor(state)]);
    }

    return node;
  }
  /**
   * bitwise exclusive or (xor), 'x ^| y'
   * @return {Node} node
   * @private
   */


  function parseBitwiseXor(state) {
    var node = parseBitwiseAnd(state);

    while (state.token === '^|') {
      // eslint-disable-line no-unmodified-loop-condition
      getTokenSkipNewline(state);
      node = new OperatorNode('^|', 'bitXor', [node, parseBitwiseAnd(state)]);
    }

    return node;
  }
  /**
   * bitwise and, 'x & y'
   * @return {Node} node
   * @private
   */


  function parseBitwiseAnd(state) {
    var node = parseRelational(state);

    while (state.token === '&') {
      // eslint-disable-line no-unmodified-loop-condition
      getTokenSkipNewline(state);
      node = new OperatorNode('&', 'bitAnd', [node, parseRelational(state)]);
    }

    return node;
  }
  /**
   * Parse a chained conditional, like 'a > b >= c'
   * @return {Node} node
   */


  function parseRelational(state) {
    var params = [parseShift(state)];
    var conditionals = [];
    var operators = {
      '==': 'equal',
      '!=': 'unequal',
      '<': 'smaller',
      '>': 'larger',
      '<=': 'smallerEq',
      '>=': 'largerEq'
    };

    while (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(operators, state.token)) {
      // eslint-disable-line no-unmodified-loop-condition
      var cond = {
        name: state.token,
        fn: operators[state.token]
      };
      conditionals.push(cond);
      getTokenSkipNewline(state);
      params.push(parseShift(state));
    }

    if (params.length === 1) {
      return params[0];
    } else if (params.length === 2) {
      return new OperatorNode(conditionals[0].name, conditionals[0].fn, params);
    } else {
      return new RelationalNode(conditionals.map(function (c) {
        return c.fn;
      }), params);
    }
  }
  /**
   * Bitwise left shift, bitwise right arithmetic shift, bitwise right logical shift
   * @return {Node} node
   * @private
   */


  function parseShift(state) {
    var node, name, fn, params;
    node = parseConversion(state);
    var operators = {
      '<<': 'leftShift',
      '>>': 'rightArithShift',
      '>>>': 'rightLogShift'
    };

    while (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(operators, state.token)) {
      name = state.token;
      fn = operators[name];
      getTokenSkipNewline(state);
      params = [node, parseConversion(state)];
      node = new OperatorNode(name, fn, params);
    }

    return node;
  }
  /**
   * conversion operators 'to' and 'in'
   * @return {Node} node
   * @private
   */


  function parseConversion(state) {
    var node, name, fn, params;
    node = parseRange(state);
    var operators = {
      to: 'to',
      "in": 'to' // alias of 'to'

    };

    while (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(operators, state.token)) {
      name = state.token;
      fn = operators[name];
      getTokenSkipNewline(state);

      if (name === 'in' && state.token === '') {
        // end of expression -> this is the unit 'in' ('inch')
        node = new OperatorNode('*', 'multiply', [node, new SymbolNode('in')], true);
      } else {
        // operator 'a to b' or 'a in b'
        params = [node, parseRange(state)];
        node = new OperatorNode(name, fn, params);
      }
    }

    return node;
  }
  /**
   * parse range, "start:end", "start:step:end", ":", "start:", ":end", etc
   * @return {Node} node
   * @private
   */


  function parseRange(state) {
    var node;
    var params = [];

    if (state.token === ':') {
      // implicit start=1 (one-based)
      node = new ConstantNode(1);
    } else {
      // explicit start
      node = parseAddSubtract(state);
    }

    if (state.token === ':' && state.conditionalLevel !== state.nestingLevel) {
      // we ignore the range operator when a conditional operator is being processed on the same level
      params.push(node); // parse step and end

      while (state.token === ':' && params.length < 3) {
        // eslint-disable-line no-unmodified-loop-condition
        getTokenSkipNewline(state);

        if (state.token === ')' || state.token === ']' || state.token === ',' || state.token === '') {
          // implicit end
          params.push(new SymbolNode('end'));
        } else {
          // explicit end
          params.push(parseAddSubtract(state));
        }
      }

      if (params.length === 3) {
        // params = [start, step, end]
        node = new RangeNode(params[0], params[2], params[1]); // start, end, step
      } else {
        // length === 2
        // params = [start, end]
        node = new RangeNode(params[0], params[1]); // start, end
      }
    }

    return node;
  }
  /**
   * add or subtract
   * @return {Node} node
   * @private
   */


  function parseAddSubtract(state) {
    var node, name, fn, params;
    node = parseMultiplyDivide(state);
    var operators = {
      '+': 'add',
      '-': 'subtract'
    };

    while (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(operators, state.token)) {
      name = state.token;
      fn = operators[name];
      getTokenSkipNewline(state);
      params = [node, parseMultiplyDivide(state)];
      node = new OperatorNode(name, fn, params);
    }

    return node;
  }
  /**
   * multiply, divide, modulus
   * @return {Node} node
   * @private
   */


  function parseMultiplyDivide(state) {
    var node, last, name, fn;
    node = parseImplicitMultiplication(state);
    last = node;
    var operators = {
      '*': 'multiply',
      '.*': 'dotMultiply',
      '/': 'divide',
      './': 'dotDivide',
      '%': 'mod',
      mod: 'mod'
    };

    while (true) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(operators, state.token)) {
        // explicit operators
        name = state.token;
        fn = operators[name];
        getTokenSkipNewline(state);
        last = parseImplicitMultiplication(state);
        node = new OperatorNode(name, fn, [node, last]);
      } else {
        break;
      }
    }

    return node;
  }
  /**
   * implicit multiplication
   * @return {Node} node
   * @private
   */


  function parseImplicitMultiplication(state) {
    var node, last;
    node = parseRule2(state);
    last = node;

    while (true) {
      if (state.tokenType === TOKENTYPE.SYMBOL || state.token === 'in' && Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isConstantNode"])(node) || state.tokenType === TOKENTYPE.NUMBER && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isConstantNode"])(last) && (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isOperatorNode"])(last) || last.op === '!') || state.token === '(') {
        // parse implicit multiplication
        //
        // symbol:      implicit multiplication like '2a', '(2+3)a', 'a b'
        // number:      implicit multiplication like '(2+3)2'
        // parenthesis: implicit multiplication like '2(3+4)', '(3+4)(1+2)'
        last = parseRule2(state);
        node = new OperatorNode('*', 'multiply', [node, last], true
        /* implicit */
        );
      } else {
        break;
      }
    }

    return node;
  }
  /**
   * Infamous "rule 2" as described in https://github.com/josdejong/mathjs/issues/792#issuecomment-361065370
   * Explicit division gets higher precedence than implicit multiplication
   * when the division matches this pattern: [number] / [number] [symbol]
   * @return {Node} node
   * @private
   */


  function parseRule2(state) {
    var node = parseUnary(state);
    var last = node;
    var tokenStates = [];

    while (true) {
      // Match the "number /" part of the pattern "number / number symbol"
      if (state.token === '/' && Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isConstantNode"])(last)) {
        // Look ahead to see if the next token is a number
        tokenStates.push(_extends({}, state));
        getTokenSkipNewline(state); // Match the "number / number" part of the pattern

        if (state.tokenType === TOKENTYPE.NUMBER) {
          // Look ahead again
          tokenStates.push(_extends({}, state));
          getTokenSkipNewline(state); // Match the "symbol" part of the pattern, or a left parenthesis

          if (state.tokenType === TOKENTYPE.SYMBOL || state.token === '(') {
            // We've matched the pattern "number / number symbol".
            // Rewind once and build the "number / number" node; the symbol will be consumed later
            _extends(state, tokenStates.pop());

            tokenStates.pop();
            last = parseUnary(state);
            node = new OperatorNode('/', 'divide', [node, last]);
          } else {
            // Not a match, so rewind
            tokenStates.pop();

            _extends(state, tokenStates.pop());

            break;
          }
        } else {
          // Not a match, so rewind
          _extends(state, tokenStates.pop());

          break;
        }
      } else {
        break;
      }
    }

    return node;
  }
  /**
   * Unary plus and minus, and logical and bitwise not
   * @return {Node} node
   * @private
   */


  function parseUnary(state) {
    var name, params, fn;
    var operators = {
      '-': 'unaryMinus',
      '+': 'unaryPlus',
      '~': 'bitNot',
      not: 'not'
    };

    if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(operators, state.token)) {
      fn = operators[state.token];
      name = state.token;
      getTokenSkipNewline(state);
      params = [parseUnary(state)];
      return new OperatorNode(name, fn, params);
    }

    return parsePow(state);
  }
  /**
   * power
   * Note: power operator is right associative
   * @return {Node} node
   * @private
   */


  function parsePow(state) {
    var node, name, fn, params;
    node = parseLeftHandOperators(state);

    if (state.token === '^' || state.token === '.^') {
      name = state.token;
      fn = name === '^' ? 'pow' : 'dotPow';
      getTokenSkipNewline(state);
      params = [node, parseUnary(state)]; // Go back to unary, we can have '2^-3'

      node = new OperatorNode(name, fn, params);
    }

    return node;
  }
  /**
   * Left hand operators: factorial x!, ctranspose x'
   * @return {Node} node
   * @private
   */


  function parseLeftHandOperators(state) {
    var node, name, fn, params;
    node = parseCustomNodes(state);
    var operators = {
      '!': 'factorial',
      '\'': 'ctranspose'
    };

    while (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(operators, state.token)) {
      name = state.token;
      fn = operators[name];
      getToken(state);
      params = [node];
      node = new OperatorNode(name, fn, params);
      node = parseAccessors(state, node);
    }

    return node;
  }
  /**
   * Parse a custom node handler. A node handler can be used to process
   * nodes in a custom way, for example for handling a plot.
   *
   * A handler must be passed as second argument of the parse function.
   * - must extend math.Node
   * - must contain a function _compile(defs: Object) : string
   * - must contain a function find(filter: Object) : Node[]
   * - must contain a function toString() : string
   * - the constructor is called with a single argument containing all parameters
   *
   * For example:
   *
   *     nodes = {
   *       'plot': PlotHandler
   *     }
   *
   * The constructor of the handler is called as:
   *
   *     node = new PlotHandler(params)
   *
   * The handler will be invoked when evaluating an expression like:
   *
   *     node = math.parse('plot(sin(x), x)', nodes)
   *
   * @return {Node} node
   * @private
   */


  function parseCustomNodes(state) {
    var params = [];

    if (state.tokenType === TOKENTYPE.SYMBOL && Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(state.extraNodes, state.token)) {
      var CustomNode = state.extraNodes[state.token];
      getToken(state); // parse parameters

      if (state.token === '(') {
        params = [];
        openParams(state);
        getToken(state);

        if (state.token !== ')') {
          params.push(parseAssignment(state)); // parse a list with parameters

          while (state.token === ',') {
            // eslint-disable-line no-unmodified-loop-condition
            getToken(state);
            params.push(parseAssignment(state));
          }
        }

        if (state.token !== ')') {
          throw createSyntaxError(state, 'Parenthesis ) expected');
        }

        closeParams(state);
        getToken(state);
      } // create a new custom node
      // noinspection JSValidateTypes


      return new CustomNode(params);
    }

    return parseSymbol(state);
  }
  /**
   * parse symbols: functions, variables, constants, units
   * @return {Node} node
   * @private
   */


  function parseSymbol(state) {
    var node, name;

    if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {
      name = state.token;
      getToken(state);

      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(CONSTANTS, name)) {
        // true, false, null, ...
        node = new ConstantNode(CONSTANTS[name]);
      } else if (NUMERIC_CONSTANTS.indexOf(name) !== -1) {
        // NaN, Infinity
        node = new ConstantNode(numeric(name, 'number'));
      } else {
        node = new SymbolNode(name);
      } // parse function parameters and matrix index


      node = parseAccessors(state, node);
      return node;
    }

    return parseDoubleQuotesString(state);
  }
  /**
   * parse accessors:
   * - function invocation in round brackets (...), for example sqrt(2)
   * - index enclosed in square brackets [...], for example A[2,3]
   * - dot notation for properties, like foo.bar
   * @param {Object} state
   * @param {Node} node    Node on which to apply the parameters. If there
   *                       are no parameters in the expression, the node
   *                       itself is returned
   * @param {string[]} [types]  Filter the types of notations
   *                            can be ['(', '[', '.']
   * @return {Node} node
   * @private
   */


  function parseAccessors(state, node, types) {
    var params;

    while ((state.token === '(' || state.token === '[' || state.token === '.') && (!types || types.indexOf(state.token) !== -1)) {
      // eslint-disable-line no-unmodified-loop-condition
      params = [];

      if (state.token === '(') {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSymbolNode"])(node) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isAccessorNode"])(node)) {
          // function invocation like fn(2, 3) or obj.fn(2, 3)
          openParams(state);
          getToken(state);

          if (state.token !== ')') {
            params.push(parseAssignment(state)); // parse a list with parameters

            while (state.token === ',') {
              // eslint-disable-line no-unmodified-loop-condition
              getToken(state);
              params.push(parseAssignment(state));
            }
          }

          if (state.token !== ')') {
            throw createSyntaxError(state, 'Parenthesis ) expected');
          }

          closeParams(state);
          getToken(state);
          node = new FunctionNode(node, params);
        } else {
          // implicit multiplication like (2+3)(4+5) or sqrt(2)(1+2)
          // don't parse it here but let it be handled by parseImplicitMultiplication
          // with correct precedence
          return node;
        }
      } else if (state.token === '[') {
        // index notation like variable[2, 3]
        openParams(state);
        getToken(state);

        if (state.token !== ']') {
          params.push(parseAssignment(state)); // parse a list with parameters

          while (state.token === ',') {
            // eslint-disable-line no-unmodified-loop-condition
            getToken(state);
            params.push(parseAssignment(state));
          }
        }

        if (state.token !== ']') {
          throw createSyntaxError(state, 'Parenthesis ] expected');
        }

        closeParams(state);
        getToken(state);
        node = new AccessorNode(node, new IndexNode(params));
      } else {
        // dot notation like variable.prop
        getToken(state);

        if (state.tokenType !== TOKENTYPE.SYMBOL) {
          throw createSyntaxError(state, 'Property name expected after dot');
        }

        params.push(new ConstantNode(state.token));
        getToken(state);
        var dotNotation = true;
        node = new AccessorNode(node, new IndexNode(params, dotNotation));
      }
    }

    return node;
  }
  /**
   * Parse a double quotes string.
   * @return {Node} node
   * @private
   */


  function parseDoubleQuotesString(state) {
    var node, str;

    if (state.token === '"') {
      str = parseDoubleQuotesStringToken(state); // create constant

      node = new ConstantNode(str); // parse index parameters

      node = parseAccessors(state, node);
      return node;
    }

    return parseSingleQuotesString(state);
  }
  /**
   * Parse a string surrounded by double quotes "..."
   * @return {string}
   */


  function parseDoubleQuotesStringToken(state) {
    var str = '';

    while (currentCharacter(state) !== '' && currentCharacter(state) !== '"') {
      if (currentCharacter(state) === '\\') {
        // escape character, immediately process the next
        // character to prevent stopping at a next '\"'
        str += currentCharacter(state);
        next(state);
      }

      str += currentCharacter(state);
      next(state);
    }

    getToken(state);

    if (state.token !== '"') {
      throw createSyntaxError(state, 'End of string " expected');
    }

    getToken(state);
    return JSON.parse('"' + str + '"'); // unescape escaped characters
  }
  /**
   * Parse a single quotes string.
   * @return {Node} node
   * @private
   */


  function parseSingleQuotesString(state) {
    var node, str;

    if (state.token === '\'') {
      str = parseSingleQuotesStringToken(state); // create constant

      node = new ConstantNode(str); // parse index parameters

      node = parseAccessors(state, node);
      return node;
    }

    return parseMatrix(state);
  }
  /**
   * Parse a string surrounded by single quotes '...'
   * @return {string}
   */


  function parseSingleQuotesStringToken(state) {
    var str = '';

    while (currentCharacter(state) !== '' && currentCharacter(state) !== '\'') {
      if (currentCharacter(state) === '\\') {
        // escape character, immediately process the next
        // character to prevent stopping at a next '\''
        str += currentCharacter(state);
        next(state);
      }

      str += currentCharacter(state);
      next(state);
    }

    getToken(state);

    if (state.token !== '\'') {
      throw createSyntaxError(state, 'End of string \' expected');
    }

    getToken(state);
    return JSON.parse('"' + str + '"'); // unescape escaped characters
  }
  /**
   * parse the matrix
   * @return {Node} node
   * @private
   */


  function parseMatrix(state) {
    var array, params, rows, cols;

    if (state.token === '[') {
      // matrix [...]
      openParams(state);
      getToken(state);

      if (state.token !== ']') {
        // this is a non-empty matrix
        var row = parseRow(state);

        if (state.token === ';') {
          // 2 dimensional array
          rows = 1;
          params = [row]; // the rows of the matrix are separated by dot-comma's

          while (state.token === ';') {
            // eslint-disable-line no-unmodified-loop-condition
            getToken(state);
            params[rows] = parseRow(state);
            rows++;
          }

          if (state.token !== ']') {
            throw createSyntaxError(state, 'End of matrix ] expected');
          }

          closeParams(state);
          getToken(state); // check if the number of columns matches in all rows

          cols = params[0].items.length;

          for (var r = 1; r < rows; r++) {
            if (params[r].items.length !== cols) {
              throw createError(state, 'Column dimensions mismatch ' + '(' + params[r].items.length + ' !== ' + cols + ')');
            }
          }

          array = new ArrayNode(params);
        } else {
          // 1 dimensional vector
          if (state.token !== ']') {
            throw createSyntaxError(state, 'End of matrix ] expected');
          }

          closeParams(state);
          getToken(state);
          array = row;
        }
      } else {
        // this is an empty matrix "[ ]"
        closeParams(state);
        getToken(state);
        array = new ArrayNode([]);
      }

      return parseAccessors(state, array);
    }

    return parseObject(state);
  }
  /**
   * Parse a single comma-separated row from a matrix, like 'a, b, c'
   * @return {ArrayNode} node
   */


  function parseRow(state) {
    var params = [parseAssignment(state)];
    var len = 1;

    while (state.token === ',') {
      // eslint-disable-line no-unmodified-loop-condition
      getToken(state); // parse expression

      params[len] = parseAssignment(state);
      len++;
    }

    return new ArrayNode(params);
  }
  /**
   * parse an object, enclosed in angle brackets{...}, for example {value: 2}
   * @return {Node} node
   * @private
   */


  function parseObject(state) {
    if (state.token === '{') {
      openParams(state);
      var key;
      var properties = {};

      do {
        getToken(state);

        if (state.token !== '}') {
          // parse key
          if (state.token === '"') {
            key = parseDoubleQuotesStringToken(state);
          } else if (state.token === '\'') {
            key = parseSingleQuotesStringToken(state);
          } else if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {
            key = state.token;
            getToken(state);
          } else {
            throw createSyntaxError(state, 'Symbol or string expected as object key');
          } // parse key/value separator


          if (state.token !== ':') {
            throw createSyntaxError(state, 'Colon : expected after object key');
          }

          getToken(state); // parse key

          properties[key] = parseAssignment(state);
        }
      } while (state.token === ','); // eslint-disable-line no-unmodified-loop-condition


      if (state.token !== '}') {
        throw createSyntaxError(state, 'Comma , or bracket } expected after object value');
      }

      closeParams(state);
      getToken(state);
      var node = new ObjectNode(properties); // parse index parameters

      node = parseAccessors(state, node);
      return node;
    }

    return parseNumber(state);
  }
  /**
   * parse a number
   * @return {Node} node
   * @private
   */


  function parseNumber(state) {
    var numberStr;

    if (state.tokenType === TOKENTYPE.NUMBER) {
      // this is a number
      numberStr = state.token;
      getToken(state);
      return new ConstantNode(numeric(numberStr, config.number));
    }

    return parseParentheses(state);
  }
  /**
   * parentheses
   * @return {Node} node
   * @private
   */


  function parseParentheses(state) {
    var node; // check if it is a parenthesized expression

    if (state.token === '(') {
      // parentheses (...)
      openParams(state);
      getToken(state);
      node = parseAssignment(state); // start again

      if (state.token !== ')') {
        throw createSyntaxError(state, 'Parenthesis ) expected');
      }

      closeParams(state);
      getToken(state);
      node = new ParenthesisNode(node);
      node = parseAccessors(state, node);
      return node;
    }

    return parseEnd(state);
  }
  /**
   * Evaluated when the expression is not yet ended but expected to end
   * @return {Node} res
   * @private
   */


  function parseEnd(state) {
    if (state.token === '') {
      // syntax error or unexpected end of expression
      throw createSyntaxError(state, 'Unexpected end of expression');
    } else {
      throw createSyntaxError(state, 'Value expected');
    }
  }
  /**
   * Shortcut for getting the current row value (one based)
   * Returns the line of the currently handled expression
   * @private
   */

  /* TODO: implement keeping track on the row number
  function row () {
    return null
  }
  */

  /**
   * Shortcut for getting the current col value (one based)
   * Returns the column (position) where the last state.token starts
   * @private
   */


  function col(state) {
    return state.index - state.token.length + 1;
  }
  /**
   * Create an error
   * @param {Object} state
   * @param {string} message
   * @return {SyntaxError} instantiated error
   * @private
   */


  function createSyntaxError(state, message) {
    var c = col(state);
    var error = new SyntaxError(message + ' (char ' + c + ')');
    error["char"] = c;
    return error;
  }
  /**
   * Create an error
   * @param {Object} state
   * @param {string} message
   * @return {Error} instantiated error
   * @private
   */


  function createError(state, message) {
    var c = col(state);
    var error = new SyntaxError(message + ' (char ' + c + ')');
    error["char"] = c;
    return error;
  }

  return parse;
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/apply.transform.js":
/*!*************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/apply.transform.js ***!
  \*************************************************************************/
/*! exports provided: createApplyTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createApplyTransform", function() { return createApplyTransform; });
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _function_matrix_apply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../function/matrix/apply */ "../node_modules/mathjs/es/function/matrix/apply.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");




var name = 'apply';
var dependencies = ['typed', 'isInteger'];
/**
 * Attach a transform function to math.apply
 * Adds a property transform containing the transform function.
 *
 * This transform changed the last `dim` parameter of function apply
 * from one-based to zero based
 */

var createApplyTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      isInteger = _ref.isInteger;
  var apply = Object(_function_matrix_apply__WEBPACK_IMPORTED_MODULE_2__["createApply"])({
    typed: typed,
    isInteger: isInteger
  }); // @see: comment of concat itself

  return typed('apply', {
    '...any': function any(args) {
      // change dim from one-based to zero-based
      var dim = args[1];

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_3__["isNumber"])(dim)) {
        args[1] = dim - 1;
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_3__["isBigNumber"])(dim)) {
        args[1] = dim.minus(1);
      }

      try {
        return apply.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/column.transform.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/column.transform.js ***!
  \**************************************************************************/
/*! exports provided: createColumnTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createColumnTransform", function() { return createColumnTransform; });
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _function_matrix_column__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../function/matrix/column */ "../node_modules/mathjs/es/function/matrix/column.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");




var name = 'column';
var dependencies = ['typed', 'Index', 'matrix', 'range'];
/**
 * Attach a transform function to matrix.column
 * Adds a property transform containing the transform function.
 *
 * This transform changed the last `index` parameter of function column
 * from zero-based to one-based
 */

var createColumnTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Index = _ref.Index,
      matrix = _ref.matrix,
      range = _ref.range;
  var column = Object(_function_matrix_column__WEBPACK_IMPORTED_MODULE_2__["createColumn"])({
    typed: typed,
    Index: Index,
    matrix: matrix,
    range: range
  }); // @see: comment of column itself

  return typed('column', {
    '...any': function any(args) {
      // change last argument from zero-based to one-based
      var lastIndex = args.length - 1;
      var last = args[lastIndex];

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_3__["isNumber"])(last)) {
        args[lastIndex] = last - 1;
      }

      try {
        return column.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_0__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/concat.transform.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/concat.transform.js ***!
  \**************************************************************************/
/*! exports provided: createConcatTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConcatTransform", function() { return createConcatTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _function_matrix_concat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../function/matrix/concat */ "../node_modules/mathjs/es/function/matrix/concat.js");




var name = 'concat';
var dependencies = ['typed', 'matrix', 'isInteger'];
var createConcatTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      isInteger = _ref.isInteger;
  var concat = Object(_function_matrix_concat__WEBPACK_IMPORTED_MODULE_3__["createConcat"])({
    typed: typed,
    matrix: matrix,
    isInteger: isInteger
  });
  /**
   * Attach a transform function to math.range
   * Adds a property transform containing the transform function.
   *
   * This transform changed the last `dim` parameter of function concat
   * from one-based to zero based
   */

  return typed('concat', {
    '...any': function any(args) {
      // change last argument from one-based to zero-based
      var lastIndex = args.length - 1;
      var last = args[lastIndex];

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(last)) {
        args[lastIndex] = last - 1;
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(last)) {
        args[lastIndex] = last.minus(1);
      }

      try {
        return concat.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_1__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/diff.transform.js":
/*!************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/diff.transform.js ***!
  \************************************************************************/
/*! exports provided: createDiffTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDiffTransform", function() { return createDiffTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _function_matrix_diff__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../function/matrix/diff */ "../node_modules/mathjs/es/function/matrix/diff.js");




var name = 'diff';
var dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];
var createDiffTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      subtract = _ref.subtract,
      number = _ref.number,
      bignumber = _ref.bignumber;
  var diff = Object(_function_matrix_diff__WEBPACK_IMPORTED_MODULE_3__["createDiff"])({
    typed: typed,
    matrix: matrix,
    subtract: subtract,
    number: number,
    bignumber: bignumber
  });
  /**
   * Attach a transform function to math.diff
   * Adds a property transform containing the transform function.
   *
   * This transform creates a range which includes the end value
   */

  return typed(name, {
    '...any': function any(args) {
      // change last argument dim from one-based to zero-based
      if (args.length === 2 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(args[0])) {
        var dim = args[1];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(dim)) {
          args[1] = dim - 1;
        } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(dim)) {
          args[1] = dim.minus(1);
        }
      }

      try {
        return diff.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/filter.transform.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/filter.transform.js ***!
  \**************************************************************************/
/*! exports provided: createFilterTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFilterTransform", function() { return createFilterTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/function */ "../node_modules/mathjs/es/utils/function.js");
/* harmony import */ var _utils_compileInlineExpression__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/compileInlineExpression */ "../node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");





var name = 'filter';
var dependencies = ['typed'];
var createFilterTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_4__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Attach a transform function to math.filter
   * Adds a property transform containing the transform function.
   *
   * This transform adds support for equations as test function for math.filter,
   * so you can do something like 'filter([3, -2, 5], x > 0)'.
   */
  function filterTransform(args, math, scope) {
    var x, callback;

    if (args[0]) {
      x = args[0].compile().evaluate(scope);
    }

    if (args[1]) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(args[1]) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionAssignmentNode"])(args[1])) {
        // a function pointer, like filter([3, -2, 5], myTestFunction)
        callback = args[1].compile().evaluate(scope);
      } else {
        // an expression like filter([3, -2, 5], x > 0)
        callback = Object(_utils_compileInlineExpression__WEBPACK_IMPORTED_MODULE_3__["compileInlineExpression"])(args[1], math, scope);
      }
    }

    return filter(x, callback);
  }

  filterTransform.rawArgs = true; // one based version of function filter

  var filter = typed('filter', {
    'Array, function': _filter,
    'Matrix, function': function MatrixFunction(x, test) {
      return x.create(_filter(x.toArray(), test));
    },
    'Array, RegExp': _utils_array__WEBPACK_IMPORTED_MODULE_1__["filterRegExp"],
    'Matrix, RegExp': function MatrixRegExp(x, test) {
      return x.create(Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["filterRegExp"])(x.toArray(), test));
    }
  });
  return filterTransform;
}, {
  isTransformFunction: true
});
/**
 * Filter values in a callback given a callback function
 *
 * !!! Passes a one-based index !!!
 *
 * @param {Array} x
 * @param {Function} callback
 * @return {Array} Returns the filtered array
 * @private
 */

function _filter(x, callback) {
  // figure out what number of arguments the callback function expects
  var args = Object(_utils_function__WEBPACK_IMPORTED_MODULE_2__["maxArgumentCount"])(callback);
  return Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["filter"])(x, function (value, index, array) {
    // invoke the callback function with the right number of arguments
    if (args === 1) {
      return callback(value);
    } else if (args === 2) {
      return callback(value, [index + 1]);
    } else {
      // 3 or -1
      return callback(value, [index + 1], array);
    }
  });
}

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/forEach.transform.js":
/*!***************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/forEach.transform.js ***!
  \***************************************************************************/
/*! exports provided: createForEachTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createForEachTransform", function() { return createForEachTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/function */ "../node_modules/mathjs/es/utils/function.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_compileInlineExpression__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/compileInlineExpression */ "../node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js");





var name = 'forEach';
var dependencies = ['typed'];
var createForEachTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Attach a transform function to math.forEach
   * Adds a property transform containing the transform function.
   *
   * This transform creates a one-based index instead of a zero-based index
   */
  function forEachTransform(args, math, scope) {
    var x, callback;

    if (args[0]) {
      x = args[0].compile().evaluate(scope);
    }

    if (args[1]) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(args[1]) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionAssignmentNode"])(args[1])) {
        // a function pointer, like forEach([3, -2, 5], myTestFunction)
        callback = args[1].compile().evaluate(scope);
      } else {
        // an expression like forEach([3, -2, 5], x > 0 ? callback1(x) : callback2(x) )
        callback = Object(_utils_compileInlineExpression__WEBPACK_IMPORTED_MODULE_4__["compileInlineExpression"])(args[1], math, scope);
      }
    }

    return _forEach(x, callback);
  }

  forEachTransform.rawArgs = true; // one-based version of forEach

  var _forEach = typed('forEach', {
    'Array | Matrix, function': function ArrayMatrixFunction(array, callback) {
      // figure out what number of arguments the callback function expects
      var args = Object(_utils_function__WEBPACK_IMPORTED_MODULE_1__["maxArgumentCount"])(callback);

      var recurse = function recurse(value, index) {
        if (Array.isArray(value)) {
          Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["forEach"])(value, function (child, i) {
            // we create a copy of the index array and append the new index value
            recurse(child, index.concat(i + 1)); // one based index, hence i+1
          });
        } else {
          // invoke the callback function with the right number of arguments
          if (args === 1) {
            callback(value);
          } else if (args === 2) {
            callback(value, index);
          } else {
            // 3 or -1
            callback(value, index, array);
          }
        }
      };

      recurse(array.valueOf(), []); // pass Array
    }
  });

  return forEachTransform;
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/index.transform.js":
/*!*************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/index.transform.js ***!
  \*************************************************************************/
/*! exports provided: createIndexTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIndexTransform", function() { return createIndexTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'index';
var dependencies = ['Index'];
var createIndexTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var Index = _ref.Index;

  /**
   * Attach a transform function to math.index
   * Adds a property transform containing the transform function.
   *
   * This transform creates a one-based index instead of a zero-based index
   */
  return function indexTransform() {
    var args = [];

    for (var i = 0, ii = arguments.length; i < ii; i++) {
      var arg = arguments[i]; // change from one-based to zero based, and convert BigNumber to number

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isRange"])(arg)) {
        arg.start--;
        arg.end -= arg.step > 0 ? 0 : 2;
      } else if (arg && arg.isSet === true) {
        arg = arg.map(function (v) {
          return v - 1;
        });
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(arg) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(arg)) {
        arg = arg.map(function (v) {
          return v - 1;
        });
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(arg)) {
        arg--;
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(arg)) {
        arg = arg.toNumber() - 1;
      } else if (typeof arg === 'string') {// leave as is
      } else {
        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');
      }

      args[i] = arg;
    }

    var res = new Index();
    Index.apply(res, args);
    return res;
  };
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/map.transform.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/map.transform.js ***!
  \***********************************************************************/
/*! exports provided: createMapTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMapTransform", function() { return createMapTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/function */ "../node_modules/mathjs/es/utils/function.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_compileInlineExpression__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/compileInlineExpression */ "../node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js");





var name = 'map';
var dependencies = ['typed'];
var createMapTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Attach a transform function to math.map
   * Adds a property transform containing the transform function.
   *
   * This transform creates a one-based index instead of a zero-based index
   */
  function mapTransform(args, math, scope) {
    var x, callback;

    if (args[0]) {
      x = args[0].compile().evaluate(scope);
    }

    if (args[1]) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(args[1]) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionAssignmentNode"])(args[1])) {
        // a function pointer, like filter([3, -2, 5], myTestFunction)
        callback = args[1].compile().evaluate(scope);
      } else {
        // an expression like filter([3, -2, 5], x > 0)
        callback = Object(_utils_compileInlineExpression__WEBPACK_IMPORTED_MODULE_4__["compileInlineExpression"])(args[1], math, scope);
      }
    }

    return map(x, callback);
  }

  mapTransform.rawArgs = true; // one-based version of map function

  var map = typed('map', {
    'Array, function': function ArrayFunction(x, callback) {
      return _map(x, callback, x);
    },
    'Matrix, function': function MatrixFunction(x, callback) {
      return x.create(_map(x.valueOf(), callback, x));
    }
  });
  return mapTransform;
}, {
  isTransformFunction: true
});
/**
 * Map for a multi dimensional array. One-based indexes
 * @param {Array} array
 * @param {function} callback
 * @param {Array} orig
 * @return {Array}
 * @private
 */

function _map(array, callback, orig) {
  // figure out what number of arguments the callback function expects
  var argsCount = Object(_utils_function__WEBPACK_IMPORTED_MODULE_1__["maxArgumentCount"])(callback);

  function recurse(value, index) {
    if (Array.isArray(value)) {
      return Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["map"])(value, function (child, i) {
        // we create a copy of the index array and append the new index value
        return recurse(child, index.concat(i + 1)); // one based index, hence i + 1
      });
    } else {
      // invoke the (typed) callback function with the right number of arguments
      if (argsCount === 1) {
        return callback(value);
      } else if (argsCount === 2) {
        return callback(value, index);
      } else {
        // 3 or -1
        return callback(value, index, orig);
      }
    }
  }

  return recurse(array, []);
}

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/max.transform.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/max.transform.js ***!
  \***********************************************************************/
/*! exports provided: createMaxTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMaxTransform", function() { return createMaxTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _function_statistics_max__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../function/statistics/max */ "../node_modules/mathjs/es/function/statistics/max.js");




var name = 'max';
var dependencies = ['typed', 'config', 'numeric', 'larger'];
var createMaxTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      numeric = _ref.numeric,
      larger = _ref.larger;
  var max = Object(_function_statistics_max__WEBPACK_IMPORTED_MODULE_3__["createMax"])({
    typed: typed,
    config: config,
    numeric: numeric,
    larger: larger
  });
  /**
   * Attach a transform function to math.max
   * Adds a property transform containing the transform function.
   *
   * This transform changed the last `dim` parameter of function max
   * from one-based to zero based
   */

  return typed('max', {
    '...any': function any(args) {
      // change last argument dim from one-based to zero-based
      if (args.length === 2 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(args[0])) {
        var dim = args[1];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(dim)) {
          args[1] = dim - 1;
        } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(dim)) {
          args[1] = dim.minus(1);
        }
      }

      try {
        return max.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/mean.transform.js":
/*!************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/mean.transform.js ***!
  \************************************************************************/
/*! exports provided: createMeanTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMeanTransform", function() { return createMeanTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _function_statistics_mean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../function/statistics/mean */ "../node_modules/mathjs/es/function/statistics/mean.js");




var name = 'mean';
var dependencies = ['typed', 'add', 'divide'];
var createMeanTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      add = _ref.add,
      divide = _ref.divide;
  var mean = Object(_function_statistics_mean__WEBPACK_IMPORTED_MODULE_3__["createMean"])({
    typed: typed,
    add: add,
    divide: divide
  });
  /**
   * Attach a transform function to math.mean
   * Adds a property transform containing the transform function.
   *
   * This transform changed the last `dim` parameter of function mean
   * from one-based to zero based
   */

  return typed('mean', {
    '...any': function any(args) {
      // change last argument dim from one-based to zero-based
      if (args.length === 2 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(args[0])) {
        var dim = args[1];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(dim)) {
          args[1] = dim - 1;
        } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(dim)) {
          args[1] = dim.minus(1);
        }
      }

      try {
        return mean.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/min.transform.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/min.transform.js ***!
  \***********************************************************************/
/*! exports provided: createMinTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMinTransform", function() { return createMinTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _function_statistics_min__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../function/statistics/min */ "../node_modules/mathjs/es/function/statistics/min.js");




var name = 'min';
var dependencies = ['typed', 'config', 'numeric', 'smaller'];
var createMinTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      numeric = _ref.numeric,
      smaller = _ref.smaller;
  var min = Object(_function_statistics_min__WEBPACK_IMPORTED_MODULE_3__["createMin"])({
    typed: typed,
    config: config,
    numeric: numeric,
    smaller: smaller
  });
  /**
   * Attach a transform function to math.min
   * Adds a property transform containing the transform function.
   *
   * This transform changed the last `dim` parameter of function min
   * from one-based to zero based
   */

  return typed('min', {
    '...any': function any(args) {
      // change last argument dim from one-based to zero-based
      if (args.length === 2 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(args[0])) {
        var dim = args[1];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(dim)) {
          args[1] = dim - 1;
        } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(dim)) {
          args[1] = dim.minus(1);
        }
      }

      try {
        return min.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/range.transform.js":
/*!*************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/range.transform.js ***!
  \*************************************************************************/
/*! exports provided: createRangeTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRangeTransform", function() { return createRangeTransform; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _function_matrix_range__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../function/matrix/range */ "../node_modules/mathjs/es/function/matrix/range.js");


var name = 'range';
var dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq'];
var createRangeTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      bignumber = _ref.bignumber,
      smaller = _ref.smaller,
      smallerEq = _ref.smallerEq,
      larger = _ref.larger,
      largerEq = _ref.largerEq;
  var range = Object(_function_matrix_range__WEBPACK_IMPORTED_MODULE_1__["createRange"])({
    typed: typed,
    config: config,
    matrix: matrix,
    bignumber: bignumber,
    smaller: smaller,
    smallerEq: smallerEq,
    larger: larger,
    largerEq: largerEq
  });
  /**
   * Attach a transform function to math.range
   * Adds a property transform containing the transform function.
   *
   * This transform creates a range which includes the end value
   */

  return typed('range', {
    '...any': function any(args) {
      var lastIndex = args.length - 1;
      var last = args[lastIndex];

      if (typeof last !== 'boolean') {
        // append a parameter includeEnd=true
        args.push(true);
      }

      return range.apply(null, args);
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/row.transform.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/row.transform.js ***!
  \***********************************************************************/
/*! exports provided: createRowTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRowTransform", function() { return createRowTransform; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _function_matrix_row__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../function/matrix/row */ "../node_modules/mathjs/es/function/matrix/row.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");




var name = 'row';
var dependencies = ['typed', 'Index', 'matrix', 'range'];
/**
 * Attach a transform function to matrix.column
 * Adds a property transform containing the transform function.
 *
 * This transform changed the last `index` parameter of function column
 * from zero-based to one-based
 */

var createRowTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Index = _ref.Index,
      matrix = _ref.matrix,
      range = _ref.range;
  var row = Object(_function_matrix_row__WEBPACK_IMPORTED_MODULE_1__["createRow"])({
    typed: typed,
    Index: Index,
    matrix: matrix,
    range: range
  }); // @see: comment of row itself

  return typed('row', {
    '...any': function any(args) {
      // change last argument from zero-based to one-based
      var lastIndex = args.length - 1;
      var last = args[lastIndex];

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_3__["isNumber"])(last)) {
        args[lastIndex] = last - 1;
      }

      try {
        return row.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/std.transform.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/std.transform.js ***!
  \***********************************************************************/
/*! exports provided: createStdTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStdTransform", function() { return createStdTransform; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _function_statistics_std__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../function/statistics/std */ "../node_modules/mathjs/es/function/statistics/std.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");




var name = 'std';
var dependencies = ['typed', 'sqrt', 'variance'];
/**
 * Attach a transform function to math.std
 * Adds a property transform containing the transform function.
 *
 * This transform changed the `dim` parameter of function std
 * from one-based to zero based
 */

var createStdTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      sqrt = _ref.sqrt,
      variance = _ref.variance;
  var std = Object(_function_statistics_std__WEBPACK_IMPORTED_MODULE_1__["createStd"])({
    typed: typed,
    sqrt: sqrt,
    variance: variance
  });
  return typed('std', {
    '...any': function any(args) {
      // change last argument dim from one-based to zero-based
      if (args.length >= 2 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isCollection"])(args[0])) {
        var dim = args[1];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(dim)) {
          args[1] = dim - 1;
        } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isBigNumber"])(dim)) {
          args[1] = dim.minus(1);
        }
      }

      try {
        return std.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_3__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/subset.transform.js":
/*!**************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/subset.transform.js ***!
  \**************************************************************************/
/*! exports provided: createSubsetTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSubsetTransform", function() { return createSubsetTransform; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _function_matrix_subset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../function/matrix/subset */ "../node_modules/mathjs/es/function/matrix/subset.js");



var name = 'subset';
var dependencies = ['typed', 'matrix'];
var createSubsetTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix;
  var subset = Object(_function_matrix_subset__WEBPACK_IMPORTED_MODULE_2__["createSubset"])({
    typed: typed,
    matrix: matrix
  });
  /**
   * Attach a transform function to math.subset
   * Adds a property transform containing the transform function.
   *
   * This transform creates a range which includes the end value
   */

  return typed('subset', {
    '...any': function any(args) {
      try {
        return subset.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_1__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/sum.transform.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/sum.transform.js ***!
  \***********************************************************************/
/*! exports provided: createSumTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSumTransform", function() { return createSumTransform; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _function_statistics_sum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../function/statistics/sum */ "../node_modules/mathjs/es/function/statistics/sum.js");




/**
 * Attach a transform function to math.sum
 * Adds a property transform containing the transform function.
 *
 * This transform changed the last `dim` parameter of function mean
 * from one-based to zero based
 */

var name = 'sum';
var dependencies = ['typed', 'config', 'add', 'numeric'];
var createSumTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      add = _ref.add,
      numeric = _ref.numeric;
  var sum = Object(_function_statistics_sum__WEBPACK_IMPORTED_MODULE_3__["createSum"])({
    typed: typed,
    config: config,
    add: add,
    numeric: numeric
  });
  return typed(name, {
    '...any': function any(args) {
      // change last argument dim from one-based to zero-based
      if (args.length === 2 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(args[0])) {
        var dim = args[1];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(dim)) {
          args[1] = dim - 1;
        } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(dim)) {
          args[1] = dim.minus(1);
        }
      }

      try {
        return sum.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js ***!
  \***************************************************************************************/
/*! exports provided: compileInlineExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileInlineExpression", function() { return compileInlineExpression; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");

/**
 * Compile an inline expression like "x > 0"
 * @param {Node} expression
 * @param {Object} math
 * @param {Object} scope
 * @return {function} Returns a function with one argument which fills in the
 *                    undefined variable (like "x") and evaluates the expression
 */

function compileInlineExpression(expression, math, scope) {
  // find an undefined symbol
  var symbol = expression.filter(function (node) {
    return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(node) && !(node.name in math) && !(node.name in scope);
  })[0];

  if (!symbol) {
    throw new Error('No undefined variable found in inline expression "' + expression + '"');
  } // create a test function for this equation


  var name = symbol.name; // variable name

  var subScope = Object.create(scope);
  var eq = expression.compile();
  return function inlineExpression(x) {
    subScope[name] = x;
    return eq.evaluate(subScope);
  };
}

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js":
/*!******************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/utils/errorTransform.js ***!
  \******************************************************************************/
/*! exports provided: errorTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorTransform", function() { return errorTransform; });
/* harmony import */ var _error_IndexError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../error/IndexError */ "../node_modules/mathjs/es/error/IndexError.js");

/**
 * Transform zero-based indices to one-based indices in errors
 * @param {Error} err
 * @returns {Error | IndexError} Returns the transformed error
 */

function errorTransform(err) {
  if (err && err.isIndexError) {
    return new _error_IndexError__WEBPACK_IMPORTED_MODULE_0__["IndexError"](err.index + 1, err.min + 1, err.max !== undefined ? err.max + 1 : undefined);
  }

  return err;
}

/***/ }),

/***/ "../node_modules/mathjs/es/expression/transform/variance.transform.js":
/*!****************************************************************************!*\
  !*** ../node_modules/mathjs/es/expression/transform/variance.transform.js ***!
  \****************************************************************************/
/*! exports provided: createVarianceTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createVarianceTransform", function() { return createVarianceTransform; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorTransform */ "../node_modules/mathjs/es/expression/transform/utils/errorTransform.js");
/* harmony import */ var _function_statistics_variance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../function/statistics/variance */ "../node_modules/mathjs/es/function/statistics/variance.js");




var name = 'variance';
var dependencies = ['typed', 'add', 'subtract', 'multiply', 'divide', 'apply', 'isNaN'];
/**
 * Attach a transform function to math.var
 * Adds a property transform containing the transform function.
 *
 * This transform changed the `dim` parameter of function var
 * from one-based to zero based
 */

var createVarianceTransform = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      add = _ref.add,
      subtract = _ref.subtract,
      multiply = _ref.multiply,
      divide = _ref.divide,
      apply = _ref.apply,
      isNaN = _ref.isNaN;
  var variance = Object(_function_statistics_variance__WEBPACK_IMPORTED_MODULE_3__["createVariance"])({
    typed: typed,
    add: add,
    subtract: subtract,
    multiply: multiply,
    divide: divide,
    apply: apply,
    isNaN: isNaN
  });
  return typed(name, {
    '...any': function any(args) {
      // change last argument dim from one-based to zero-based
      if (args.length >= 2 && Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isCollection"])(args[0])) {
        var dim = args[1];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(dim)) {
          args[1] = dim - 1;
        } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isBigNumber"])(dim)) {
          args[1] = dim.minus(1);
        }
      }

      try {
        return variance.apply(null, args);
      } catch (err) {
        throw Object(_utils_errorTransform__WEBPACK_IMPORTED_MODULE_2__["errorTransform"])(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/factoriesAny.js":
/*!*************************************************!*\
  !*** ../node_modules/mathjs/es/factoriesAny.js ***!
  \*************************************************/
/*! exports provided: createTyped, createResultSet, createBigNumberClass, createComplexClass, createFractionClass, createRangeClass, createMatrixClass, createDenseMatrixClass, createClone, createIsInteger, createIsNegative, createIsNumeric, createHasNumericValue, createIsPositive, createIsZero, createIsNaN, createTypeOf, createEqualScalar, createSparseMatrixClass, createNumber, createString, createBoolean, createBignumber, createComplex, createFraction, createMatrix, createSplitUnit, createUnaryMinus, createUnaryPlus, createAbs, createApply, createAddScalar, createCbrt, createCeil, createCube, createExp, createExpm1, createFix, createFloor, createGcd, createLcm, createLog10, createLog2, createMod, createMultiplyScalar, createMultiply, createNthRoot, createSign, createSqrt, createSquare, createSubtract, createXgcd, createDotMultiply, createBitAnd, createBitNot, createBitOr, createBitXor, createArg, createConj, createIm, createRe, createNot, createOr, createXor, createConcat, createColumn, createCross, createDiag, createFilter, createFlatten, createForEach, createGetMatrixDataType, createIdentity, createKron, createMap, createDiff, createOnes, createRange, createReshape, createResize, createRow, createSize, createSqueeze, createSubset, createTranspose, createCtranspose, createZeros, createErf, createMode, createProd, createFormat, createPrint, createTo, createIsPrime, createNumeric, createDivideScalar, createPow, createRound, createLog, createLog1p, createNthRoots, createDotPow, createDotDivide, createLsolve, createUsolve, createLeftShift, createRightArithShift, createRightLogShift, createAnd, createCompare, createCompareNatural, createCompareText, createEqual, createEqualText, createSmaller, createSmallerEq, createLarger, createLargerEq, createDeepEqual, createUnequal, createPartitionSelect, createSort, createMax, createMin, createImmutableDenseMatrixClass, createIndexClass, createFibonacciHeapClass, createSpaClass, createUnitClass, createUnitFunction, createSparse, createCreateUnit, createAcos, createAcosh, createAcot, createAcoth, createAcsc, createAcsch, createAsec, createAsech, createAsin, createAsinh, createAtan, createAtan2, createAtanh, createCos, createCosh, createCot, createCoth, createCsc, createCsch, createSec, createSech, createSin, createSinh, createTan, createTanh, createSetCartesian, createSetDifference, createSetDistinct, createSetIntersect, createSetIsSubset, createSetMultiplicity, createSetPowerset, createSetSize, createSetSymDifference, createSetUnion, createAdd, createHypot, createNorm, createDot, createTrace, createIndex, createNode, createAccessorNode, createArrayNode, createAssignmentNode, createBlockNode, createConditionalNode, createConstantNode, createFunctionAssignmentNode, createIndexNode, createObjectNode, createOperatorNode, createParenthesisNode, createRangeNode, createRelationalNode, createSymbolNode, createFunctionNode, createParse, createCompile, createEvaluate, createParserClass, createParser, createLup, createQr, createSlu, createLusolve, createHelpClass, createChainClass, createHelp, createChain, createDet, createInv, createEigs, createExpm, createSqrtm, createDivide, createDistance, createIntersect, createSum, createMean, createMedian, createMad, createVariance, createQuantileSeq, createStd, createCombinations, createCombinationsWithRep, createGamma, createFactorial, createKldivergence, createMultinomial, createPermutations, createPickRandom, createRandom, createRandomInt, createStirlingS2, createBellNumbers, createCatalan, createComposition, createSimplify, createDerivative, createRationalize, createReviver, createReplacer, createE, createUppercaseE, createFalse, createI, createInfinity, createLN10, createLN2, createLOG10E, createLOG2E, createNaN, createNull, createPhi, createPi, createUppercasePi, createSQRT1_2, createSQRT2, createTau, createTrue, createVersion, createAtomicMass, createAvogadro, createBohrMagneton, createBohrRadius, createBoltzmann, createClassicalElectronRadius, createConductanceQuantum, createCoulomb, createDeuteronMass, createEfimovFactor, createElectricConstant, createElectronMass, createElementaryCharge, createFaraday, createFermiCoupling, createFineStructure, createFirstRadiation, createGasConstant, createGravitationConstant, createGravity, createHartreeEnergy, createInverseConductanceQuantum, createKlitzing, createLoschmidt, createMagneticConstant, createMagneticFluxQuantum, createMolarMass, createMolarMassC12, createMolarPlanckConstant, createMolarVolume, createNeutronMass, createNuclearMagneton, createPlanckCharge, createPlanckConstant, createPlanckLength, createPlanckMass, createPlanckTemperature, createPlanckTime, createProtonMass, createQuantumOfCirculation, createReducedPlanckConstant, createRydberg, createSackurTetrode, createSecondRadiation, createSpeedOfLight, createStefanBoltzmann, createThomsonCrossSection, createVacuumImpedance, createWeakMixingAngle, createWienDisplacement, createApplyTransform, createColumnTransform, createFilterTransform, createForEachTransform, createIndexTransform, createMapTransform, createMaxTransform, createMeanTransform, createMinTransform, createRangeTransform, createRowTransform, createSubsetTransform, createConcatTransform, createDiffTransform, createStdTransform, createSumTransform, createVarianceTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_function_typed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/function/typed */ "../node_modules/mathjs/es/core/function/typed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTyped", function() { return _core_function_typed__WEBPACK_IMPORTED_MODULE_0__["createTyped"]; });

/* harmony import */ var _type_resultset_ResultSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type/resultset/ResultSet */ "../node_modules/mathjs/es/type/resultset/ResultSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createResultSet", function() { return _type_resultset_ResultSet__WEBPACK_IMPORTED_MODULE_1__["createResultSet"]; });

/* harmony import */ var _type_bignumber_BigNumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type/bignumber/BigNumber */ "../node_modules/mathjs/es/type/bignumber/BigNumber.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBigNumberClass", function() { return _type_bignumber_BigNumber__WEBPACK_IMPORTED_MODULE_2__["createBigNumberClass"]; });

/* harmony import */ var _type_complex_Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type/complex/Complex */ "../node_modules/mathjs/es/type/complex/Complex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComplexClass", function() { return _type_complex_Complex__WEBPACK_IMPORTED_MODULE_3__["createComplexClass"]; });

/* harmony import */ var _type_fraction_Fraction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type/fraction/Fraction */ "../node_modules/mathjs/es/type/fraction/Fraction.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFractionClass", function() { return _type_fraction_Fraction__WEBPACK_IMPORTED_MODULE_4__["createFractionClass"]; });

/* harmony import */ var _type_matrix_Range__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./type/matrix/Range */ "../node_modules/mathjs/es/type/matrix/Range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeClass", function() { return _type_matrix_Range__WEBPACK_IMPORTED_MODULE_5__["createRangeClass"]; });

/* harmony import */ var _type_matrix_Matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./type/matrix/Matrix */ "../node_modules/mathjs/es/type/matrix/Matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMatrixClass", function() { return _type_matrix_Matrix__WEBPACK_IMPORTED_MODULE_6__["createMatrixClass"]; });

/* harmony import */ var _type_matrix_DenseMatrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./type/matrix/DenseMatrix */ "../node_modules/mathjs/es/type/matrix/DenseMatrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDenseMatrixClass", function() { return _type_matrix_DenseMatrix__WEBPACK_IMPORTED_MODULE_7__["createDenseMatrixClass"]; });

/* harmony import */ var _function_utils_clone__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./function/utils/clone */ "../node_modules/mathjs/es/function/utils/clone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createClone", function() { return _function_utils_clone__WEBPACK_IMPORTED_MODULE_8__["createClone"]; });

/* harmony import */ var _function_utils_isInteger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./function/utils/isInteger */ "../node_modules/mathjs/es/function/utils/isInteger.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsInteger", function() { return _function_utils_isInteger__WEBPACK_IMPORTED_MODULE_9__["createIsInteger"]; });

/* harmony import */ var _function_utils_isNegative__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./function/utils/isNegative */ "../node_modules/mathjs/es/function/utils/isNegative.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNegative", function() { return _function_utils_isNegative__WEBPACK_IMPORTED_MODULE_10__["createIsNegative"]; });

/* harmony import */ var _function_utils_isNumeric__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./function/utils/isNumeric */ "../node_modules/mathjs/es/function/utils/isNumeric.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNumeric", function() { return _function_utils_isNumeric__WEBPACK_IMPORTED_MODULE_11__["createIsNumeric"]; });

/* harmony import */ var _function_utils_hasNumericValue__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./function/utils/hasNumericValue */ "../node_modules/mathjs/es/function/utils/hasNumericValue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHasNumericValue", function() { return _function_utils_hasNumericValue__WEBPACK_IMPORTED_MODULE_12__["createHasNumericValue"]; });

/* harmony import */ var _function_utils_isPositive__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./function/utils/isPositive */ "../node_modules/mathjs/es/function/utils/isPositive.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsPositive", function() { return _function_utils_isPositive__WEBPACK_IMPORTED_MODULE_13__["createIsPositive"]; });

/* harmony import */ var _function_utils_isZero__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./function/utils/isZero */ "../node_modules/mathjs/es/function/utils/isZero.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsZero", function() { return _function_utils_isZero__WEBPACK_IMPORTED_MODULE_14__["createIsZero"]; });

/* harmony import */ var _function_utils_isNaN__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./function/utils/isNaN */ "../node_modules/mathjs/es/function/utils/isNaN.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNaN", function() { return _function_utils_isNaN__WEBPACK_IMPORTED_MODULE_15__["createIsNaN"]; });

/* harmony import */ var _function_utils_typeOf__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./function/utils/typeOf */ "../node_modules/mathjs/es/function/utils/typeOf.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTypeOf", function() { return _function_utils_typeOf__WEBPACK_IMPORTED_MODULE_16__["createTypeOf"]; });

/* harmony import */ var _function_relational_equalScalar__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./function/relational/equalScalar */ "../node_modules/mathjs/es/function/relational/equalScalar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqualScalar", function() { return _function_relational_equalScalar__WEBPACK_IMPORTED_MODULE_17__["createEqualScalar"]; });

/* harmony import */ var _type_matrix_SparseMatrix__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./type/matrix/SparseMatrix */ "../node_modules/mathjs/es/type/matrix/SparseMatrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSparseMatrixClass", function() { return _type_matrix_SparseMatrix__WEBPACK_IMPORTED_MODULE_18__["createSparseMatrixClass"]; });

/* harmony import */ var _type_number__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./type/number */ "../node_modules/mathjs/es/type/number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNumber", function() { return _type_number__WEBPACK_IMPORTED_MODULE_19__["createNumber"]; });

/* harmony import */ var _type_string__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./type/string */ "../node_modules/mathjs/es/type/string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createString", function() { return _type_string__WEBPACK_IMPORTED_MODULE_20__["createString"]; });

/* harmony import */ var _type_boolean__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./type/boolean */ "../node_modules/mathjs/es/type/boolean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBoolean", function() { return _type_boolean__WEBPACK_IMPORTED_MODULE_21__["createBoolean"]; });

/* harmony import */ var _type_bignumber_function_bignumber__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./type/bignumber/function/bignumber */ "../node_modules/mathjs/es/type/bignumber/function/bignumber.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBignumber", function() { return _type_bignumber_function_bignumber__WEBPACK_IMPORTED_MODULE_22__["createBignumber"]; });

/* harmony import */ var _type_complex_function_complex__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./type/complex/function/complex */ "../node_modules/mathjs/es/type/complex/function/complex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComplex", function() { return _type_complex_function_complex__WEBPACK_IMPORTED_MODULE_23__["createComplex"]; });

/* harmony import */ var _type_fraction_function_fraction__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./type/fraction/function/fraction */ "../node_modules/mathjs/es/type/fraction/function/fraction.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFraction", function() { return _type_fraction_function_fraction__WEBPACK_IMPORTED_MODULE_24__["createFraction"]; });

/* harmony import */ var _type_matrix_function_matrix__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./type/matrix/function/matrix */ "../node_modules/mathjs/es/type/matrix/function/matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMatrix", function() { return _type_matrix_function_matrix__WEBPACK_IMPORTED_MODULE_25__["createMatrix"]; });

/* harmony import */ var _type_unit_function_splitUnit__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./type/unit/function/splitUnit */ "../node_modules/mathjs/es/type/unit/function/splitUnit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSplitUnit", function() { return _type_unit_function_splitUnit__WEBPACK_IMPORTED_MODULE_26__["createSplitUnit"]; });

/* harmony import */ var _function_arithmetic_unaryMinus__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./function/arithmetic/unaryMinus */ "../node_modules/mathjs/es/function/arithmetic/unaryMinus.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnaryMinus", function() { return _function_arithmetic_unaryMinus__WEBPACK_IMPORTED_MODULE_27__["createUnaryMinus"]; });

/* harmony import */ var _function_arithmetic_unaryPlus__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./function/arithmetic/unaryPlus */ "../node_modules/mathjs/es/function/arithmetic/unaryPlus.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnaryPlus", function() { return _function_arithmetic_unaryPlus__WEBPACK_IMPORTED_MODULE_28__["createUnaryPlus"]; });

/* harmony import */ var _function_arithmetic_abs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./function/arithmetic/abs */ "../node_modules/mathjs/es/function/arithmetic/abs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAbs", function() { return _function_arithmetic_abs__WEBPACK_IMPORTED_MODULE_29__["createAbs"]; });

/* harmony import */ var _function_matrix_apply__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./function/matrix/apply */ "../node_modules/mathjs/es/function/matrix/apply.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createApply", function() { return _function_matrix_apply__WEBPACK_IMPORTED_MODULE_30__["createApply"]; });

/* harmony import */ var _function_arithmetic_addScalar__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./function/arithmetic/addScalar */ "../node_modules/mathjs/es/function/arithmetic/addScalar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAddScalar", function() { return _function_arithmetic_addScalar__WEBPACK_IMPORTED_MODULE_31__["createAddScalar"]; });

/* harmony import */ var _function_arithmetic_cbrt__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./function/arithmetic/cbrt */ "../node_modules/mathjs/es/function/arithmetic/cbrt.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCbrt", function() { return _function_arithmetic_cbrt__WEBPACK_IMPORTED_MODULE_32__["createCbrt"]; });

/* harmony import */ var _function_arithmetic_ceil__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./function/arithmetic/ceil */ "../node_modules/mathjs/es/function/arithmetic/ceil.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCeil", function() { return _function_arithmetic_ceil__WEBPACK_IMPORTED_MODULE_33__["createCeil"]; });

/* harmony import */ var _function_arithmetic_cube__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./function/arithmetic/cube */ "../node_modules/mathjs/es/function/arithmetic/cube.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCube", function() { return _function_arithmetic_cube__WEBPACK_IMPORTED_MODULE_34__["createCube"]; });

/* harmony import */ var _function_arithmetic_exp__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./function/arithmetic/exp */ "../node_modules/mathjs/es/function/arithmetic/exp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExp", function() { return _function_arithmetic_exp__WEBPACK_IMPORTED_MODULE_35__["createExp"]; });

/* harmony import */ var _function_arithmetic_expm1__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./function/arithmetic/expm1 */ "../node_modules/mathjs/es/function/arithmetic/expm1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExpm1", function() { return _function_arithmetic_expm1__WEBPACK_IMPORTED_MODULE_36__["createExpm1"]; });

/* harmony import */ var _function_arithmetic_fix__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./function/arithmetic/fix */ "../node_modules/mathjs/es/function/arithmetic/fix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFix", function() { return _function_arithmetic_fix__WEBPACK_IMPORTED_MODULE_37__["createFix"]; });

/* harmony import */ var _function_arithmetic_floor__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./function/arithmetic/floor */ "../node_modules/mathjs/es/function/arithmetic/floor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFloor", function() { return _function_arithmetic_floor__WEBPACK_IMPORTED_MODULE_38__["createFloor"]; });

/* harmony import */ var _function_arithmetic_gcd__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./function/arithmetic/gcd */ "../node_modules/mathjs/es/function/arithmetic/gcd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGcd", function() { return _function_arithmetic_gcd__WEBPACK_IMPORTED_MODULE_39__["createGcd"]; });

/* harmony import */ var _function_arithmetic_lcm__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./function/arithmetic/lcm */ "../node_modules/mathjs/es/function/arithmetic/lcm.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLcm", function() { return _function_arithmetic_lcm__WEBPACK_IMPORTED_MODULE_40__["createLcm"]; });

/* harmony import */ var _function_arithmetic_log10__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./function/arithmetic/log10 */ "../node_modules/mathjs/es/function/arithmetic/log10.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog10", function() { return _function_arithmetic_log10__WEBPACK_IMPORTED_MODULE_41__["createLog10"]; });

/* harmony import */ var _function_arithmetic_log2__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./function/arithmetic/log2 */ "../node_modules/mathjs/es/function/arithmetic/log2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog2", function() { return _function_arithmetic_log2__WEBPACK_IMPORTED_MODULE_42__["createLog2"]; });

/* harmony import */ var _function_arithmetic_mod__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./function/arithmetic/mod */ "../node_modules/mathjs/es/function/arithmetic/mod.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMod", function() { return _function_arithmetic_mod__WEBPACK_IMPORTED_MODULE_43__["createMod"]; });

/* harmony import */ var _function_arithmetic_multiplyScalar__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./function/arithmetic/multiplyScalar */ "../node_modules/mathjs/es/function/arithmetic/multiplyScalar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultiplyScalar", function() { return _function_arithmetic_multiplyScalar__WEBPACK_IMPORTED_MODULE_44__["createMultiplyScalar"]; });

/* harmony import */ var _function_arithmetic_multiply__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./function/arithmetic/multiply */ "../node_modules/mathjs/es/function/arithmetic/multiply.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultiply", function() { return _function_arithmetic_multiply__WEBPACK_IMPORTED_MODULE_45__["createMultiply"]; });

/* harmony import */ var _function_arithmetic_nthRoot__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./function/arithmetic/nthRoot */ "../node_modules/mathjs/es/function/arithmetic/nthRoot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNthRoot", function() { return _function_arithmetic_nthRoot__WEBPACK_IMPORTED_MODULE_46__["createNthRoot"]; });

/* harmony import */ var _function_arithmetic_sign__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./function/arithmetic/sign */ "../node_modules/mathjs/es/function/arithmetic/sign.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSign", function() { return _function_arithmetic_sign__WEBPACK_IMPORTED_MODULE_47__["createSign"]; });

/* harmony import */ var _function_arithmetic_sqrt__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./function/arithmetic/sqrt */ "../node_modules/mathjs/es/function/arithmetic/sqrt.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqrt", function() { return _function_arithmetic_sqrt__WEBPACK_IMPORTED_MODULE_48__["createSqrt"]; });

/* harmony import */ var _function_arithmetic_square__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./function/arithmetic/square */ "../node_modules/mathjs/es/function/arithmetic/square.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSquare", function() { return _function_arithmetic_square__WEBPACK_IMPORTED_MODULE_49__["createSquare"]; });

/* harmony import */ var _function_arithmetic_subtract__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./function/arithmetic/subtract */ "../node_modules/mathjs/es/function/arithmetic/subtract.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubtract", function() { return _function_arithmetic_subtract__WEBPACK_IMPORTED_MODULE_50__["createSubtract"]; });

/* harmony import */ var _function_arithmetic_xgcd__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./function/arithmetic/xgcd */ "../node_modules/mathjs/es/function/arithmetic/xgcd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createXgcd", function() { return _function_arithmetic_xgcd__WEBPACK_IMPORTED_MODULE_51__["createXgcd"]; });

/* harmony import */ var _function_arithmetic_dotMultiply__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./function/arithmetic/dotMultiply */ "../node_modules/mathjs/es/function/arithmetic/dotMultiply.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotMultiply", function() { return _function_arithmetic_dotMultiply__WEBPACK_IMPORTED_MODULE_52__["createDotMultiply"]; });

/* harmony import */ var _function_bitwise_bitAnd__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./function/bitwise/bitAnd */ "../node_modules/mathjs/es/function/bitwise/bitAnd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitAnd", function() { return _function_bitwise_bitAnd__WEBPACK_IMPORTED_MODULE_53__["createBitAnd"]; });

/* harmony import */ var _function_bitwise_bitNot__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./function/bitwise/bitNot */ "../node_modules/mathjs/es/function/bitwise/bitNot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitNot", function() { return _function_bitwise_bitNot__WEBPACK_IMPORTED_MODULE_54__["createBitNot"]; });

/* harmony import */ var _function_bitwise_bitOr__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./function/bitwise/bitOr */ "../node_modules/mathjs/es/function/bitwise/bitOr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitOr", function() { return _function_bitwise_bitOr__WEBPACK_IMPORTED_MODULE_55__["createBitOr"]; });

/* harmony import */ var _function_bitwise_bitXor__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./function/bitwise/bitXor */ "../node_modules/mathjs/es/function/bitwise/bitXor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitXor", function() { return _function_bitwise_bitXor__WEBPACK_IMPORTED_MODULE_56__["createBitXor"]; });

/* harmony import */ var _function_complex_arg__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./function/complex/arg */ "../node_modules/mathjs/es/function/complex/arg.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createArg", function() { return _function_complex_arg__WEBPACK_IMPORTED_MODULE_57__["createArg"]; });

/* harmony import */ var _function_complex_conj__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./function/complex/conj */ "../node_modules/mathjs/es/function/complex/conj.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConj", function() { return _function_complex_conj__WEBPACK_IMPORTED_MODULE_58__["createConj"]; });

/* harmony import */ var _function_complex_im__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./function/complex/im */ "../node_modules/mathjs/es/function/complex/im.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIm", function() { return _function_complex_im__WEBPACK_IMPORTED_MODULE_59__["createIm"]; });

/* harmony import */ var _function_complex_re__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./function/complex/re */ "../node_modules/mathjs/es/function/complex/re.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRe", function() { return _function_complex_re__WEBPACK_IMPORTED_MODULE_60__["createRe"]; });

/* harmony import */ var _function_logical_not__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./function/logical/not */ "../node_modules/mathjs/es/function/logical/not.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNot", function() { return _function_logical_not__WEBPACK_IMPORTED_MODULE_61__["createNot"]; });

/* harmony import */ var _function_logical_or__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./function/logical/or */ "../node_modules/mathjs/es/function/logical/or.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOr", function() { return _function_logical_or__WEBPACK_IMPORTED_MODULE_62__["createOr"]; });

/* harmony import */ var _function_logical_xor__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./function/logical/xor */ "../node_modules/mathjs/es/function/logical/xor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createXor", function() { return _function_logical_xor__WEBPACK_IMPORTED_MODULE_63__["createXor"]; });

/* harmony import */ var _function_matrix_concat__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./function/matrix/concat */ "../node_modules/mathjs/es/function/matrix/concat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConcat", function() { return _function_matrix_concat__WEBPACK_IMPORTED_MODULE_64__["createConcat"]; });

/* harmony import */ var _function_matrix_column__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./function/matrix/column */ "../node_modules/mathjs/es/function/matrix/column.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createColumn", function() { return _function_matrix_column__WEBPACK_IMPORTED_MODULE_65__["createColumn"]; });

/* harmony import */ var _function_matrix_cross__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./function/matrix/cross */ "../node_modules/mathjs/es/function/matrix/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCross", function() { return _function_matrix_cross__WEBPACK_IMPORTED_MODULE_66__["createCross"]; });

/* harmony import */ var _function_matrix_diag__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./function/matrix/diag */ "../node_modules/mathjs/es/function/matrix/diag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiag", function() { return _function_matrix_diag__WEBPACK_IMPORTED_MODULE_67__["createDiag"]; });

/* harmony import */ var _function_matrix_filter__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./function/matrix/filter */ "../node_modules/mathjs/es/function/matrix/filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFilter", function() { return _function_matrix_filter__WEBPACK_IMPORTED_MODULE_68__["createFilter"]; });

/* harmony import */ var _function_matrix_flatten__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./function/matrix/flatten */ "../node_modules/mathjs/es/function/matrix/flatten.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFlatten", function() { return _function_matrix_flatten__WEBPACK_IMPORTED_MODULE_69__["createFlatten"]; });

/* harmony import */ var _function_matrix_forEach__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./function/matrix/forEach */ "../node_modules/mathjs/es/function/matrix/forEach.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createForEach", function() { return _function_matrix_forEach__WEBPACK_IMPORTED_MODULE_70__["createForEach"]; });

/* harmony import */ var _function_matrix_getMatrixDataType__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./function/matrix/getMatrixDataType */ "../node_modules/mathjs/es/function/matrix/getMatrixDataType.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGetMatrixDataType", function() { return _function_matrix_getMatrixDataType__WEBPACK_IMPORTED_MODULE_71__["createGetMatrixDataType"]; });

/* harmony import */ var _function_matrix_identity__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./function/matrix/identity */ "../node_modules/mathjs/es/function/matrix/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIdentity", function() { return _function_matrix_identity__WEBPACK_IMPORTED_MODULE_72__["createIdentity"]; });

/* harmony import */ var _function_matrix_kron__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./function/matrix/kron */ "../node_modules/mathjs/es/function/matrix/kron.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKron", function() { return _function_matrix_kron__WEBPACK_IMPORTED_MODULE_73__["createKron"]; });

/* harmony import */ var _function_matrix_map__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./function/matrix/map */ "../node_modules/mathjs/es/function/matrix/map.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMap", function() { return _function_matrix_map__WEBPACK_IMPORTED_MODULE_74__["createMap"]; });

/* harmony import */ var _function_matrix_diff__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./function/matrix/diff */ "../node_modules/mathjs/es/function/matrix/diff.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiff", function() { return _function_matrix_diff__WEBPACK_IMPORTED_MODULE_75__["createDiff"]; });

/* harmony import */ var _function_matrix_ones__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./function/matrix/ones */ "../node_modules/mathjs/es/function/matrix/ones.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOnes", function() { return _function_matrix_ones__WEBPACK_IMPORTED_MODULE_76__["createOnes"]; });

/* harmony import */ var _function_matrix_range__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./function/matrix/range */ "../node_modules/mathjs/es/function/matrix/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRange", function() { return _function_matrix_range__WEBPACK_IMPORTED_MODULE_77__["createRange"]; });

/* harmony import */ var _function_matrix_reshape__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./function/matrix/reshape */ "../node_modules/mathjs/es/function/matrix/reshape.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReshape", function() { return _function_matrix_reshape__WEBPACK_IMPORTED_MODULE_78__["createReshape"]; });

/* harmony import */ var _function_matrix_resize__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./function/matrix/resize */ "../node_modules/mathjs/es/function/matrix/resize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createResize", function() { return _function_matrix_resize__WEBPACK_IMPORTED_MODULE_79__["createResize"]; });

/* harmony import */ var _function_matrix_row__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./function/matrix/row */ "../node_modules/mathjs/es/function/matrix/row.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRow", function() { return _function_matrix_row__WEBPACK_IMPORTED_MODULE_80__["createRow"]; });

/* harmony import */ var _function_matrix_size__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./function/matrix/size */ "../node_modules/mathjs/es/function/matrix/size.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSize", function() { return _function_matrix_size__WEBPACK_IMPORTED_MODULE_81__["createSize"]; });

/* harmony import */ var _function_matrix_squeeze__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./function/matrix/squeeze */ "../node_modules/mathjs/es/function/matrix/squeeze.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqueeze", function() { return _function_matrix_squeeze__WEBPACK_IMPORTED_MODULE_82__["createSqueeze"]; });

/* harmony import */ var _function_matrix_subset__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./function/matrix/subset */ "../node_modules/mathjs/es/function/matrix/subset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubset", function() { return _function_matrix_subset__WEBPACK_IMPORTED_MODULE_83__["createSubset"]; });

/* harmony import */ var _function_matrix_transpose__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./function/matrix/transpose */ "../node_modules/mathjs/es/function/matrix/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTranspose", function() { return _function_matrix_transpose__WEBPACK_IMPORTED_MODULE_84__["createTranspose"]; });

/* harmony import */ var _function_matrix_ctranspose__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./function/matrix/ctranspose */ "../node_modules/mathjs/es/function/matrix/ctranspose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCtranspose", function() { return _function_matrix_ctranspose__WEBPACK_IMPORTED_MODULE_85__["createCtranspose"]; });

/* harmony import */ var _function_matrix_zeros__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./function/matrix/zeros */ "../node_modules/mathjs/es/function/matrix/zeros.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createZeros", function() { return _function_matrix_zeros__WEBPACK_IMPORTED_MODULE_86__["createZeros"]; });

/* harmony import */ var _function_special_erf__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./function/special/erf */ "../node_modules/mathjs/es/function/special/erf.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createErf", function() { return _function_special_erf__WEBPACK_IMPORTED_MODULE_87__["createErf"]; });

/* harmony import */ var _function_statistics_mode__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./function/statistics/mode */ "../node_modules/mathjs/es/function/statistics/mode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMode", function() { return _function_statistics_mode__WEBPACK_IMPORTED_MODULE_88__["createMode"]; });

/* harmony import */ var _function_statistics_prod__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./function/statistics/prod */ "../node_modules/mathjs/es/function/statistics/prod.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createProd", function() { return _function_statistics_prod__WEBPACK_IMPORTED_MODULE_89__["createProd"]; });

/* harmony import */ var _function_string_format__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./function/string/format */ "../node_modules/mathjs/es/function/string/format.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFormat", function() { return _function_string_format__WEBPACK_IMPORTED_MODULE_90__["createFormat"]; });

/* harmony import */ var _function_string_print__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./function/string/print */ "../node_modules/mathjs/es/function/string/print.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPrint", function() { return _function_string_print__WEBPACK_IMPORTED_MODULE_91__["createPrint"]; });

/* harmony import */ var _function_unit_to__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./function/unit/to */ "../node_modules/mathjs/es/function/unit/to.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTo", function() { return _function_unit_to__WEBPACK_IMPORTED_MODULE_92__["createTo"]; });

/* harmony import */ var _function_utils_isPrime__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./function/utils/isPrime */ "../node_modules/mathjs/es/function/utils/isPrime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsPrime", function() { return _function_utils_isPrime__WEBPACK_IMPORTED_MODULE_93__["createIsPrime"]; });

/* harmony import */ var _function_utils_numeric__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./function/utils/numeric */ "../node_modules/mathjs/es/function/utils/numeric.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNumeric", function() { return _function_utils_numeric__WEBPACK_IMPORTED_MODULE_94__["createNumeric"]; });

/* harmony import */ var _function_arithmetic_divideScalar__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./function/arithmetic/divideScalar */ "../node_modules/mathjs/es/function/arithmetic/divideScalar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDivideScalar", function() { return _function_arithmetic_divideScalar__WEBPACK_IMPORTED_MODULE_95__["createDivideScalar"]; });

/* harmony import */ var _function_arithmetic_pow__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./function/arithmetic/pow */ "../node_modules/mathjs/es/function/arithmetic/pow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPow", function() { return _function_arithmetic_pow__WEBPACK_IMPORTED_MODULE_96__["createPow"]; });

/* harmony import */ var _function_arithmetic_round__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./function/arithmetic/round */ "../node_modules/mathjs/es/function/arithmetic/round.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRound", function() { return _function_arithmetic_round__WEBPACK_IMPORTED_MODULE_97__["createRound"]; });

/* harmony import */ var _function_arithmetic_log__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./function/arithmetic/log */ "../node_modules/mathjs/es/function/arithmetic/log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog", function() { return _function_arithmetic_log__WEBPACK_IMPORTED_MODULE_98__["createLog"]; });

/* harmony import */ var _function_arithmetic_log1p__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./function/arithmetic/log1p */ "../node_modules/mathjs/es/function/arithmetic/log1p.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog1p", function() { return _function_arithmetic_log1p__WEBPACK_IMPORTED_MODULE_99__["createLog1p"]; });

/* harmony import */ var _function_arithmetic_nthRoots__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./function/arithmetic/nthRoots */ "../node_modules/mathjs/es/function/arithmetic/nthRoots.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNthRoots", function() { return _function_arithmetic_nthRoots__WEBPACK_IMPORTED_MODULE_100__["createNthRoots"]; });

/* harmony import */ var _function_arithmetic_dotPow__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./function/arithmetic/dotPow */ "../node_modules/mathjs/es/function/arithmetic/dotPow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotPow", function() { return _function_arithmetic_dotPow__WEBPACK_IMPORTED_MODULE_101__["createDotPow"]; });

/* harmony import */ var _function_arithmetic_dotDivide__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./function/arithmetic/dotDivide */ "../node_modules/mathjs/es/function/arithmetic/dotDivide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotDivide", function() { return _function_arithmetic_dotDivide__WEBPACK_IMPORTED_MODULE_102__["createDotDivide"]; });

/* harmony import */ var _function_algebra_solver_lsolve__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./function/algebra/solver/lsolve */ "../node_modules/mathjs/es/function/algebra/solver/lsolve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLsolve", function() { return _function_algebra_solver_lsolve__WEBPACK_IMPORTED_MODULE_103__["createLsolve"]; });

/* harmony import */ var _function_algebra_solver_usolve__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./function/algebra/solver/usolve */ "../node_modules/mathjs/es/function/algebra/solver/usolve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUsolve", function() { return _function_algebra_solver_usolve__WEBPACK_IMPORTED_MODULE_104__["createUsolve"]; });

/* harmony import */ var _function_bitwise_leftShift__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./function/bitwise/leftShift */ "../node_modules/mathjs/es/function/bitwise/leftShift.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLeftShift", function() { return _function_bitwise_leftShift__WEBPACK_IMPORTED_MODULE_105__["createLeftShift"]; });

/* harmony import */ var _function_bitwise_rightArithShift__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./function/bitwise/rightArithShift */ "../node_modules/mathjs/es/function/bitwise/rightArithShift.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRightArithShift", function() { return _function_bitwise_rightArithShift__WEBPACK_IMPORTED_MODULE_106__["createRightArithShift"]; });

/* harmony import */ var _function_bitwise_rightLogShift__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./function/bitwise/rightLogShift */ "../node_modules/mathjs/es/function/bitwise/rightLogShift.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRightLogShift", function() { return _function_bitwise_rightLogShift__WEBPACK_IMPORTED_MODULE_107__["createRightLogShift"]; });

/* harmony import */ var _function_logical_and__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./function/logical/and */ "../node_modules/mathjs/es/function/logical/and.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAnd", function() { return _function_logical_and__WEBPACK_IMPORTED_MODULE_108__["createAnd"]; });

/* harmony import */ var _function_relational_compare__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./function/relational/compare */ "../node_modules/mathjs/es/function/relational/compare.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompare", function() { return _function_relational_compare__WEBPACK_IMPORTED_MODULE_109__["createCompare"]; });

/* harmony import */ var _function_relational_compareNatural__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./function/relational/compareNatural */ "../node_modules/mathjs/es/function/relational/compareNatural.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompareNatural", function() { return _function_relational_compareNatural__WEBPACK_IMPORTED_MODULE_110__["createCompareNatural"]; });

/* harmony import */ var _function_relational_compareText__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./function/relational/compareText */ "../node_modules/mathjs/es/function/relational/compareText.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompareText", function() { return _function_relational_compareText__WEBPACK_IMPORTED_MODULE_111__["createCompareText"]; });

/* harmony import */ var _function_relational_equal__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./function/relational/equal */ "../node_modules/mathjs/es/function/relational/equal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqual", function() { return _function_relational_equal__WEBPACK_IMPORTED_MODULE_112__["createEqual"]; });

/* harmony import */ var _function_relational_equalText__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./function/relational/equalText */ "../node_modules/mathjs/es/function/relational/equalText.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqualText", function() { return _function_relational_equalText__WEBPACK_IMPORTED_MODULE_113__["createEqualText"]; });

/* harmony import */ var _function_relational_smaller__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./function/relational/smaller */ "../node_modules/mathjs/es/function/relational/smaller.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSmaller", function() { return _function_relational_smaller__WEBPACK_IMPORTED_MODULE_114__["createSmaller"]; });

/* harmony import */ var _function_relational_smallerEq__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./function/relational/smallerEq */ "../node_modules/mathjs/es/function/relational/smallerEq.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSmallerEq", function() { return _function_relational_smallerEq__WEBPACK_IMPORTED_MODULE_115__["createSmallerEq"]; });

/* harmony import */ var _function_relational_larger__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./function/relational/larger */ "../node_modules/mathjs/es/function/relational/larger.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLarger", function() { return _function_relational_larger__WEBPACK_IMPORTED_MODULE_116__["createLarger"]; });

/* harmony import */ var _function_relational_largerEq__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./function/relational/largerEq */ "../node_modules/mathjs/es/function/relational/largerEq.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLargerEq", function() { return _function_relational_largerEq__WEBPACK_IMPORTED_MODULE_117__["createLargerEq"]; });

/* harmony import */ var _function_relational_deepEqual__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./function/relational/deepEqual */ "../node_modules/mathjs/es/function/relational/deepEqual.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDeepEqual", function() { return _function_relational_deepEqual__WEBPACK_IMPORTED_MODULE_118__["createDeepEqual"]; });

/* harmony import */ var _function_relational_unequal__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./function/relational/unequal */ "../node_modules/mathjs/es/function/relational/unequal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnequal", function() { return _function_relational_unequal__WEBPACK_IMPORTED_MODULE_119__["createUnequal"]; });

/* harmony import */ var _function_matrix_partitionSelect__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./function/matrix/partitionSelect */ "../node_modules/mathjs/es/function/matrix/partitionSelect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPartitionSelect", function() { return _function_matrix_partitionSelect__WEBPACK_IMPORTED_MODULE_120__["createPartitionSelect"]; });

/* harmony import */ var _function_matrix_sort__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./function/matrix/sort */ "../node_modules/mathjs/es/function/matrix/sort.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSort", function() { return _function_matrix_sort__WEBPACK_IMPORTED_MODULE_121__["createSort"]; });

/* harmony import */ var _function_statistics_max__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./function/statistics/max */ "../node_modules/mathjs/es/function/statistics/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMax", function() { return _function_statistics_max__WEBPACK_IMPORTED_MODULE_122__["createMax"]; });

/* harmony import */ var _function_statistics_min__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./function/statistics/min */ "../node_modules/mathjs/es/function/statistics/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMin", function() { return _function_statistics_min__WEBPACK_IMPORTED_MODULE_123__["createMin"]; });

/* harmony import */ var _type_matrix_ImmutableDenseMatrix__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./type/matrix/ImmutableDenseMatrix */ "../node_modules/mathjs/es/type/matrix/ImmutableDenseMatrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createImmutableDenseMatrixClass", function() { return _type_matrix_ImmutableDenseMatrix__WEBPACK_IMPORTED_MODULE_124__["createImmutableDenseMatrixClass"]; });

/* harmony import */ var _type_matrix_MatrixIndex__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./type/matrix/MatrixIndex */ "../node_modules/mathjs/es/type/matrix/MatrixIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexClass", function() { return _type_matrix_MatrixIndex__WEBPACK_IMPORTED_MODULE_125__["createIndexClass"]; });

/* harmony import */ var _type_matrix_FibonacciHeap__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./type/matrix/FibonacciHeap */ "../node_modules/mathjs/es/type/matrix/FibonacciHeap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFibonacciHeapClass", function() { return _type_matrix_FibonacciHeap__WEBPACK_IMPORTED_MODULE_126__["createFibonacciHeapClass"]; });

/* harmony import */ var _type_matrix_Spa__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./type/matrix/Spa */ "../node_modules/mathjs/es/type/matrix/Spa.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSpaClass", function() { return _type_matrix_Spa__WEBPACK_IMPORTED_MODULE_127__["createSpaClass"]; });

/* harmony import */ var _type_unit_Unit__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./type/unit/Unit */ "../node_modules/mathjs/es/type/unit/Unit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitClass", function() { return _type_unit_Unit__WEBPACK_IMPORTED_MODULE_128__["createUnitClass"]; });

/* harmony import */ var _type_unit_function_unit__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./type/unit/function/unit */ "../node_modules/mathjs/es/type/unit/function/unit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitFunction", function() { return _type_unit_function_unit__WEBPACK_IMPORTED_MODULE_129__["createUnitFunction"]; });

/* harmony import */ var _type_matrix_function_sparse__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./type/matrix/function/sparse */ "../node_modules/mathjs/es/type/matrix/function/sparse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSparse", function() { return _type_matrix_function_sparse__WEBPACK_IMPORTED_MODULE_130__["createSparse"]; });

/* harmony import */ var _type_unit_function_createUnit__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./type/unit/function/createUnit */ "../node_modules/mathjs/es/type/unit/function/createUnit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCreateUnit", function() { return _type_unit_function_createUnit__WEBPACK_IMPORTED_MODULE_131__["createCreateUnit"]; });

/* harmony import */ var _function_trigonometry_acos__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./function/trigonometry/acos */ "../node_modules/mathjs/es/function/trigonometry/acos.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcos", function() { return _function_trigonometry_acos__WEBPACK_IMPORTED_MODULE_132__["createAcos"]; });

/* harmony import */ var _function_trigonometry_acosh__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./function/trigonometry/acosh */ "../node_modules/mathjs/es/function/trigonometry/acosh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcosh", function() { return _function_trigonometry_acosh__WEBPACK_IMPORTED_MODULE_133__["createAcosh"]; });

/* harmony import */ var _function_trigonometry_acot__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./function/trigonometry/acot */ "../node_modules/mathjs/es/function/trigonometry/acot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcot", function() { return _function_trigonometry_acot__WEBPACK_IMPORTED_MODULE_134__["createAcot"]; });

/* harmony import */ var _function_trigonometry_acoth__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./function/trigonometry/acoth */ "../node_modules/mathjs/es/function/trigonometry/acoth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcoth", function() { return _function_trigonometry_acoth__WEBPACK_IMPORTED_MODULE_135__["createAcoth"]; });

/* harmony import */ var _function_trigonometry_acsc__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./function/trigonometry/acsc */ "../node_modules/mathjs/es/function/trigonometry/acsc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcsc", function() { return _function_trigonometry_acsc__WEBPACK_IMPORTED_MODULE_136__["createAcsc"]; });

/* harmony import */ var _function_trigonometry_acsch__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./function/trigonometry/acsch */ "../node_modules/mathjs/es/function/trigonometry/acsch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcsch", function() { return _function_trigonometry_acsch__WEBPACK_IMPORTED_MODULE_137__["createAcsch"]; });

/* harmony import */ var _function_trigonometry_asec__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./function/trigonometry/asec */ "../node_modules/mathjs/es/function/trigonometry/asec.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsec", function() { return _function_trigonometry_asec__WEBPACK_IMPORTED_MODULE_138__["createAsec"]; });

/* harmony import */ var _function_trigonometry_asech__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./function/trigonometry/asech */ "../node_modules/mathjs/es/function/trigonometry/asech.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsech", function() { return _function_trigonometry_asech__WEBPACK_IMPORTED_MODULE_139__["createAsech"]; });

/* harmony import */ var _function_trigonometry_asin__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./function/trigonometry/asin */ "../node_modules/mathjs/es/function/trigonometry/asin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsin", function() { return _function_trigonometry_asin__WEBPACK_IMPORTED_MODULE_140__["createAsin"]; });

/* harmony import */ var _function_trigonometry_asinh__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./function/trigonometry/asinh */ "../node_modules/mathjs/es/function/trigonometry/asinh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsinh", function() { return _function_trigonometry_asinh__WEBPACK_IMPORTED_MODULE_141__["createAsinh"]; });

/* harmony import */ var _function_trigonometry_atan__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./function/trigonometry/atan */ "../node_modules/mathjs/es/function/trigonometry/atan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtan", function() { return _function_trigonometry_atan__WEBPACK_IMPORTED_MODULE_142__["createAtan"]; });

/* harmony import */ var _function_trigonometry_atan2__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./function/trigonometry/atan2 */ "../node_modules/mathjs/es/function/trigonometry/atan2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtan2", function() { return _function_trigonometry_atan2__WEBPACK_IMPORTED_MODULE_143__["createAtan2"]; });

/* harmony import */ var _function_trigonometry_atanh__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./function/trigonometry/atanh */ "../node_modules/mathjs/es/function/trigonometry/atanh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtanh", function() { return _function_trigonometry_atanh__WEBPACK_IMPORTED_MODULE_144__["createAtanh"]; });

/* harmony import */ var _function_trigonometry_cos__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./function/trigonometry/cos */ "../node_modules/mathjs/es/function/trigonometry/cos.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCos", function() { return _function_trigonometry_cos__WEBPACK_IMPORTED_MODULE_145__["createCos"]; });

/* harmony import */ var _function_trigonometry_cosh__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./function/trigonometry/cosh */ "../node_modules/mathjs/es/function/trigonometry/cosh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCosh", function() { return _function_trigonometry_cosh__WEBPACK_IMPORTED_MODULE_146__["createCosh"]; });

/* harmony import */ var _function_trigonometry_cot__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./function/trigonometry/cot */ "../node_modules/mathjs/es/function/trigonometry/cot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCot", function() { return _function_trigonometry_cot__WEBPACK_IMPORTED_MODULE_147__["createCot"]; });

/* harmony import */ var _function_trigonometry_coth__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./function/trigonometry/coth */ "../node_modules/mathjs/es/function/trigonometry/coth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCoth", function() { return _function_trigonometry_coth__WEBPACK_IMPORTED_MODULE_148__["createCoth"]; });

/* harmony import */ var _function_trigonometry_csc__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./function/trigonometry/csc */ "../node_modules/mathjs/es/function/trigonometry/csc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCsc", function() { return _function_trigonometry_csc__WEBPACK_IMPORTED_MODULE_149__["createCsc"]; });

/* harmony import */ var _function_trigonometry_csch__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./function/trigonometry/csch */ "../node_modules/mathjs/es/function/trigonometry/csch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCsch", function() { return _function_trigonometry_csch__WEBPACK_IMPORTED_MODULE_150__["createCsch"]; });

/* harmony import */ var _function_trigonometry_sec__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./function/trigonometry/sec */ "../node_modules/mathjs/es/function/trigonometry/sec.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSec", function() { return _function_trigonometry_sec__WEBPACK_IMPORTED_MODULE_151__["createSec"]; });

/* harmony import */ var _function_trigonometry_sech__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./function/trigonometry/sech */ "../node_modules/mathjs/es/function/trigonometry/sech.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSech", function() { return _function_trigonometry_sech__WEBPACK_IMPORTED_MODULE_152__["createSech"]; });

/* harmony import */ var _function_trigonometry_sin__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./function/trigonometry/sin */ "../node_modules/mathjs/es/function/trigonometry/sin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSin", function() { return _function_trigonometry_sin__WEBPACK_IMPORTED_MODULE_153__["createSin"]; });

/* harmony import */ var _function_trigonometry_sinh__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./function/trigonometry/sinh */ "../node_modules/mathjs/es/function/trigonometry/sinh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSinh", function() { return _function_trigonometry_sinh__WEBPACK_IMPORTED_MODULE_154__["createSinh"]; });

/* harmony import */ var _function_trigonometry_tan__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./function/trigonometry/tan */ "../node_modules/mathjs/es/function/trigonometry/tan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTan", function() { return _function_trigonometry_tan__WEBPACK_IMPORTED_MODULE_155__["createTan"]; });

/* harmony import */ var _function_trigonometry_tanh__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./function/trigonometry/tanh */ "../node_modules/mathjs/es/function/trigonometry/tanh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTanh", function() { return _function_trigonometry_tanh__WEBPACK_IMPORTED_MODULE_156__["createTanh"]; });

/* harmony import */ var _function_set_setCartesian__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./function/set/setCartesian */ "../node_modules/mathjs/es/function/set/setCartesian.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetCartesian", function() { return _function_set_setCartesian__WEBPACK_IMPORTED_MODULE_157__["createSetCartesian"]; });

/* harmony import */ var _function_set_setDifference__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./function/set/setDifference */ "../node_modules/mathjs/es/function/set/setDifference.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetDifference", function() { return _function_set_setDifference__WEBPACK_IMPORTED_MODULE_158__["createSetDifference"]; });

/* harmony import */ var _function_set_setDistinct__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./function/set/setDistinct */ "../node_modules/mathjs/es/function/set/setDistinct.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetDistinct", function() { return _function_set_setDistinct__WEBPACK_IMPORTED_MODULE_159__["createSetDistinct"]; });

/* harmony import */ var _function_set_setIntersect__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./function/set/setIntersect */ "../node_modules/mathjs/es/function/set/setIntersect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetIntersect", function() { return _function_set_setIntersect__WEBPACK_IMPORTED_MODULE_160__["createSetIntersect"]; });

/* harmony import */ var _function_set_setIsSubset__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./function/set/setIsSubset */ "../node_modules/mathjs/es/function/set/setIsSubset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetIsSubset", function() { return _function_set_setIsSubset__WEBPACK_IMPORTED_MODULE_161__["createSetIsSubset"]; });

/* harmony import */ var _function_set_setMultiplicity__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./function/set/setMultiplicity */ "../node_modules/mathjs/es/function/set/setMultiplicity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetMultiplicity", function() { return _function_set_setMultiplicity__WEBPACK_IMPORTED_MODULE_162__["createSetMultiplicity"]; });

/* harmony import */ var _function_set_setPowerset__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./function/set/setPowerset */ "../node_modules/mathjs/es/function/set/setPowerset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetPowerset", function() { return _function_set_setPowerset__WEBPACK_IMPORTED_MODULE_163__["createSetPowerset"]; });

/* harmony import */ var _function_set_setSize__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./function/set/setSize */ "../node_modules/mathjs/es/function/set/setSize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetSize", function() { return _function_set_setSize__WEBPACK_IMPORTED_MODULE_164__["createSetSize"]; });

/* harmony import */ var _function_set_setSymDifference__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./function/set/setSymDifference */ "../node_modules/mathjs/es/function/set/setSymDifference.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetSymDifference", function() { return _function_set_setSymDifference__WEBPACK_IMPORTED_MODULE_165__["createSetSymDifference"]; });

/* harmony import */ var _function_set_setUnion__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./function/set/setUnion */ "../node_modules/mathjs/es/function/set/setUnion.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetUnion", function() { return _function_set_setUnion__WEBPACK_IMPORTED_MODULE_166__["createSetUnion"]; });

/* harmony import */ var _function_arithmetic_add__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./function/arithmetic/add */ "../node_modules/mathjs/es/function/arithmetic/add.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAdd", function() { return _function_arithmetic_add__WEBPACK_IMPORTED_MODULE_167__["createAdd"]; });

/* harmony import */ var _function_arithmetic_hypot__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./function/arithmetic/hypot */ "../node_modules/mathjs/es/function/arithmetic/hypot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHypot", function() { return _function_arithmetic_hypot__WEBPACK_IMPORTED_MODULE_168__["createHypot"]; });

/* harmony import */ var _function_arithmetic_norm__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./function/arithmetic/norm */ "../node_modules/mathjs/es/function/arithmetic/norm.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNorm", function() { return _function_arithmetic_norm__WEBPACK_IMPORTED_MODULE_169__["createNorm"]; });

/* harmony import */ var _function_matrix_dot__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./function/matrix/dot */ "../node_modules/mathjs/es/function/matrix/dot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDot", function() { return _function_matrix_dot__WEBPACK_IMPORTED_MODULE_170__["createDot"]; });

/* harmony import */ var _function_matrix_trace__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./function/matrix/trace */ "../node_modules/mathjs/es/function/matrix/trace.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTrace", function() { return _function_matrix_trace__WEBPACK_IMPORTED_MODULE_171__["createTrace"]; });

/* harmony import */ var _type_matrix_function__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./type/matrix/function */ "../node_modules/mathjs/es/type/matrix/function/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndex", function() { return _type_matrix_function__WEBPACK_IMPORTED_MODULE_172__["createIndex"]; });

/* harmony import */ var _expression_node_Node__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./expression/node/Node */ "../node_modules/mathjs/es/expression/node/Node.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNode", function() { return _expression_node_Node__WEBPACK_IMPORTED_MODULE_173__["createNode"]; });

/* harmony import */ var _expression_node_AccessorNode__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./expression/node/AccessorNode */ "../node_modules/mathjs/es/expression/node/AccessorNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAccessorNode", function() { return _expression_node_AccessorNode__WEBPACK_IMPORTED_MODULE_174__["createAccessorNode"]; });

/* harmony import */ var _expression_node_ArrayNode__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./expression/node/ArrayNode */ "../node_modules/mathjs/es/expression/node/ArrayNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createArrayNode", function() { return _expression_node_ArrayNode__WEBPACK_IMPORTED_MODULE_175__["createArrayNode"]; });

/* harmony import */ var _expression_node_AssignmentNode__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./expression/node/AssignmentNode */ "../node_modules/mathjs/es/expression/node/AssignmentNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAssignmentNode", function() { return _expression_node_AssignmentNode__WEBPACK_IMPORTED_MODULE_176__["createAssignmentNode"]; });

/* harmony import */ var _expression_node_BlockNode__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./expression/node/BlockNode */ "../node_modules/mathjs/es/expression/node/BlockNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBlockNode", function() { return _expression_node_BlockNode__WEBPACK_IMPORTED_MODULE_177__["createBlockNode"]; });

/* harmony import */ var _expression_node_ConditionalNode__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./expression/node/ConditionalNode */ "../node_modules/mathjs/es/expression/node/ConditionalNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConditionalNode", function() { return _expression_node_ConditionalNode__WEBPACK_IMPORTED_MODULE_178__["createConditionalNode"]; });

/* harmony import */ var _expression_node_ConstantNode__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./expression/node/ConstantNode */ "../node_modules/mathjs/es/expression/node/ConstantNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConstantNode", function() { return _expression_node_ConstantNode__WEBPACK_IMPORTED_MODULE_179__["createConstantNode"]; });

/* harmony import */ var _expression_node_FunctionAssignmentNode__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./expression/node/FunctionAssignmentNode */ "../node_modules/mathjs/es/expression/node/FunctionAssignmentNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFunctionAssignmentNode", function() { return _expression_node_FunctionAssignmentNode__WEBPACK_IMPORTED_MODULE_180__["createFunctionAssignmentNode"]; });

/* harmony import */ var _expression_node_IndexNode__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./expression/node/IndexNode */ "../node_modules/mathjs/es/expression/node/IndexNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexNode", function() { return _expression_node_IndexNode__WEBPACK_IMPORTED_MODULE_181__["createIndexNode"]; });

/* harmony import */ var _expression_node_ObjectNode__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./expression/node/ObjectNode */ "../node_modules/mathjs/es/expression/node/ObjectNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createObjectNode", function() { return _expression_node_ObjectNode__WEBPACK_IMPORTED_MODULE_182__["createObjectNode"]; });

/* harmony import */ var _expression_node_OperatorNode__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./expression/node/OperatorNode */ "../node_modules/mathjs/es/expression/node/OperatorNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOperatorNode", function() { return _expression_node_OperatorNode__WEBPACK_IMPORTED_MODULE_183__["createOperatorNode"]; });

/* harmony import */ var _expression_node_ParenthesisNode__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./expression/node/ParenthesisNode */ "../node_modules/mathjs/es/expression/node/ParenthesisNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParenthesisNode", function() { return _expression_node_ParenthesisNode__WEBPACK_IMPORTED_MODULE_184__["createParenthesisNode"]; });

/* harmony import */ var _expression_node_RangeNode__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./expression/node/RangeNode */ "../node_modules/mathjs/es/expression/node/RangeNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeNode", function() { return _expression_node_RangeNode__WEBPACK_IMPORTED_MODULE_185__["createRangeNode"]; });

/* harmony import */ var _expression_node_RelationalNode__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./expression/node/RelationalNode */ "../node_modules/mathjs/es/expression/node/RelationalNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRelationalNode", function() { return _expression_node_RelationalNode__WEBPACK_IMPORTED_MODULE_186__["createRelationalNode"]; });

/* harmony import */ var _expression_node_SymbolNode__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./expression/node/SymbolNode */ "../node_modules/mathjs/es/expression/node/SymbolNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSymbolNode", function() { return _expression_node_SymbolNode__WEBPACK_IMPORTED_MODULE_187__["createSymbolNode"]; });

/* harmony import */ var _expression_node_FunctionNode__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./expression/node/FunctionNode */ "../node_modules/mathjs/es/expression/node/FunctionNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFunctionNode", function() { return _expression_node_FunctionNode__WEBPACK_IMPORTED_MODULE_188__["createFunctionNode"]; });

/* harmony import */ var _expression_parse__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./expression/parse */ "../node_modules/mathjs/es/expression/parse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParse", function() { return _expression_parse__WEBPACK_IMPORTED_MODULE_189__["createParse"]; });

/* harmony import */ var _expression_function_compile__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./expression/function/compile */ "../node_modules/mathjs/es/expression/function/compile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompile", function() { return _expression_function_compile__WEBPACK_IMPORTED_MODULE_190__["createCompile"]; });

/* harmony import */ var _expression_function_evaluate__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./expression/function/evaluate */ "../node_modules/mathjs/es/expression/function/evaluate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEvaluate", function() { return _expression_function_evaluate__WEBPACK_IMPORTED_MODULE_191__["createEvaluate"]; });

/* harmony import */ var _expression_Parser__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./expression/Parser */ "../node_modules/mathjs/es/expression/Parser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParserClass", function() { return _expression_Parser__WEBPACK_IMPORTED_MODULE_192__["createParserClass"]; });

/* harmony import */ var _expression_function_parser__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./expression/function/parser */ "../node_modules/mathjs/es/expression/function/parser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParser", function() { return _expression_function_parser__WEBPACK_IMPORTED_MODULE_193__["createParser"]; });

/* harmony import */ var _function_algebra_decomposition_lup__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./function/algebra/decomposition/lup */ "../node_modules/mathjs/es/function/algebra/decomposition/lup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLup", function() { return _function_algebra_decomposition_lup__WEBPACK_IMPORTED_MODULE_194__["createLup"]; });

/* harmony import */ var _function_algebra_decomposition_qr__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./function/algebra/decomposition/qr */ "../node_modules/mathjs/es/function/algebra/decomposition/qr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQr", function() { return _function_algebra_decomposition_qr__WEBPACK_IMPORTED_MODULE_195__["createQr"]; });

/* harmony import */ var _function_algebra_decomposition_slu__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./function/algebra/decomposition/slu */ "../node_modules/mathjs/es/function/algebra/decomposition/slu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSlu", function() { return _function_algebra_decomposition_slu__WEBPACK_IMPORTED_MODULE_196__["createSlu"]; });

/* harmony import */ var _function_algebra_solver_lusolve__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./function/algebra/solver/lusolve */ "../node_modules/mathjs/es/function/algebra/solver/lusolve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLusolve", function() { return _function_algebra_solver_lusolve__WEBPACK_IMPORTED_MODULE_197__["createLusolve"]; });

/* harmony import */ var _expression_Help__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./expression/Help */ "../node_modules/mathjs/es/expression/Help.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHelpClass", function() { return _expression_Help__WEBPACK_IMPORTED_MODULE_198__["createHelpClass"]; });

/* harmony import */ var _type_chain_Chain__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./type/chain/Chain */ "../node_modules/mathjs/es/type/chain/Chain.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createChainClass", function() { return _type_chain_Chain__WEBPACK_IMPORTED_MODULE_199__["createChainClass"]; });

/* harmony import */ var _expression_function_help__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ./expression/function/help */ "../node_modules/mathjs/es/expression/function/help.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHelp", function() { return _expression_function_help__WEBPACK_IMPORTED_MODULE_200__["createHelp"]; });

/* harmony import */ var _type_chain_function_chain__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ./type/chain/function/chain */ "../node_modules/mathjs/es/type/chain/function/chain.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createChain", function() { return _type_chain_function_chain__WEBPACK_IMPORTED_MODULE_201__["createChain"]; });

/* harmony import */ var _function_matrix_det__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ./function/matrix/det */ "../node_modules/mathjs/es/function/matrix/det.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDet", function() { return _function_matrix_det__WEBPACK_IMPORTED_MODULE_202__["createDet"]; });

/* harmony import */ var _function_matrix_inv__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ./function/matrix/inv */ "../node_modules/mathjs/es/function/matrix/inv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInv", function() { return _function_matrix_inv__WEBPACK_IMPORTED_MODULE_203__["createInv"]; });

/* harmony import */ var _function_matrix_eigs__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ./function/matrix/eigs */ "../node_modules/mathjs/es/function/matrix/eigs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEigs", function() { return _function_matrix_eigs__WEBPACK_IMPORTED_MODULE_204__["createEigs"]; });

/* harmony import */ var _function_matrix_expm__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ./function/matrix/expm */ "../node_modules/mathjs/es/function/matrix/expm.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExpm", function() { return _function_matrix_expm__WEBPACK_IMPORTED_MODULE_205__["createExpm"]; });

/* harmony import */ var _function_matrix_sqrtm__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ./function/matrix/sqrtm */ "../node_modules/mathjs/es/function/matrix/sqrtm.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqrtm", function() { return _function_matrix_sqrtm__WEBPACK_IMPORTED_MODULE_206__["createSqrtm"]; });

/* harmony import */ var _function_arithmetic_divide__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ./function/arithmetic/divide */ "../node_modules/mathjs/es/function/arithmetic/divide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDivide", function() { return _function_arithmetic_divide__WEBPACK_IMPORTED_MODULE_207__["createDivide"]; });

/* harmony import */ var _function_geometry_distance__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ./function/geometry/distance */ "../node_modules/mathjs/es/function/geometry/distance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDistance", function() { return _function_geometry_distance__WEBPACK_IMPORTED_MODULE_208__["createDistance"]; });

/* harmony import */ var _function_geometry_intersect__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ./function/geometry/intersect */ "../node_modules/mathjs/es/function/geometry/intersect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIntersect", function() { return _function_geometry_intersect__WEBPACK_IMPORTED_MODULE_209__["createIntersect"]; });

/* harmony import */ var _function_statistics_sum__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ./function/statistics/sum */ "../node_modules/mathjs/es/function/statistics/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSum", function() { return _function_statistics_sum__WEBPACK_IMPORTED_MODULE_210__["createSum"]; });

/* harmony import */ var _function_statistics_mean__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ./function/statistics/mean */ "../node_modules/mathjs/es/function/statistics/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMean", function() { return _function_statistics_mean__WEBPACK_IMPORTED_MODULE_211__["createMean"]; });

/* harmony import */ var _function_statistics_median__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ./function/statistics/median */ "../node_modules/mathjs/es/function/statistics/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMedian", function() { return _function_statistics_median__WEBPACK_IMPORTED_MODULE_212__["createMedian"]; });

/* harmony import */ var _function_statistics_mad__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ./function/statistics/mad */ "../node_modules/mathjs/es/function/statistics/mad.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMad", function() { return _function_statistics_mad__WEBPACK_IMPORTED_MODULE_213__["createMad"]; });

/* harmony import */ var _function_statistics_variance__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ./function/statistics/variance */ "../node_modules/mathjs/es/function/statistics/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVariance", function() { return _function_statistics_variance__WEBPACK_IMPORTED_MODULE_214__["createVariance"]; });

/* harmony import */ var _function_statistics_quantileSeq__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ./function/statistics/quantileSeq */ "../node_modules/mathjs/es/function/statistics/quantileSeq.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQuantileSeq", function() { return _function_statistics_quantileSeq__WEBPACK_IMPORTED_MODULE_215__["createQuantileSeq"]; });

/* harmony import */ var _function_statistics_std__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ./function/statistics/std */ "../node_modules/mathjs/es/function/statistics/std.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStd", function() { return _function_statistics_std__WEBPACK_IMPORTED_MODULE_216__["createStd"]; });

/* harmony import */ var _function_probability_combinations__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ./function/probability/combinations */ "../node_modules/mathjs/es/function/probability/combinations.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCombinations", function() { return _function_probability_combinations__WEBPACK_IMPORTED_MODULE_217__["createCombinations"]; });

/* harmony import */ var _function_probability_combinationsWithRep__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ./function/probability/combinationsWithRep */ "../node_modules/mathjs/es/function/probability/combinationsWithRep.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCombinationsWithRep", function() { return _function_probability_combinationsWithRep__WEBPACK_IMPORTED_MODULE_218__["createCombinationsWithRep"]; });

/* harmony import */ var _function_probability_gamma__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(/*! ./function/probability/gamma */ "../node_modules/mathjs/es/function/probability/gamma.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGamma", function() { return _function_probability_gamma__WEBPACK_IMPORTED_MODULE_219__["createGamma"]; });

/* harmony import */ var _function_probability_factorial__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(/*! ./function/probability/factorial */ "../node_modules/mathjs/es/function/probability/factorial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFactorial", function() { return _function_probability_factorial__WEBPACK_IMPORTED_MODULE_220__["createFactorial"]; });

/* harmony import */ var _function_probability_kldivergence__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(/*! ./function/probability/kldivergence */ "../node_modules/mathjs/es/function/probability/kldivergence.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKldivergence", function() { return _function_probability_kldivergence__WEBPACK_IMPORTED_MODULE_221__["createKldivergence"]; });

/* harmony import */ var _function_probability_multinomial__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(/*! ./function/probability/multinomial */ "../node_modules/mathjs/es/function/probability/multinomial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultinomial", function() { return _function_probability_multinomial__WEBPACK_IMPORTED_MODULE_222__["createMultinomial"]; });

/* harmony import */ var _function_probability_permutations__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(/*! ./function/probability/permutations */ "../node_modules/mathjs/es/function/probability/permutations.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPermutations", function() { return _function_probability_permutations__WEBPACK_IMPORTED_MODULE_223__["createPermutations"]; });

/* harmony import */ var _function_probability_pickRandom__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(/*! ./function/probability/pickRandom */ "../node_modules/mathjs/es/function/probability/pickRandom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPickRandom", function() { return _function_probability_pickRandom__WEBPACK_IMPORTED_MODULE_224__["createPickRandom"]; });

/* harmony import */ var _function_probability_random__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(/*! ./function/probability/random */ "../node_modules/mathjs/es/function/probability/random.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRandom", function() { return _function_probability_random__WEBPACK_IMPORTED_MODULE_225__["createRandom"]; });

/* harmony import */ var _function_probability_randomInt__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(/*! ./function/probability/randomInt */ "../node_modules/mathjs/es/function/probability/randomInt.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRandomInt", function() { return _function_probability_randomInt__WEBPACK_IMPORTED_MODULE_226__["createRandomInt"]; });

/* harmony import */ var _function_combinatorics_stirlingS2__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(/*! ./function/combinatorics/stirlingS2 */ "../node_modules/mathjs/es/function/combinatorics/stirlingS2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStirlingS2", function() { return _function_combinatorics_stirlingS2__WEBPACK_IMPORTED_MODULE_227__["createStirlingS2"]; });

/* harmony import */ var _function_combinatorics_bellNumbers__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(/*! ./function/combinatorics/bellNumbers */ "../node_modules/mathjs/es/function/combinatorics/bellNumbers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBellNumbers", function() { return _function_combinatorics_bellNumbers__WEBPACK_IMPORTED_MODULE_228__["createBellNumbers"]; });

/* harmony import */ var _function_combinatorics_catalan__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(/*! ./function/combinatorics/catalan */ "../node_modules/mathjs/es/function/combinatorics/catalan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCatalan", function() { return _function_combinatorics_catalan__WEBPACK_IMPORTED_MODULE_229__["createCatalan"]; });

/* harmony import */ var _function_combinatorics_composition__WEBPACK_IMPORTED_MODULE_230__ = __webpack_require__(/*! ./function/combinatorics/composition */ "../node_modules/mathjs/es/function/combinatorics/composition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComposition", function() { return _function_combinatorics_composition__WEBPACK_IMPORTED_MODULE_230__["createComposition"]; });

/* harmony import */ var _function_algebra_simplify__WEBPACK_IMPORTED_MODULE_231__ = __webpack_require__(/*! ./function/algebra/simplify */ "../node_modules/mathjs/es/function/algebra/simplify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSimplify", function() { return _function_algebra_simplify__WEBPACK_IMPORTED_MODULE_231__["createSimplify"]; });

/* harmony import */ var _function_algebra_derivative__WEBPACK_IMPORTED_MODULE_232__ = __webpack_require__(/*! ./function/algebra/derivative */ "../node_modules/mathjs/es/function/algebra/derivative.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDerivative", function() { return _function_algebra_derivative__WEBPACK_IMPORTED_MODULE_232__["createDerivative"]; });

/* harmony import */ var _function_algebra_rationalize__WEBPACK_IMPORTED_MODULE_233__ = __webpack_require__(/*! ./function/algebra/rationalize */ "../node_modules/mathjs/es/function/algebra/rationalize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRationalize", function() { return _function_algebra_rationalize__WEBPACK_IMPORTED_MODULE_233__["createRationalize"]; });

/* harmony import */ var _json_reviver__WEBPACK_IMPORTED_MODULE_234__ = __webpack_require__(/*! ./json/reviver */ "../node_modules/mathjs/es/json/reviver.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReviver", function() { return _json_reviver__WEBPACK_IMPORTED_MODULE_234__["createReviver"]; });

/* harmony import */ var _json_replacer__WEBPACK_IMPORTED_MODULE_235__ = __webpack_require__(/*! ./json/replacer */ "../node_modules/mathjs/es/json/replacer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReplacer", function() { return _json_replacer__WEBPACK_IMPORTED_MODULE_235__["createReplacer"]; });

/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_236__ = __webpack_require__(/*! ./constants */ "../node_modules/mathjs/es/constants.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createE", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUppercaseE", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createUppercaseE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFalse", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createFalse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createI", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInfinity", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createInfinity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLN10", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createLN10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLN2", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createLN2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLOG10E", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createLOG10E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLOG2E", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createLOG2E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNaN", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNull", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPhi", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createPhi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPi", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createPi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUppercasePi", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createUppercasePi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSQRT1_2", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createSQRT1_2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSQRT2", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createSQRT2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTau", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createTau"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTrue", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createTrue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVersion", function() { return _constants__WEBPACK_IMPORTED_MODULE_236__["createVersion"]; });

/* harmony import */ var _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__ = __webpack_require__(/*! ./type/unit/physicalConstants */ "../node_modules/mathjs/es/type/unit/physicalConstants.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtomicMass", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createAtomicMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAvogadro", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createAvogadro"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBohrMagneton", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createBohrMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBohrRadius", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createBohrRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBoltzmann", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createClassicalElectronRadius", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createClassicalElectronRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConductanceQuantum", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCoulomb", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createCoulomb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDeuteronMass", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createDeuteronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEfimovFactor", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createEfimovFactor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElectricConstant", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createElectricConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElectronMass", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createElectronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElementaryCharge", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createElementaryCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFaraday", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createFaraday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFermiCoupling", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createFermiCoupling"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFineStructure", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createFineStructure"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFirstRadiation", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createFirstRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGasConstant", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createGasConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGravitationConstant", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createGravitationConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGravity", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createGravity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHartreeEnergy", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createHartreeEnergy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInverseConductanceQuantum", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createInverseConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKlitzing", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createKlitzing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLoschmidt", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createLoschmidt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMagneticConstant", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createMagneticConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMagneticFluxQuantum", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createMagneticFluxQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarMass", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createMolarMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarMassC12", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createMolarMassC12"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarPlanckConstant", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createMolarPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarVolume", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createMolarVolume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNeutronMass", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createNeutronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNuclearMagneton", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createNuclearMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckCharge", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createPlanckCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckConstant", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckLength", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createPlanckLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckMass", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createPlanckMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckTemperature", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createPlanckTemperature"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckTime", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createPlanckTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createProtonMass", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createProtonMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQuantumOfCirculation", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createQuantumOfCirculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReducedPlanckConstant", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createReducedPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRydberg", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createRydberg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSackurTetrode", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createSackurTetrode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSecondRadiation", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createSecondRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSpeedOfLight", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createSpeedOfLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStefanBoltzmann", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createStefanBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createThomsonCrossSection", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createThomsonCrossSection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVacuumImpedance", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createVacuumImpedance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createWeakMixingAngle", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createWeakMixingAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createWienDisplacement", function() { return _type_unit_physicalConstants__WEBPACK_IMPORTED_MODULE_237__["createWienDisplacement"]; });

/* harmony import */ var _expression_transform_apply_transform__WEBPACK_IMPORTED_MODULE_238__ = __webpack_require__(/*! ./expression/transform/apply.transform */ "../node_modules/mathjs/es/expression/transform/apply.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createApplyTransform", function() { return _expression_transform_apply_transform__WEBPACK_IMPORTED_MODULE_238__["createApplyTransform"]; });

/* harmony import */ var _expression_transform_column_transform__WEBPACK_IMPORTED_MODULE_239__ = __webpack_require__(/*! ./expression/transform/column.transform */ "../node_modules/mathjs/es/expression/transform/column.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createColumnTransform", function() { return _expression_transform_column_transform__WEBPACK_IMPORTED_MODULE_239__["createColumnTransform"]; });

/* harmony import */ var _expression_transform_filter_transform__WEBPACK_IMPORTED_MODULE_240__ = __webpack_require__(/*! ./expression/transform/filter.transform */ "../node_modules/mathjs/es/expression/transform/filter.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFilterTransform", function() { return _expression_transform_filter_transform__WEBPACK_IMPORTED_MODULE_240__["createFilterTransform"]; });

/* harmony import */ var _expression_transform_forEach_transform__WEBPACK_IMPORTED_MODULE_241__ = __webpack_require__(/*! ./expression/transform/forEach.transform */ "../node_modules/mathjs/es/expression/transform/forEach.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createForEachTransform", function() { return _expression_transform_forEach_transform__WEBPACK_IMPORTED_MODULE_241__["createForEachTransform"]; });

/* harmony import */ var _expression_transform_index_transform__WEBPACK_IMPORTED_MODULE_242__ = __webpack_require__(/*! ./expression/transform/index.transform */ "../node_modules/mathjs/es/expression/transform/index.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexTransform", function() { return _expression_transform_index_transform__WEBPACK_IMPORTED_MODULE_242__["createIndexTransform"]; });

/* harmony import */ var _expression_transform_map_transform__WEBPACK_IMPORTED_MODULE_243__ = __webpack_require__(/*! ./expression/transform/map.transform */ "../node_modules/mathjs/es/expression/transform/map.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMapTransform", function() { return _expression_transform_map_transform__WEBPACK_IMPORTED_MODULE_243__["createMapTransform"]; });

/* harmony import */ var _expression_transform_max_transform__WEBPACK_IMPORTED_MODULE_244__ = __webpack_require__(/*! ./expression/transform/max.transform */ "../node_modules/mathjs/es/expression/transform/max.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMaxTransform", function() { return _expression_transform_max_transform__WEBPACK_IMPORTED_MODULE_244__["createMaxTransform"]; });

/* harmony import */ var _expression_transform_mean_transform__WEBPACK_IMPORTED_MODULE_245__ = __webpack_require__(/*! ./expression/transform/mean.transform */ "../node_modules/mathjs/es/expression/transform/mean.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMeanTransform", function() { return _expression_transform_mean_transform__WEBPACK_IMPORTED_MODULE_245__["createMeanTransform"]; });

/* harmony import */ var _expression_transform_min_transform__WEBPACK_IMPORTED_MODULE_246__ = __webpack_require__(/*! ./expression/transform/min.transform */ "../node_modules/mathjs/es/expression/transform/min.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMinTransform", function() { return _expression_transform_min_transform__WEBPACK_IMPORTED_MODULE_246__["createMinTransform"]; });

/* harmony import */ var _expression_transform_range_transform__WEBPACK_IMPORTED_MODULE_247__ = __webpack_require__(/*! ./expression/transform/range.transform */ "../node_modules/mathjs/es/expression/transform/range.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeTransform", function() { return _expression_transform_range_transform__WEBPACK_IMPORTED_MODULE_247__["createRangeTransform"]; });

/* harmony import */ var _expression_transform_row_transform__WEBPACK_IMPORTED_MODULE_248__ = __webpack_require__(/*! ./expression/transform/row.transform */ "../node_modules/mathjs/es/expression/transform/row.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRowTransform", function() { return _expression_transform_row_transform__WEBPACK_IMPORTED_MODULE_248__["createRowTransform"]; });

/* harmony import */ var _expression_transform_subset_transform__WEBPACK_IMPORTED_MODULE_249__ = __webpack_require__(/*! ./expression/transform/subset.transform */ "../node_modules/mathjs/es/expression/transform/subset.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubsetTransform", function() { return _expression_transform_subset_transform__WEBPACK_IMPORTED_MODULE_249__["createSubsetTransform"]; });

/* harmony import */ var _expression_transform_concat_transform__WEBPACK_IMPORTED_MODULE_250__ = __webpack_require__(/*! ./expression/transform/concat.transform */ "../node_modules/mathjs/es/expression/transform/concat.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConcatTransform", function() { return _expression_transform_concat_transform__WEBPACK_IMPORTED_MODULE_250__["createConcatTransform"]; });

/* harmony import */ var _expression_transform_diff_transform__WEBPACK_IMPORTED_MODULE_251__ = __webpack_require__(/*! ./expression/transform/diff.transform */ "../node_modules/mathjs/es/expression/transform/diff.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiffTransform", function() { return _expression_transform_diff_transform__WEBPACK_IMPORTED_MODULE_251__["createDiffTransform"]; });

/* harmony import */ var _expression_transform_std_transform__WEBPACK_IMPORTED_MODULE_252__ = __webpack_require__(/*! ./expression/transform/std.transform */ "../node_modules/mathjs/es/expression/transform/std.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStdTransform", function() { return _expression_transform_std_transform__WEBPACK_IMPORTED_MODULE_252__["createStdTransform"]; });

/* harmony import */ var _expression_transform_sum_transform__WEBPACK_IMPORTED_MODULE_253__ = __webpack_require__(/*! ./expression/transform/sum.transform */ "../node_modules/mathjs/es/expression/transform/sum.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSumTransform", function() { return _expression_transform_sum_transform__WEBPACK_IMPORTED_MODULE_253__["createSumTransform"]; });

/* harmony import */ var _expression_transform_variance_transform__WEBPACK_IMPORTED_MODULE_254__ = __webpack_require__(/*! ./expression/transform/variance.transform */ "../node_modules/mathjs/es/expression/transform/variance.transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVarianceTransform", function() { return _expression_transform_variance_transform__WEBPACK_IMPORTED_MODULE_254__["createVarianceTransform"]; });

































































































































































































































































/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/decomposition/lup.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/decomposition/lup.js ***!
  \***********************************************************************/
/*! exports provided: createLup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLup", function() { return createLup; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'lup';
var dependencies = ['typed', 'matrix', 'abs', 'addScalar', 'divideScalar', 'multiplyScalar', 'subtract', 'larger', 'equalScalar', 'unaryMinus', 'DenseMatrix', 'SparseMatrix', 'Spa'];
var createLup = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      abs = _ref.abs,
      addScalar = _ref.addScalar,
      divideScalar = _ref.divideScalar,
      multiplyScalar = _ref.multiplyScalar,
      subtract = _ref.subtract,
      larger = _ref.larger,
      equalScalar = _ref.equalScalar,
      unaryMinus = _ref.unaryMinus,
      DenseMatrix = _ref.DenseMatrix,
      SparseMatrix = _ref.SparseMatrix,
      Spa = _ref.Spa;

  /**
   * Calculate the Matrix LU decomposition with partial pivoting. Matrix `A` is decomposed in two matrices (`L`, `U`) and a
   * row permutation vector `p` where `A[p,:] = L * U`
   *
   * Syntax:
   *
   *    math.lup(A)
   *
   * Example:
   *
   *    const m = [[2, 1], [1, 4]]
   *    const r = math.lup(m)
   *    // r = {
   *    //   L: [[1, 0], [0.5, 1]],
   *    //   U: [[2, 1], [0, 3.5]],
   *    //   P: [0, 1]
   *    // }
   *
   * See also:
   *
   *    slu, lsolve, lusolve, usolve
   *
   * @param {Matrix | Array} A    A two dimensional matrix or array for which to get the LUP decomposition.
   *
   * @return {{L: Array | Matrix, U: Array | Matrix, P: Array.<number>}} The lower triangular matrix, the upper triangular matrix and the permutation matrix.
   */
  return typed(name, {
    DenseMatrix: function DenseMatrix(m) {
      return _denseLUP(m);
    },
    SparseMatrix: function SparseMatrix(m) {
      return _sparseLUP(m);
    },
    Array: function Array(a) {
      // create dense matrix from array
      var m = matrix(a); // lup, use matrix implementation

      var r = _denseLUP(m); // result


      return {
        L: r.L.valueOf(),
        U: r.U.valueOf(),
        p: r.p
      };
    }
  });

  function _denseLUP(m) {
    // rows & columns
    var rows = m._size[0];
    var columns = m._size[1]; // minimum rows and columns

    var n = Math.min(rows, columns); // matrix array, clone original data

    var data = Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(m._data); // l matrix arrays

    var ldata = [];
    var lsize = [rows, n]; // u matrix arrays

    var udata = [];
    var usize = [n, columns]; // vars

    var i, j, k; // permutation vector

    var p = [];

    for (i = 0; i < rows; i++) {
      p[i] = i;
    } // loop columns


    for (j = 0; j < columns; j++) {
      // skip first column in upper triangular matrix
      if (j > 0) {
        // loop rows
        for (i = 0; i < rows; i++) {
          // min i,j
          var min = Math.min(i, j); // v[i, j]

          var s = 0; // loop up to min

          for (k = 0; k < min; k++) {
            // s = l[i, k] - data[k, j]
            s = addScalar(s, multiplyScalar(data[i][k], data[k][j]));
          }

          data[i][j] = subtract(data[i][j], s);
        }
      } // row with larger value in cvector, row >= j


      var pi = j;
      var pabsv = 0;
      var vjj = 0; // loop rows

      for (i = j; i < rows; i++) {
        // data @ i, j
        var v = data[i][j]; // absolute value

        var absv = abs(v); // value is greater than pivote value

        if (larger(absv, pabsv)) {
          // store row
          pi = i; // update max value

          pabsv = absv; // value @ [j, j]

          vjj = v;
        }
      } // swap rows (j <-> pi)


      if (j !== pi) {
        // swap values j <-> pi in p
        p[j] = [p[pi], p[pi] = p[j]][0]; // swap j <-> pi in data

        DenseMatrix._swapRows(j, pi, data);
      } // check column is in lower triangular matrix


      if (j < rows) {
        // loop rows (lower triangular matrix)
        for (i = j + 1; i < rows; i++) {
          // value @ i, j
          var vij = data[i][j];

          if (!equalScalar(vij, 0)) {
            // update data
            data[i][j] = divideScalar(data[i][j], vjj);
          }
        }
      }
    } // loop columns


    for (j = 0; j < columns; j++) {
      // loop rows
      for (i = 0; i < rows; i++) {
        // initialize row in arrays
        if (j === 0) {
          // check row exists in upper triangular matrix
          if (i < columns) {
            // U
            udata[i] = [];
          } // L


          ldata[i] = [];
        } // check we are in the upper triangular matrix


        if (i < j) {
          // check row exists in upper triangular matrix
          if (i < columns) {
            // U
            udata[i][j] = data[i][j];
          } // check column exists in lower triangular matrix


          if (j < rows) {
            // L
            ldata[i][j] = 0;
          }

          continue;
        } // diagonal value


        if (i === j) {
          // check row exists in upper triangular matrix
          if (i < columns) {
            // U
            udata[i][j] = data[i][j];
          } // check column exists in lower triangular matrix


          if (j < rows) {
            // L
            ldata[i][j] = 1;
          }

          continue;
        } // check row exists in upper triangular matrix


        if (i < columns) {
          // U
          udata[i][j] = 0;
        } // check column exists in lower triangular matrix


        if (j < rows) {
          // L
          ldata[i][j] = data[i][j];
        }
      }
    } // l matrix


    var l = new DenseMatrix({
      data: ldata,
      size: lsize
    }); // u matrix

    var u = new DenseMatrix({
      data: udata,
      size: usize
    }); // p vector

    var pv = [];

    for (i = 0, n = p.length; i < n; i++) {
      pv[p[i]] = i;
    } // return matrices


    return {
      L: l,
      U: u,
      p: pv,
      toString: function toString() {
        return 'L: ' + this.L.toString() + '\nU: ' + this.U.toString() + '\nP: ' + this.p;
      }
    };
  }

  function _sparseLUP(m) {
    // rows & columns
    var rows = m._size[0];
    var columns = m._size[1]; // minimum rows and columns

    var n = Math.min(rows, columns); // matrix arrays (will not be modified, thanks to permutation vector)

    var values = m._values;
    var index = m._index;
    var ptr = m._ptr; // l matrix arrays

    var lvalues = [];
    var lindex = [];
    var lptr = [];
    var lsize = [rows, n]; // u matrix arrays

    var uvalues = [];
    var uindex = [];
    var uptr = [];
    var usize = [n, columns]; // vars

    var i, j, k; // permutation vectors, (current index -> original index) and (original index -> current index)

    var pvCo = [];
    var pvOc = [];

    for (i = 0; i < rows; i++) {
      pvCo[i] = i;
      pvOc[i] = i;
    } // swap indices in permutation vectors (condition x < y)!


    var swapIndeces = function swapIndeces(x, y) {
      // find pv indeces getting data from x and y
      var kx = pvOc[x];
      var ky = pvOc[y]; // update permutation vector current -> original

      pvCo[kx] = y;
      pvCo[ky] = x; // update permutation vector original -> current

      pvOc[x] = ky;
      pvOc[y] = kx;
    }; // loop columns


    var _loop = function _loop() {
      // sparse accumulator
      var spa = new Spa(); // check lower triangular matrix has a value @ column j

      if (j < rows) {
        // update ptr
        lptr.push(lvalues.length); // first value in j column for lower triangular matrix

        lvalues.push(1);
        lindex.push(j);
      } // update ptr


      uptr.push(uvalues.length); // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]

      var k0 = ptr[j];
      var k1 = ptr[j + 1]; // copy column j into sparse accumulator

      for (k = k0; k < k1; k++) {
        // row
        i = index[k]; // copy column values into sparse accumulator (use permutation vector)

        spa.set(pvCo[i], values[k]);
      } // skip first column in upper triangular matrix


      if (j > 0) {
        // loop rows in column j (above diagonal)
        spa.forEach(0, j - 1, function (k, vkj) {
          // loop rows in column k (L)
          SparseMatrix._forEachRow(k, lvalues, lindex, lptr, function (i, vik) {
            // check row is below k
            if (i > k) {
              // update spa value
              spa.accumulate(i, unaryMinus(multiplyScalar(vik, vkj)));
            }
          });
        });
      } // row with larger value in spa, row >= j


      var pi = j;
      var vjj = spa.get(j);
      var pabsv = abs(vjj); // loop values in spa (order by row, below diagonal)

      spa.forEach(j + 1, rows - 1, function (x, v) {
        // absolute value
        var absv = abs(v); // value is greater than pivote value

        if (larger(absv, pabsv)) {
          // store row
          pi = x; // update max value

          pabsv = absv; // value @ [j, j]

          vjj = v;
        }
      }); // swap rows (j <-> pi)

      if (j !== pi) {
        // swap values j <-> pi in L
        SparseMatrix._swapRows(j, pi, lsize[1], lvalues, lindex, lptr); // swap values j <-> pi in U


        SparseMatrix._swapRows(j, pi, usize[1], uvalues, uindex, uptr); // swap values in spa


        spa.swap(j, pi); // update permutation vector (swap values @ j, pi)

        swapIndeces(j, pi);
      } // loop values in spa (order by row)


      spa.forEach(0, rows - 1, function (x, v) {
        // check we are above diagonal
        if (x <= j) {
          // update upper triangular matrix
          uvalues.push(v);
          uindex.push(x);
        } else {
          // update value
          v = divideScalar(v, vjj); // check value is non zero

          if (!equalScalar(v, 0)) {
            // update lower triangular matrix
            lvalues.push(v);
            lindex.push(x);
          }
        }
      });
    };

    for (j = 0; j < columns; j++) {
      _loop();
    } // update ptrs


    uptr.push(uvalues.length);
    lptr.push(lvalues.length); // return matrices

    return {
      L: new SparseMatrix({
        values: lvalues,
        index: lindex,
        ptr: lptr,
        size: lsize
      }),
      U: new SparseMatrix({
        values: uvalues,
        index: uindex,
        ptr: uptr,
        size: usize
      }),
      p: pvCo,
      toString: function toString() {
        return 'L: ' + this.L.toString() + '\nU: ' + this.U.toString() + '\nP: ' + this.p;
      }
    };
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/decomposition/qr.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/decomposition/qr.js ***!
  \**********************************************************************/
/*! exports provided: createQr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createQr", function() { return createQr; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }


var name = 'qr';
var dependencies = ['typed', 'matrix', 'zeros', 'identity', 'isZero', 'equal', 'sign', 'sqrt', 'conj', 'unaryMinus', 'addScalar', 'divideScalar', 'multiplyScalar', 'subtract', 'complex'];
var createQr = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      zeros = _ref.zeros,
      identity = _ref.identity,
      isZero = _ref.isZero,
      equal = _ref.equal,
      sign = _ref.sign,
      sqrt = _ref.sqrt,
      conj = _ref.conj,
      unaryMinus = _ref.unaryMinus,
      addScalar = _ref.addScalar,
      divideScalar = _ref.divideScalar,
      multiplyScalar = _ref.multiplyScalar,
      subtract = _ref.subtract,
      complex = _ref.complex;

  /**
   * Calculate the Matrix QR decomposition. Matrix `A` is decomposed in
   * two matrices (`Q`, `R`) where `Q` is an
   * orthogonal matrix and `R` is an upper triangular matrix.
   *
   * Syntax:
   *
   *    math.qr(A)
   *
   * Example:
   *
   *    const m = [
   *      [1, -1,  4],
   *      [1,  4, -2],
   *      [1,  4,  2],
   *      [1,  -1, 0]
   *    ]
   *    const result = math.qr(m)
   *    // r = {
   *    //   Q: [
   *    //     [0.5, -0.5,   0.5],
   *    //     [0.5,  0.5,  -0.5],
   *    //     [0.5,  0.5,   0.5],
   *    //     [0.5, -0.5,  -0.5],
   *    //   ],
   *    //   R: [
   *    //     [2, 3,  2],
   *    //     [0, 5, -2],
   *    //     [0, 0,  4],
   *    //     [0, 0,  0]
   *    //   ]
   *    // }
   *
   * See also:
   *
   *    lup, lusolve
   *
   * @param {Matrix | Array} A    A two dimensional matrix or array
   * for which to get the QR decomposition.
   *
   * @return {{Q: Array | Matrix, R: Array | Matrix}} Q: the orthogonal
   * matrix and R: the upper triangular matrix
   */
  return _extends(typed(name, {
    DenseMatrix: function DenseMatrix(m) {
      return _denseQR(m);
    },
    SparseMatrix: function SparseMatrix(m) {
      return _sparseQR(m);
    },
    Array: function Array(a) {
      // create dense matrix from array
      var m = matrix(a); // lup, use matrix implementation

      var r = _denseQR(m); // result


      return {
        Q: r.Q.valueOf(),
        R: r.R.valueOf()
      };
    }
  }), {
    _denseQRimpl: _denseQRimpl
  });

  function _denseQRimpl(m) {
    // rows & columns (m x n)
    var rows = m._size[0]; // m

    var cols = m._size[1]; // n

    var Q = identity([rows], 'dense');
    var Qdata = Q._data;
    var R = m.clone();
    var Rdata = R._data; // vars

    var i, j, k;
    var w = zeros([rows], '');

    for (k = 0; k < Math.min(cols, rows); ++k) {
      /*
       * **k-th Household matrix**
       *
       * The matrix I - 2*v*transpose(v)
       * x     = first column of A
       * x1    = first element of x
       * alpha = x1 / |x1| * |x|
       * e1    = tranpose([1, 0, 0, ...])
       * u     = x - alpha * e1
       * v     = u / |u|
       *
       * Household matrix = I - 2 * v * tranpose(v)
       *
       *  * Initially Q = I and R = A.
       *  * Household matrix is a reflection in a plane normal to v which
       *    will zero out all but the top right element in R.
       *  * Appplying reflection to both Q and R will not change product.
       *  * Repeat this process on the (1,1) minor to get R as an upper
       *    triangular matrix.
       *  * Reflections leave the magnitude of the columns of Q unchanged
       *    so Q remains othoganal.
       *
       */
      var pivot = Rdata[k][k];
      var sgn = unaryMinus(equal(pivot, 0) ? 1 : sign(pivot));
      var conjSgn = conj(sgn);
      var alphaSquared = 0;

      for (i = k; i < rows; i++) {
        alphaSquared = addScalar(alphaSquared, multiplyScalar(Rdata[i][k], conj(Rdata[i][k])));
      }

      var alpha = multiplyScalar(sgn, sqrt(alphaSquared));

      if (!isZero(alpha)) {
        // first element in vector u
        var u1 = subtract(pivot, alpha); // w = v * u1 / |u|    (only elements k to (rows-1) are used)

        w[k] = 1;

        for (i = k + 1; i < rows; i++) {
          w[i] = divideScalar(Rdata[i][k], u1);
        } // tau = - conj(u1 / alpha)


        var tau = unaryMinus(conj(divideScalar(u1, alpha)));
        var s = void 0;
        /*
         * tau and w have been choosen so that
         *
         * 2 * v * tranpose(v) = tau * w * tranpose(w)
         */

        /*
         * -- calculate R = R - tau * w * tranpose(w) * R --
         * Only do calculation with rows k to (rows-1)
         * Additionally columns 0 to (k-1) will not be changed by this
         *   multiplication so do not bother recalculating them
         */

        for (j = k; j < cols; j++) {
          s = 0.0; // calculate jth element of [tranpose(w) * R]

          for (i = k; i < rows; i++) {
            s = addScalar(s, multiplyScalar(conj(w[i]), Rdata[i][j]));
          } // calculate the jth element of [tau * transpose(w) * R]


          s = multiplyScalar(s, tau);

          for (i = k; i < rows; i++) {
            Rdata[i][j] = multiplyScalar(subtract(Rdata[i][j], multiplyScalar(w[i], s)), conjSgn);
          }
        }
        /*
         * -- calculate Q = Q - tau * Q * w * transpose(w) --
         * Q is a square matrix (rows x rows)
         * Only do calculation with columns k to (rows-1)
         * Additionally rows 0 to (k-1) will not be changed by this
         *   multiplication so do not bother recalculating them
         */


        for (i = 0; i < rows; i++) {
          s = 0.0; // calculate ith element of [Q * w]

          for (j = k; j < rows; j++) {
            s = addScalar(s, multiplyScalar(Qdata[i][j], w[j]));
          } // calculate the ith element of [tau * Q * w]


          s = multiplyScalar(s, tau);

          for (j = k; j < rows; ++j) {
            Qdata[i][j] = divideScalar(subtract(Qdata[i][j], multiplyScalar(s, conj(w[j]))), conjSgn);
          }
        }
      }
    } // return matrices


    return {
      Q: Q,
      R: R,
      toString: function toString() {
        return 'Q: ' + this.Q.toString() + '\nR: ' + this.R.toString();
      }
    };
  }

  function _denseQR(m) {
    var ret = _denseQRimpl(m);

    var Rdata = ret.R._data;

    if (m._data.length > 0) {
      var zero = Rdata[0][0].type === 'Complex' ? complex(0) : 0;

      for (var i = 0; i < Rdata.length; ++i) {
        for (var j = 0; j < i && j < (Rdata[0] || []).length; ++j) {
          Rdata[i][j] = zero;
        }
      }
    }

    return ret;
  }

  function _sparseQR(m) {
    throw new Error('qr not implemented for sparse matrices yet');
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/decomposition/slu.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/decomposition/slu.js ***!
  \***********************************************************************/
/*! exports provided: createSlu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSlu", function() { return createSlu; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _sparse_csSqr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sparse/csSqr */ "../node_modules/mathjs/es/function/algebra/sparse/csSqr.js");
/* harmony import */ var _sparse_csLu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sparse/csLu */ "../node_modules/mathjs/es/function/algebra/sparse/csLu.js");




var name = 'slu';
var dependencies = ['typed', 'abs', 'add', 'multiply', 'transpose', 'divideScalar', 'subtract', 'larger', 'largerEq', 'SparseMatrix'];
var createSlu = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      abs = _ref.abs,
      add = _ref.add,
      multiply = _ref.multiply,
      transpose = _ref.transpose,
      divideScalar = _ref.divideScalar,
      subtract = _ref.subtract,
      larger = _ref.larger,
      largerEq = _ref.largerEq,
      SparseMatrix = _ref.SparseMatrix;
  var csSqr = Object(_sparse_csSqr__WEBPACK_IMPORTED_MODULE_2__["createCsSqr"])({
    add: add,
    multiply: multiply,
    transpose: transpose
  });
  var csLu = Object(_sparse_csLu__WEBPACK_IMPORTED_MODULE_3__["createCsLu"])({
    abs: abs,
    divideScalar: divideScalar,
    multiply: multiply,
    subtract: subtract,
    larger: larger,
    largerEq: largerEq,
    SparseMatrix: SparseMatrix
  });
  /**
   * Calculate the Sparse Matrix LU decomposition with full pivoting. Sparse Matrix `A` is decomposed in two matrices (`L`, `U`) and two permutation vectors (`pinv`, `q`) where
   *
   * `P * A * Q = L * U`
   *
   * Syntax:
   *
   *    math.slu(A, order, threshold)
   *
   * Examples:
   *
   *    const A = math.sparse([[4,3], [6, 3]])
   *    math.slu(A, 1, 0.001)
   *    // returns:
   *    // {
   *    //   L: [[1, 0], [1.5, 1]]
   *    //   U: [[4, 3], [0, -1.5]]
   *    //   p: [0, 1]
   *    //   q: [0, 1]
   *    // }
   *
   * See also:
   *
   *    lup, lsolve, usolve, lusolve
   *
   * @param {SparseMatrix} A              A two dimensional sparse matrix for which to get the LU decomposition.
   * @param {Number}       order          The Symbolic Ordering and Analysis order:
   *                                       0 - Natural ordering, no permutation vector q is returned
   *                                       1 - Matrix must be square, symbolic ordering and analisis is performed on M = A + A'
   *                                       2 - Symbolic ordering and analisis is performed on M = A' * A. Dense columns from A' are dropped, A recreated from A'.
   *                                           This is appropriatefor LU factorization of unsymmetric matrices.
   *                                       3 - Symbolic ordering and analisis is performed on M = A' * A. This is best used for LU factorization is matrix M has no dense rows.
   *                                           A dense row is a row with more than 10*sqr(columns) entries.
   * @param {Number}       threshold       Partial pivoting threshold (1 for partial pivoting)
   *
   * @return {Object} The lower triangular matrix, the upper triangular matrix and the permutation vectors.
   */

  return typed(name, {
    'SparseMatrix, number, number': function SparseMatrixNumberNumber(a, order, threshold) {
      // verify order
      if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(order) || order < 0 || order > 3) {
        throw new Error('Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]');
      } // verify threshold


      if (threshold < 0 || threshold > 1) {
        throw new Error('Partial pivoting threshold must be a number from 0 to 1');
      } // perform symbolic ordering and analysis


      var s = csSqr(order, a, false); // perform lu decomposition

      var f = csLu(a, s, threshold); // return decomposition

      return {
        L: f.L,
        U: f.U,
        p: f.pinv,
        q: s.q,
        toString: function toString() {
          return 'L: ' + this.L.toString() + '\nU: ' + this.U.toString() + '\np: ' + this.p.toString() + (this.q ? '\nq: ' + this.q.toString() : '') + '\n';
        }
      };
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/derivative.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/derivative.js ***!
  \****************************************************************/
/*! exports provided: createDerivative */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDerivative", function() { return createDerivative; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'derivative';
var dependencies = ['typed', 'config', 'parse', 'simplify', 'equal', 'isZero', 'numeric', 'ConstantNode', 'FunctionNode', 'OperatorNode', 'ParenthesisNode', 'SymbolNode'];
var createDerivative = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      parse = _ref.parse,
      simplify = _ref.simplify,
      equal = _ref.equal,
      isZero = _ref.isZero,
      numeric = _ref.numeric,
      ConstantNode = _ref.ConstantNode,
      FunctionNode = _ref.FunctionNode,
      OperatorNode = _ref.OperatorNode,
      ParenthesisNode = _ref.ParenthesisNode,
      SymbolNode = _ref.SymbolNode;

  /**
   * Takes the derivative of an expression expressed in parser Nodes.
   * The derivative will be taken over the supplied variable in the
   * second parameter. If there are multiple variables in the expression,
   * it will return a partial derivative.
   *
   * This uses rules of differentiation which can be found here:
   *
   * - [Differentiation rules (Wikipedia)](https://en.wikipedia.org/wiki/Differentiation_rules)
   *
   * Syntax:
   *
   *     derivative(expr, variable)
   *     derivative(expr, variable, options)
   *
   * Examples:
   *
   *     math.derivative('x^2', 'x')                     // Node {2 * x}
   *     math.derivative('x^2', 'x', {simplify: false})  // Node {2 * 1 * x ^ (2 - 1)
   *     math.derivative('sin(2x)', 'x'))                // Node {2 * cos(2 * x)}
   *     math.derivative('2*x', 'x').evaluate()          // number 2
   *     math.derivative('x^2', 'x').evaluate({x: 4})    // number 8
   *     const f = math.parse('x^2')
   *     const x = math.parse('x')
   *     math.derivative(f, x)                           // Node {2 * x}
   *
   * See also:
   *
   *     simplify, parse, evaluate
   *
   * @param  {Node | string} expr           The expression to differentiate
   * @param  {SymbolNode | string} variable The variable over which to differentiate
   * @param  {{simplify: boolean}} [options]
   *                         There is one option available, `simplify`, which
   *                         is true by default. When false, output will not
   *                         be simplified.
   * @return {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode}    The derivative of `expr`
   */
  var derivative = typed('derivative', {
    'Node, SymbolNode, Object': function NodeSymbolNodeObject(expr, variable, options) {
      var constNodes = {};
      constTag(constNodes, expr, variable.name);

      var res = _derivative(expr, constNodes);

      return options.simplify ? simplify(res) : res;
    },
    'Node, SymbolNode': function NodeSymbolNode(expr, variable) {
      return this(expr, variable, {
        simplify: true
      });
    },
    'string, SymbolNode': function stringSymbolNode(expr, variable) {
      return this(parse(expr), variable);
    },
    'string, SymbolNode, Object': function stringSymbolNodeObject(expr, variable, options) {
      return this(parse(expr), variable, options);
    },
    'string, string': function stringString(expr, variable) {
      return this(parse(expr), parse(variable));
    },
    'string, string, Object': function stringStringObject(expr, variable, options) {
      return this(parse(expr), parse(variable), options);
    },
    'Node, string': function NodeString(expr, variable) {
      return this(expr, parse(variable));
    },
    'Node, string, Object': function NodeStringObject(expr, variable, options) {
      return this(expr, parse(variable), options);
    } // TODO: replace the 8 signatures above with 4 as soon as typed-function supports optional arguments

    /* TODO: implement and test syntax with order of derivatives -> implement as an option {order: number}
    'Node, SymbolNode, ConstantNode': function (expr, variable, {order}) {
      let res = expr
      for (let i = 0; i < order; i++) {
        let constNodes = {}
        constTag(constNodes, expr, variable.name)
        res = _derivative(res, constNodes)
      }
      return res
    }
    */

  });
  derivative._simplify = true;

  derivative.toTex = function (deriv) {
    return _derivTex.apply(null, deriv.args);
  }; // FIXME: move the toTex method of derivative to latex.js. Difficulty is that it relies on parse.
  // NOTE: the optional "order" parameter here is currently unused


  var _derivTex = typed('_derivTex', {
    'Node, SymbolNode': function NodeSymbolNode(expr, x) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(expr) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(expr.value) === 'string') {
        return _derivTex(parse(expr.value).toString(), x.toString(), 1);
      } else {
        return _derivTex(expr.toString(), x.toString(), 1);
      }
    },
    'Node, ConstantNode': function NodeConstantNode(expr, x) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(x.value) === 'string') {
        return _derivTex(expr, parse(x.value));
      } else {
        throw new Error("The second parameter to 'derivative' is a non-string constant");
      }
    },
    'Node, SymbolNode, ConstantNode': function NodeSymbolNodeConstantNode(expr, x, order) {
      return _derivTex(expr.toString(), x.name, order.value);
    },
    'string, string, number': function stringStringNumber(expr, x, order) {
      var d;

      if (order === 1) {
        d = '{d\\over d' + x + '}';
      } else {
        d = '{d^{' + order + '}\\over d' + x + '^{' + order + '}}';
      }

      return d + "\\left[".concat(expr, "\\right]");
    }
  });
  /**
   * Does a depth-first search on the expression tree to identify what Nodes
   * are constants (e.g. 2 + 2), and stores the ones that are constants in
   * constNodes. Classification is done as follows:
   *
   *   1. ConstantNodes are constants.
   *   2. If there exists a SymbolNode, of which we are differentiating over,
   *      in the subtree it is not constant.
   *
   * @param  {Object} constNodes  Holds the nodes that are constant
   * @param  {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} node
   * @param  {string} varName     Variable that we are differentiating
   * @return {boolean}  if node is constant
   */
  // TODO: can we rewrite constTag into a pure function?


  var constTag = typed('constTag', {
    'Object, ConstantNode, string': function ObjectConstantNodeString(constNodes, node) {
      constNodes[node] = true;
      return true;
    },
    'Object, SymbolNode, string': function ObjectSymbolNodeString(constNodes, node, varName) {
      // Treat other variables like constants. For reasoning, see:
      //   https://en.wikipedia.org/wiki/Partial_derivative
      if (node.name !== varName) {
        constNodes[node] = true;
        return true;
      }

      return false;
    },
    'Object, ParenthesisNode, string': function ObjectParenthesisNodeString(constNodes, node, varName) {
      return constTag(constNodes, node.content, varName);
    },
    'Object, FunctionAssignmentNode, string': function ObjectFunctionAssignmentNodeString(constNodes, node, varName) {
      if (node.params.indexOf(varName) === -1) {
        constNodes[node] = true;
        return true;
      }

      return constTag(constNodes, node.expr, varName);
    },
    'Object, FunctionNode | OperatorNode, string': function ObjectFunctionNodeOperatorNodeString(constNodes, node, varName) {
      if (node.args.length > 0) {
        var isConst = constTag(constNodes, node.args[0], varName);

        for (var i = 1; i < node.args.length; ++i) {
          isConst = constTag(constNodes, node.args[i], varName) && isConst;
        }

        if (isConst) {
          constNodes[node] = true;
          return true;
        }
      }

      return false;
    }
  });
  /**
   * Applies differentiation rules.
   *
   * @param  {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} node
   * @param  {Object} constNodes  Holds the nodes that are constant
   * @return {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode}    The derivative of `expr`
   */

  var _derivative = typed('_derivative', {
    'ConstantNode, Object': function ConstantNodeObject(node) {
      return createConstantNode(0);
    },
    'SymbolNode, Object': function SymbolNodeObject(node, constNodes) {
      if (constNodes[node] !== undefined) {
        return createConstantNode(0);
      }

      return createConstantNode(1);
    },
    'ParenthesisNode, Object': function ParenthesisNodeObject(node, constNodes) {
      return new ParenthesisNode(_derivative(node.content, constNodes));
    },
    'FunctionAssignmentNode, Object': function FunctionAssignmentNodeObject(node, constNodes) {
      if (constNodes[node] !== undefined) {
        return createConstantNode(0);
      }

      return _derivative(node.expr, constNodes);
    },
    'FunctionNode, Object': function FunctionNodeObject(node, constNodes) {
      if (node.args.length !== 1) {
        funcArgsCheck(node);
      }

      if (constNodes[node] !== undefined) {
        return createConstantNode(0);
      }

      var arg0 = node.args[0];
      var arg1;
      var div = false; // is output a fraction?

      var negative = false; // is output negative?

      var funcDerivative;

      switch (node.name) {
        case 'cbrt':
          // d/dx(cbrt(x)) = 1 / (3x^(2/3))
          div = true;
          funcDerivative = new OperatorNode('*', 'multiply', [createConstantNode(3), new OperatorNode('^', 'pow', [arg0, new OperatorNode('/', 'divide', [createConstantNode(2), createConstantNode(3)])])]);
          break;

        case 'sqrt':
        case 'nthRoot':
          // d/dx(sqrt(x)) = 1 / (2*sqrt(x))
          if (node.args.length === 1) {
            div = true;
            funcDerivative = new OperatorNode('*', 'multiply', [createConstantNode(2), new FunctionNode('sqrt', [arg0])]);
          } else if (node.args.length === 2) {
            // Rearrange from nthRoot(x, a) -> x^(1/a)
            arg1 = new OperatorNode('/', 'divide', [createConstantNode(1), node.args[1]]); // Is a variable?

            constNodes[arg1] = constNodes[node.args[1]];
            return _derivative(new OperatorNode('^', 'pow', [arg0, arg1]), constNodes);
          }

          break;

        case 'log10':
          arg1 = createConstantNode(10);

        /* fall through! */

        case 'log':
          if (!arg1 && node.args.length === 1) {
            // d/dx(log(x)) = 1 / x
            funcDerivative = arg0.clone();
            div = true;
          } else if (node.args.length === 1 && arg1 || node.args.length === 2 && constNodes[node.args[1]] !== undefined) {
            // d/dx(log(x, c)) = 1 / (x*ln(c))
            funcDerivative = new OperatorNode('*', 'multiply', [arg0.clone(), new FunctionNode('log', [arg1 || node.args[1]])]);
            div = true;
          } else if (node.args.length === 2) {
            // d/dx(log(f(x), g(x))) = d/dx(log(f(x)) / log(g(x)))
            return _derivative(new OperatorNode('/', 'divide', [new FunctionNode('log', [arg0]), new FunctionNode('log', [node.args[1]])]), constNodes);
          }

          break;

        case 'pow':
          constNodes[arg1] = constNodes[node.args[1]]; // Pass to pow operator node parser

          return _derivative(new OperatorNode('^', 'pow', [arg0, node.args[1]]), constNodes);

        case 'exp':
          // d/dx(e^x) = e^x
          funcDerivative = new FunctionNode('exp', [arg0.clone()]);
          break;

        case 'sin':
          // d/dx(sin(x)) = cos(x)
          funcDerivative = new FunctionNode('cos', [arg0.clone()]);
          break;

        case 'cos':
          // d/dx(cos(x)) = -sin(x)
          funcDerivative = new OperatorNode('-', 'unaryMinus', [new FunctionNode('sin', [arg0.clone()])]);
          break;

        case 'tan':
          // d/dx(tan(x)) = sec(x)^2
          funcDerivative = new OperatorNode('^', 'pow', [new FunctionNode('sec', [arg0.clone()]), createConstantNode(2)]);
          break;

        case 'sec':
          // d/dx(sec(x)) = sec(x)tan(x)
          funcDerivative = new OperatorNode('*', 'multiply', [node, new FunctionNode('tan', [arg0.clone()])]);
          break;

        case 'csc':
          // d/dx(csc(x)) = -csc(x)cot(x)
          negative = true;
          funcDerivative = new OperatorNode('*', 'multiply', [node, new FunctionNode('cot', [arg0.clone()])]);
          break;

        case 'cot':
          // d/dx(cot(x)) = -csc(x)^2
          negative = true;
          funcDerivative = new OperatorNode('^', 'pow', [new FunctionNode('csc', [arg0.clone()]), createConstantNode(2)]);
          break;

        case 'asin':
          // d/dx(asin(x)) = 1 / sqrt(1 - x^2)
          div = true;
          funcDerivative = new FunctionNode('sqrt', [new OperatorNode('-', 'subtract', [createConstantNode(1), new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)])])]);
          break;

        case 'acos':
          // d/dx(acos(x)) = -1 / sqrt(1 - x^2)
          div = true;
          negative = true;
          funcDerivative = new FunctionNode('sqrt', [new OperatorNode('-', 'subtract', [createConstantNode(1), new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)])])]);
          break;

        case 'atan':
          // d/dx(atan(x)) = 1 / (x^2 + 1)
          div = true;
          funcDerivative = new OperatorNode('+', 'add', [new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)]), createConstantNode(1)]);
          break;

        case 'asec':
          // d/dx(asec(x)) = 1 / (|x|*sqrt(x^2 - 1))
          div = true;
          funcDerivative = new OperatorNode('*', 'multiply', [new FunctionNode('abs', [arg0.clone()]), new FunctionNode('sqrt', [new OperatorNode('-', 'subtract', [new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)]), createConstantNode(1)])])]);
          break;

        case 'acsc':
          // d/dx(acsc(x)) = -1 / (|x|*sqrt(x^2 - 1))
          div = true;
          negative = true;
          funcDerivative = new OperatorNode('*', 'multiply', [new FunctionNode('abs', [arg0.clone()]), new FunctionNode('sqrt', [new OperatorNode('-', 'subtract', [new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)]), createConstantNode(1)])])]);
          break;

        case 'acot':
          // d/dx(acot(x)) = -1 / (x^2 + 1)
          div = true;
          negative = true;
          funcDerivative = new OperatorNode('+', 'add', [new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)]), createConstantNode(1)]);
          break;

        case 'sinh':
          // d/dx(sinh(x)) = cosh(x)
          funcDerivative = new FunctionNode('cosh', [arg0.clone()]);
          break;

        case 'cosh':
          // d/dx(cosh(x)) = sinh(x)
          funcDerivative = new FunctionNode('sinh', [arg0.clone()]);
          break;

        case 'tanh':
          // d/dx(tanh(x)) = sech(x)^2
          funcDerivative = new OperatorNode('^', 'pow', [new FunctionNode('sech', [arg0.clone()]), createConstantNode(2)]);
          break;

        case 'sech':
          // d/dx(sech(x)) = -sech(x)tanh(x)
          negative = true;
          funcDerivative = new OperatorNode('*', 'multiply', [node, new FunctionNode('tanh', [arg0.clone()])]);
          break;

        case 'csch':
          // d/dx(csch(x)) = -csch(x)coth(x)
          negative = true;
          funcDerivative = new OperatorNode('*', 'multiply', [node, new FunctionNode('coth', [arg0.clone()])]);
          break;

        case 'coth':
          // d/dx(coth(x)) = -csch(x)^2
          negative = true;
          funcDerivative = new OperatorNode('^', 'pow', [new FunctionNode('csch', [arg0.clone()]), createConstantNode(2)]);
          break;

        case 'asinh':
          // d/dx(asinh(x)) = 1 / sqrt(x^2 + 1)
          div = true;
          funcDerivative = new FunctionNode('sqrt', [new OperatorNode('+', 'add', [new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)]), createConstantNode(1)])]);
          break;

        case 'acosh':
          // d/dx(acosh(x)) = 1 / sqrt(x^2 - 1); XXX potentially only for x >= 1 (the real spectrum)
          div = true;
          funcDerivative = new FunctionNode('sqrt', [new OperatorNode('-', 'subtract', [new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)]), createConstantNode(1)])]);
          break;

        case 'atanh':
          // d/dx(atanh(x)) = 1 / (1 - x^2)
          div = true;
          funcDerivative = new OperatorNode('-', 'subtract', [createConstantNode(1), new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)])]);
          break;

        case 'asech':
          // d/dx(asech(x)) = -1 / (x*sqrt(1 - x^2))
          div = true;
          negative = true;
          funcDerivative = new OperatorNode('*', 'multiply', [arg0.clone(), new FunctionNode('sqrt', [new OperatorNode('-', 'subtract', [createConstantNode(1), new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)])])])]);
          break;

        case 'acsch':
          // d/dx(acsch(x)) = -1 / (|x|*sqrt(x^2 + 1))
          div = true;
          negative = true;
          funcDerivative = new OperatorNode('*', 'multiply', [new FunctionNode('abs', [arg0.clone()]), new FunctionNode('sqrt', [new OperatorNode('+', 'add', [new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)]), createConstantNode(1)])])]);
          break;

        case 'acoth':
          // d/dx(acoth(x)) = -1 / (1 - x^2)
          div = true;
          negative = true;
          funcDerivative = new OperatorNode('-', 'subtract', [createConstantNode(1), new OperatorNode('^', 'pow', [arg0.clone(), createConstantNode(2)])]);
          break;

        case 'abs':
          // d/dx(abs(x)) = abs(x)/x
          funcDerivative = new OperatorNode('/', 'divide', [new FunctionNode(new SymbolNode('abs'), [arg0.clone()]), arg0.clone()]);
          break;

        case 'gamma': // Needs digamma function, d/dx(gamma(x)) = gamma(x)digamma(x)

        default:
          throw new Error('Function "' + node.name + '" is not supported by derivative, or a wrong number of arguments is passed');
      }

      var op, func;

      if (div) {
        op = '/';
        func = 'divide';
      } else {
        op = '*';
        func = 'multiply';
      }
      /* Apply chain rule to all functions:
         F(x)  = f(g(x))
         F'(x) = g'(x)*f'(g(x)) */


      var chainDerivative = _derivative(arg0, constNodes);

      if (negative) {
        chainDerivative = new OperatorNode('-', 'unaryMinus', [chainDerivative]);
      }

      return new OperatorNode(op, func, [chainDerivative, funcDerivative]);
    },
    'OperatorNode, Object': function OperatorNodeObject(node, constNodes) {
      if (constNodes[node] !== undefined) {
        return createConstantNode(0);
      }

      if (node.op === '+') {
        // d/dx(sum(f(x)) = sum(f'(x))
        return new OperatorNode(node.op, node.fn, node.args.map(function (arg) {
          return _derivative(arg, constNodes);
        }));
      }

      if (node.op === '-') {
        // d/dx(+/-f(x)) = +/-f'(x)
        if (node.isUnary()) {
          return new OperatorNode(node.op, node.fn, [_derivative(node.args[0], constNodes)]);
        } // Linearity of differentiation, d/dx(f(x) +/- g(x)) = f'(x) +/- g'(x)


        if (node.isBinary()) {
          return new OperatorNode(node.op, node.fn, [_derivative(node.args[0], constNodes), _derivative(node.args[1], constNodes)]);
        }
      }

      if (node.op === '*') {
        // d/dx(c*f(x)) = c*f'(x)
        var constantTerms = node.args.filter(function (arg) {
          return constNodes[arg] !== undefined;
        });

        if (constantTerms.length > 0) {
          var nonConstantTerms = node.args.filter(function (arg) {
            return constNodes[arg] === undefined;
          });
          var nonConstantNode = nonConstantTerms.length === 1 ? nonConstantTerms[0] : new OperatorNode('*', 'multiply', nonConstantTerms);
          var newArgs = constantTerms.concat(_derivative(nonConstantNode, constNodes));
          return new OperatorNode('*', 'multiply', newArgs);
        } // Product Rule, d/dx(f(x)*g(x)) = f'(x)*g(x) + f(x)*g'(x)


        return new OperatorNode('+', 'add', node.args.map(function (argOuter) {
          return new OperatorNode('*', 'multiply', node.args.map(function (argInner) {
            return argInner === argOuter ? _derivative(argInner, constNodes) : argInner.clone();
          }));
        }));
      }

      if (node.op === '/' && node.isBinary()) {
        var arg0 = node.args[0];
        var arg1 = node.args[1]; // d/dx(f(x) / c) = f'(x) / c

        if (constNodes[arg1] !== undefined) {
          return new OperatorNode('/', 'divide', [_derivative(arg0, constNodes), arg1]);
        } // Reciprocal Rule, d/dx(c / f(x)) = -c(f'(x)/f(x)^2)


        if (constNodes[arg0] !== undefined) {
          return new OperatorNode('*', 'multiply', [new OperatorNode('-', 'unaryMinus', [arg0]), new OperatorNode('/', 'divide', [_derivative(arg1, constNodes), new OperatorNode('^', 'pow', [arg1.clone(), createConstantNode(2)])])]);
        } // Quotient rule, d/dx(f(x) / g(x)) = (f'(x)g(x) - f(x)g'(x)) / g(x)^2


        return new OperatorNode('/', 'divide', [new OperatorNode('-', 'subtract', [new OperatorNode('*', 'multiply', [_derivative(arg0, constNodes), arg1.clone()]), new OperatorNode('*', 'multiply', [arg0.clone(), _derivative(arg1, constNodes)])]), new OperatorNode('^', 'pow', [arg1.clone(), createConstantNode(2)])]);
      }

      if (node.op === '^' && node.isBinary()) {
        var _arg = node.args[0];
        var _arg2 = node.args[1];

        if (constNodes[_arg] !== undefined) {
          // If is secretly constant; 0^f(x) = 1 (in JS), 1^f(x) = 1
          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(_arg) && (isZero(_arg.value) || equal(_arg.value, 1))) {
            return createConstantNode(0);
          } // d/dx(c^f(x)) = c^f(x)*ln(c)*f'(x)


          return new OperatorNode('*', 'multiply', [node, new OperatorNode('*', 'multiply', [new FunctionNode('log', [_arg.clone()]), _derivative(_arg2.clone(), constNodes)])]);
        }

        if (constNodes[_arg2] !== undefined) {
          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(_arg2)) {
            // If is secretly constant; f(x)^0 = 1 -> d/dx(1) = 0
            if (isZero(_arg2.value)) {
              return createConstantNode(0);
            } // Ignore exponent; f(x)^1 = f(x)


            if (equal(_arg2.value, 1)) {
              return _derivative(_arg, constNodes);
            }
          } // Elementary Power Rule, d/dx(f(x)^c) = c*f'(x)*f(x)^(c-1)


          var powMinusOne = new OperatorNode('^', 'pow', [_arg.clone(), new OperatorNode('-', 'subtract', [_arg2, createConstantNode(1)])]);
          return new OperatorNode('*', 'multiply', [_arg2.clone(), new OperatorNode('*', 'multiply', [_derivative(_arg, constNodes), powMinusOne])]);
        } // Functional Power Rule, d/dx(f^g) = f^g*[f'*(g/f) + g'ln(f)]


        return new OperatorNode('*', 'multiply', [new OperatorNode('^', 'pow', [_arg.clone(), _arg2.clone()]), new OperatorNode('+', 'add', [new OperatorNode('*', 'multiply', [_derivative(_arg, constNodes), new OperatorNode('/', 'divide', [_arg2.clone(), _arg.clone()])]), new OperatorNode('*', 'multiply', [_derivative(_arg2, constNodes), new FunctionNode('log', [_arg.clone()])])])]);
      }

      throw new Error('Operator "' + node.op + '" is not supported by derivative, or a wrong number of arguments is passed');
    }
  });
  /**
   * Ensures the number of arguments for a function are correct,
   * and will throw an error otherwise.
   *
   * @param {FunctionNode} node
   */


  function funcArgsCheck(node) {
    // TODO add min, max etc
    if ((node.name === 'log' || node.name === 'nthRoot' || node.name === 'pow') && node.args.length === 2) {
      return;
    } // There should be an incorrect number of arguments if we reach here
    // Change all args to constants to avoid unidentified
    // symbol error when compiling function


    for (var i = 0; i < node.args.length; ++i) {
      node.args[i] = createConstantNode(0);
    }

    node.compile().evaluate();
    throw new Error('Expected TypeError, but none found');
  }
  /**
   * Helper function to create a constant node with a specific type
   * (number, BigNumber, Fraction)
   * @param {number} value
   * @param {string} [valueType]
   * @return {ConstantNode}
   */


  function createConstantNode(value, valueType) {
    return new ConstantNode(numeric(value, valueType || config.number));
  }

  return derivative;
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/rationalize.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/rationalize.js ***!
  \*****************************************************************/
/*! exports provided: createRationalize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRationalize", function() { return createRationalize; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _simplify_simplifyConstant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./simplify/simplifyConstant */ "../node_modules/mathjs/es/function/algebra/simplify/simplifyConstant.js");
/* harmony import */ var _simplify_simplifyCore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./simplify/simplifyCore */ "../node_modules/mathjs/es/function/algebra/simplify/simplifyCore.js");




var name = 'rationalize';
var dependencies = ['config', 'typed', 'equal', 'isZero', 'add', 'subtract', 'multiply', 'divide', 'pow', 'parse', 'simplify', '?bignumber', '?fraction', 'mathWithTransform', 'ConstantNode', 'OperatorNode', 'FunctionNode', 'SymbolNode', 'ParenthesisNode'];
var createRationalize = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var config = _ref.config,
      typed = _ref.typed,
      equal = _ref.equal,
      isZero = _ref.isZero,
      add = _ref.add,
      subtract = _ref.subtract,
      multiply = _ref.multiply,
      divide = _ref.divide,
      pow = _ref.pow,
      parse = _ref.parse,
      simplify = _ref.simplify,
      fraction = _ref.fraction,
      bignumber = _ref.bignumber,
      mathWithTransform = _ref.mathWithTransform,
      ConstantNode = _ref.ConstantNode,
      OperatorNode = _ref.OperatorNode,
      FunctionNode = _ref.FunctionNode,
      SymbolNode = _ref.SymbolNode,
      ParenthesisNode = _ref.ParenthesisNode;
  var simplifyConstant = Object(_simplify_simplifyConstant__WEBPACK_IMPORTED_MODULE_2__["createSimplifyConstant"])({
    typed: typed,
    config: config,
    mathWithTransform: mathWithTransform,
    fraction: fraction,
    bignumber: bignumber,
    ConstantNode: ConstantNode,
    OperatorNode: OperatorNode,
    FunctionNode: FunctionNode,
    SymbolNode: SymbolNode
  });
  var simplifyCore = Object(_simplify_simplifyCore__WEBPACK_IMPORTED_MODULE_3__["createSimplifyCore"])({
    equal: equal,
    isZero: isZero,
    add: add,
    subtract: subtract,
    multiply: multiply,
    divide: divide,
    pow: pow,
    ConstantNode: ConstantNode,
    OperatorNode: OperatorNode,
    FunctionNode: FunctionNode,
    ParenthesisNode: ParenthesisNode
  });
  /**
   * Transform a rationalizable expression in a rational fraction.
   * If rational fraction is one variable polynomial then converts
   * the numerator and denominator in canonical form, with decreasing
   * exponents, returning the coefficients of numerator.
   *
   * Syntax:
   *
   *     rationalize(expr)
   *     rationalize(expr, detailed)
   *     rationalize(expr, scope)
   *     rationalize(expr, scope, detailed)
   *
   * Examples:
   *
   *     math.rationalize('sin(x)+y')
   *                   //  Error: There is an unsolved function call
   *     math.rationalize('2x/y - y/(x+1)')
   *                   // (2*x^2-y^2+2*x)/(x*y+y)
   *     math.rationalize('(2x+1)^6')
   *                   // 64*x^6+192*x^5+240*x^4+160*x^3+60*x^2+12*x+1
   *     math.rationalize('2x/( (2x-1) / (3x+2) ) - 5x/ ( (3x+4) / (2x^2-5) ) + 3')
   *                   // -20*x^4+28*x^3+104*x^2+6*x-12)/(6*x^2+5*x-4)
   *     math.rationalize('x/(1-x)/(x-2)/(x-3)/(x-4) + 2x/ ( (1-2x)/(2-3x) )/ ((3-4x)/(4-5x) )') =
   *                   // (-30*x^7+344*x^6-1506*x^5+3200*x^4-3472*x^3+1846*x^2-381*x)/
   *                   //     (-8*x^6+90*x^5-383*x^4+780*x^3-797*x^2+390*x-72)
   *
   *     math.rationalize('x+x+x+y',{y:1}) // 3*x+1
   *     math.rationalize('x+x+x+y',{})    // 3*x+y
   *
   *     const ret = math.rationalize('x+x+x+y',{},true)
   *                   // ret.expression=3*x+y, ret.variables = ["x","y"]
   *     const ret = math.rationalize('-2+5x^2',{},true)
   *                   // ret.expression=5*x^2-2, ret.variables = ["x"], ret.coefficients=[-2,0,5]
   *
   * See also:
   *
   *     simplify
   *
   * @param  {Node|string} expr    The expression to check if is a polynomial expression
   * @param  {Object|boolean}      optional scope of expression or true for already evaluated rational expression at input
   * @param  {Boolean}  detailed   optional True if return an object, false if return expression node (default)
   *
   * @return {Object | Node}    The rational polynomial of `expr` or na object
   *            {Object}
   *              {Expression Node} expression: node simplified expression
   *              {Expression Node} numerator: simplified numerator of expression
   *              {Expression Node | boolean} denominator: simplified denominator or false (if there is no denominator)
   *              {Array}           variables:  variable names
   *              {Array}           coefficients: coefficients of numerator sorted by increased exponent
   *           {Expression Node}  node simplified expression
   *
   */

  return typed(name, {
    string: function string(expr) {
      return this(parse(expr), {}, false);
    },
    'string, boolean': function stringBoolean(expr, detailed) {
      return this(parse(expr), {}, detailed);
    },
    'string, Object': function stringObject(expr, scope) {
      return this(parse(expr), scope, false);
    },
    'string, Object, boolean': function stringObjectBoolean(expr, scope, detailed) {
      return this(parse(expr), scope, detailed);
    },
    Node: function Node(expr) {
      return this(expr, {}, false);
    },
    'Node, boolean': function NodeBoolean(expr, detailed) {
      return this(expr, {}, detailed);
    },
    'Node, Object': function NodeObject(expr, scope) {
      return this(expr, scope, false);
    },
    'Node, Object, boolean': function NodeObjectBoolean(expr, scope, detailed) {
      var setRules = rulesRationalize(); // Rules for change polynomial in near canonical form

      var polyRet = polynomial(expr, scope, true, setRules.firstRules); // Check if expression is a rationalizable polynomial

      var nVars = polyRet.variables.length;
      expr = polyRet.expression;

      if (nVars >= 1) {
        // If expression in not a constant
        expr = expandPower(expr); // First expand power of polynomials (cannot be made from rules!)

        var sBefore; // Previous expression

        var rules;
        var eDistrDiv = true;
        var redoInic = false;
        expr = simplify(expr, setRules.firstRules, {}, {
          exactFractions: false
        }); // Apply the initial rules, including succ div rules

        var s;

        while (true) {
          // Apply alternately  successive division rules and distr.div.rules
          rules = eDistrDiv ? setRules.distrDivRules : setRules.sucDivRules;
          expr = simplify(expr, rules); // until no more changes

          eDistrDiv = !eDistrDiv; // Swap between Distr.Div and Succ. Div. Rules

          s = expr.toString();

          if (s === sBefore) {
            break; // No changes : end of the loop
          }

          redoInic = true;
          sBefore = s;
        }

        if (redoInic) {
          // Apply first rules again without succ div rules (if there are changes)
          expr = simplify(expr, setRules.firstRulesAgain, {}, {
            exactFractions: false
          });
        }

        expr = simplify(expr, setRules.finalRules, {}, {
          exactFractions: false
        }); // Apply final rules
      } // NVars >= 1


      var coefficients = [];
      var retRationalize = {};

      if (expr.type === 'OperatorNode' && expr.isBinary() && expr.op === '/') {
        // Separate numerator from denominator
        if (nVars === 1) {
          expr.args[0] = polyToCanonical(expr.args[0], coefficients);
          expr.args[1] = polyToCanonical(expr.args[1]);
        }

        if (detailed) {
          retRationalize.numerator = expr.args[0];
          retRationalize.denominator = expr.args[1];
        }
      } else {
        if (nVars === 1) {
          expr = polyToCanonical(expr, coefficients);
        }

        if (detailed) {
          retRationalize.numerator = expr;
          retRationalize.denominator = null;
        }
      } // nVars


      if (!detailed) return expr;
      retRationalize.coefficients = coefficients;
      retRationalize.variables = polyRet.variables;
      retRationalize.expression = expr;
      return retRationalize;
    } // ^^^^^^^ end of rationalize ^^^^^^^^

  }); // end of typed rationalize

  /**
   *  Function to simplify an expression using an optional scope and
   *  return it if the expression is a polynomial expression, i.e.
   *  an expression with one or more variables and the operators
   *  +, -, *, and ^, where the exponent can only be a positive integer.
   *
   * Syntax:
   *
   *     polynomial(expr,scope,extended, rules)
   *
   * @param  {Node | string} expr     The expression to simplify and check if is polynomial expression
   * @param  {object} scope           Optional scope for expression simplification
   * @param  {boolean} extended       Optional. Default is false. When true allows divide operator.
   * @param  {array}  rules           Optional. Default is no rule.
   *
   *
   * @return {Object}
   *            {Object} node:   node simplified expression
   *            {Array}  variables:  variable names
   */

  function polynomial(expr, scope, extended, rules) {
    var variables = [];
    var node = simplify(expr, rules, scope, {
      exactFractions: false
    }); // Resolves any variables and functions with all defined parameters

    extended = !!extended;
    var oper = '+-*' + (extended ? '/' : '');
    recPoly(node);
    var retFunc = {};
    retFunc.expression = node;
    retFunc.variables = variables;
    return retFunc; // -------------------------------------------------------------------------------------------------------

    /**
     *  Function to simplify an expression using an optional scope and
     *  return it if the expression is a polynomial expression, i.e.
     *  an expression with one or more variables and the operators
     *  +, -, *, and ^, where the exponent can only be a positive integer.
     *
     * Syntax:
     *
     *     recPoly(node)
     *
     *
     * @param  {Node} node               The current sub tree expression in recursion
     *
     * @return                           nothing, throw an exception if error
     */

    function recPoly(node) {
      var tp = node.type; // node type

      if (tp === 'FunctionNode') {
        // No function call in polynomial expression
        throw new Error('There is an unsolved function call');
      } else if (tp === 'OperatorNode') {
        if (node.op === '^') {
          // TODO: handle negative exponents like in '1/x^(-2)'
          if (node.args[1].type !== 'ConstantNode' || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(parseFloat(node.args[1].value))) {
            throw new Error('There is a non-integer exponent');
          } else {
            recPoly(node.args[0]);
          }
        } else {
          if (oper.indexOf(node.op) === -1) {
            throw new Error('Operator ' + node.op + ' invalid in polynomial expression');
          }

          for (var i = 0; i < node.args.length; i++) {
            recPoly(node.args[i]);
          }
        } // type of operator

      } else if (tp === 'SymbolNode') {
        var _name = node.name; // variable name

        var pos = variables.indexOf(_name);

        if (pos === -1) {
          // new variable in expression
          variables.push(_name);
        }
      } else if (tp === 'ParenthesisNode') {
        recPoly(node.content);
      } else if (tp !== 'ConstantNode') {
        throw new Error('type ' + tp + ' is not allowed in polynomial expression');
      }
    } // end of recPoly

  } // end of polynomial
  // ---------------------------------------------------------------------------------------

  /**
   * Return a rule set to rationalize an polynomial expression in rationalize
   *
   * Syntax:
   *
   *     rulesRationalize()
   *
   * @return {array}        rule set to rationalize an polynomial expression
   */


  function rulesRationalize() {
    var oldRules = [simplifyCore, // sCore
    {
      l: 'n+n',
      r: '2*n'
    }, {
      l: 'n+-n',
      r: '0'
    }, simplifyConstant, // sConstant
    {
      l: 'n*(n1^-1)',
      r: 'n/n1'
    }, {
      l: 'n*n1^-n2',
      r: 'n/n1^n2'
    }, {
      l: 'n1^-1',
      r: '1/n1'
    }, {
      l: 'n*(n1/n2)',
      r: '(n*n1)/n2'
    }, {
      l: '1*n',
      r: 'n'
    }];
    var rulesFirst = [{
      l: '(-n1)/(-n2)',
      r: 'n1/n2'
    }, // Unary division
    {
      l: '(-n1)*(-n2)',
      r: 'n1*n2'
    }, // Unary multiplication
    {
      l: 'n1--n2',
      r: 'n1+n2'
    }, // '--' elimination
    {
      l: 'n1-n2',
      r: 'n1+(-n2)'
    }, // Subtraction turn into add with unï¿½ry minus
    {
      l: '(n1+n2)*n3',
      r: '(n1*n3 + n2*n3)'
    }, // Distributive 1
    {
      l: 'n1*(n2+n3)',
      r: '(n1*n2+n1*n3)'
    }, // Distributive 2
    {
      l: 'c1*n + c2*n',
      r: '(c1+c2)*n'
    }, // Joining constants
    {
      l: 'c1*n + n',
      r: '(c1+1)*n'
    }, // Joining constants
    {
      l: 'c1*n - c2*n',
      r: '(c1-c2)*n'
    }, // Joining constants
    {
      l: 'c1*n - n',
      r: '(c1-1)*n'
    }, // Joining constants
    {
      l: 'v/c',
      r: '(1/c)*v'
    }, // variable/constant (new!)
    {
      l: 'v/-c',
      r: '-(1/c)*v'
    }, // variable/constant (new!)
    {
      l: '-v*-c',
      r: 'c*v'
    }, // Inversion constant and variable 1
    {
      l: '-v*c',
      r: '-c*v'
    }, // Inversion constant and variable 2
    {
      l: 'v*-c',
      r: '-c*v'
    }, // Inversion constant and variable 3
    {
      l: 'v*c',
      r: 'c*v'
    }, // Inversion constant and variable 4
    {
      l: '-(-n1*n2)',
      r: '(n1*n2)'
    }, // Unary propagation
    {
      l: '-(n1*n2)',
      r: '(-n1*n2)'
    }, // Unary propagation
    {
      l: '-(-n1+n2)',
      r: '(n1-n2)'
    }, // Unary propagation
    {
      l: '-(n1+n2)',
      r: '(-n1-n2)'
    }, // Unary propagation
    {
      l: '(n1^n2)^n3',
      r: '(n1^(n2*n3))'
    }, // Power to Power
    {
      l: '-(-n1/n2)',
      r: '(n1/n2)'
    }, // Division and Unary
    {
      l: '-(n1/n2)',
      r: '(-n1/n2)'
    }]; // Divisao and Unary

    var rulesDistrDiv = [{
      l: '(n1/n2 + n3/n4)',
      r: '((n1*n4 + n3*n2)/(n2*n4))'
    }, // Sum of fractions
    {
      l: '(n1/n2 + n3)',
      r: '((n1 + n3*n2)/n2)'
    }, // Sum fraction with number 1
    {
      l: '(n1 + n2/n3)',
      r: '((n1*n3 + n2)/n3)'
    }]; // Sum fraction with number 1

    var rulesSucDiv = [{
      l: '(n1/(n2/n3))',
      r: '((n1*n3)/n2)'
    }, // Division simplification
    {
      l: '(n1/n2/n3)',
      r: '(n1/(n2*n3))'
    }];
    var setRules = {}; // rules set in 4 steps.
    // All rules => infinite loop
    // setRules.allRules =oldRules.concat(rulesFirst,rulesDistrDiv,rulesSucDiv)

    setRules.firstRules = oldRules.concat(rulesFirst, rulesSucDiv); // First rule set

    setRules.distrDivRules = rulesDistrDiv; // Just distr. div. rules

    setRules.sucDivRules = rulesSucDiv; // Jus succ. div. rules

    setRules.firstRulesAgain = oldRules.concat(rulesFirst); // Last rules set without succ. div.
    // Division simplification
    // Second rule set.
    // There is no aggregate expression with parentesis, but the only variable can be scattered.

    setRules.finalRules = [simplifyCore, // simplify.rules[0]
    {
      l: 'n*-n',
      r: '-n^2'
    }, // Joining multiply with power 1
    {
      l: 'n*n',
      r: 'n^2'
    }, // Joining multiply with power 2
    simplifyConstant, // simplify.rules[14] old 3rd index in oldRules
    {
      l: 'n*-n^n1',
      r: '-n^(n1+1)'
    }, // Joining multiply with power 3
    {
      l: 'n*n^n1',
      r: 'n^(n1+1)'
    }, // Joining multiply with power 4
    {
      l: 'n^n1*-n^n2',
      r: '-n^(n1+n2)'
    }, // Joining multiply with power 5
    {
      l: 'n^n1*n^n2',
      r: 'n^(n1+n2)'
    }, // Joining multiply with power 6
    {
      l: 'n^n1*-n',
      r: '-n^(n1+1)'
    }, // Joining multiply with power 7
    {
      l: 'n^n1*n',
      r: 'n^(n1+1)'
    }, // Joining multiply with power 8
    {
      l: 'n^n1/-n',
      r: '-n^(n1-1)'
    }, // Joining multiply with power 8
    {
      l: 'n^n1/n',
      r: 'n^(n1-1)'
    }, // Joining division with power 1
    {
      l: 'n/-n^n1',
      r: '-n^(1-n1)'
    }, // Joining division with power 2
    {
      l: 'n/n^n1',
      r: 'n^(1-n1)'
    }, // Joining division with power 3
    {
      l: 'n^n1/-n^n2',
      r: 'n^(n1-n2)'
    }, // Joining division with power 4
    {
      l: 'n^n1/n^n2',
      r: 'n^(n1-n2)'
    }, // Joining division with power 5
    {
      l: 'n1+(-n2*n3)',
      r: 'n1-n2*n3'
    }, // Solving useless parenthesis 1
    {
      l: 'v*(-c)',
      r: '-c*v'
    }, // Solving useless unary 2
    {
      l: 'n1+-n2',
      r: 'n1-n2'
    }, // Solving +- together (new!)
    {
      l: 'v*c',
      r: 'c*v'
    }, // inversion constant with variable
    {
      l: '(n1^n2)^n3',
      r: '(n1^(n2*n3))'
    } // Power to Power
    ];
    return setRules;
  } // End rulesRationalize
  // ---------------------------------------------------------------------------------------

  /**
   *  Expand recursively a tree node for handling with expressions with exponents
   *  (it's not for constants, symbols or functions with exponents)
   *  PS: The other parameters are internal for recursion
   *
   * Syntax:
   *
   *     expandPower(node)
   *
   * @param  {Node} node         Current expression node
   * @param  {node} parent       Parent current node inside the recursion
   * @param  (int}               Parent number of chid inside the rercursion
   *
   * @return {node}        node expression with all powers expanded.
   */


  function expandPower(node, parent, indParent) {
    var tp = node.type;
    var internal = arguments.length > 1; // TRUE in internal calls

    if (tp === 'OperatorNode' && node.isBinary()) {
      var does = false;
      var val;

      if (node.op === '^') {
        // First operator: Parenthesis or UnaryMinus
        if ((node.args[0].type === 'ParenthesisNode' || node.args[0].type === 'OperatorNode') && node.args[1].type === 'ConstantNode') {
          // Second operator: Constant
          val = parseFloat(node.args[1].value);
          does = val >= 2 && Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(val);
        }
      }

      if (does) {
        // Exponent >= 2
        // Before:
        //            operator A --> Subtree
        // parent pow
        //            constant
        //
        if (val > 2) {
          // Exponent > 2,
          // AFTER:  (exponent > 2)
          //             operator A --> Subtree
          // parent  *
          //                 deep clone (operator A --> Subtree
          //             pow
          //                 constant - 1
          //
          var nEsqTopo = node.args[0];
          var nDirTopo = new OperatorNode('^', 'pow', [node.args[0].cloneDeep(), new ConstantNode(val - 1)]);
          node = new OperatorNode('*', 'multiply', [nEsqTopo, nDirTopo]);
        } else {
          // Expo = 2 - no power
          // AFTER:  (exponent =  2)
          //             operator A --> Subtree
          // parent   oper
          //            deep clone (operator A --> Subtree)
          //
          node = new OperatorNode('*', 'multiply', [node.args[0], node.args[0].cloneDeep()]);
        }

        if (internal) {
          // Change parent references in internal recursive calls
          if (indParent === 'content') {
            parent.content = node;
          } else {
            parent.args[indParent] = node;
          }
        }
      } // does

    } // binary OperatorNode


    if (tp === 'ParenthesisNode') {
      // Recursion
      expandPower(node.content, node, 'content');
    } else if (tp !== 'ConstantNode' && tp !== 'SymbolNode') {
      for (var i = 0; i < node.args.length; i++) {
        expandPower(node.args[i], node, i);
      }
    }

    if (!internal) {
      // return the root node
      return node;
    }
  } // End expandPower
  // ---------------------------------------------------------------------------------------

  /**
   * Auxilary function for rationalize
   * Convert near canonical polynomial in one variable in a canonical polynomial
   * with one term for each exponent in decreasing order
   *
   * Syntax:
   *
   *     polyToCanonical(node [, coefficients])
   *
   * @param  {Node | string} expr       The near canonical polynomial expression to convert in a a canonical polynomial expression
   *
   *        The string or tree expression needs to be at below syntax, with free spaces:
   *         (  (^(-)? | [+-]? )cte (*)? var (^expo)?  | cte )+
   *       Where 'var' is one variable with any valid name
   *             'cte' are real numeric constants with any value. It can be omitted if equal than 1
   *             'expo' are integers greater than 0. It can be omitted if equal than 1.
   *
   * @param  {array}   coefficients             Optional returns coefficients sorted by increased exponent
   *
   *
   * @return {node}        new node tree with one variable polynomial or string error.
   */


  function polyToCanonical(node, coefficients) {
    if (coefficients === undefined) {
      coefficients = [];
    } // coefficients.


    coefficients[0] = 0; // index is the exponent

    var o = {};
    o.cte = 1;
    o.oper = '+'; // fire: mark with * or ^ when finds * or ^ down tree, reset to "" with + and -.
    //       It is used to deduce the exponent: 1 for *, 0 for "".

    o.fire = '';
    var maxExpo = 0; // maximum exponent

    var varname = ''; // variable name

    recurPol(node, null, o);
    maxExpo = coefficients.length - 1;
    var first = true;
    var no;

    for (var i = maxExpo; i >= 0; i--) {
      if (coefficients[i] === 0) continue;
      var n1 = new ConstantNode(first ? coefficients[i] : Math.abs(coefficients[i]));
      var op = coefficients[i] < 0 ? '-' : '+';

      if (i > 0) {
        // Is not a constant without variable
        var n2 = new SymbolNode(varname);

        if (i > 1) {
          var n3 = new ConstantNode(i);
          n2 = new OperatorNode('^', 'pow', [n2, n3]);
        }

        if (coefficients[i] === -1 && first) {
          n1 = new OperatorNode('-', 'unaryMinus', [n2]);
        } else if (Math.abs(coefficients[i]) === 1) {
          n1 = n2;
        } else {
          n1 = new OperatorNode('*', 'multiply', [n1, n2]);
        }
      }

      if (first) {
        no = n1;
      } else if (op === '+') {
        no = new OperatorNode('+', 'add', [no, n1]);
      } else {
        no = new OperatorNode('-', 'subtract', [no, n1]);
      }

      first = false;
    } // for


    if (first) {
      return new ConstantNode(0);
    } else {
      return no;
    }
    /**
     * Recursive auxilary function inside polyToCanonical for
     * converting expression in canonical form
     *
     * Syntax:
     *
     *     recurPol(node, noPai, obj)
     *
     * @param  {Node} node        The current subpolynomial expression
     * @param  {Node | Null}  noPai   The current parent node
     * @param  {object}    obj        Object with many internal flags
     *
     * @return {}                    No return. If error, throws an exception
     */


    function recurPol(node, noPai, o) {
      var tp = node.type;

      if (tp === 'FunctionNode') {
        // ***** FunctionName *****
        // No function call in polynomial expression
        throw new Error('There is an unsolved function call');
      } else if (tp === 'OperatorNode') {
        // ***** OperatorName *****
        if ('+-*^'.indexOf(node.op) === -1) throw new Error('Operator ' + node.op + ' invalid');

        if (noPai !== null) {
          // -(unary),^  : children of *,+,-
          if ((node.fn === 'unaryMinus' || node.fn === 'pow') && noPai.fn !== 'add' && noPai.fn !== 'subtract' && noPai.fn !== 'multiply') {
            throw new Error('Invalid ' + node.op + ' placing');
          } // -,+,* : children of +,-


          if ((node.fn === 'subtract' || node.fn === 'add' || node.fn === 'multiply') && noPai.fn !== 'add' && noPai.fn !== 'subtract') {
            throw new Error('Invalid ' + node.op + ' placing');
          } // -,+ : first child


          if ((node.fn === 'subtract' || node.fn === 'add' || node.fn === 'unaryMinus') && o.noFil !== 0) {
            throw new Error('Invalid ' + node.op + ' placing');
          }
        } // Has parent
        // Firers: ^,*       Old:   ^,&,-(unary): firers


        if (node.op === '^' || node.op === '*') {
          o.fire = node.op;
        }

        for (var _i = 0; _i < node.args.length; _i++) {
          // +,-: reset fire
          if (node.fn === 'unaryMinus') o.oper = '-';

          if (node.op === '+' || node.fn === 'subtract') {
            o.fire = '';
            o.cte = 1; // default if there is no constant

            o.oper = _i === 0 ? '+' : node.op;
          }

          o.noFil = _i; // number of son

          recurPol(node.args[_i], node, o);
        } // for in children

      } else if (tp === 'SymbolNode') {
        // ***** SymbolName *****
        if (node.name !== varname && varname !== '') {
          throw new Error('There is more than one variable');
        }

        varname = node.name;

        if (noPai === null) {
          coefficients[1] = 1;
          return;
        } // ^: Symbol is First child


        if (noPai.op === '^' && o.noFil !== 0) {
          throw new Error('In power the variable should be the first parameter');
        } // *: Symbol is Second child


        if (noPai.op === '*' && o.noFil !== 1) {
          throw new Error('In multiply the variable should be the second parameter');
        } // Symbol: firers '',* => it means there is no exponent above, so it's 1 (cte * var)


        if (o.fire === '' || o.fire === '*') {
          if (maxExpo < 1) coefficients[1] = 0;
          coefficients[1] += o.cte * (o.oper === '+' ? 1 : -1);
          maxExpo = Math.max(1, maxExpo);
        }
      } else if (tp === 'ConstantNode') {
        var valor = parseFloat(node.value);

        if (noPai === null) {
          coefficients[0] = valor;
          return;
        }

        if (noPai.op === '^') {
          // cte: second  child of power
          if (o.noFil !== 1) throw new Error('Constant cannot be powered');

          if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(valor) || valor <= 0) {
            throw new Error('Non-integer exponent is not allowed');
          }

          for (var _i2 = maxExpo + 1; _i2 < valor; _i2++) {
            coefficients[_i2] = 0;
          }

          if (valor > maxExpo) coefficients[valor] = 0;
          coefficients[valor] += o.cte * (o.oper === '+' ? 1 : -1);
          maxExpo = Math.max(valor, maxExpo);
          return;
        }

        o.cte = valor; // Cte: firer '' => There is no exponent and no multiplication, so the exponent is 0.

        if (o.fire === '') {
          coefficients[0] += o.cte * (o.oper === '+' ? 1 : -1);
        }
      } else {
        throw new Error('Type ' + tp + ' is not allowed');
      }
    } // End of recurPol

  } // End of polyToCanonical

});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/simplify.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/simplify.js ***!
  \**************************************************************/
/*! exports provided: createSimplify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSimplify", function() { return createSimplify; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _simplify_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./simplify/util */ "../node_modules/mathjs/es/function/algebra/simplify/util.js");
/* harmony import */ var _simplify_simplifyCore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./simplify/simplifyCore */ "../node_modules/mathjs/es/function/algebra/simplify/simplifyCore.js");
/* harmony import */ var _simplify_simplifyConstant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./simplify/simplifyConstant */ "../node_modules/mathjs/es/function/algebra/simplify/simplifyConstant.js");
/* harmony import */ var _simplify_resolve__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simplify/resolve */ "../node_modules/mathjs/es/function/algebra/simplify/resolve.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }








var name = 'simplify';
var dependencies = ['config', 'typed', 'parse', 'add', 'subtract', 'multiply', 'divide', 'pow', 'isZero', 'equal', '?fraction', '?bignumber', 'mathWithTransform', 'ConstantNode', 'FunctionNode', 'OperatorNode', 'ParenthesisNode', 'SymbolNode'];
var createSimplify = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var config = _ref.config,
      typed = _ref.typed,
      parse = _ref.parse,
      add = _ref.add,
      subtract = _ref.subtract,
      multiply = _ref.multiply,
      divide = _ref.divide,
      pow = _ref.pow,
      isZero = _ref.isZero,
      equal = _ref.equal,
      fraction = _ref.fraction,
      bignumber = _ref.bignumber,
      mathWithTransform = _ref.mathWithTransform,
      ConstantNode = _ref.ConstantNode,
      FunctionNode = _ref.FunctionNode,
      OperatorNode = _ref.OperatorNode,
      ParenthesisNode = _ref.ParenthesisNode,
      SymbolNode = _ref.SymbolNode;
  var simplifyConstant = Object(_simplify_simplifyConstant__WEBPACK_IMPORTED_MODULE_4__["createSimplifyConstant"])({
    typed: typed,
    config: config,
    mathWithTransform: mathWithTransform,
    fraction: fraction,
    bignumber: bignumber,
    ConstantNode: ConstantNode,
    OperatorNode: OperatorNode,
    FunctionNode: FunctionNode,
    SymbolNode: SymbolNode
  });
  var simplifyCore = Object(_simplify_simplifyCore__WEBPACK_IMPORTED_MODULE_3__["createSimplifyCore"])({
    equal: equal,
    isZero: isZero,
    add: add,
    subtract: subtract,
    multiply: multiply,
    divide: divide,
    pow: pow,
    ConstantNode: ConstantNode,
    OperatorNode: OperatorNode,
    FunctionNode: FunctionNode,
    ParenthesisNode: ParenthesisNode
  });
  var resolve = Object(_simplify_resolve__WEBPACK_IMPORTED_MODULE_5__["createResolve"])({
    parse: parse,
    FunctionNode: FunctionNode,
    OperatorNode: OperatorNode,
    ParenthesisNode: ParenthesisNode
  });

  var _createUtil = Object(_simplify_util__WEBPACK_IMPORTED_MODULE_2__["createUtil"])({
    FunctionNode: FunctionNode,
    OperatorNode: OperatorNode,
    SymbolNode: SymbolNode
  }),
      isCommutative = _createUtil.isCommutative,
      isAssociative = _createUtil.isAssociative,
      flatten = _createUtil.flatten,
      unflattenr = _createUtil.unflattenr,
      unflattenl = _createUtil.unflattenl,
      createMakeNodeFunction = _createUtil.createMakeNodeFunction;
  /**
   * Simplify an expression tree.
   *
   * A list of rules are applied to an expression, repeating over the list until
   * no further changes are made.
   * It's possible to pass a custom set of rules to the function as second
   * argument. A rule can be specified as an object, string, or function:
   *
   *     const rules = [
   *       { l: 'n1*n3 + n2*n3', r: '(n1+n2)*n3' },
   *       'n1*n3 + n2*n3 -> (n1+n2)*n3',
   *       function (node) {
   *         // ... return a new node or return the node unchanged
   *         return node
   *       }
   *     ]
   *
   * String and object rules consist of a left and right pattern. The left is
   * used to match against the expression and the right determines what matches
   * are replaced with. The main difference between a pattern and a normal
   * expression is that variables starting with the following characters are
   * interpreted as wildcards:
   *
   * - 'n' - matches any Node
   * - 'c' - matches any ConstantNode
   * - 'v' - matches any Node that is not a ConstantNode
   *
   * The default list of rules is exposed on the function as `simplify.rules`
   * and can be used as a basis to built a set of custom rules.
   *
   * For more details on the theory, see:
   *
   * - [Strategies for simplifying math expressions (Stackoverflow)](https://stackoverflow.com/questions/7540227/strategies-for-simplifying-math-expressions)
   * - [Symbolic computation - Simplification (Wikipedia)](https://en.wikipedia.org/wiki/Symbolic_computation#Simplification)
   *
   *  An optional `options` argument can be passed as last argument of `simplify`.
   *  There is currently one option available: `exactFractions`, a boolean which
   *  is `true` by default.
   *
   * Syntax:
   *
   *     simplify(expr)
   *     simplify(expr, rules)
   *     simplify(expr, rules)
   *     simplify(expr, rules, scope)
   *     simplify(expr, rules, scope, options)
   *     simplify(expr, scope)
   *     simplify(expr, scope, options)
   *
   * Examples:
   *
   *     math.simplify('2 * 1 * x ^ (2 - 1)')      // Node "2 * x"
   *     math.simplify('2 * 3 * x', {x: 4})        // Node "24"
   *     const f = math.parse('2 * 1 * x ^ (2 - 1)')
   *     math.simplify(f)                          // Node "2 * x"
   *     math.simplify('0.4 * x', {}, {exactFractions: true})  // Node "x * 2 / 5"
   *     math.simplify('0.4 * x', {}, {exactFractions: false}) // Node "0.4 * x"
   *
   * See also:
   *
   *     derivative, parse, evaluate, rationalize
   *
   * @param {Node | string} expr
   *            The expression to be simplified
   * @param {Array<{l:string, r: string} | string | function>} [rules]
   *            Optional list with custom rules
   * @return {Node} Returns the simplified form of `expr`
   */


  var simplify = typed('simplify', {
    string: function string(expr) {
      return this(parse(expr), this.rules, {}, {});
    },
    'string, Object': function stringObject(expr, scope) {
      return this(parse(expr), this.rules, scope, {});
    },
    'string, Object, Object': function stringObjectObject(expr, scope, options) {
      return this(parse(expr), this.rules, scope, options);
    },
    'string, Array': function stringArray(expr, rules) {
      return this(parse(expr), rules, {}, {});
    },
    'string, Array, Object': function stringArrayObject(expr, rules, scope) {
      return this(parse(expr), rules, scope, {});
    },
    'string, Array, Object, Object': function stringArrayObjectObject(expr, rules, scope, options) {
      return this(parse(expr), rules, scope, options);
    },
    'Node, Object': function NodeObject(expr, scope) {
      return this(expr, this.rules, scope, {});
    },
    'Node, Object, Object': function NodeObjectObject(expr, scope, options) {
      return this(expr, this.rules, scope, options);
    },
    Node: function Node(expr) {
      return this(expr, this.rules, {}, {});
    },
    'Node, Array': function NodeArray(expr, rules) {
      return this(expr, rules, {}, {});
    },
    'Node, Array, Object': function NodeArrayObject(expr, rules, scope) {
      return this(expr, rules, scope, {});
    },
    'Node, Array, Object, Object': function NodeArrayObjectObject(expr, rules, scope, options) {
      rules = _buildRules(rules);
      var res = resolve(expr, scope);
      res = removeParens(res);
      var visited = {};
      var str = res.toString({
        parenthesis: 'all'
      });

      while (!visited[str]) {
        visited[str] = true;
        _lastsym = 0; // counter for placeholder symbols

        for (var i = 0; i < rules.length; i++) {
          if (typeof rules[i] === 'function') {
            res = rules[i](res, options);
          } else {
            flatten(res);
            res = applyRule(res, rules[i]);
          }

          unflattenl(res); // using left-heavy binary tree here since custom rule functions may expect it
        }

        str = res.toString({
          parenthesis: 'all'
        });
      }

      return res;
    }
  });
  simplify.simplifyCore = simplifyCore;
  simplify.resolve = resolve;

  function removeParens(node) {
    return node.transform(function (node, path, parent) {
      return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"])(node) ? removeParens(node.content) : node;
    });
  } // All constants that are allowed in rules


  var SUPPORTED_CONSTANTS = {
    "true": true,
    "false": true,
    e: true,
    i: true,
    Infinity: true,
    LN2: true,
    LN10: true,
    LOG2E: true,
    LOG10E: true,
    NaN: true,
    phi: true,
    pi: true,
    SQRT1_2: true,
    SQRT2: true,
    tau: true // null: false,
    // undefined: false,
    // version: false,

  }; // Array of strings, used to build the ruleSet.
  // Each l (left side) and r (right side) are parsed by
  // the expression parser into a node tree.
  // Left hand sides are matched to subtrees within the
  // expression to be parsed and replaced with the right
  // hand side.
  // TODO: Add support for constraints on constants (either in the form of a '=' expression or a callback [callback allows things like comparing symbols alphabetically])
  // To evaluate lhs constants for rhs constants, use: { l: 'c1+c2', r: 'c3', evaluate: 'c3 = c1 + c2' }. Multiple assignments are separated by ';' in block format.
  // It is possible to get into an infinite loop with conflicting rules

  simplify.rules = [simplifyCore, // { l: 'n+0', r: 'n' },     // simplifyCore
  // { l: 'n^0', r: '1' },     // simplifyCore
  // { l: '0*n', r: '0' },     // simplifyCore
  // { l: 'n/n', r: '1'},      // simplifyCore
  // { l: 'n^1', r: 'n' },     // simplifyCore
  // { l: '+n1', r:'n1' },     // simplifyCore
  // { l: 'n--n1', r:'n+n1' }, // simplifyCore
  {
    l: 'log(e)',
    r: '1'
  }, // temporary rules
  {
    l: 'n-n1',
    r: 'n+-n1'
  }, // temporarily replace 'subtract' so we can further flatten the 'add' operator
  {
    l: '-(c*v)',
    r: '(-c) * v'
  }, // make non-constant terms positive
  {
    l: '-v',
    r: '(-1) * v'
  }, {
    l: 'n/n1^n2',
    r: 'n*n1^-n2'
  }, // temporarily replace 'divide' so we can further flatten the 'multiply' operator
  {
    l: 'n/n1',
    r: 'n*n1^-1'
  }, // expand nested exponentiation
  {
    l: '(n ^ n1) ^ n2',
    r: 'n ^ (n1 * n2)'
  }, // collect like factors
  {
    l: 'n*n',
    r: 'n^2'
  }, {
    l: 'n * n^n1',
    r: 'n^(n1+1)'
  }, {
    l: 'n^n1 * n^n2',
    r: 'n^(n1+n2)'
  }, // collect like terms
  {
    l: 'n+n',
    r: '2*n'
  }, {
    l: 'n+-n',
    r: '0'
  }, {
    l: 'n1*n2 + n2',
    r: '(n1+1)*n2'
  }, {
    l: 'n1*n3 + n2*n3',
    r: '(n1+n2)*n3'
  }, // remove parenthesis in the case of negating a quantitiy
  {
    l: 'n1 + -1 * (n2 + n3)',
    r: 'n1 + -1 * n2 + -1 * n3'
  }, simplifyConstant, {
    l: '(-n)*n1',
    r: '-(n*n1)'
  }, // make factors positive (and undo 'make non-constant terms positive')
  // ordering of constants
  {
    l: 'c+v',
    r: 'v+c',
    context: {
      add: {
        commutative: false
      }
    }
  }, {
    l: 'v*c',
    r: 'c*v',
    context: {
      multiply: {
        commutative: false
      }
    }
  }, // undo temporary rules
  // { l: '(-1) * n', r: '-n' }, // #811 added test which proved this is redundant
  {
    l: 'n+-n1',
    r: 'n-n1'
  }, // undo replace 'subtract'
  {
    l: 'n*(n1^-1)',
    r: 'n/n1'
  }, // undo replace 'divide'
  {
    l: 'n*n1^-n2',
    r: 'n/n1^n2'
  }, {
    l: 'n1^-1',
    r: '1/n1'
  }, {
    l: 'n*(n1/n2)',
    r: '(n*n1)/n2'
  }, // '*' before '/'
  {
    l: 'n-(n1+n2)',
    r: 'n-n1-n2'
  }, // '-' before '+'
  // { l: '(n1/n2)/n3', r: 'n1/(n2*n3)' },
  // { l: '(n*n1)/(n*n2)', r: 'n1/n2' },
  {
    l: '1*n',
    r: 'n'
  }, // this pattern can be produced by simplifyConstant
  {
    l: 'n1/(n2/n3)',
    r: '(n1*n3)/n2'
  }];
  /**
   * Parse the string array of rules into nodes
   *
   * Example syntax for rules:
   *
   * Position constants to the left in a product:
   * { l: 'n1 * c1', r: 'c1 * n1' }
   * n1 is any Node, and c1 is a ConstantNode.
   *
   * Apply difference of squares formula:
   * { l: '(n1 - n2) * (n1 + n2)', r: 'n1^2 - n2^2' }
   * n1, n2 mean any Node.
   *
   * Short hand notation:
   * 'n1 * c1 -> c1 * n1'
   */

  function _buildRules(rules) {
    // Array of rules to be used to simplify expressions
    var ruleSet = [];

    for (var i = 0; i < rules.length; i++) {
      var rule = rules[i];
      var newRule = void 0;

      var ruleType = _typeof(rule);

      switch (ruleType) {
        case 'string':
          {
            var lr = rule.split('->');

            if (lr.length === 2) {
              rule = {
                l: lr[0],
                r: lr[1]
              };
            } else {
              throw SyntaxError('Could not parse rule: ' + rule);
            }
          }

        /* falls through */

        case 'object':
          newRule = {
            l: removeParens(parse(rule.l)),
            r: removeParens(parse(rule.r))
          };

          if (rule.context) {
            newRule.evaluate = rule.context;
          }

          if (rule.evaluate) {
            newRule.evaluate = parse(rule.evaluate);
          }

          if (isAssociative(newRule.l)) {
            var makeNode = createMakeNodeFunction(newRule.l);

            var expandsym = _getExpandPlaceholderSymbol();

            newRule.expanded = {};
            newRule.expanded.l = makeNode([newRule.l.clone(), expandsym]); // Push the expandsym into the deepest possible branch.
            // This helps to match the newRule against nodes returned from getSplits() later on.

            flatten(newRule.expanded.l);
            unflattenr(newRule.expanded.l);
            newRule.expanded.r = makeNode([newRule.r, expandsym]);
          }

          break;

        case 'function':
          newRule = rule;
          break;

        default:
          throw TypeError('Unsupported type of rule: ' + ruleType);
      } // console.log('Adding rule: ' + rules[i])
      // console.log(newRule)


      ruleSet.push(newRule);
    }

    return ruleSet;
  }

  var _lastsym = 0;

  function _getExpandPlaceholderSymbol() {
    return new SymbolNode('_p' + _lastsym++);
  }
  /**
   * Returns a simplfied form of node, or the original node if no simplification was possible.
   *
   * @param  {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} node
   * @return {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} The simplified form of `expr`, or the original node if no simplification was possible.
   */


  var applyRule = typed('applyRule', {
    'Node, Object': function NodeObject(node, rule) {
      // console.log('Entering applyRule(' + node.toString() + ')')
      // Do not clone node unless we find a match
      var res = node; // First replace our child nodes with their simplified versions
      // If a child could not be simplified, the assignments will have
      // no effect since the node is returned unchanged

      if (res instanceof OperatorNode || res instanceof FunctionNode) {
        if (res.args) {
          for (var i = 0; i < res.args.length; i++) {
            res.args[i] = applyRule(res.args[i], rule);
          }
        }
      } else if (res instanceof ParenthesisNode) {
        if (res.content) {
          res.content = applyRule(res.content, rule);
        }
      } // Try to match a rule against this node


      var repl = rule.r;

      var matches = _ruleMatch(rule.l, res)[0]; // If the rule is associative operator, we can try matching it while allowing additional terms.
      // This allows us to match rules like 'n+n' to the expression '(1+x)+x' or even 'x+1+x' if the operator is commutative.


      if (!matches && rule.expanded) {
        repl = rule.expanded.r;
        matches = _ruleMatch(rule.expanded.l, res)[0];
      }

      if (matches) {
        // const before = res.toString({parenthesis: 'all'})
        // Create a new node by cloning the rhs of the matched rule
        // we keep any implicit multiplication state if relevant
        var implicit = res.implicit;
        res = repl.clone();

        if (implicit && 'implicit' in repl) {
          res.implicit = true;
        } // Replace placeholders with their respective nodes without traversing deeper into the replaced nodes


        res = res.transform(function (node) {
          if (node.isSymbolNode && Object(_utils_object__WEBPACK_IMPORTED_MODULE_6__["hasOwnProperty"])(matches.placeholders, node.name)) {
            return matches.placeholders[node.name].clone();
          } else {
            return node;
          }
        }); // const after = res.toString({parenthesis: 'all'})
        // console.log('Simplified ' + before + ' to ' + after)
      }

      return res;
    }
  });
  /**
   * Get (binary) combinations of a flattened binary node
   * e.g. +(node1, node2, node3) -> [
   *        +(node1,  +(node2, node3)),
   *        +(node2,  +(node1, node3)),
   *        +(node3,  +(node1, node2))]
   *
   */

  function getSplits(node, context) {
    var res = [];
    var right, rightArgs;
    var makeNode = createMakeNodeFunction(node);

    if (isCommutative(node, context)) {
      for (var i = 0; i < node.args.length; i++) {
        rightArgs = node.args.slice(0);
        rightArgs.splice(i, 1);
        right = rightArgs.length === 1 ? rightArgs[0] : makeNode(rightArgs);
        res.push(makeNode([node.args[i], right]));
      }
    } else {
      rightArgs = node.args.slice(1);
      right = rightArgs.length === 1 ? rightArgs[0] : makeNode(rightArgs);
      res.push(makeNode([node.args[0], right]));
    }

    return res;
  }
  /**
   * Returns the set union of two match-placeholders or null if there is a conflict.
   */


  function mergeMatch(match1, match2) {
    var res = {
      placeholders: {}
    }; // Some matches may not have placeholders; this is OK

    if (!match1.placeholders && !match2.placeholders) {
      return res;
    } else if (!match1.placeholders) {
      return match2;
    } else if (!match2.placeholders) {
      return match1;
    } // Placeholders with the same key must match exactly


    for (var key in match1.placeholders) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_6__["hasOwnProperty"])(match1.placeholders, key)) {
        res.placeholders[key] = match1.placeholders[key];

        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_6__["hasOwnProperty"])(match2.placeholders, key)) {
          if (!_exactMatch(match1.placeholders[key], match2.placeholders[key])) {
            return null;
          }
        }
      }
    }

    for (var _key in match2.placeholders) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_6__["hasOwnProperty"])(match2.placeholders, _key)) {
        res.placeholders[_key] = match2.placeholders[_key];
      }
    }

    return res;
  }
  /**
   * Combine two lists of matches by applying mergeMatch to the cartesian product of two lists of matches.
   * Each list represents matches found in one child of a node.
   */


  function combineChildMatches(list1, list2) {
    var res = [];

    if (list1.length === 0 || list2.length === 0) {
      return res;
    }

    var merged;

    for (var i1 = 0; i1 < list1.length; i1++) {
      for (var i2 = 0; i2 < list2.length; i2++) {
        merged = mergeMatch(list1[i1], list2[i2]);

        if (merged) {
          res.push(merged);
        }
      }
    }

    return res;
  }
  /**
   * Combine multiple lists of matches by applying mergeMatch to the cartesian product of two lists of matches.
   * Each list represents matches found in one child of a node.
   * Returns a list of unique matches.
   */


  function mergeChildMatches(childMatches) {
    if (childMatches.length === 0) {
      return childMatches;
    }

    var sets = childMatches.reduce(combineChildMatches);
    var uniqueSets = [];
    var unique = {};

    for (var i = 0; i < sets.length; i++) {
      var s = JSON.stringify(sets[i]);

      if (!unique[s]) {
        unique[s] = true;
        uniqueSets.push(sets[i]);
      }
    }

    return uniqueSets;
  }
  /**
   * Determines whether node matches rule.
   *
   * @param {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} rule
   * @param {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} node
   * @return {Object} Information about the match, if it exists.
   */


  function _ruleMatch(rule, node, isSplit) {
    //    console.log('Entering _ruleMatch(' + JSON.stringify(rule) + ', ' + JSON.stringify(node) + ')')
    //    console.log('rule = ' + rule)
    //    console.log('node = ' + node)
    //    console.log('Entering _ruleMatch(' + rule.toString() + ', ' + node.toString() + ')')
    var res = [{
      placeholders: {}
    }];

    if (rule instanceof OperatorNode && node instanceof OperatorNode || rule instanceof FunctionNode && node instanceof FunctionNode) {
      // If the rule is an OperatorNode or a FunctionNode, then node must match exactly
      if (rule instanceof OperatorNode) {
        if (rule.op !== node.op || rule.fn !== node.fn) {
          return [];
        }
      } else if (rule instanceof FunctionNode) {
        if (rule.name !== node.name) {
          return [];
        }
      } // rule and node match. Search the children of rule and node.


      if (node.args.length === 1 && rule.args.length === 1 || !isAssociative(node) || isSplit) {
        // Expect non-associative operators to match exactly
        var childMatches = [];

        for (var i = 0; i < rule.args.length; i++) {
          var childMatch = _ruleMatch(rule.args[i], node.args[i]);

          if (childMatch.length === 0) {
            // Child did not match, so stop searching immediately
            return [];
          } // The child matched, so add the information returned from the child to our result


          childMatches.push(childMatch);
        }

        res = mergeChildMatches(childMatches);
      } else if (node.args.length >= 2 && rule.args.length === 2) {
        // node is flattened, rule is not
        // Associative operators/functions can be split in different ways so we check if the rule matches each
        // them and return their union.
        var splits = getSplits(node, rule.context);
        var splitMatches = [];

        for (var _i = 0; _i < splits.length; _i++) {
          var matchSet = _ruleMatch(rule, splits[_i], true); // recursing at the same tree depth here


          splitMatches = splitMatches.concat(matchSet);
        }

        return splitMatches;
      } else if (rule.args.length > 2) {
        throw Error('Unexpected non-binary associative function: ' + rule.toString());
      } else {
        // Incorrect number of arguments in rule and node, so no match
        return [];
      }
    } else if (rule instanceof SymbolNode) {
      // If the rule is a SymbolNode, then it carries a special meaning
      // according to the first character of the symbol node name.
      // c.* matches a ConstantNode
      // n.* matches any node
      if (rule.name.length === 0) {
        throw new Error('Symbol in rule has 0 length...!?');
      }

      if (SUPPORTED_CONSTANTS[rule.name]) {
        // built-in constant must match exactly
        if (rule.name !== node.name) {
          return [];
        }
      } else if (rule.name[0] === 'n' || rule.name.substring(0, 2) === '_p') {
        // rule matches _anything_, so assign this node to the rule.name placeholder
        // Assign node to the rule.name placeholder.
        // Our parent will check for matches among placeholders.
        res[0].placeholders[rule.name] = node;
      } else if (rule.name[0] === 'v') {
        // rule matches any variable thing (not a ConstantNode)
        if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(node)) {
          res[0].placeholders[rule.name] = node;
        } else {
          // Mis-match: rule was expecting something other than a ConstantNode
          return [];
        }
      } else if (rule.name[0] === 'c') {
        // rule matches any ConstantNode
        if (node instanceof ConstantNode) {
          res[0].placeholders[rule.name] = node;
        } else {
          // Mis-match: rule was expecting a ConstantNode
          return [];
        }
      } else {
        throw new Error('Invalid symbol in rule: ' + rule.name);
      }
    } else if (rule instanceof ConstantNode) {
      // Literal constant must match exactly
      if (!equal(rule.value, node.value)) {
        return [];
      }
    } else {
      // Some other node was encountered which we aren't prepared for, so no match
      return [];
    } // It's a match!
    // console.log('_ruleMatch(' + rule.toString() + ', ' + node.toString() + ') found a match')


    return res;
  }
  /**
   * Determines whether p and q (and all their children nodes) are identical.
   *
   * @param {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} p
   * @param {ConstantNode | SymbolNode | ParenthesisNode | FunctionNode | OperatorNode} q
   * @return {Object} Information about the match, if it exists.
   */


  function _exactMatch(p, q) {
    if (p instanceof ConstantNode && q instanceof ConstantNode) {
      if (!equal(p.value, q.value)) {
        return false;
      }
    } else if (p instanceof SymbolNode && q instanceof SymbolNode) {
      if (p.name !== q.name) {
        return false;
      }
    } else if (p instanceof OperatorNode && q instanceof OperatorNode || p instanceof FunctionNode && q instanceof FunctionNode) {
      if (p instanceof OperatorNode) {
        if (p.op !== q.op || p.fn !== q.fn) {
          return false;
        }
      } else if (p instanceof FunctionNode) {
        if (p.name !== q.name) {
          return false;
        }
      }

      if (p.args.length !== q.args.length) {
        return false;
      }

      for (var i = 0; i < p.args.length; i++) {
        if (!_exactMatch(p.args[i], q.args[i])) {
          return false;
        }
      }
    } else {
      return false;
    }

    return true;
  }

  return simplify;
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/simplify/resolve.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/simplify/resolve.js ***!
  \**********************************************************************/
/*! exports provided: createResolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createResolve", function() { return createResolve; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'resolve';
var dependencies = ['parse', 'FunctionNode', 'OperatorNode', 'ParenthesisNode'];
var createResolve = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var parse = _ref.parse,
      FunctionNode = _ref.FunctionNode,
      OperatorNode = _ref.OperatorNode,
      ParenthesisNode = _ref.ParenthesisNode;

  /**
   * resolve(expr, scope) replaces variable nodes with their scoped values
   *
   * Syntax:
   *
   *     simplify.resolve(expr, scope)
   *
   * Examples:
   *
   *     math.simplify.resolve('x + y', {x:1, y:2})           // Node {1 + 2}
   *     math.simplify.resolve(math.parse('x+y'), {x:1, y:2}) // Node {1 + 2}
   *     math.simplify('x+y', {x:2, y:'x+x'}).toString()      // "6"
   *
   * @param {Node} node
   *     The expression tree to be simplified
   * @param {Object} scope with variables to be resolved
   */
  function resolve(node, scope) {
    if (!scope) {
      return node;
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(node)) {
      var value = scope[node.name];

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(value)) {
        return resolve(value, scope);
      } else if (typeof value === 'number') {
        return parse(String(value));
      }
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(node)) {
      var args = node.args.map(function (arg) {
        return resolve(arg, scope);
      });
      return new OperatorNode(node.op, node.fn, args, node.implicit);
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"])(node)) {
      return new ParenthesisNode(resolve(node.content, scope));
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionNode"])(node)) {
      var _args = node.args.map(function (arg) {
        return resolve(arg, scope);
      });

      return new FunctionNode(node.name, _args);
    }

    return node;
  }

  return resolve;
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/simplify/simplifyConstant.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/simplify/simplifyConstant.js ***!
  \*******************************************************************************/
/*! exports provided: createSimplifyConstant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSimplifyConstant", function() { return createSimplifyConstant; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "../node_modules/mathjs/es/function/algebra/simplify/util.js");
/* harmony import */ var _utils_noop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/noop */ "../node_modules/mathjs/es/utils/noop.js");
// TODO this could be improved by simplifying seperated constants under associative and commutative operators




var name = 'simplifyConstant';
var dependencies = ['typed', 'config', 'mathWithTransform', '?fraction', '?bignumber', 'ConstantNode', 'OperatorNode', 'FunctionNode', 'SymbolNode'];
var createSimplifyConstant = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      mathWithTransform = _ref.mathWithTransform,
      fraction = _ref.fraction,
      bignumber = _ref.bignumber,
      ConstantNode = _ref.ConstantNode,
      OperatorNode = _ref.OperatorNode,
      FunctionNode = _ref.FunctionNode,
      SymbolNode = _ref.SymbolNode;

  var _createUtil = Object(_util__WEBPACK_IMPORTED_MODULE_2__["createUtil"])({
    FunctionNode: FunctionNode,
    OperatorNode: OperatorNode,
    SymbolNode: SymbolNode
  }),
      isCommutative = _createUtil.isCommutative,
      isAssociative = _createUtil.isAssociative,
      allChildren = _createUtil.allChildren,
      createMakeNodeFunction = _createUtil.createMakeNodeFunction;

  function simplifyConstant(expr, options) {
    var res = foldFraction(expr, options);
    return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(res) ? res : _toNode(res);
  }

  function _eval(fnname, args, options) {
    try {
      return _toNumber(mathWithTransform[fnname].apply(null, args), options);
    } catch (ignore) {
      // sometimes the implicit type conversion causes the evaluation to fail, so we'll try again after removing Fractions
      args = args.map(function (x) {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFraction"])(x)) {
          return x.valueOf();
        }

        return x;
      });
      return _toNumber(mathWithTransform[fnname].apply(null, args), options);
    }
  }

  var _toNode = typed({
    Fraction: _fractionToNode,
    number: function number(n) {
      if (n < 0) {
        return unaryMinusNode(new ConstantNode(-n));
      }

      return new ConstantNode(n);
    },
    BigNumber: function BigNumber(n) {
      if (n < 0) {
        return unaryMinusNode(new ConstantNode(-n));
      }

      return new ConstantNode(n); // old parameters: (n.toString(), 'number')
    },
    Complex: function Complex(s) {
      throw new Error('Cannot convert Complex number to Node');
    }
  }); // convert a number to a fraction only if it can be expressed exactly


  function _exactFraction(n, options) {
    var exactFractions = options && options.exactFractions !== false;

    if (exactFractions && isFinite(n) && fraction) {
      var f = fraction(n);

      if (f.valueOf() === n) {
        return f;
      }
    }

    return n;
  } // Convert numbers to a preferred number type in preference order: Fraction, number, Complex
  // BigNumbers are left alone


  var _toNumber = typed({
    'string, Object': function stringObject(s, options) {
      if (config.number === 'BigNumber') {
        if (bignumber === undefined) {
          Object(_utils_noop__WEBPACK_IMPORTED_MODULE_3__["noBignumber"])();
        }

        return bignumber(s);
      } else if (config.number === 'Fraction') {
        if (fraction === undefined) {
          Object(_utils_noop__WEBPACK_IMPORTED_MODULE_3__["noFraction"])();
        }

        return fraction(s);
      } else {
        var n = parseFloat(s);
        return _exactFraction(n, options);
      }
    },
    'Fraction, Object': function FractionObject(s, options) {
      return s;
    },
    // we don't need options here
    'BigNumber, Object': function BigNumberObject(s, options) {
      return s;
    },
    // we don't need options here
    'number, Object': function numberObject(s, options) {
      return _exactFraction(s, options);
    },
    'Complex, Object': function ComplexObject(s, options) {
      if (s.im !== 0) {
        return s;
      }

      return _exactFraction(s.re, options);
    }
  });

  function unaryMinusNode(n) {
    return new OperatorNode('-', 'unaryMinus', [n]);
  }

  function _fractionToNode(f) {
    var n;
    var vn = f.s * f.n;

    if (vn < 0) {
      n = new OperatorNode('-', 'unaryMinus', [new ConstantNode(-vn)]);
    } else {
      n = new ConstantNode(vn);
    }

    if (f.d === 1) {
      return n;
    }

    return new OperatorNode('/', 'divide', [n, new ConstantNode(f.d)]);
  }
  /*
   * Create a binary tree from a list of Fractions and Nodes.
   * Tries to fold Fractions by evaluating them until the first Node in the list is hit, so
   * `args` should be sorted to have the Fractions at the start (if the operator is commutative).
   * @param args - list of Fractions and Nodes
   * @param fn - evaluator for the binary operation evaluator that accepts two Fractions
   * @param makeNode - creates a binary OperatorNode/FunctionNode from a list of child Nodes
   * if args.length is 1, returns args[0]
   * @return - Either a Node representing a binary expression or Fraction
   */


  function foldOp(fn, args, makeNode, options) {
    return args.reduce(function (a, b) {
      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(a) && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(b)) {
        try {
          return _eval(fn, [a, b], options);
        } catch (ignoreandcontinue) {}

        a = _toNode(a);
        b = _toNode(b);
      } else if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(a)) {
        a = _toNode(a);
      } else if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(b)) {
        b = _toNode(b);
      }

      return makeNode([a, b]);
    });
  } // destroys the original node and returns a folded one


  function foldFraction(node, options) {
    switch (node.type) {
      case 'SymbolNode':
        return node;

      case 'ConstantNode':
        if (typeof node.value === 'number' || !isNaN(node.value)) {
          return _toNumber(node.value, options);
        }

        return node;

      case 'FunctionNode':
        if (mathWithTransform[node.name] && mathWithTransform[node.name].rawArgs) {
          return node;
        }

        {
          // Process operators as OperatorNode
          var operatorFunctions = ['add', 'multiply'];

          if (operatorFunctions.indexOf(node.name) === -1) {
            var args = node.args.map(function (arg) {
              return foldFraction(arg, options);
            }); // If all args are numbers

            if (!args.some(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])) {
              try {
                return _eval(node.name, args, options);
              } catch (ignoreandcontine) {}
            } // Convert all args to nodes and construct a symbolic function call


            args = args.map(function (arg) {
              return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(arg) ? arg : _toNode(arg);
            });
            return new FunctionNode(node.name, args);
          } else {// treat as operator
          }
        }

      /* falls through */

      case 'OperatorNode':
        {
          var fn = node.fn.toString();

          var _args;

          var res;
          var makeNode = createMakeNodeFunction(node);

          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(node) && node.isUnary()) {
            _args = [foldFraction(node.args[0], options)];

            if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(_args[0])) {
              res = _eval(fn, _args, options);
            } else {
              res = makeNode(_args);
            }
          } else if (isAssociative(node)) {
            _args = allChildren(node);
            _args = _args.map(function (arg) {
              return foldFraction(arg, options);
            });

            if (isCommutative(fn)) {
              // commutative binary operator
              var consts = [];
              var vars = [];

              for (var i = 0; i < _args.length; i++) {
                if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNode"])(_args[i])) {
                  consts.push(_args[i]);
                } else {
                  vars.push(_args[i]);
                }
              }

              if (consts.length > 1) {
                res = foldOp(fn, consts, makeNode, options);
                vars.unshift(res);
                res = foldOp(fn, vars, makeNode, options);
              } else {
                // we won't change the children order since it's not neccessary
                res = foldOp(fn, _args, makeNode, options);
              }
            } else {
              // non-commutative binary operator
              res = foldOp(fn, _args, makeNode, options);
            }
          } else {
            // non-associative binary operator
            _args = node.args.map(function (arg) {
              return foldFraction(arg, options);
            });
            res = foldOp(fn, _args, makeNode, options);
          }

          return res;
        }

      case 'ParenthesisNode':
        // remove the uneccessary parenthesis
        return foldFraction(node.content, options);

      case 'AccessorNode':
      /* falls through */

      case 'ArrayNode':
      /* falls through */

      case 'AssignmentNode':
      /* falls through */

      case 'BlockNode':
      /* falls through */

      case 'FunctionAssignmentNode':
      /* falls through */

      case 'IndexNode':
      /* falls through */

      case 'ObjectNode':
      /* falls through */

      case 'RangeNode':
      /* falls through */

      case 'ConditionalNode':
      /* falls through */

      default:
        throw new Error("Unimplemented node type in simplifyConstant: ".concat(node.type));
    }
  }

  return simplifyConstant;
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/simplify/simplifyCore.js":
/*!***************************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/simplify/simplifyCore.js ***!
  \***************************************************************************/
/*! exports provided: createSimplifyCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSimplifyCore", function() { return createSimplifyCore; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'simplifyCore';
var dependencies = ['equal', 'isZero', 'add', 'subtract', 'multiply', 'divide', 'pow', 'ConstantNode', 'OperatorNode', 'FunctionNode', 'ParenthesisNode'];
var createSimplifyCore = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var equal = _ref.equal,
      isZero = _ref.isZero,
      add = _ref.add,
      subtract = _ref.subtract,
      multiply = _ref.multiply,
      divide = _ref.divide,
      pow = _ref.pow,
      ConstantNode = _ref.ConstantNode,
      OperatorNode = _ref.OperatorNode,
      FunctionNode = _ref.FunctionNode,
      ParenthesisNode = _ref.ParenthesisNode;
  var node0 = new ConstantNode(0);
  var node1 = new ConstantNode(1);
  /**
   * simplifyCore() performs single pass simplification suitable for
   * applications requiring ultimate performance. In contrast, simplify()
   * extends simplifyCore() with additional passes to provide deeper
   * simplification.
   *
   * Syntax:
   *
   *     simplify.simplifyCore(expr)
   *
   * Examples:
   *
   *     const f = math.parse('2 * 1 * x ^ (2 - 1)')
   *     math.simplify.simpifyCore(f)                          // Node {2 * x}
   *     math.simplify('2 * 1 * x ^ (2 - 1)', [math.simplify.simpifyCore]) // Node {2 * x}
   *
   * See also:
   *
   *     derivative
   *
   * @param {Node} node
   *     The expression to be simplified
   */

  function simplifyCore(node) {
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(node) && node.isUnary()) {
      var a0 = simplifyCore(node.args[0]);

      if (node.op === '+') {
        // unary plus
        return a0;
      }

      if (node.op === '-') {
        // unary minus
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(a0)) {
          if (a0.isUnary() && a0.op === '-') {
            return a0.args[0];
          } else if (a0.isBinary() && a0.fn === 'subtract') {
            return new OperatorNode('-', 'subtract', [a0.args[1], a0.args[0]]);
          }
        }

        return new OperatorNode(node.op, node.fn, [a0]);
      }
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(node) && node.isBinary()) {
      var _a = simplifyCore(node.args[0]);

      var a1 = simplifyCore(node.args[1]);

      if (node.op === '+') {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(_a)) {
          if (isZero(_a.value)) {
            return a1;
          } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1)) {
            return new ConstantNode(add(_a.value, a1.value));
          }
        }

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1) && isZero(a1.value)) {
          return _a;
        }

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(a1) && a1.isUnary() && a1.op === '-') {
          return new OperatorNode('-', 'subtract', [_a, a1.args[0]]);
        }

        return new OperatorNode(node.op, node.fn, a1 ? [_a, a1] : [_a]);
      } else if (node.op === '-') {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(_a) && a1) {
          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1)) {
            return new ConstantNode(subtract(_a.value, a1.value));
          } else if (isZero(_a.value)) {
            return new OperatorNode('-', 'unaryMinus', [a1]);
          }
        } // if (node.fn === "subtract" && node.args.length === 2) {


        if (node.fn === 'subtract') {
          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1) && isZero(a1.value)) {
            return _a;
          }

          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(a1) && a1.isUnary() && a1.op === '-') {
            return simplifyCore(new OperatorNode('+', 'add', [_a, a1.args[0]]));
          }

          return new OperatorNode(node.op, node.fn, [_a, a1]);
        }
      } else if (node.op === '*') {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(_a)) {
          if (isZero(_a.value)) {
            return node0;
          } else if (equal(_a.value, 1)) {
            return a1;
          } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1)) {
            return new ConstantNode(multiply(_a.value, a1.value));
          }
        }

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1)) {
          if (isZero(a1.value)) {
            return node0;
          } else if (equal(a1.value, 1)) {
            return _a;
          } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(_a) && _a.isBinary() && _a.op === node.op) {
            var a00 = _a.args[0];

            if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a00)) {
              var a00a1 = new ConstantNode(multiply(a00.value, a1.value));
              return new OperatorNode(node.op, node.fn, [a00a1, _a.args[1]], node.implicit); // constants on left
            }
          }

          return new OperatorNode(node.op, node.fn, [a1, _a], node.implicit); // constants on left
        }

        return new OperatorNode(node.op, node.fn, [_a, a1], node.implicit);
      } else if (node.op === '/') {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(_a)) {
          if (isZero(_a.value)) {
            return node0;
          } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1) && (equal(a1.value, 1) || equal(a1.value, 2) || equal(a1.value, 4))) {
            return new ConstantNode(divide(_a.value, a1.value));
          }
        }

        return new OperatorNode(node.op, node.fn, [_a, a1]);
      } else if (node.op === '^') {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a1)) {
          if (isZero(a1.value)) {
            return node1;
          } else if (equal(a1.value, 1)) {
            return _a;
          } else {
            if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(_a)) {
              // fold constant
              return new ConstantNode(pow(_a.value, a1.value));
            } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(_a) && _a.isBinary() && _a.op === '^') {
              var a01 = _a.args[1];

              if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(a01)) {
                return new OperatorNode(node.op, node.fn, [_a.args[0], new ConstantNode(multiply(a01.value, a1.value))]);
              }
            }
          }
        }

        return new OperatorNode(node.op, node.fn, [_a, a1]);
      }
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"])(node)) {
      var c = simplifyCore(node.content);

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"])(c) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"])(c) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"])(c)) {
        return c;
      }

      return new ParenthesisNode(c);
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isFunctionNode"])(node)) {
      var args = node.args.map(simplifyCore).map(function (arg) {
        return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"])(arg) ? arg.content : arg;
      });
      return new FunctionNode(simplifyCore(node.fn), args);
    } else {// cannot simplify
    }

    return node;
  }

  return simplifyCore;
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/simplify/util.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/simplify/util.js ***!
  \*******************************************************************/
/*! exports provided: createUtil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUtil", function() { return createUtil; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/object */ "../node_modules/mathjs/es/utils/object.js");



var name = 'simplifyUtil';
var dependencies = ['FunctionNode', 'OperatorNode', 'SymbolNode'];
var createUtil = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var FunctionNode = _ref.FunctionNode,
      OperatorNode = _ref.OperatorNode,
      SymbolNode = _ref.SymbolNode;
  // TODO commutative/associative properties rely on the arguments
  // e.g. multiply is not commutative for matrices
  // The properties should be calculated from an argument to simplify, or possibly something in math.config
  // the other option is for typed() to specify a return type so that we can evaluate the type of arguments
  var commutative = {
    add: true,
    multiply: true
  };
  var associative = {
    add: true,
    multiply: true
  };

  function isCommutative(node, context) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(node)) {
      return true;
    }

    var name = node.fn.toString();

    if (context && Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(context, name) && Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(context[name], 'commutative')) {
      return context[name].commutative;
    }

    return commutative[name] || false;
  }

  function isAssociative(node, context) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(node)) {
      return false;
    }

    var name = node.fn.toString();

    if (context && Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(context, name) && Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(context[name], 'associative')) {
      return context[name].associative;
    }

    return associative[name] || false;
  }
  /**
   * Flatten all associative operators in an expression tree.
   * Assumes parentheses have already been removed.
   */


  function flatten(node) {
    if (!node.args || node.args.length === 0) {
      return node;
    }

    node.args = allChildren(node);

    for (var i = 0; i < node.args.length; i++) {
      flatten(node.args[i]);
    }
  }
  /**
   * Get the children of a node as if it has been flattened.
   * TODO implement for FunctionNodes
   */


  function allChildren(node) {
    var op;
    var children = [];

    var findChildren = function findChildren(node) {
      for (var i = 0; i < node.args.length; i++) {
        var child = node.args[i];

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(child) && op === child.op) {
          findChildren(child);
        } else {
          children.push(child);
        }
      }
    };

    if (isAssociative(node)) {
      op = node.op;
      findChildren(node);
      return children;
    } else {
      return node.args;
    }
  }
  /**
   *  Unflatten all flattened operators to a right-heavy binary tree.
   */


  function unflattenr(node) {
    if (!node.args || node.args.length === 0) {
      return;
    }

    var makeNode = createMakeNodeFunction(node);
    var l = node.args.length;

    for (var i = 0; i < l; i++) {
      unflattenr(node.args[i]);
    }

    if (l > 2 && isAssociative(node)) {
      var curnode = node.args.pop();

      while (node.args.length > 0) {
        curnode = makeNode([node.args.pop(), curnode]);
      }

      node.args = curnode.args;
    }
  }
  /**
   *  Unflatten all flattened operators to a left-heavy binary tree.
   */


  function unflattenl(node) {
    if (!node.args || node.args.length === 0) {
      return;
    }

    var makeNode = createMakeNodeFunction(node);
    var l = node.args.length;

    for (var i = 0; i < l; i++) {
      unflattenl(node.args[i]);
    }

    if (l > 2 && isAssociative(node)) {
      var curnode = node.args.shift();

      while (node.args.length > 0) {
        curnode = makeNode([curnode, node.args.shift()]);
      }

      node.args = curnode.args;
    }
  }

  function createMakeNodeFunction(node) {
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"])(node)) {
      return function (args) {
        try {
          return new OperatorNode(node.op, node.fn, args, node.implicit);
        } catch (err) {
          console.error(err);
          return [];
        }
      };
    } else {
      return function (args) {
        return new FunctionNode(new SymbolNode(node.name), args);
      };
    }
  }

  return {
    createMakeNodeFunction: createMakeNodeFunction,
    isCommutative: isCommutative,
    isAssociative: isAssociative,
    flatten: flatten,
    allChildren: allChildren,
    unflattenr: unflattenr,
    unflattenl: unflattenl
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/solver/lsolve.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/solver/lsolve.js ***!
  \*******************************************************************/
/*! exports provided: createLsolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLsolve", function() { return createLsolve; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_solveValidation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/solveValidation */ "../node_modules/mathjs/es/function/algebra/solver/utils/solveValidation.js");


var name = 'lsolve';
var dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];
var createLsolve = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      divideScalar = _ref.divideScalar,
      multiplyScalar = _ref.multiplyScalar,
      subtract = _ref.subtract,
      equalScalar = _ref.equalScalar,
      DenseMatrix = _ref.DenseMatrix;
  var solveValidation = Object(_utils_solveValidation__WEBPACK_IMPORTED_MODULE_1__["createSolveValidation"])({
    DenseMatrix: DenseMatrix
  });
  /**
   * Solves the linear equation system by forwards substitution. Matrix must be a lower triangular matrix.
   *
   * `L * x = b`
   *
   * Syntax:
   *
   *    math.lsolve(L, b)
   *
   * Examples:
   *
   *    const a = [[-2, 3], [2, 1]]
   *    const b = [11, 9]
   *    const x = lsolve(a, b)  // [[-5.5], [20]]
   *
   * See also:
   *
   *    lup, slu, usolve, lusolve
   *
   * @param {Matrix, Array} L       A N x N matrix or array (L)
   * @param {Matrix, Array} b       A column vector with the b values
   *
   * @return {DenseMatrix | Array}  A column vector with the linear system solution (x)
   */

  return typed(name, {
    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {
      // process matrix
      return _sparseForwardSubstitution(m, b);
    },
    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {
      // process matrix
      return _denseForwardSubstitution(m, b);
    },
    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {
      // create dense matrix from array
      var m = matrix(a); // use matrix implementation

      var r = _denseForwardSubstitution(m, b); // result


      return r.valueOf();
    }
  });

  function _denseForwardSubstitution(m, b) {
    // validate matrix and vector, return copy of column vector b
    b = solveValidation(m, b, true); // column vector data

    var bdata = b._data; // rows & columns

    var rows = m._size[0];
    var columns = m._size[1]; // result

    var x = []; // data

    var data = m._data; // forward solve m * x = b, loop columns

    for (var j = 0; j < columns; j++) {
      // b[j]
      var bj = bdata[j][0] || 0; // x[j]

      var xj = void 0; // forward substitution (outer product) avoids inner looping when bj === 0

      if (!equalScalar(bj, 0)) {
        // value @ [j, j]
        var vjj = data[j][j]; // check vjj

        if (equalScalar(vjj, 0)) {
          // system cannot be solved
          throw new Error('Linear system cannot be solved since matrix is singular');
        } // calculate xj


        xj = divideScalar(bj, vjj); // loop rows

        for (var i = j + 1; i < rows; i++) {
          // update copy of b
          bdata[i] = [subtract(bdata[i][0] || 0, multiplyScalar(xj, data[i][j]))];
        }
      } else {
        // zero @ j
        xj = 0;
      } // update x


      x[j] = [xj];
    } // return vector


    return new DenseMatrix({
      data: x,
      size: [rows, 1]
    });
  }

  function _sparseForwardSubstitution(m, b) {
    // validate matrix and vector, return copy of column vector b
    b = solveValidation(m, b, true); // column vector data

    var bdata = b._data; // rows & columns

    var rows = m._size[0];
    var columns = m._size[1]; // matrix arrays

    var values = m._values;
    var index = m._index;
    var ptr = m._ptr; // vars

    var i, k; // result

    var x = []; // forward solve m * x = b, loop columns

    for (var j = 0; j < columns; j++) {
      // b[j]
      var bj = bdata[j][0] || 0; // forward substitution (outer product) avoids inner looping when bj === 0

      if (!equalScalar(bj, 0)) {
        // value @ [j, j]
        var vjj = 0; // lower triangular matrix values & index (column j)

        var jvalues = [];
        var jindex = []; // last index in column

        var l = ptr[j + 1]; // values in column, find value @ [j, j]

        for (k = ptr[j]; k < l; k++) {
          // row
          i = index[k]; // check row (rows are not sorted!)

          if (i === j) {
            // update vjj
            vjj = values[k];
          } else if (i > j) {
            // store lower triangular
            jvalues.push(values[k]);
            jindex.push(i);
          }
        } // at this point we must have a value @ [j, j]


        if (equalScalar(vjj, 0)) {
          // system cannot be solved, there is no value @ [j, j]
          throw new Error('Linear system cannot be solved since matrix is singular');
        } // calculate xj


        var xj = divideScalar(bj, vjj); // loop lower triangular

        for (k = 0, l = jindex.length; k < l; k++) {
          // row
          i = jindex[k]; // update copy of b

          bdata[i] = [subtract(bdata[i][0] || 0, multiplyScalar(xj, jvalues[k]))];
        } // update x


        x[j] = [xj];
      } else {
        // update x
        x[j] = [0];
      }
    } // return vector


    return new DenseMatrix({
      data: x,
      size: [rows, 1]
    });
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/solver/lusolve.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/solver/lusolve.js ***!
  \********************************************************************/
/*! exports provided: createLusolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLusolve", function() { return createLusolve; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_solveValidation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/solveValidation */ "../node_modules/mathjs/es/function/algebra/solver/utils/solveValidation.js");
/* harmony import */ var _sparse_csIpvec__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sparse/csIpvec */ "../node_modules/mathjs/es/function/algebra/sparse/csIpvec.js");




var name = 'lusolve';
var dependencies = ['typed', 'matrix', 'lup', 'slu', 'usolve', 'lsolve', 'DenseMatrix'];
var createLusolve = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      lup = _ref.lup,
      slu = _ref.slu,
      usolve = _ref.usolve,
      lsolve = _ref.lsolve,
      DenseMatrix = _ref.DenseMatrix;
  var solveValidation = Object(_utils_solveValidation__WEBPACK_IMPORTED_MODULE_2__["createSolveValidation"])({
    DenseMatrix: DenseMatrix
  });
  /**
   * Solves the linear system `A * x = b` where `A` is an [n x n] matrix and `b` is a [n] column vector.
   *
   * Syntax:
   *
   *    math.lusolve(A, b)     // returns column vector with the solution to the linear system A * x = b
   *    math.lusolve(lup, b)   // returns column vector with the solution to the linear system A * x = b, lup = math.lup(A)
   *
   * Examples:
   *
   *    const m = [[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 4]]
   *
   *    const x = math.lusolve(m, [-1, -1, -1, -1])        // x = [[-1], [-0.5], [-1/3], [-0.25]]
   *
   *    const f = math.lup(m)
   *    const x1 = math.lusolve(f, [-1, -1, -1, -1])       // x1 = [[-1], [-0.5], [-1/3], [-0.25]]
   *    const x2 = math.lusolve(f, [1, 2, 1, -1])          // x2 = [[1], [1], [1/3], [-0.25]]
   *
   *    const a = [[-2, 3], [2, 1]]
   *    const b = [11, 9]
   *    const x = math.lusolve(a, b)  // [[2], [5]]
   *
   * See also:
   *
   *    lup, slu, lsolve, usolve
   *
   * @param {Matrix | Array | Object} A      Invertible Matrix or the Matrix LU decomposition
   * @param {Matrix | Array} b               Column Vector
   * @param {number} [order]                 The Symbolic Ordering and Analysis order, see slu for details. Matrix must be a SparseMatrix
   * @param {Number} [threshold]             Partial pivoting threshold (1 for partial pivoting), see slu for details. Matrix must be a SparseMatrix.
   *
   * @return {DenseMatrix | Array}           Column vector with the solution to the linear system A * x = b
   */

  return typed(name, {
    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {
      // convert a to matrix
      a = matrix(a); // matrix lup decomposition

      var d = lup(a); // solve

      var x = _lusolve(d.L, d.U, d.p, null, b); // convert result to array


      return x.valueOf();
    },
    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(a, b) {
      // matrix lup decomposition
      var d = lup(a); // solve

      return _lusolve(d.L, d.U, d.p, null, b);
    },
    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(a, b) {
      // matrix lup decomposition
      var d = lup(a); // solve

      return _lusolve(d.L, d.U, d.p, null, b);
    },
    'SparseMatrix, Array | Matrix, number, number': function SparseMatrixArrayMatrixNumberNumber(a, b, order, threshold) {
      // matrix lu decomposition
      var d = slu(a, order, threshold); // solve

      return _lusolve(d.L, d.U, d.p, d.q, b);
    },
    'Object, Array | Matrix': function ObjectArrayMatrix(d, b) {
      // solve
      return _lusolve(d.L, d.U, d.p, d.q, b);
    }
  });

  function _toMatrix(a) {
    // check it is a matrix
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(a)) {
      return a;
    } // check array


    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(a)) {
      return matrix(a);
    } // throw


    throw new TypeError('Invalid Matrix LU decomposition');
  }

  function _lusolve(l, u, p, q, b) {
    // verify L, U, P
    l = _toMatrix(l);
    u = _toMatrix(u); // validate matrix and vector

    b = solveValidation(l, b, false); // apply row permutations if needed (b is a DenseMatrix)

    if (p) {
      b._data = Object(_sparse_csIpvec__WEBPACK_IMPORTED_MODULE_3__["csIpvec"])(p, b._data);
    } // use forward substitution to resolve L * y = b


    var y = lsolve(l, b); // use backward substitution to resolve U * x = y

    var x = usolve(u, y); // apply column permutations if needed (x is a DenseMatrix)

    if (q) {
      x._data = Object(_sparse_csIpvec__WEBPACK_IMPORTED_MODULE_3__["csIpvec"])(q, x._data);
    } // return solution


    return x;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/solver/usolve.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/solver/usolve.js ***!
  \*******************************************************************/
/*! exports provided: createUsolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUsolve", function() { return createUsolve; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_solveValidation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/solveValidation */ "../node_modules/mathjs/es/function/algebra/solver/utils/solveValidation.js");


var name = 'usolve';
var dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];
var createUsolve = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      divideScalar = _ref.divideScalar,
      multiplyScalar = _ref.multiplyScalar,
      subtract = _ref.subtract,
      equalScalar = _ref.equalScalar,
      DenseMatrix = _ref.DenseMatrix;
  var solveValidation = Object(_utils_solveValidation__WEBPACK_IMPORTED_MODULE_1__["createSolveValidation"])({
    DenseMatrix: DenseMatrix
  });
  /**
   * Solves the linear equation system by backward substitution. Matrix must be an upper triangular matrix.
   *
   * `U * x = b`
   *
   * Syntax:
   *
   *    math.usolve(U, b)
   *
   * Examples:
   *
   *    const a = [[-2, 3], [2, 1]]
   *    const b = [11, 9]
   *    const x = usolve(a, b)  // [[8], [9]]
   *
   * See also:
   *
   *    lup, slu, usolve, lusolve
   *
   * @param {Matrix, Array} U       A N x N matrix or array (U)
   * @param {Matrix, Array} b       A column vector with the b values
   *
   * @return {DenseMatrix | Array}  A column vector with the linear system solution (x)
   */

  return typed(name, {
    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {
      // process matrix
      return _sparseBackwardSubstitution(m, b);
    },
    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {
      // process matrix
      return _denseBackwardSubstitution(m, b);
    },
    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {
      // create dense matrix from array
      var m = matrix(a); // use matrix implementation

      var r = _denseBackwardSubstitution(m, b); // result


      return r.valueOf();
    }
  });

  function _denseBackwardSubstitution(m, b) {
    // validate matrix and vector, return copy of column vector b
    b = solveValidation(m, b, true); // column vector data

    var bdata = b._data; // rows & columns

    var rows = m._size[0];
    var columns = m._size[1]; // result

    var x = []; // arrays

    var data = m._data; // backward solve m * x = b, loop columns (backwards)

    for (var j = columns - 1; j >= 0; j--) {
      // b[j]
      var bj = bdata[j][0] || 0; // x[j]

      var xj = void 0; // backward substitution (outer product) avoids inner looping when bj === 0

      if (!equalScalar(bj, 0)) {
        // value @ [j, j]
        var vjj = data[j][j]; // check vjj

        if (equalScalar(vjj, 0)) {
          // system cannot be solved
          throw new Error('Linear system cannot be solved since matrix is singular');
        } // calculate xj


        xj = divideScalar(bj, vjj); // loop rows

        for (var i = j - 1; i >= 0; i--) {
          // update copy of b
          bdata[i] = [subtract(bdata[i][0] || 0, multiplyScalar(xj, data[i][j]))];
        }
      } else {
        // zero value @ j
        xj = 0;
      } // update x


      x[j] = [xj];
    } // return column vector


    return new DenseMatrix({
      data: x,
      size: [rows, 1]
    });
  }

  function _sparseBackwardSubstitution(m, b) {
    // validate matrix and vector, return copy of column vector b
    b = solveValidation(m, b, true); // column vector data

    var bdata = b._data; // rows & columns

    var rows = m._size[0];
    var columns = m._size[1]; // matrix arrays

    var values = m._values;
    var index = m._index;
    var ptr = m._ptr; // vars

    var i, k; // result

    var x = []; // backward solve m * x = b, loop columns (backwards)

    for (var j = columns - 1; j >= 0; j--) {
      // b[j]
      var bj = bdata[j][0] || 0; // backward substitution (outer product) avoids inner looping when bj === 0

      if (!equalScalar(bj, 0)) {
        // value @ [j, j]
        var vjj = 0; // upper triangular matrix values & index (column j)

        var jvalues = [];
        var jindex = []; // first & last indeces in column

        var f = ptr[j];
        var l = ptr[j + 1]; // values in column, find value @ [j, j], loop backwards

        for (k = l - 1; k >= f; k--) {
          // row
          i = index[k]; // check row

          if (i === j) {
            // update vjj
            vjj = values[k];
          } else if (i < j) {
            // store upper triangular
            jvalues.push(values[k]);
            jindex.push(i);
          }
        } // at this point we must have a value @ [j, j]


        if (equalScalar(vjj, 0)) {
          // system cannot be solved, there is no value @ [j, j]
          throw new Error('Linear system cannot be solved since matrix is singular');
        } // calculate xj


        var xj = divideScalar(bj, vjj); // loop upper triangular

        for (k = 0, l = jindex.length; k < l; k++) {
          // row
          i = jindex[k]; // update copy of b

          bdata[i] = [subtract(bdata[i][0], multiplyScalar(xj, jvalues[k]))];
        } // update x


        x[j] = [xj];
      } else {
        // update x
        x[j] = [0];
      }
    } // return vector


    return new DenseMatrix({
      data: x,
      size: [rows, 1]
    });
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/solver/utils/solveValidation.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/solver/utils/solveValidation.js ***!
  \**********************************************************************************/
/*! exports provided: createSolveValidation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSolveValidation", function() { return createSolveValidation; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/string */ "../node_modules/mathjs/es/utils/string.js");



function createSolveValidation(_ref) {
  var DenseMatrix = _ref.DenseMatrix;

  /**
   * Validates matrix and column vector b for backward/forward substitution algorithms.
   *
   * @param {Matrix} m            An N x N matrix
   * @param {Array | Matrix} b    A column vector
   * @param {Boolean} copy        Return a copy of vector b
   *
   * @return {DenseMatrix}        Dense column vector b
   */
  return function solveValidation(m, b, copy) {
    // matrix size
    var size = m.size(); // validate matrix dimensions

    if (size.length !== 2) {
      throw new RangeError('Matrix must be two dimensional (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
    } // rows & columns


    var rows = size[0];
    var columns = size[1]; // validate rows & columns

    if (rows !== columns) {
      throw new RangeError('Matrix must be square (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
    } // vars


    var data, i, bdata; // check b is matrix

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(b)) {
      // matrix size
      var msize = b.size(); // vector

      if (msize.length === 1) {
        // check vector length
        if (msize[0] !== rows) {
          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');
        } // create data array


        data = []; // matrix data (DenseMatrix)

        bdata = b._data; // loop b data

        for (i = 0; i < rows; i++) {
          // row array
          data[i] = [bdata[i]];
        } // return Dense Matrix


        return new DenseMatrix({
          data: data,
          size: [rows, 1],
          datatype: b._datatype
        });
      } // two dimensions


      if (msize.length === 2) {
        // array must be a column vector
        if (msize[0] !== rows || msize[1] !== 1) {
          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');
        } // check matrix type


        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isDenseMatrix"])(b)) {
          // check a copy is needed
          if (copy) {
            // create data array
            data = []; // matrix data (DenseMatrix)

            bdata = b._data; // loop b data

            for (i = 0; i < rows; i++) {
              // row array
              data[i] = [bdata[i][0]];
            } // return Dense Matrix


            return new DenseMatrix({
              data: data,
              size: [rows, 1],
              datatype: b._datatype
            });
          } // b is already a column vector


          return b;
        } // create data array


        data = [];

        for (i = 0; i < rows; i++) {
          data[i] = [0];
        } // sparse matrix arrays


        var values = b._values;
        var index = b._index;
        var ptr = b._ptr; // loop values in column 0

        for (var k1 = ptr[1], k = ptr[0]; k < k1; k++) {
          // row
          i = index[k]; // add to data

          data[i][0] = values[k];
        } // return Dense Matrix


        return new DenseMatrix({
          data: data,
          size: [rows, 1],
          datatype: b._datatype
        });
      } // throw error


      throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');
    } // check b is array


    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(b)) {
      // size
      var asize = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(b); // check matrix dimensions, vector

      if (asize.length === 1) {
        // check vector length
        if (asize[0] !== rows) {
          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');
        } // create data array


        data = []; // loop b

        for (i = 0; i < rows; i++) {
          // row array
          data[i] = [b[i]];
        } // return Dense Matrix


        return new DenseMatrix({
          data: data,
          size: [rows, 1]
        });
      }

      if (asize.length === 2) {
        // array must be a column vector
        if (asize[0] !== rows || asize[1] !== 1) {
          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');
        } // create data array


        data = []; // loop b data

        for (i = 0; i < rows; i++) {
          // row array
          data[i] = [b[i][0]];
        } // return Dense Matrix


        return new DenseMatrix({
          data: data,
          size: [rows, 1]
        });
      } // throw error


      throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');
    }
  };
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csAmd.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csAmd.js ***!
  \******************************************************************/
/*! exports provided: createCsAmd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCsAmd", function() { return createCsAmd; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _csFkeep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csFkeep */ "../node_modules/mathjs/es/function/algebra/sparse/csFkeep.js");
/* harmony import */ var _csFlip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csFlip */ "../node_modules/mathjs/es/function/algebra/sparse/csFlip.js");
/* harmony import */ var _csTdfs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./csTdfs */ "../node_modules/mathjs/es/function/algebra/sparse/csTdfs.js");




var name = 'csAmd';
var dependencies = ['add', 'multiply', 'transpose'];
var createCsAmd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var add = _ref.add,
      multiply = _ref.multiply,
      transpose = _ref.transpose;

  /**
   * Approximate minimum degree ordering. The minimum degree algorithm is a widely used
   * heuristic for finding a permutation P so that P*A*P' has fewer nonzeros in its factorization
   * than A. It is a gready method that selects the sparsest pivot row and column during the course
   * of a right looking sparse Cholesky factorization.
   *
   * Reference: http://faculty.cse.tamu.edu/davis/publications.html
   *
   * @param {Number} order    0: Natural, 1: Cholesky, 2: LU, 3: QR
   * @param {Matrix} m        Sparse Matrix
   */
  return function csAmd(order, a) {
    // check input parameters
    if (!a || order <= 0 || order > 3) {
      return null;
    } // a matrix arrays


    var asize = a._size; // rows and columns

    var m = asize[0];
    var n = asize[1]; // initialize vars

    var lemax = 0; // dense threshold

    var dense = Math.max(16, 10 * Math.sqrt(n));
    dense = Math.min(n - 2, dense); // create target matrix C

    var cm = _createTargetMatrix(order, a, m, n, dense); // drop diagonal entries


    Object(_csFkeep__WEBPACK_IMPORTED_MODULE_1__["csFkeep"])(cm, _diag, null); // C matrix arrays

    var cindex = cm._index;
    var cptr = cm._ptr; // number of nonzero elements in C

    var cnz = cptr[n]; // allocate result (n+1)

    var P = []; // create workspace (8 * (n + 1))

    var W = [];
    var len = 0; // first n + 1 entries

    var nv = n + 1; // next n + 1 entries

    var next = 2 * (n + 1); // next n + 1 entries

    var head = 3 * (n + 1); // next n + 1 entries

    var elen = 4 * (n + 1); // next n + 1 entries

    var degree = 5 * (n + 1); // next n + 1 entries

    var w = 6 * (n + 1); // next n + 1 entries

    var hhead = 7 * (n + 1); // last n + 1 entries
    // use P as workspace for last

    var last = P; // initialize quotient graph

    var mark = _initializeQuotientGraph(n, cptr, W, len, head, last, next, hhead, nv, w, elen, degree); // initialize degree lists


    var nel = _initializeDegreeLists(n, cptr, W, degree, elen, w, dense, nv, head, last, next); // minimum degree node


    var mindeg = 0; // vars

    var i, j, k, k1, k2, e, pj, ln, nvi, pk, eln, p1, p2, pn, h, d; // while (selecting pivots) do

    while (nel < n) {
      // select node of minimum approximate degree. amd() is now ready to start eliminating the graph. It first
      // finds a node k of minimum degree and removes it from its degree list. The variable nel keeps track of thow
      // many nodes have been eliminated.
      for (k = -1; mindeg < n && (k = W[head + mindeg]) === -1; mindeg++) {
        ;
      }

      if (W[next + k] !== -1) {
        last[W[next + k]] = -1;
      } // remove k from degree list


      W[head + mindeg] = W[next + k]; // elenk = |Ek|

      var elenk = W[elen + k]; // # of nodes k represents

      var nvk = W[nv + k]; // W[nv + k] nodes of A eliminated

      nel += nvk; // Construct a new element. The new element Lk is constructed in place if |Ek| = 0. nv[i] is
      // negated for all nodes i in Lk to flag them as members of this set. Each node i is removed from the
      // degree lists. All elements e in Ek are absorved into element k.

      var dk = 0; // flag k as in Lk

      W[nv + k] = -nvk;
      var p = cptr[k]; // do in place if W[elen + k] === 0

      var pk1 = elenk === 0 ? p : cnz;
      var pk2 = pk1;

      for (k1 = 1; k1 <= elenk + 1; k1++) {
        if (k1 > elenk) {
          // search the nodes in k
          e = k; // list of nodes starts at cindex[pj]

          pj = p; // length of list of nodes in k

          ln = W[len + k] - elenk;
        } else {
          // search the nodes in e
          e = cindex[p++];
          pj = cptr[e]; // length of list of nodes in e

          ln = W[len + e];
        }

        for (k2 = 1; k2 <= ln; k2++) {
          i = cindex[pj++]; // check  node i dead, or seen

          if ((nvi = W[nv + i]) <= 0) {
            continue;
          } // W[degree + Lk] += size of node i


          dk += nvi; // negate W[nv + i] to denote i in Lk

          W[nv + i] = -nvi; // place i in Lk

          cindex[pk2++] = i;

          if (W[next + i] !== -1) {
            last[W[next + i]] = last[i];
          } // check we need to remove i from degree list


          if (last[i] !== -1) {
            W[next + last[i]] = W[next + i];
          } else {
            W[head + W[degree + i]] = W[next + i];
          }
        }

        if (e !== k) {
          // absorb e into k
          cptr[e] = Object(_csFlip__WEBPACK_IMPORTED_MODULE_2__["csFlip"])(k); // e is now a dead element

          W[w + e] = 0;
        }
      } // cindex[cnz...nzmax] is free


      if (elenk !== 0) {
        cnz = pk2;
      } // external degree of k - |Lk\i|


      W[degree + k] = dk; // element k is in cindex[pk1..pk2-1]

      cptr[k] = pk1;
      W[len + k] = pk2 - pk1; // k is now an element

      W[elen + k] = -2; // Find set differences. The scan1 function now computes the set differences |Le \ Lk| for all elements e. At the start of the
      // scan, no entry in the w array is greater than or equal to mark.
      // clear w if necessary

      mark = _wclear(mark, lemax, W, w, n); // scan 1: find |Le\Lk|

      for (pk = pk1; pk < pk2; pk++) {
        i = cindex[pk]; // check if W[elen + i] empty, skip it

        if ((eln = W[elen + i]) <= 0) {
          continue;
        } // W[nv + i] was negated


        nvi = -W[nv + i];
        var wnvi = mark - nvi; // scan Ei

        for (p = cptr[i], p1 = cptr[i] + eln - 1; p <= p1; p++) {
          e = cindex[p];

          if (W[w + e] >= mark) {
            // decrement |Le\Lk|
            W[w + e] -= nvi;
          } else if (W[w + e] !== 0) {
            // ensure e is a live element, 1st time e seen in scan 1
            W[w + e] = W[degree + e] + wnvi;
          }
        }
      } // degree update
      // The second pass computes the approximate degree di, prunes the sets Ei and Ai, and computes a hash
      // function h(i) for all nodes in Lk.
      // scan2: degree update


      for (pk = pk1; pk < pk2; pk++) {
        // consider node i in Lk
        i = cindex[pk];
        p1 = cptr[i];
        p2 = p1 + W[elen + i] - 1;
        pn = p1; // scan Ei

        for (h = 0, d = 0, p = p1; p <= p2; p++) {
          e = cindex[p]; // check e is an unabsorbed element

          if (W[w + e] !== 0) {
            // dext = |Le\Lk|
            var dext = W[w + e] - mark;

            if (dext > 0) {
              // sum up the set differences
              d += dext; // keep e in Ei

              cindex[pn++] = e; // compute the hash of node i

              h += e;
            } else {
              // aggressive absorb. e->k
              cptr[e] = Object(_csFlip__WEBPACK_IMPORTED_MODULE_2__["csFlip"])(k); // e is a dead element

              W[w + e] = 0;
            }
          }
        } // W[elen + i] = |Ei|


        W[elen + i] = pn - p1 + 1;
        var p3 = pn;
        var p4 = p1 + W[len + i]; // prune edges in Ai

        for (p = p2 + 1; p < p4; p++) {
          j = cindex[p]; // check node j dead or in Lk

          var nvj = W[nv + j];

          if (nvj <= 0) {
            continue;
          } // degree(i) += |j|


          d += nvj; // place j in node list of i

          cindex[pn++] = j; // compute hash for node i

          h += j;
        } // check for mass elimination


        if (d === 0) {
          // absorb i into k
          cptr[i] = Object(_csFlip__WEBPACK_IMPORTED_MODULE_2__["csFlip"])(k);
          nvi = -W[nv + i]; // |Lk| -= |i|

          dk -= nvi; // |k| += W[nv + i]

          nvk += nvi;
          nel += nvi;
          W[nv + i] = 0; // node i is dead

          W[elen + i] = -1;
        } else {
          // update degree(i)
          W[degree + i] = Math.min(W[degree + i], d); // move first node to end

          cindex[pn] = cindex[p3]; // move 1st el. to end of Ei

          cindex[p3] = cindex[p1]; // add k as 1st element in of Ei

          cindex[p1] = k; // new len of adj. list of node i

          W[len + i] = pn - p1 + 1; // finalize hash of i

          h = (h < 0 ? -h : h) % n; // place i in hash bucket

          W[next + i] = W[hhead + h];
          W[hhead + h] = i; // save hash of i in last[i]

          last[i] = h;
        }
      } // finalize |Lk|


      W[degree + k] = dk;
      lemax = Math.max(lemax, dk); // clear w

      mark = _wclear(mark + lemax, lemax, W, w, n); // Supernode detection. Supernode detection relies on the hash function h(i) computed for each node i.
      // If two nodes have identical adjacency lists, their hash functions wil be identical.

      for (pk = pk1; pk < pk2; pk++) {
        i = cindex[pk]; // check i is dead, skip it

        if (W[nv + i] >= 0) {
          continue;
        } // scan hash bucket of node i


        h = last[i];
        i = W[hhead + h]; // hash bucket will be empty

        W[hhead + h] = -1;

        for (; i !== -1 && W[next + i] !== -1; i = W[next + i], mark++) {
          ln = W[len + i];
          eln = W[elen + i];

          for (p = cptr[i] + 1; p <= cptr[i] + ln - 1; p++) {
            W[w + cindex[p]] = mark;
          }

          var jlast = i; // compare i with all j

          for (j = W[next + i]; j !== -1;) {
            var ok = W[len + j] === ln && W[elen + j] === eln;

            for (p = cptr[j] + 1; ok && p <= cptr[j] + ln - 1; p++) {
              // compare i and j
              if (W[w + cindex[p]] !== mark) {
                ok = 0;
              }
            } // check i and j are identical


            if (ok) {
              // absorb j into i
              cptr[j] = Object(_csFlip__WEBPACK_IMPORTED_MODULE_2__["csFlip"])(i);
              W[nv + i] += W[nv + j];
              W[nv + j] = 0; // node j is dead

              W[elen + j] = -1; // delete j from hash bucket

              j = W[next + j];
              W[next + jlast] = j;
            } else {
              // j and i are different
              jlast = j;
              j = W[next + j];
            }
          }
        }
      } // Finalize new element. The elimination of node k is nearly complete. All nodes i in Lk are scanned one last time.
      // Node i is removed from Lk if it is dead. The flagged status of nv[i] is cleared.


      for (p = pk1, pk = pk1; pk < pk2; pk++) {
        i = cindex[pk]; // check  i is dead, skip it

        if ((nvi = -W[nv + i]) <= 0) {
          continue;
        } // restore W[nv + i]


        W[nv + i] = nvi; // compute external degree(i)

        d = W[degree + i] + dk - nvi;
        d = Math.min(d, n - nel - nvi);

        if (W[head + d] !== -1) {
          last[W[head + d]] = i;
        } // put i back in degree list


        W[next + i] = W[head + d];
        last[i] = -1;
        W[head + d] = i; // find new minimum degree

        mindeg = Math.min(mindeg, d);
        W[degree + i] = d; // place i in Lk

        cindex[p++] = i;
      } // # nodes absorbed into k


      W[nv + k] = nvk; // length of adj list of element k

      if ((W[len + k] = p - pk1) === 0) {
        // k is a root of the tree
        cptr[k] = -1; // k is now a dead element

        W[w + k] = 0;
      }

      if (elenk !== 0) {
        // free unused space in Lk
        cnz = p;
      }
    } // Postordering. The elimination is complete, but no permutation has been computed. All that is left
    // of the graph is the assembly tree (ptr) and a set of dead nodes and elements (i is a dead node if
    // nv[i] is zero and a dead element if nv[i] > 0). It is from this information only that the final permutation
    // is computed. The tree is restored by unflipping all of ptr.
    // fix assembly tree


    for (i = 0; i < n; i++) {
      cptr[i] = Object(_csFlip__WEBPACK_IMPORTED_MODULE_2__["csFlip"])(cptr[i]);
    }

    for (j = 0; j <= n; j++) {
      W[head + j] = -1;
    } // place unordered nodes in lists


    for (j = n; j >= 0; j--) {
      // skip if j is an element
      if (W[nv + j] > 0) {
        continue;
      } // place j in list of its parent


      W[next + j] = W[head + cptr[j]];
      W[head + cptr[j]] = j;
    } // place elements in lists


    for (e = n; e >= 0; e--) {
      // skip unless e is an element
      if (W[nv + e] <= 0) {
        continue;
      }

      if (cptr[e] !== -1) {
        // place e in list of its parent
        W[next + e] = W[head + cptr[e]];
        W[head + cptr[e]] = e;
      }
    } // postorder the assembly tree


    for (k = 0, i = 0; i <= n; i++) {
      if (cptr[i] === -1) {
        k = Object(_csTdfs__WEBPACK_IMPORTED_MODULE_3__["csTdfs"])(i, k, W, head, next, P, w);
      }
    } // remove last item in array


    P.splice(P.length - 1, 1); // return P

    return P;
  };
  /**
   * Creates the matrix that will be used by the approximate minimum degree ordering algorithm. The function accepts the matrix M as input and returns a permutation
   * vector P. The amd algorithm operates on a symmetrix matrix, so one of three symmetric matrices is formed.
   *
   * Order: 0
   *   A natural ordering P=null matrix is returned.
   *
   * Order: 1
   *   Matrix must be square. This is appropriate for a Cholesky or LU factorization.
   *   P = M + M'
   *
   * Order: 2
   *   Dense columns from M' are dropped, M recreated from M'. This is appropriatefor LU factorization of unsymmetric matrices.
   *   P = M' * M
   *
   * Order: 3
   *   This is best used for QR factorization or LU factorization is matrix M has no dense rows. A dense row is a row with more than 10*sqr(columns) entries.
   *   P = M' * M
   */

  function _createTargetMatrix(order, a, m, n, dense) {
    // compute A'
    var at = transpose(a); // check order = 1, matrix must be square

    if (order === 1 && n === m) {
      // C = A + A'
      return add(a, at);
    } // check order = 2, drop dense columns from M'


    if (order === 2) {
      // transpose arrays
      var tindex = at._index;
      var tptr = at._ptr; // new column index

      var p2 = 0; // loop A' columns (rows)

      for (var j = 0; j < m; j++) {
        // column j of AT starts here
        var p = tptr[j]; // new column j starts here

        tptr[j] = p2; // skip dense col j

        if (tptr[j + 1] - p > dense) {
          continue;
        } // map rows in column j of A


        for (var p1 = tptr[j + 1]; p < p1; p++) {
          tindex[p2++] = tindex[p];
        }
      } // finalize AT


      tptr[m] = p2; // recreate A from new transpose matrix

      a = transpose(at); // use A' * A

      return multiply(at, a);
    } // use A' * A, square or rectangular matrix


    return multiply(at, a);
  }
  /**
   * Initialize quotient graph. There are four kind of nodes and elements that must be represented:
   *
   *  - A live node is a node i (or a supernode) that has not been selected as a pivot nad has not been merged into another supernode.
   *  - A dead node i is one that has been removed from the graph, having been absorved into r = flip(ptr[i]).
   *  - A live element e is one that is in the graph, having been formed when node e was selected as the pivot.
   *  - A dead element e is one that has benn absorved into a subsequent element s = flip(ptr[e]).
   */


  function _initializeQuotientGraph(n, cptr, W, len, head, last, next, hhead, nv, w, elen, degree) {
    // Initialize quotient graph
    for (var k = 0; k < n; k++) {
      W[len + k] = cptr[k + 1] - cptr[k];
    }

    W[len + n] = 0; // initialize workspace

    for (var i = 0; i <= n; i++) {
      // degree list i is empty
      W[head + i] = -1;
      last[i] = -1;
      W[next + i] = -1; // hash list i is empty

      W[hhead + i] = -1; // node i is just one node

      W[nv + i] = 1; // node i is alive

      W[w + i] = 1; // Ek of node i is empty

      W[elen + i] = 0; // degree of node i

      W[degree + i] = W[len + i];
    } // clear w


    var mark = _wclear(0, 0, W, w, n); // n is a dead element


    W[elen + n] = -2; // n is a root of assembly tree

    cptr[n] = -1; // n is a dead element

    W[w + n] = 0; // return mark

    return mark;
  }
  /**
   * Initialize degree lists. Each node is placed in its degree lists. Nodes of zero degree are eliminated immediately. Nodes with
   * degree >= dense are alsol eliminated and merged into a placeholder node n, a dead element. Thes nodes will appera last in the
   * output permutation p.
   */


  function _initializeDegreeLists(n, cptr, W, degree, elen, w, dense, nv, head, last, next) {
    // result
    var nel = 0; // loop columns

    for (var i = 0; i < n; i++) {
      // degree @ i
      var d = W[degree + i]; // check node i is empty

      if (d === 0) {
        // element i is dead
        W[elen + i] = -2;
        nel++; // i is a root of assembly tree

        cptr[i] = -1;
        W[w + i] = 0;
      } else if (d > dense) {
        // absorb i into element n
        W[nv + i] = 0; // node i is dead

        W[elen + i] = -1;
        nel++;
        cptr[i] = Object(_csFlip__WEBPACK_IMPORTED_MODULE_2__["csFlip"])(n);
        W[nv + n]++;
      } else {
        var h = W[head + d];

        if (h !== -1) {
          last[h] = i;
        } // put node i in degree list d


        W[next + i] = W[head + d];
        W[head + d] = i;
      }
    }

    return nel;
  }

  function _wclear(mark, lemax, W, w, n) {
    if (mark < 2 || mark + lemax < 0) {
      for (var k = 0; k < n; k++) {
        if (W[w + k] !== 0) {
          W[w + k] = 1;
        }
      }

      mark = 2;
    } // at this point, W [0..n-1] < mark holds


    return mark;
  }

  function _diag(i, j) {
    return i !== j;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csCounts.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csCounts.js ***!
  \*********************************************************************/
/*! exports provided: createCsCounts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCsCounts", function() { return createCsCounts; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _csLeaf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csLeaf */ "../node_modules/mathjs/es/function/algebra/sparse/csLeaf.js");


var name = 'csCounts';
var dependencies = ['transpose'];
var createCsCounts = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var transpose = _ref.transpose;

  /**
   * Computes the column counts using the upper triangular part of A.
   * It transposes A internally, none of the input parameters are modified.
   *
   * @param {Matrix} a           The sparse matrix A
   *
   * @param {Matrix} ata         Count the columns of A'A instead
   *
   * @return                     An array of size n of the column counts or null on error
   *
   * Reference: http://faculty.cse.tamu.edu/davis/publications.html
   */
  return function (a, parent, post, ata) {
    // check inputs
    if (!a || !parent || !post) {
      return null;
    } // a matrix arrays


    var asize = a._size; // rows and columns

    var m = asize[0];
    var n = asize[1]; // variables

    var i, j, k, J, p, p0, p1; // workspace size

    var s = 4 * n + (ata ? n + m + 1 : 0); // allocate workspace

    var w = []; // (s)

    var ancestor = 0; // first n entries

    var maxfirst = n; // next n entries

    var prevleaf = 2 * n; // next n entries

    var first = 3 * n; // next n entries

    var head = 4 * n; // next n + 1 entries (used when ata is true)

    var next = 5 * n + 1; // last entries in workspace
    // clear workspace w[0..s-1]

    for (k = 0; k < s; k++) {
      w[k] = -1;
    } // allocate result


    var colcount = []; // (n)
    // AT = A'

    var at = transpose(a); // at arrays

    var tindex = at._index;
    var tptr = at._ptr; // find w[first + j]

    for (k = 0; k < n; k++) {
      j = post[k]; // colcount[j]=1 if j is a leaf

      colcount[j] = w[first + j] === -1 ? 1 : 0;

      for (; j !== -1 && w[first + j] === -1; j = parent[j]) {
        w[first + j] = k;
      }
    } // initialize ata if needed


    if (ata) {
      // invert post
      for (k = 0; k < n; k++) {
        w[post[k]] = k;
      } // loop rows (columns in AT)


      for (i = 0; i < m; i++) {
        // values in column i of AT
        for (k = n, p0 = tptr[i], p1 = tptr[i + 1], p = p0; p < p1; p++) {
          k = Math.min(k, w[tindex[p]]);
        } // place row i in linked list k


        w[next + i] = w[head + k];
        w[head + k] = i;
      }
    } // each node in its own set


    for (i = 0; i < n; i++) {
      w[ancestor + i] = i;
    }

    for (k = 0; k < n; k++) {
      // j is the kth node in postordered etree
      j = post[k]; // check j is not a root

      if (parent[j] !== -1) {
        colcount[parent[j]]--;
      } // J=j for LL'=A case


      for (J = ata ? w[head + k] : j; J !== -1; J = ata ? w[next + J] : -1) {
        for (p = tptr[J]; p < tptr[J + 1]; p++) {
          i = tindex[p];
          var r = Object(_csLeaf__WEBPACK_IMPORTED_MODULE_1__["csLeaf"])(i, j, w, first, maxfirst, prevleaf, ancestor); // check A(i,j) is in skeleton

          if (r.jleaf >= 1) {
            colcount[j]++;
          } // check account for overlap in q


          if (r.jleaf === 2) {
            colcount[r.q]--;
          }
        }
      }

      if (parent[j] !== -1) {
        w[ancestor + j] = parent[j];
      }
    } // sum up colcount's of each child


    for (j = 0; j < n; j++) {
      if (parent[j] !== -1) {
        colcount[parent[j]] += colcount[j];
      }
    }

    return colcount;
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csDfs.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csDfs.js ***!
  \******************************************************************/
/*! exports provided: csDfs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csDfs", function() { return csDfs; });
/* harmony import */ var _csMarked__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csMarked */ "../node_modules/mathjs/es/function/algebra/sparse/csMarked.js");
/* harmony import */ var _csMark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csMark */ "../node_modules/mathjs/es/function/algebra/sparse/csMark.js");
/* harmony import */ var _csUnflip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csUnflip */ "../node_modules/mathjs/es/function/algebra/sparse/csUnflip.js");



/**
 * Depth-first search computes the nonzero pattern xi of the directed graph G (Matrix) starting
 * at nodes in B (see csReach()).
 *
 * @param {Number}  j               The starting node for the DFS algorithm
 * @param {Matrix}  g               The G matrix to search, ptr array modified, then restored
 * @param {Number}  top             Start index in stack xi[top..n-1]
 * @param {Number}  k               The kth column in B
 * @param {Array}   xi              The nonzero pattern xi[top] .. xi[n - 1], an array of size = 2 * n
 *                                  The first n entries is the nonzero pattern, the last n entries is the stack
 * @param {Array}   pinv            The inverse row permutation vector, must be null for L * x = b
 *
 * @return {Number}                 New value of top
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */

function csDfs(j, g, top, xi, pinv) {
  // g arrays
  var index = g._index;
  var ptr = g._ptr;
  var size = g._size; // columns

  var n = size[1]; // vars

  var i, p, p2; // initialize head

  var head = 0; // initialize the recursion stack

  xi[0] = j; // loop

  while (head >= 0) {
    // get j from the top of the recursion stack
    j = xi[head]; // apply permutation vector

    var jnew = pinv ? pinv[j] : j; // check node j is marked

    if (!Object(_csMarked__WEBPACK_IMPORTED_MODULE_0__["csMarked"])(ptr, j)) {
      // mark node j as visited
      Object(_csMark__WEBPACK_IMPORTED_MODULE_1__["csMark"])(ptr, j); // update stack (last n entries in xi)

      xi[n + head] = jnew < 0 ? 0 : Object(_csUnflip__WEBPACK_IMPORTED_MODULE_2__["csUnflip"])(ptr[jnew]);
    } // node j done if no unvisited neighbors


    var done = 1; // examine all neighbors of j, stack (last n entries in xi)

    for (p = xi[n + head], p2 = jnew < 0 ? 0 : Object(_csUnflip__WEBPACK_IMPORTED_MODULE_2__["csUnflip"])(ptr[jnew + 1]); p < p2; p++) {
      // consider neighbor node i
      i = index[p]; // check we have visited node i, skip it

      if (Object(_csMarked__WEBPACK_IMPORTED_MODULE_0__["csMarked"])(ptr, i)) {
        continue;
      } // pause depth-first search of node j, update stack (last n entries in xi)


      xi[n + head] = p; // start dfs at node i

      xi[++head] = i; // node j is not done

      done = 0; // break, to start dfs(i)

      break;
    } // check depth-first search at node j is done


    if (done) {
      // remove j from the recursion stack
      head--; // and place in the output stack

      xi[--top] = j;
    }
  }

  return top;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csEtree.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csEtree.js ***!
  \********************************************************************/
/*! exports provided: csEtree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csEtree", function() { return csEtree; });
/**
 * Computes the elimination tree of Matrix A (using triu(A)) or the
 * elimination tree of A'A without forming A'A.
 *
 * @param {Matrix}  a               The A Matrix
 * @param {boolean} ata             A value of true the function computes the etree of A'A
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */
function csEtree(a, ata) {
  // check inputs
  if (!a) {
    return null;
  } // a arrays


  var aindex = a._index;
  var aptr = a._ptr;
  var asize = a._size; // rows & columns

  var m = asize[0];
  var n = asize[1]; // allocate result

  var parent = []; // (n)
  // allocate workspace

  var w = []; // (n + (ata ? m : 0))

  var ancestor = 0; // first n entries in w

  var prev = n; // last m entries (ata = true)

  var i, inext; // check we are calculating A'A

  if (ata) {
    // initialize workspace
    for (i = 0; i < m; i++) {
      w[prev + i] = -1;
    }
  } // loop columns


  for (var k = 0; k < n; k++) {
    // node k has no parent yet
    parent[k] = -1; // nor does k have an ancestor

    w[ancestor + k] = -1; // values in column k

    for (var p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {
      // row
      var r = aindex[p]; // node

      i = ata ? w[prev + r] : r; // traverse from i to k

      for (; i !== -1 && i < k; i = inext) {
        // inext = ancestor of i
        inext = w[ancestor + i]; // path compression

        w[ancestor + i] = k; // check no anc., parent is k

        if (inext === -1) {
          parent[i] = k;
        }
      }

      if (ata) {
        w[prev + r] = k;
      }
    }
  }

  return parent;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csFkeep.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csFkeep.js ***!
  \********************************************************************/
/*! exports provided: csFkeep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csFkeep", function() { return csFkeep; });
/**
 * Keeps entries in the matrix when the callback function returns true, removes the entry otherwise
 *
 * @param {Matrix}   a              The sparse matrix
 * @param {function} callback       The callback function, function will be invoked with the following args:
 *                                    - The entry row
 *                                    - The entry column
 *                                    - The entry value
 *                                    - The state parameter
 * @param {any}      other          The state
 *
 * @return                          The number of nonzero elements in the matrix
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */
function csFkeep(a, callback, other) {
  // a arrays
  var avalues = a._values;
  var aindex = a._index;
  var aptr = a._ptr;
  var asize = a._size; // columns

  var n = asize[1]; // nonzero items

  var nz = 0; // loop columns

  for (var j = 0; j < n; j++) {
    // get current location of col j
    var p = aptr[j]; // record new location of col j

    aptr[j] = nz;

    for (; p < aptr[j + 1]; p++) {
      // check we need to keep this item
      if (callback(aindex[p], j, avalues ? avalues[p] : 1, other)) {
        // keep A(i,j)
        aindex[nz] = aindex[p]; // check we need to process values (pattern only)

        if (avalues) {
          avalues[nz] = avalues[p];
        } // increment nonzero items


        nz++;
      }
    }
  } // finalize A


  aptr[n] = nz; // trim arrays

  aindex.splice(nz, aindex.length - nz); // check we need to process values (pattern only)

  if (avalues) {
    avalues.splice(nz, avalues.length - nz);
  } // return number of nonzero items


  return nz;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csFlip.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csFlip.js ***!
  \*******************************************************************/
/*! exports provided: csFlip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csFlip", function() { return csFlip; });
/**
 * This function "flips" its input about the integer -1.
 *
 * @param {Number}  i               The value to flip
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */
function csFlip(i) {
  // flip the value
  return -i - 2;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csIpvec.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csIpvec.js ***!
  \********************************************************************/
/*! exports provided: csIpvec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csIpvec", function() { return csIpvec; });
/**
 * Permutes a vector; x = P'b. In MATLAB notation, x(p)=b.
 *
 * @param {Array} p           The permutation vector of length n. null value denotes identity
 * @param {Array} b           The input vector
 *
 * @return {Array}            The output vector x = P'b
 */
function csIpvec(p, b) {
  // vars
  var k;
  var n = b.length;
  var x = []; // check permutation vector was provided, p = null denotes identity

  if (p) {
    // loop vector
    for (k = 0; k < n; k++) {
      // apply permutation
      x[p[k]] = b[k];
    }
  } else {
    // loop vector
    for (k = 0; k < n; k++) {
      // x[i] = b[i]
      x[k] = b[k];
    }
  }

  return x;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csLeaf.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csLeaf.js ***!
  \*******************************************************************/
/*! exports provided: csLeaf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csLeaf", function() { return csLeaf; });
/**
 * This function determines if j is a leaf of the ith row subtree.
 * Consider A(i,j), node j in ith row subtree and return lca(jprev,j)
 *
 * @param {Number}  i               The ith row subtree
 * @param {Number}  j               The node to test
 * @param {Array}   w               The workspace array
 * @param {Number}  first           The index offset within the workspace for the first array
 * @param {Number}  maxfirst        The index offset within the workspace for the maxfirst array
 * @param {Number}  prevleaf        The index offset within the workspace for the prevleaf array
 * @param {Number}  ancestor        The index offset within the workspace for the ancestor array
 *
 * @return {Object}
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */
function csLeaf(i, j, w, first, maxfirst, prevleaf, ancestor) {
  var s, sparent; // our result

  var jleaf = 0;
  var q; // check j is a leaf

  if (i <= j || w[first + j] <= w[maxfirst + i]) {
    return -1;
  } // update max first[j] seen so far


  w[maxfirst + i] = w[first + j]; // jprev = previous leaf of ith subtree

  var jprev = w[prevleaf + i];
  w[prevleaf + i] = j; // check j is first or subsequent leaf

  if (jprev === -1) {
    // 1st leaf, q = root of ith subtree
    jleaf = 1;
    q = i;
  } else {
    // update jleaf
    jleaf = 2; // q = least common ancester (jprev,j)

    for (q = jprev; q !== w[ancestor + q]; q = w[ancestor + q]) {
      ;
    }

    for (s = jprev; s !== q; s = sparent) {
      // path compression
      sparent = w[ancestor + s];
      w[ancestor + s] = q;
    }
  }

  return {
    jleaf: jleaf,
    q: q
  };
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csLu.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csLu.js ***!
  \*****************************************************************/
/*! exports provided: createCsLu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCsLu", function() { return createCsLu; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _csSpsolve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csSpsolve */ "../node_modules/mathjs/es/function/algebra/sparse/csSpsolve.js");


var name = 'csLu';
var dependencies = ['abs', 'divideScalar', 'multiply', 'subtract', 'larger', 'largerEq', 'SparseMatrix'];
var createCsLu = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var abs = _ref.abs,
      divideScalar = _ref.divideScalar,
      multiply = _ref.multiply,
      subtract = _ref.subtract,
      larger = _ref.larger,
      largerEq = _ref.largerEq,
      SparseMatrix = _ref.SparseMatrix;
  var csSpsolve = Object(_csSpsolve__WEBPACK_IMPORTED_MODULE_1__["createCsSpsolve"])({
    divideScalar: divideScalar,
    multiply: multiply,
    subtract: subtract
  });
  /**
   * Computes the numeric LU factorization of the sparse matrix A. Implements a Left-looking LU factorization
   * algorithm that computes L and U one column at a tume. At the kth step, it access columns 1 to k-1 of L
   * and column k of A. Given the fill-reducing column ordering q (see parameter s) computes L, U and pinv so
   * L * U = A(p, q), where p is the inverse of pinv.
   *
   * @param {Matrix}  m               The A Matrix to factorize
   * @param {Object}  s               The symbolic analysis from csSqr(). Provides the fill-reducing
   *                                  column ordering q
   * @param {Number}  tol             Partial pivoting threshold (1 for partial pivoting)
   *
   * @return {Number}                 The numeric LU factorization of A or null
   *
   * Reference: http://faculty.cse.tamu.edu/davis/publications.html
   */

  return function csLu(m, s, tol) {
    // validate input
    if (!m) {
      return null;
    } // m arrays


    var size = m._size; // columns

    var n = size[1]; // symbolic analysis result

    var q;
    var lnz = 100;
    var unz = 100; // update symbolic analysis parameters

    if (s) {
      q = s.q;
      lnz = s.lnz || lnz;
      unz = s.unz || unz;
    } // L arrays


    var lvalues = []; // (lnz)

    var lindex = []; // (lnz)

    var lptr = []; // (n + 1)
    // L

    var L = new SparseMatrix({
      values: lvalues,
      index: lindex,
      ptr: lptr,
      size: [n, n]
    }); // U arrays

    var uvalues = []; // (unz)

    var uindex = []; // (unz)

    var uptr = []; // (n + 1)
    // U

    var U = new SparseMatrix({
      values: uvalues,
      index: uindex,
      ptr: uptr,
      size: [n, n]
    }); // inverse of permutation vector

    var pinv = []; // (n)
    // vars

    var i, p; // allocate arrays

    var x = []; // (n)

    var xi = []; // (2 * n)
    // initialize variables

    for (i = 0; i < n; i++) {
      // clear workspace
      x[i] = 0; // no rows pivotal yet

      pinv[i] = -1; // no cols of L yet

      lptr[i + 1] = 0;
    } // reset number of nonzero elements in L and U


    lnz = 0;
    unz = 0; // compute L(:,k) and U(:,k)

    for (var k = 0; k < n; k++) {
      // update ptr
      lptr[k] = lnz;
      uptr[k] = unz; // apply column permutations if needed

      var col = q ? q[k] : k; // solve triangular system, x = L\A(:,col)

      var top = csSpsolve(L, m, col, xi, x, pinv, 1); // find pivot

      var ipiv = -1;
      var a = -1; // loop xi[] from top -> n

      for (p = top; p < n; p++) {
        // x[i] is nonzero
        i = xi[p]; // check row i is not yet pivotal

        if (pinv[i] < 0) {
          // absolute value of x[i]
          var xabs = abs(x[i]); // check absoulte value is greater than pivot value

          if (larger(xabs, a)) {
            // largest pivot candidate so far
            a = xabs;
            ipiv = i;
          }
        } else {
          // x(i) is the entry U(pinv[i],k)
          uindex[unz] = pinv[i];
          uvalues[unz++] = x[i];
        }
      } // validate we found a valid pivot


      if (ipiv === -1 || a <= 0) {
        return null;
      } // update actual pivot column, give preference to diagonal value


      if (pinv[col] < 0 && largerEq(abs(x[col]), multiply(a, tol))) {
        ipiv = col;
      } // the chosen pivot


      var pivot = x[ipiv]; // last entry in U(:,k) is U(k,k)

      uindex[unz] = k;
      uvalues[unz++] = pivot; // ipiv is the kth pivot row

      pinv[ipiv] = k; // first entry in L(:,k) is L(k,k) = 1

      lindex[lnz] = ipiv;
      lvalues[lnz++] = 1; // L(k+1:n,k) = x / pivot

      for (p = top; p < n; p++) {
        // row
        i = xi[p]; // check x(i) is an entry in L(:,k)

        if (pinv[i] < 0) {
          // save unpermuted row in L
          lindex[lnz] = i; // scale pivot column

          lvalues[lnz++] = divideScalar(x[i], pivot);
        } // x[0..n-1] = 0 for next k


        x[i] = 0;
      }
    } // update ptr


    lptr[n] = lnz;
    uptr[n] = unz; // fix row indices of L for final pinv

    for (p = 0; p < lnz; p++) {
      lindex[p] = pinv[lindex[p]];
    } // trim arrays


    lvalues.splice(lnz, lvalues.length - lnz);
    lindex.splice(lnz, lindex.length - lnz);
    uvalues.splice(unz, uvalues.length - unz);
    uindex.splice(unz, uindex.length - unz); // return LU factor

    return {
      L: L,
      U: U,
      pinv: pinv
    };
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csMark.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csMark.js ***!
  \*******************************************************************/
/*! exports provided: csMark */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csMark", function() { return csMark; });
/* harmony import */ var _csFlip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csFlip */ "../node_modules/mathjs/es/function/algebra/sparse/csFlip.js");

/**
 * Marks the node at w[j]
 *
 * @param {Array}   w               The array
 * @param {Number}  j               The array index
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */

function csMark(w, j) {
  // mark w[j]
  w[j] = Object(_csFlip__WEBPACK_IMPORTED_MODULE_0__["csFlip"])(w[j]);
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csMarked.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csMarked.js ***!
  \*********************************************************************/
/*! exports provided: csMarked */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csMarked", function() { return csMarked; });
/**
 * Checks if the node at w[j] is marked
 *
 * @param {Array}   w               The array
 * @param {Number}  j               The array index
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */
function csMarked(w, j) {
  // check node is marked
  return w[j] < 0;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csPermute.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csPermute.js ***!
  \**********************************************************************/
/*! exports provided: csPermute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csPermute", function() { return csPermute; });
/**
 * Permutes a sparse matrix C = P * A * Q
 *
 * @param {SparseMatrix}  a         The Matrix A
 * @param {Array}   pinv            The row permutation vector
 * @param {Array}   q               The column permutation vector
 * @param {boolean} values          Create a pattern matrix (false), values and pattern otherwise
 *
 * @return {Matrix}                 C = P * A * Q, null on error
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */
function csPermute(a, pinv, q, values) {
  // a arrays
  var avalues = a._values;
  var aindex = a._index;
  var aptr = a._ptr;
  var asize = a._size;
  var adt = a._datatype; // rows & columns

  var m = asize[0];
  var n = asize[1]; // c arrays

  var cvalues = values && a._values ? [] : null;
  var cindex = []; // (aptr[n])

  var cptr = []; // (n + 1)
  // initialize vars

  var nz = 0; // loop columns

  for (var k = 0; k < n; k++) {
    // column k of C is column q[k] of A
    cptr[k] = nz; // apply column permutation

    var j = q ? q[k] : k; // loop values in column j of A

    for (var t0 = aptr[j], t1 = aptr[j + 1], t = t0; t < t1; t++) {
      // row i of A is row pinv[i] of C
      var r = pinv ? pinv[aindex[t]] : aindex[t]; // index

      cindex[nz] = r; // check we need to populate values

      if (cvalues) {
        cvalues[nz] = avalues[t];
      } // increment number of nonzero elements


      nz++;
    }
  } // finalize the last column of C


  cptr[n] = nz; // return C matrix

  return a.createSparseMatrix({
    values: cvalues,
    index: cindex,
    ptr: cptr,
    size: [m, n],
    datatype: adt
  });
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csPost.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csPost.js ***!
  \*******************************************************************/
/*! exports provided: csPost */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csPost", function() { return csPost; });
/* harmony import */ var _csTdfs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csTdfs */ "../node_modules/mathjs/es/function/algebra/sparse/csTdfs.js");

/**
 * Post order a tree of forest
 *
 * @param {Array}   parent          The tree or forest
 * @param {Number}  n               Number of columns
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */

function csPost(parent, n) {
  // check inputs
  if (!parent) {
    return null;
  } // vars


  var k = 0;
  var j; // allocate result

  var post = []; // (n)
  // workspace, head: first n entries, next: next n entries, stack: last n entries

  var w = []; // (3 * n)

  var head = 0;
  var next = n;
  var stack = 2 * n; // initialize workspace

  for (j = 0; j < n; j++) {
    // empty linked lists
    w[head + j] = -1;
  } // traverse nodes in reverse order


  for (j = n - 1; j >= 0; j--) {
    // check j is a root
    if (parent[j] === -1) {
      continue;
    } // add j to list of its parent


    w[next + j] = w[head + parent[j]];
    w[head + parent[j]] = j;
  } // loop nodes


  for (j = 0; j < n; j++) {
    // skip j if it is not a root
    if (parent[j] !== -1) {
      continue;
    } // depth-first search


    k = Object(_csTdfs__WEBPACK_IMPORTED_MODULE_0__["csTdfs"])(j, k, w, head, next, post, stack);
  }

  return post;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csReach.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csReach.js ***!
  \********************************************************************/
/*! exports provided: csReach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csReach", function() { return csReach; });
/* harmony import */ var _csMarked__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csMarked */ "../node_modules/mathjs/es/function/algebra/sparse/csMarked.js");
/* harmony import */ var _csMark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csMark */ "../node_modules/mathjs/es/function/algebra/sparse/csMark.js");
/* harmony import */ var _csDfs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csDfs */ "../node_modules/mathjs/es/function/algebra/sparse/csDfs.js");



/**
 * The csReach function computes X = Reach(B), where B is the nonzero pattern of the n-by-1
 * sparse column of vector b. The function returns the set of nodes reachable from any node in B. The
 * nonzero pattern xi of the solution x to the sparse linear system Lx=b is given by X=Reach(B).
 *
 * @param {Matrix}  g               The G matrix
 * @param {Matrix}  b               The B matrix
 * @param {Number}  k               The kth column in B
 * @param {Array}   xi              The nonzero pattern xi[top] .. xi[n - 1], an array of size = 2 * n
 *                                  The first n entries is the nonzero pattern, the last n entries is the stack
 * @param {Array}   pinv            The inverse row permutation vector
 *
 * @return {Number}                 The index for the nonzero pattern
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */

function csReach(g, b, k, xi, pinv) {
  // g arrays
  var gptr = g._ptr;
  var gsize = g._size; // b arrays

  var bindex = b._index;
  var bptr = b._ptr; // columns

  var n = gsize[1]; // vars

  var p, p0, p1; // initialize top

  var top = n; // loop column indeces in B

  for (p0 = bptr[k], p1 = bptr[k + 1], p = p0; p < p1; p++) {
    // node i
    var i = bindex[p]; // check node i is marked

    if (!Object(_csMarked__WEBPACK_IMPORTED_MODULE_0__["csMarked"])(gptr, i)) {
      // start a dfs at unmarked node i
      top = Object(_csDfs__WEBPACK_IMPORTED_MODULE_2__["csDfs"])(i, g, top, xi, pinv);
    }
  } // loop columns from top -> n - 1


  for (p = top; p < n; p++) {
    // restore G
    Object(_csMark__WEBPACK_IMPORTED_MODULE_1__["csMark"])(gptr, xi[p]);
  }

  return top;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csSpsolve.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csSpsolve.js ***!
  \**********************************************************************/
/*! exports provided: createCsSpsolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCsSpsolve", function() { return createCsSpsolve; });
/* harmony import */ var _csReach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csReach */ "../node_modules/mathjs/es/function/algebra/sparse/csReach.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'csSpsolve';
var dependencies = ['divideScalar', 'multiply', 'subtract'];
var createCsSpsolve = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var divideScalar = _ref.divideScalar,
      multiply = _ref.multiply,
      subtract = _ref.subtract;

  /**
   * The function csSpsolve() computes the solution to G * x = bk, where bk is the
   * kth column of B. When lo is true, the function assumes G = L is lower triangular with the
   * diagonal entry as the first entry in each column. When lo is true, the function assumes G = U
   * is upper triangular with the diagonal entry as the last entry in each column.
   *
   * @param {Matrix}  g               The G matrix
   * @param {Matrix}  b               The B matrix
   * @param {Number}  k               The kth column in B
   * @param {Array}   xi              The nonzero pattern xi[top] .. xi[n - 1], an array of size = 2 * n
   *                                  The first n entries is the nonzero pattern, the last n entries is the stack
   * @param {Array}   x               The soluton to the linear system G * x = b
   * @param {Array}   pinv            The inverse row permutation vector, must be null for L * x = b
   * @param {boolean} lo              The lower (true) upper triangular (false) flag
   *
   * @return {Number}                 The index for the nonzero pattern
   *
   * Reference: http://faculty.cse.tamu.edu/davis/publications.html
   */
  return function csSpsolve(g, b, k, xi, x, pinv, lo) {
    // g arrays
    var gvalues = g._values;
    var gindex = g._index;
    var gptr = g._ptr;
    var gsize = g._size; // columns

    var n = gsize[1]; // b arrays

    var bvalues = b._values;
    var bindex = b._index;
    var bptr = b._ptr; // vars

    var p, p0, p1, q; // xi[top..n-1] = csReach(B(:,k))

    var top = Object(_csReach__WEBPACK_IMPORTED_MODULE_0__["csReach"])(g, b, k, xi, pinv); // clear x

    for (p = top; p < n; p++) {
      x[xi[p]] = 0;
    } // scatter b


    for (p0 = bptr[k], p1 = bptr[k + 1], p = p0; p < p1; p++) {
      x[bindex[p]] = bvalues[p];
    } // loop columns


    for (var px = top; px < n; px++) {
      // x array index for px
      var j = xi[px]; // apply permutation vector (U x = b), j maps to column J of G

      var J = pinv ? pinv[j] : j; // check column J is empty

      if (J < 0) {
        continue;
      } // column value indeces in G, p0 <= p < p1


      p0 = gptr[J];
      p1 = gptr[J + 1]; // x(j) /= G(j,j)

      x[j] = divideScalar(x[j], gvalues[lo ? p0 : p1 - 1]); // first entry L(j,j)

      p = lo ? p0 + 1 : p0;
      q = lo ? p1 : p1 - 1; // loop

      for (; p < q; p++) {
        // row
        var i = gindex[p]; // x(i) -= G(i,j) * x(j)

        x[i] = subtract(x[i], multiply(gvalues[p], x[j]));
      }
    } // return top of stack


    return top;
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csSqr.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csSqr.js ***!
  \******************************************************************/
/*! exports provided: createCsSqr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCsSqr", function() { return createCsSqr; });
/* harmony import */ var _csPermute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csPermute */ "../node_modules/mathjs/es/function/algebra/sparse/csPermute.js");
/* harmony import */ var _csPost__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csPost */ "../node_modules/mathjs/es/function/algebra/sparse/csPost.js");
/* harmony import */ var _csEtree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csEtree */ "../node_modules/mathjs/es/function/algebra/sparse/csEtree.js");
/* harmony import */ var _csAmd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./csAmd */ "../node_modules/mathjs/es/function/algebra/sparse/csAmd.js");
/* harmony import */ var _csCounts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./csCounts */ "../node_modules/mathjs/es/function/algebra/sparse/csCounts.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");






var name = 'csSqr';
var dependencies = ['add', 'multiply', 'transpose'];
var createCsSqr = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var add = _ref.add,
      multiply = _ref.multiply,
      transpose = _ref.transpose;
  var csAmd = Object(_csAmd__WEBPACK_IMPORTED_MODULE_3__["createCsAmd"])({
    add: add,
    multiply: multiply,
    transpose: transpose
  });
  var csCounts = Object(_csCounts__WEBPACK_IMPORTED_MODULE_4__["createCsCounts"])({
    transpose: transpose
  });
  /**
   * Symbolic ordering and analysis for QR and LU decompositions.
   *
   * @param {Number}  order           The ordering strategy (see csAmd for more details)
   * @param {Matrix}  a               The A matrix
   * @param {boolean} qr              Symbolic ordering and analysis for QR decomposition (true) or
   *                                  symbolic ordering and analysis for LU decomposition (false)
   *
   * @return {Object}                 The Symbolic ordering and analysis for matrix A
   *
   * Reference: http://faculty.cse.tamu.edu/davis/publications.html
   */

  return function csSqr(order, a, qr) {
    // a arrays
    var aptr = a._ptr;
    var asize = a._size; // columns

    var n = asize[1]; // vars

    var k; // symbolic analysis result

    var s = {}; // fill-reducing ordering

    s.q = csAmd(order, a); // validate results

    if (order && !s.q) {
      return null;
    } // QR symbolic analysis


    if (qr) {
      // apply permutations if needed
      var c = order ? Object(_csPermute__WEBPACK_IMPORTED_MODULE_0__["csPermute"])(a, null, s.q, 0) : a; // etree of C'*C, where C=A(:,q)

      s.parent = Object(_csEtree__WEBPACK_IMPORTED_MODULE_2__["csEtree"])(c, 1); // post order elimination tree

      var post = Object(_csPost__WEBPACK_IMPORTED_MODULE_1__["csPost"])(s.parent, n); // col counts chol(C'*C)

      s.cp = csCounts(c, s.parent, post, 1); // check we have everything needed to calculate number of nonzero elements

      if (c && s.parent && s.cp && _vcount(c, s)) {
        // calculate number of nonzero elements
        for (s.unz = 0, k = 0; k < n; k++) {
          s.unz += s.cp[k];
        }
      }
    } else {
      // for LU factorization only, guess nnz(L) and nnz(U)
      s.unz = 4 * aptr[n] + n;
      s.lnz = s.unz;
    } // return result S


    return s;
  };
  /**
   * Compute nnz(V) = s.lnz, s.pinv, s.leftmost, s.m2 from A and s.parent
   */

  function _vcount(a, s) {
    // a arrays
    var aptr = a._ptr;
    var aindex = a._index;
    var asize = a._size; // rows & columns

    var m = asize[0];
    var n = asize[1]; // initialize s arrays

    s.pinv = []; // (m + n)

    s.leftmost = []; // (m)
    // vars

    var parent = s.parent;
    var pinv = s.pinv;
    var leftmost = s.leftmost; // workspace, next: first m entries, head: next n entries, tail: next n entries, nque: next n entries

    var w = []; // (m + 3 * n)

    var next = 0;
    var head = m;
    var tail = m + n;
    var nque = m + 2 * n; // vars

    var i, k, p, p0, p1; // initialize w

    for (k = 0; k < n; k++) {
      // queue k is empty
      w[head + k] = -1;
      w[tail + k] = -1;
      w[nque + k] = 0;
    } // initialize row arrays


    for (i = 0; i < m; i++) {
      leftmost[i] = -1;
    } // loop columns backwards


    for (k = n - 1; k >= 0; k--) {
      // values & index for column k
      for (p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {
        // leftmost[i] = min(find(A(i,:)))
        leftmost[aindex[p]] = k;
      }
    } // scan rows in reverse order


    for (i = m - 1; i >= 0; i--) {
      // row i is not yet ordered
      pinv[i] = -1;
      k = leftmost[i]; // check row i is empty

      if (k === -1) {
        continue;
      } // first row in queue k


      if (w[nque + k]++ === 0) {
        w[tail + k] = i;
      } // put i at head of queue k


      w[next + i] = w[head + k];
      w[head + k] = i;
    }

    s.lnz = 0;
    s.m2 = m; // find row permutation and nnz(V)

    for (k = 0; k < n; k++) {
      // remove row i from queue k
      i = w[head + k]; // count V(k,k) as nonzero

      s.lnz++; // add a fictitious row

      if (i < 0) {
        i = s.m2++;
      } // associate row i with V(:,k)


      pinv[i] = k; // skip if V(k+1:m,k) is empty

      if (--nque[k] <= 0) {
        continue;
      } // nque[k] is nnz (V(k+1:m,k))


      s.lnz += w[nque + k]; // move all rows to parent of k

      var pa = parent[k];

      if (pa !== -1) {
        if (w[nque + pa] === 0) {
          w[tail + pa] = w[tail + k];
        }

        w[next + w[tail + k]] = w[head + pa];
        w[head + pa] = w[next + i];
        w[nque + pa] += w[nque + k];
      }
    }

    for (i = 0; i < m; i++) {
      if (pinv[i] < 0) {
        pinv[i] = k++;
      }
    }

    return true;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csTdfs.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csTdfs.js ***!
  \*******************************************************************/
/*! exports provided: csTdfs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csTdfs", function() { return csTdfs; });
/**
 * Depth-first search and postorder of a tree rooted at node j
 *
 * @param {Number}  j               The tree node
 * @param {Number}  k
 * @param {Array}   w               The workspace array
 * @param {Number}  head            The index offset within the workspace for the head array
 * @param {Number}  next            The index offset within the workspace for the next array
 * @param {Array}   post            The post ordering array
 * @param {Number}  stack           The index offset within the workspace for the stack array
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */
function csTdfs(j, k, w, head, next, post, stack) {
  // variables
  var top = 0; // place j on the stack

  w[stack] = j; // while (stack is not empty)

  while (top >= 0) {
    // p = top of stack
    var p = w[stack + top]; // i = youngest child of p

    var i = w[head + p];

    if (i === -1) {
      // p has no unordered children left
      top--; // node p is the kth postordered node

      post[k++] = p;
    } else {
      // remove i from children of p
      w[head + p] = w[next + i]; // increment top

      ++top; // start dfs on child node i

      w[stack + top] = i;
    }
  }

  return k;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/algebra/sparse/csUnflip.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/algebra/sparse/csUnflip.js ***!
  \*********************************************************************/
/*! exports provided: csUnflip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csUnflip", function() { return csUnflip; });
/* harmony import */ var _csFlip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csFlip */ "../node_modules/mathjs/es/function/algebra/sparse/csFlip.js");

/**
 * Flips the value if it is negative of returns the same value otherwise.
 *
 * @param {Number}  i               The value to flip
 *
 * Reference: http://faculty.cse.tamu.edu/davis/publications.html
 */

function csUnflip(i) {
  // flip the value if it is negative
  return i < 0 ? Object(_csFlip__WEBPACK_IMPORTED_MODULE_0__["csFlip"])(i) : i;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/abs.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/abs.js ***!
  \************************************************************/
/*! exports provided: createAbs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAbs", function() { return createAbs; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'abs';
var dependencies = ['typed'];
var createAbs = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the absolute value of a number. For matrices, the function is
   * evaluated element wise.
   *
   * Syntax:
   *
   *    math.abs(x)
   *
   * Examples:
   *
   *    math.abs(3.5)                // returns number 3.5
   *    math.abs(-4.2)               // returns number 4.2
   *
   *    math.abs([3, -5, -1, 0, 2])  // returns Array [3, 5, 1, 0, 2]
   *
   * See also:
   *
   *    sign
   *
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x
   *            A number or matrix for which to get the absolute value
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}
   *            Absolute value of `x`
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["absNumber"],
    Complex: function Complex(x) {
      return x.abs();
    },
    BigNumber: function BigNumber(x) {
      return x.abs();
    },
    Fraction: function Fraction(x) {
      return x.abs();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since abs(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    },
    Unit: function Unit(x) {
      return x.abs();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/add.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/add.js ***!
  \************************************************************/
/*! exports provided: createAdd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAdd", function() { return createAdd; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _type_matrix_utils_algorithm04__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm04 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm04.js");
/* harmony import */ var _type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");







var name = 'add';
var dependencies = ['typed', 'matrix', 'addScalar', 'equalScalar', 'DenseMatrix', 'SparseMatrix'];
var createAdd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      addScalar = _ref.addScalar,
      equalScalar = _ref.equalScalar,
      DenseMatrix = _ref.DenseMatrix,
      SparseMatrix = _ref.SparseMatrix;
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm04 = Object(_type_matrix_utils_algorithm04__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm04"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm10 = Object(_type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm10"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Add two or more values, `x + y`.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.add(x, y)
   *    math.add(x, y, z, ...)
   *
   * Examples:
   *
   *    math.add(2, 3)               // returns number 5
   *    math.add(2, 3, 4)            // returns number 9
   *
   *    const a = math.complex(2, 3)
   *    const b = math.complex(-4, 1)
   *    math.add(a, b)               // returns Complex -2 + 4i
   *
   *    math.add([1, 2, 3], 4)       // returns Array [5, 6, 7]
   *
   *    const c = math.unit('5 cm')
   *    const d = math.unit('2.1 mm')
   *    math.add(c, d)               // returns Unit 52.1 mm
   *
   *    math.add("2.3", "4")         // returns number 6.3
   *
   * See also:
   *
   *    subtract, sum
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`
   */

  return typed(name, Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["extend"])({
    // we extend the signatures of addScalar with signatures dealing with matrices
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, addScalar);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm01(x, y, addScalar, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm01(y, x, addScalar, true);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm04(x, y, addScalar);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, addScalar, false);
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm10(x, y, addScalar, false);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, addScalar, true);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm10(y, x, addScalar, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, addScalar, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, addScalar, true).valueOf();
    },
    'any, any': addScalar,
    'any, any, ...any': function anyAnyAny(x, y, rest) {
      var result = this(x, y);

      for (var i = 0; i < rest.length; i++) {
        result = this(result, rest[i]);
      }

      return result;
    }
  }, addScalar.signatures));
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/addScalar.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/addScalar.js ***!
  \******************************************************************/
/*! exports provided: createAddScalar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddScalar", function() { return createAddScalar; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");


var name = 'addScalar';
var dependencies = ['typed'];
var createAddScalar = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Add two scalar values, `x + y`.
   * This function is meant for internal use: it is used by the public function
   * `add`
   *
   * This function does not support collections (Array or Matrix).
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add
   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add
   * @return {number | BigNumber | Fraction | Complex | Unit}     Sum of `x` and `y`
   * @private
   */
  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_1__["addNumber"],
    'Complex, Complex': function ComplexComplex(x, y) {
      return x.add(y);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.plus(y);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.add(y);
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (x.value === null || x.value === undefined) throw new Error('Parameter x contains a unit with undefined value');
      if (y.value === null || y.value === undefined) throw new Error('Parameter y contains a unit with undefined value');
      if (!x.equalBase(y)) throw new Error('Units do not match');
      var res = x.clone();
      res.value = this(res.value, y.value);
      res.fixPrefix = false;
      return res;
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/cbrt.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/cbrt.js ***!
  \*************************************************************/
/*! exports provided: createCbrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCbrt", function() { return createCbrt; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");




var name = 'cbrt';
var dependencies = ['config', 'typed', 'isNegative', 'unaryMinus', 'matrix', 'Complex', 'BigNumber', 'Fraction'];
var createCbrt = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var config = _ref.config,
      typed = _ref.typed,
      isNegative = _ref.isNegative,
      unaryMinus = _ref.unaryMinus,
      matrix = _ref.matrix,
      Complex = _ref.Complex,
      BigNumber = _ref.BigNumber,
      Fraction = _ref.Fraction;

  /**
   * Calculate the cubic root of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.cbrt(x)
   *    math.cbrt(x, allRoots)
   *
   * Examples:
   *
   *    math.cbrt(27)                  // returns 3
   *    math.cube(3)                   // returns 27
   *    math.cbrt(-64)                 // returns -4
   *    math.cbrt(math.unit('27 m^3')) // returns Unit 3 m
   *    math.cbrt([27, 64, 125])       // returns [3, 4, 5]
   *
   *    const x = math.complex('8i')
   *    math.cbrt(x)                   // returns Complex 1.7320508075689 + i
   *    math.cbrt(x, true)             // returns Matrix [
   *                                    //    1.7320508075689 + i
   *                                    //   -1.7320508075689 + i
   *                                    //   -2i
   *                                    // ]
   *
   * See also:
   *
   *    square, sqrt, cube
   *
   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x
   *            Value for which to calculate the cubic root.
   * @param {boolean} [allRoots]  Optional, false by default. Only applicable
   *            when `x` is a number or complex number. If true, all complex
   *            roots are returned, if false (default) the principal root is
   *            returned.
   * @return {number | BigNumber | Complex | Unit | Array | Matrix}
   *            Returns the cubic root of `x`
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_3__["cbrtNumber"],
    // note: signature 'number, boolean' is also supported,
    //       created by typed as it knows how to convert number to Complex
    Complex: _cbrtComplex,
    'Complex, boolean': _cbrtComplex,
    BigNumber: function BigNumber(x) {
      return x.cbrt();
    },
    Unit: _cbrtUnit,
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since cbrt(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_2__["deepMap"])(x, this, true);
    }
  });
  /**
   * Calculate the cubic root for a complex number
   * @param {Complex} x
   * @param {boolean} [allRoots]   If true, the function will return an array
   *                               with all three roots. If false or undefined,
   *                               the principal root is returned.
   * @returns {Complex | Array.<Complex> | Matrix.<Complex>} Returns the cubic root(s) of x
   * @private
   */

  function _cbrtComplex(x, allRoots) {
    // https://www.wikiwand.com/en/Cube_root#/Complex_numbers
    var arg3 = x.arg() / 3;
    var abs = x.abs(); // principal root:

    var principal = new Complex(Object(_plain_number__WEBPACK_IMPORTED_MODULE_3__["cbrtNumber"])(abs), 0).mul(new Complex(0, arg3).exp());

    if (allRoots) {
      var all = [principal, new Complex(Object(_plain_number__WEBPACK_IMPORTED_MODULE_3__["cbrtNumber"])(abs), 0).mul(new Complex(0, arg3 + Math.PI * 2 / 3).exp()), new Complex(Object(_plain_number__WEBPACK_IMPORTED_MODULE_3__["cbrtNumber"])(abs), 0).mul(new Complex(0, arg3 - Math.PI * 2 / 3).exp())];
      return config.matrix === 'Array' ? all : matrix(all);
    } else {
      return principal;
    }
  }
  /**
   * Calculate the cubic root for a Unit
   * @param {Unit} x
   * @return {Unit} Returns the cubic root of x
   * @private
   */


  function _cbrtUnit(x) {
    if (x.value && Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isComplex"])(x.value)) {
      var result = x.clone();
      result.value = 1.0;
      result = result.pow(1.0 / 3); // Compute the units

      result.value = _cbrtComplex(x.value); // Compute the value

      return result;
    } else {
      var negate = isNegative(x.value);

      if (negate) {
        x.value = unaryMinus(x.value);
      } // TODO: create a helper function for this


      var third;

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isBigNumber"])(x.value)) {
        third = new BigNumber(1).div(3);
      } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isFraction"])(x.value)) {
        third = new Fraction(1, 3);
      } else {
        third = 1 / 3;
      }

      var _result = x.pow(third);

      if (negate) {
        _result.value = unaryMinus(_result.value);
      }

      return _result;
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/ceil.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/ceil.js ***!
  \*************************************************************/
/*! exports provided: createCeil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCeil", function() { return createCeil; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");





var name = 'ceil';
var dependencies = ['typed', 'config', 'round'];
var createCeil = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      round = _ref.round;

  /**
   * Round a value towards plus infinity
   * If `x` is complex, both real and imaginary part are rounded towards plus infinity.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.ceil(x)
   *
   * Examples:
   *
   *    math.ceil(3.2)               // returns number 4
   *    math.ceil(3.8)               // returns number 4
   *    math.ceil(-4.2)              // returns number -4
   *    math.ceil(-4.7)              // returns number -4
   *
   *    const c = math.complex(3.2, -2.7)
   *    math.ceil(c)                 // returns Complex 4 - 2i
   *
   *    math.ceil([3.2, 3.8, -4.7])  // returns Array [4, 4, -4]
   *
   * See also:
   *
   *    floor, fix, round
   *
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value
   */
  return typed('ceil', {
    number: function number(x) {
      if (Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["nearlyEqual"])(x, round(x), config.epsilon)) {
        return round(x);
      } else {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_4__["ceilNumber"])(x);
      }
    },
    Complex: function Complex(x) {
      return x.ceil();
    },
    BigNumber: function BigNumber(x) {
      if (Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_3__["nearlyEqual"])(x, round(x), config.epsilon)) {
        return round(x);
      } else {
        return x.ceil();
      }
    },
    Fraction: function Fraction(x) {
      return x.ceil();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since ceil(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/cube.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/cube.js ***!
  \*************************************************************/
/*! exports provided: createCube */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCube", function() { return createCube; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'cube';
var dependencies = ['typed'];
var createCube = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Compute the cube of a value, `x * x * x`.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.cube(x)
   *
   * Examples:
   *
   *    math.cube(2)            // returns number 8
   *    math.pow(2, 3)          // returns number 8
   *    math.cube(4)            // returns number 64
   *    4 * 4 * 4               // returns number 64
   *
   *    math.cube([1, 2, 3, 4]) // returns Array [1, 8, 27, 64]
   *
   * See also:
   *
   *    multiply, square, pow, cbrt
   *
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x  Number for which to calculate the cube
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} Cube of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["cubeNumber"],
    Complex: function Complex(x) {
      return x.mul(x).mul(x); // Is faster than pow(x, 3)
    },
    BigNumber: function BigNumber(x) {
      return x.times(x).times(x);
    },
    Fraction: function Fraction(x) {
      return x.pow(3); // Is faster than mul()mul()mul()
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since cube(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    },
    Unit: function Unit(x) {
      return x.pow(3);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/divide.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/divide.js ***!
  \***************************************************************/
/*! exports provided: createDivide */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDivide", function() { return createDivide; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");




var name = 'divide';
var dependencies = ['typed', 'matrix', 'multiply', 'equalScalar', 'divideScalar', 'inv'];
var createDivide = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      multiply = _ref.multiply,
      equalScalar = _ref.equalScalar,
      divideScalar = _ref.divideScalar,
      inv = _ref.inv;
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Divide two values, `x / y`.
   * To divide matrices, `x` is multiplied with the inverse of `y`: `x * inv(y)`.
   *
   * Syntax:
   *
   *    math.divide(x, y)
   *
   * Examples:
   *
   *    math.divide(2, 3)            // returns number 0.6666666666666666
   *
   *    const a = math.complex(5, 14)
   *    const b = math.complex(4, 1)
   *    math.divide(a, b)            // returns Complex 2 + 3i
   *
   *    const c = [[7, -6], [13, -4]]
   *    const d = [[1, 2], [4, 3]]
   *    math.divide(c, d)            // returns Array [[-9, 4], [-11, 6]]
   *
   *    const e = math.unit('18 km')
   *    math.divide(e, 4.5)          // returns Unit 4 km
   *
   * See also:
   *
   *    multiply
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x   Numerator
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} y          Denominator
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                      Quotient, `x / y`
   */

  return typed('divide', Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["extend"])({
    // we extend the signatures of divideScalar with signatures dealing with matrices
    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(x, y) {
      // TODO: implement matrix right division using pseudo inverse
      // https://www.mathworks.nl/help/matlab/ref/mrdivide.html
      // https://www.gnu.org/software/octave/doc/interpreter/Arithmetic-Ops.html
      // https://stackoverflow.com/questions/12263932/how-does-gnu-octave-matrix-division-work-getting-unexpected-behaviour
      return multiply(x, inv(y));
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, divideScalar, false);
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm11(x, y, divideScalar, false);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, divideScalar, false).valueOf();
    },
    'any, Array | Matrix': function anyArrayMatrix(x, y) {
      return multiply(x, inv(y));
    }
  }, divideScalar.signatures));
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/divideScalar.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/divideScalar.js ***!
  \*********************************************************************/
/*! exports provided: createDivideScalar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDivideScalar", function() { return createDivideScalar; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");


var name = 'divideScalar';
var dependencies = ['typed', 'numeric'];
var createDivideScalar = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      numeric = _ref.numeric;

  /**
   * Divide two scalar values, `x / y`.
   * This function is meant for internal use: it is used by the public functions
   * `divide` and `inv`.
   *
   * This function does not support collections (Array or Matrix).
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit} x   Numerator
   * @param  {number | BigNumber | Fraction | Complex} y          Denominator
   * @return {number | BigNumber | Fraction | Complex | Unit}     Quotient, `x / y`
   * @private
   */
  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return x / y;
    },
    'Complex, Complex': function ComplexComplex(x, y) {
      return x.div(y);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.div(y);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.div(y);
    },
    'Unit, number | Fraction | BigNumber': function UnitNumberFractionBigNumber(x, y) {
      var res = x.clone(); // TODO: move the divide function to Unit.js, it uses internals of Unit

      var one = numeric(1, Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["typeOf"])(y));
      res.value = this(res.value === null ? res._normalize(one) : res.value, y);
      return res;
    },
    'number | Fraction | BigNumber, Unit': function numberFractionBigNumberUnit(x, y) {
      var res = y.clone();
      res = res.pow(-1); // TODO: move the divide function to Unit.js, it uses internals of Unit

      var one = numeric(1, Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["typeOf"])(x));
      res.value = this(x, y.value === null ? y._normalize(one) : y.value);
      return res;
    },
    'Unit, Unit': function UnitUnit(x, y) {
      return x.divide(y);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/dotDivide.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/dotDivide.js ***!
  \******************************************************************/
/*! exports provided: createDotDivide */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDotDivide", function() { return createDotDivide; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");








var name = 'dotDivide';
var dependencies = ['typed', 'matrix', 'equalScalar', 'divideScalar', 'DenseMatrix'];
var createDotDivide = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      divideScalar = _ref.divideScalar,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Divide two matrices element wise. The function accepts both matrices and
   * scalar values.
   *
   * Syntax:
   *
   *    math.dotDivide(x, y)
   *
   * Examples:
   *
   *    math.dotDivide(2, 4)   // returns 0.5
   *
   *    a = [[9, 5], [6, 1]]
   *    b = [[3, 2], [5, 2]]
   *
   *    math.dotDivide(a, b)   // returns [[3, 2.5], [1.2, 0.5]]
   *    math.divide(a, b)      // returns [[1.75, 0.75], [-1.75, 2.25]]
   *
   * See also:
   *
   *    divide, multiply, dotMultiply
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Numerator
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Denominator
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Quotient, `x ./ y`
   */

  return typed(name, {
    'any, any': divideScalar,
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, divideScalar, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, divideScalar, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, divideScalar, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, divideScalar);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm11(x, y, divideScalar, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, divideScalar, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, divideScalar, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, divideScalar, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, divideScalar, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, divideScalar, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/dotMultiply.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/dotMultiply.js ***!
  \********************************************************************/
/*! exports provided: createDotMultiply */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDotMultiply", function() { return createDotMultiply; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm09__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm09 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm09.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");






var name = 'dotMultiply';
var dependencies = ['typed', 'matrix', 'equalScalar', 'multiplyScalar'];
var createDotMultiply = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      multiplyScalar = _ref.multiplyScalar;
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm09 = Object(_type_matrix_utils_algorithm09__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm09"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Multiply two matrices element wise. The function accepts both matrices and
   * scalar values.
   *
   * Syntax:
   *
   *    math.dotMultiply(x, y)
   *
   * Examples:
   *
   *    math.dotMultiply(2, 4) // returns 8
   *
   *    a = [[9, 5], [6, 1]]
   *    b = [[3, 2], [5, 2]]
   *
   *    math.dotMultiply(a, b) // returns [[27, 10], [30, 2]]
   *    math.multiply(a, b)    // returns [[52, 28], [23, 14]]
   *
   * See also:
   *
   *    multiply, divide, dotDivide
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Left hand value
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Right hand value
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Multiplication of `x` and `y`
   */

  return typed(name, {
    'any, any': multiplyScalar,
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm09(x, y, multiplyScalar, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, multiplyScalar, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm02(x, y, multiplyScalar, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, multiplyScalar);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm11(x, y, multiplyScalar, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, multiplyScalar, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm11(y, x, multiplyScalar, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, multiplyScalar, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/dotPow.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/dotPow.js ***!
  \***************************************************************/
/*! exports provided: createDotPow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDotPow", function() { return createDotPow; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");







var name = 'dotPow';
var dependencies = ['typed', 'equalScalar', 'matrix', 'pow', 'DenseMatrix'];
var createDotPow = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar,
      matrix = _ref.matrix,
      pow = _ref.pow,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Calculates the power of x to y element wise.
   *
   * Syntax:
   *
   *    math.dotPow(x, y)
   *
   * Examples:
   *
   *    math.dotPow(2, 3)            // returns number 8
   *
   *    const a = [[1, 2], [4, 3]]
   *    math.dotPow(a, 2)            // returns Array [[1, 4], [16, 9]]
   *    math.pow(a, 2)               // returns Array [[9, 8], [16, 17]]
   *
   * See also:
   *
   *    pow, sqrt, multiply
   *
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x  The base
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y  The exponent
   * @return {number | BigNumber | Complex | Unit | Array | Matrix}                     The value of `x` to the power `y`
   */

  return typed(name, {
    'any, any': pow,
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, pow, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, pow, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, pow, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, pow);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/exp.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/exp.js ***!
  \************************************************************/
/*! exports provided: createExp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createExp", function() { return createExp; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'exp';
var dependencies = ['typed'];
var createExp = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the exponent of a value.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.exp(x)
   *
   * Examples:
   *
   *    math.exp(2)                  // returns number 7.3890560989306495
   *    math.pow(math.e, 2)          // returns number 7.3890560989306495
   *    math.log(math.exp(2))        // returns number 2
   *
   *    math.exp([1, 2, 3])
   *    // returns Array [
   *    //   2.718281828459045,
   *    //   7.3890560989306495,
   *    //   20.085536923187668
   *    // ]
   *
   * See also:
   *
   *    expm1, log, pow
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to exponentiate
   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["expNumber"],
    Complex: function Complex(x) {
      return x.exp();
    },
    BigNumber: function BigNumber(x) {
      return x.exp();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // TODO: exp(sparse) should return a dense matrix since exp(0)==1
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/expm1.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/expm1.js ***!
  \**************************************************************/
/*! exports provided: createExpm1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createExpm1", function() { return createExpm1; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'expm1';
var dependencies = ['typed', 'Complex'];
var createExpm1 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _Complex = _ref.Complex;

  /**
   * Calculate the value of subtracting 1 from the exponential value.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.expm1(x)
   *
   * Examples:
   *
   *    math.expm1(2)                      // returns number 6.38905609893065
   *    math.pow(math.e, 2) - 1            // returns number 6.3890560989306495
   *    math.log(math.expm1(2) + 1)        // returns number 2
   *
   *    math.expm1([1, 2, 3])
   *    // returns Array [
   *    //   1.718281828459045,
   *    //   6.3890560989306495,
   *    //   19.085536923187668
   *    // ]
   *
   * See also:
   *
   *    exp, log, pow
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to apply expm1
   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["expm1Number"],
    Complex: function Complex(x) {
      var r = Math.exp(x.re);
      return new _Complex(r * Math.cos(x.im) - 1, r * Math.sin(x.im));
    },
    BigNumber: function BigNumber(x) {
      return x.exp().minus(1);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/fix.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/fix.js ***!
  \************************************************************/
/*! exports provided: createFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFix", function() { return createFix; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'fix';
var dependencies = ['typed', 'Complex', 'ceil', 'floor'];
var createFix = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _Complex = _ref.Complex,
      ceil = _ref.ceil,
      floor = _ref.floor;

  /**
   * Round a value towards zero.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.fix(x)
   *
   * Examples:
   *
   *    math.fix(3.2)                // returns number 3
   *    math.fix(3.8)                // returns number 3
   *    math.fix(-4.2)               // returns number -4
   *    math.fix(-4.7)               // returns number -4
   *
   *    const c = math.complex(3.2, -2.7)
   *    math.fix(c)                  // returns Complex 3 - 2i
   *
   *    math.fix([3.2, 3.8, -4.7])   // returns Array [3, 3, -4]
   *
   * See also:
   *
   *    ceil, floor, round
   *
   * @param {number | BigNumber | Fraction | Complex | Array | Matrix} x Number to be rounded
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}            Rounded value
   */
  return typed('fix', {
    number: function number(x) {
      return x > 0 ? floor(x) : ceil(x);
    },
    Complex: function Complex(x) {
      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));
    },
    BigNumber: function BigNumber(x) {
      return x.isNegative() ? ceil(x) : floor(x);
    },
    Fraction: function Fraction(x) {
      return x.s < 0 ? x.ceil() : x.floor();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since fix(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/floor.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/floor.js ***!
  \**************************************************************/
/*! exports provided: createFloor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFloor", function() { return createFloor; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");




var name = 'floor';
var dependencies = ['typed', 'config', 'round'];
var createFloor = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      round = _ref.round;

  /**
   * Round a value towards minus infinity.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.floor(x)
   *
   * Examples:
   *
   *    math.floor(3.2)              // returns number 3
   *    math.floor(3.8)              // returns number 3
   *    math.floor(-4.2)             // returns number -5
   *    math.floor(-4.7)             // returns number -5
   *
   *    const c = math.complex(3.2, -2.7)
   *    math.floor(c)                // returns Complex 3 - 3i
   *
   *    math.floor([3.2, 3.8, -4.7]) // returns Array [3, 3, -5]
   *
   * See also:
   *
   *    ceil, fix, round
   *
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value
   */
  return typed('floor', {
    number: function number(x) {
      if (Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["nearlyEqual"])(x, round(x), config.epsilon)) {
        return round(x);
      } else {
        return Math.floor(x);
      }
    },
    Complex: function Complex(x) {
      return x.floor();
    },
    BigNumber: function BigNumber(x) {
      if (Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_3__["nearlyEqual"])(x, round(x), config.epsilon)) {
        return round(x);
      } else {
        return x.floor();
      }
    },
    Fraction: function Fraction(x) {
      return x.floor();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since floor(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/gcd.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/gcd.js ***!
  \************************************************************/
/*! exports provided: createGcd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGcd", function() { return createGcd; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _type_matrix_utils_algorithm04__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm04 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm04.js");
/* harmony import */ var _type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");







var name = 'gcd';
var dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];
var createGcd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      BigNumber = _ref.BigNumber,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm04 = Object(_type_matrix_utils_algorithm04__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm04"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm10 = Object(_type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm10"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Calculate the greatest common divisor for two or more values or arrays.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.gcd(a, b)
   *    math.gcd(a, b, c, ...)
   *
   * Examples:
   *
   *    math.gcd(8, 12)              // returns 4
   *    math.gcd(-4, 6)              // returns 2
   *    math.gcd(25, 15, -10)        // returns 5
   *
   *    math.gcd([8, -4], [12, 6])   // returns [4, 2]
   *
   * See also:
   *
   *    lcm, xgcd
   *
   * @param {... number | BigNumber | Fraction | Array | Matrix} args  Two or more integer numbers
   * @return {number | BigNumber | Fraction | Array | Matrix}                           The greatest common divisor
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_6__["gcdNumber"],
    'BigNumber, BigNumber': _gcdBigNumber,
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.gcd(y);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm04(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm01(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm01(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      return algorithm10(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      return algorithm14(x, y, this, false);
    },
    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {
      return algorithm10(y, x, this, true);
    },
    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'number | BigNumber, Array': function numberBigNumberArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    },
    // TODO: need a smarter notation here
    'Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber': function ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber(a, b, args) {
      var res = this(a, b);

      for (var i = 0; i < args.length; i++) {
        res = this(res, args[i]);
      }

      return res;
    }
  });
  /**
   * Calculate gcd for BigNumbers
   * @param {BigNumber} a
   * @param {BigNumber} b
   * @returns {BigNumber} Returns greatest common denominator of a and b
   * @private
   */

  function _gcdBigNumber(a, b) {
    if (!a.isInt() || !b.isInt()) {
      throw new Error('Parameters in function gcd must be integer numbers');
    } // https://en.wikipedia.org/wiki/Euclidean_algorithm


    var zero = new BigNumber(0);

    while (!b.isZero()) {
      var r = a.mod(b);
      a = b;
      b = r;
    }

    return a.lt(zero) ? a.neg() : a;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/hypot.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/hypot.js ***!
  \**************************************************************/
/*! exports provided: createHypot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createHypot", function() { return createHypot; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");


var name = 'hypot';
var dependencies = ['typed', 'abs', 'addScalar', 'divideScalar', 'multiplyScalar', 'sqrt', 'smaller', 'isPositive'];
var createHypot = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      abs = _ref.abs,
      addScalar = _ref.addScalar,
      divideScalar = _ref.divideScalar,
      multiplyScalar = _ref.multiplyScalar,
      sqrt = _ref.sqrt,
      smaller = _ref.smaller,
      isPositive = _ref.isPositive;

  /**
   * Calculate the hypotenusa of a list with values. The hypotenusa is defined as:
   *
   *     hypot(a, b, c, ...) = sqrt(a^2 + b^2 + c^2 + ...)
   *
   * For matrix input, the hypotenusa is calculated for all values in the matrix.
   *
   * Syntax:
   *
   *     math.hypot(a, b, ...)
   *     math.hypot([a, b, c, ...])
   *
   * Examples:
   *
   *     math.hypot(3, 4)      // 5
   *     math.hypot(3, 4, 5)   // 7.0710678118654755
   *     math.hypot([3, 4, 5]) // 7.0710678118654755
   *     math.hypot(-2)        // 2
   *
   * See also:
   *
   *     abs, norm
   *
   * @param {... number | BigNumber | Array | Matrix} args    A list with numeric values or an Array or Matrix.
   *                                                          Matrix and Array input is flattened and returns a
   *                                                          single number for the whole matrix.
   * @return {number | BigNumber} Returns the hypothenusa of the input values.
   */
  return typed(name, {
    '... number | BigNumber': _hypot,
    Array: function Array(x) {
      return this.apply(this, Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["flatten"])(x));
    },
    Matrix: function Matrix(x) {
      return this.apply(this, Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["flatten"])(x.toArray()));
    }
  });
  /**
   * Calculate the hypotenusa for an Array with values
   * @param {Array.<number | BigNumber>} args
   * @return {number | BigNumber} Returns the result
   * @private
   */

  function _hypot(args) {
    // code based on `hypot` from es6-shim:
    // https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1619-L1633
    var result = 0;
    var largest = 0;

    for (var i = 0; i < args.length; i++) {
      var value = abs(args[i]);

      if (smaller(largest, value)) {
        result = multiplyScalar(result, multiplyScalar(divideScalar(largest, value), divideScalar(largest, value)));
        result = addScalar(result, 1);
        largest = value;
      } else {
        result = addScalar(result, isPositive(value) ? multiplyScalar(divideScalar(value, largest), divideScalar(value, largest)) : value);
      }
    }

    return multiplyScalar(largest, sqrt(result));
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/lcm.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/lcm.js ***!
  \************************************************************/
/*! exports provided: createLcm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLcm", function() { return createLcm; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm06.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");







var name = 'lcm';
var dependencies = ['typed', 'matrix', 'equalScalar'];
var createLcm = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar;
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm06 = Object(_type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm06"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Calculate the least common multiple for two or more values or arrays.
   *
   * lcm is defined as:
   *
   *     lcm(a, b) = abs(a * b) / gcd(a, b)
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.lcm(a, b)
   *    math.lcm(a, b, c, ...)
   *
   * Examples:
   *
   *    math.lcm(4, 6)               // returns 12
   *    math.lcm(6, 21)              // returns 42
   *    math.lcm(6, 21, 5)           // returns 210
   *
   *    math.lcm([4, 6], [6, 21])    // returns [12, 42]
   *
   * See also:
   *
   *    gcd, xgcd
   *
   * @param {... number | BigNumber | Array | Matrix} args  Two or more integer numbers
   * @return {number | BigNumber | Array | Matrix}                           The least common multiple
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_6__["lcmNumber"],
    'BigNumber, BigNumber': _lcmBigNumber,
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.lcm(y);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm06(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm02(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      return algorithm14(x, y, this, false);
    },
    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {
      return algorithm11(y, x, this, true);
    },
    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'number | BigNumber, Array': function numberBigNumberArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    },
    // TODO: need a smarter notation here
    'Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber': function ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber(a, b, args) {
      var res = this(a, b);

      for (var i = 0; i < args.length; i++) {
        res = this(res, args[i]);
      }

      return res;
    }
  });
  /**
   * Calculate lcm for two BigNumbers
   * @param {BigNumber} a
   * @param {BigNumber} b
   * @returns {BigNumber} Returns the least common multiple of a and b
   * @private
   */

  function _lcmBigNumber(a, b) {
    if (!a.isInt() || !b.isInt()) {
      throw new Error('Parameters in function lcm must be integer numbers');
    }

    if (a.isZero()) {
      return a;
    }

    if (b.isZero()) {
      return b;
    } // https://en.wikipedia.org/wiki/Euclidean_algorithm
    // evaluate lcm here inline to reduce overhead


    var prod = a.times(b);

    while (!b.isZero()) {
      var t = b;
      b = a.mod(t);
      a = t;
    }

    return prod.div(a).abs();
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/log.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/log.js ***!
  \************************************************************/
/*! exports provided: createLog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLog", function() { return createLog; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'log';
var dependencies = ['config', 'typed', 'divideScalar', 'Complex'];
var createLog = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      divideScalar = _ref.divideScalar,
      Complex = _ref.Complex;

  /**
   * Calculate the logarithm of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.log(x)
   *    math.log(x, base)
   *
   * Examples:
   *
   *    math.log(3.5)                  // returns 1.252762968495368
   *    math.exp(math.log(2.4))        // returns 2.4
   *
   *    math.pow(10, 4)                // returns 10000
   *    math.log(10000, 10)            // returns 4
   *    math.log(10000) / math.log(10) // returns 4
   *
   *    math.log(1024, 2)              // returns 10
   *    math.pow(2, 10)                // returns 1024
   *
   * See also:
   *
   *    exp, log2, log10, log1p
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            Value for which to calculate the logarithm.
   * @param {number | BigNumber | Complex} [base=e]
   *            Optional base for the logarithm. If not provided, the natural
   *            logarithm of `x` is calculated.
   * @return {number | BigNumber | Complex | Array | Matrix}
   *            Returns the logarithm of `x`
   */
  return typed(name, {
    number: function number(x) {
      if (x >= 0 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["logNumber"])(x);
      } else {
        // negative value -> complex value computation
        return new Complex(x, 0).log();
      }
    },
    Complex: function Complex(x) {
      return x.log();
    },
    BigNumber: function BigNumber(x) {
      if (!x.isNegative() || config.predictable) {
        return x.ln();
      } else {
        // downgrade to number, return Complex valued result
        return new Complex(x.toNumber(), 0).log();
      }
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    },
    'any, any': function anyAny(x, base) {
      // calculate logarithm for a specified base, log(x, base)
      return divideScalar(this(x), this(base));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/log10.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/log10.js ***!
  \**************************************************************/
/*! exports provided: createLog10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLog10", function() { return createLog10; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'log10';
var dependencies = ['typed', 'config', 'Complex'];
var createLog10 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      _Complex = _ref.Complex;

  /**
   * Calculate the 10-base logarithm of a value. This is the same as calculating `log(x, 10)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.log10(x)
   *
   * Examples:
   *
   *    math.log10(0.00001)            // returns -5
   *    math.log10(10000)              // returns 4
   *    math.log(10000) / math.log(10) // returns 4
   *    math.pow(10, 4)                // returns 10000
   *
   * See also:
   *
   *    exp, log, log1p, log2
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            Value for which to calculate the logarithm.
   * @return {number | BigNumber | Complex | Array | Matrix}
   *            Returns the 10-base logarithm of `x`
   */
  return typed(name, {
    number: function number(x) {
      if (x >= 0 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["log10Number"])(x);
      } else {
        // negative value -> complex value computation
        return new _Complex(x, 0).log().div(Math.LN10);
      }
    },
    Complex: function Complex(x) {
      return new _Complex(x).log().div(Math.LN10);
    },
    BigNumber: function BigNumber(x) {
      if (!x.isNegative() || config.predictable) {
        return x.log();
      } else {
        // downgrade to number, return Complex valued result
        return new _Complex(x.toNumber(), 0).log().div(Math.LN10);
      }
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/log1p.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/log1p.js ***!
  \**************************************************************/
/*! exports provided: createLog1p */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLog1p", function() { return createLog1p; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");



var name = 'log1p';
var dependencies = ['typed', 'config', 'divideScalar', 'log', 'Complex'];
var createLog1p = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      divideScalar = _ref.divideScalar,
      log = _ref.log,
      Complex = _ref.Complex;

  /**
   * Calculate the logarithm of a `value+1`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.log1p(x)
   *    math.log1p(x, base)
   *
   * Examples:
   *
   *    math.log1p(2.5)                 // returns 1.252762968495368
   *    math.exp(math.log1p(1.4))       // returns 2.4
   *
   *    math.pow(10, 4)                 // returns 10000
   *    math.log1p(9999, 10)            // returns 4
   *    math.log1p(9999) / math.log(10) // returns 4
   *
   * See also:
   *
   *    exp, log, log2, log10
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            Value for which to calculate the logarithm of `x+1`.
   * @param {number | BigNumber | Complex} [base=e]
   *            Optional base for the logarithm. If not provided, the natural
   *            logarithm of `x+1` is calculated.
   * @return {number | BigNumber | Complex | Array | Matrix}
   *            Returns the logarithm of `x+1`
   */
  return typed(name, {
    number: function number(x) {
      if (x >= -1 || config.predictable) {
        return Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["log1p"])(x);
      } else {
        // negative value -> complex value computation
        return _log1pComplex(new Complex(x, 0));
      }
    },
    Complex: _log1pComplex,
    BigNumber: function BigNumber(x) {
      var y = x.plus(1);

      if (!y.isNegative() || config.predictable) {
        return y.ln();
      } else {
        // downgrade to number, return Complex valued result
        return _log1pComplex(new Complex(x.toNumber(), 0));
      }
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    },
    'any, any': function anyAny(x, base) {
      // calculate logarithm for a specified base, log1p(x, base)
      return divideScalar(this(x), log(base));
    }
  });
  /**
   * Calculate the natural logarithm of a complex number + 1
   * @param {Complex} x
   * @returns {Complex}
   * @private
   */

  function _log1pComplex(x) {
    var xRe1p = x.re + 1;
    return new Complex(Math.log(Math.sqrt(xRe1p * xRe1p + x.im * x.im)), Math.atan2(x.im, xRe1p));
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/log2.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/log2.js ***!
  \*************************************************************/
/*! exports provided: createLog2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLog2", function() { return createLog2; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'log2';
var dependencies = ['typed', 'config', 'Complex'];
var createLog2 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex;

  /**
   * Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.log2(x)
   *
   * Examples:
   *
   *    math.log2(0.03125)           // returns -5
   *    math.log2(16)                // returns 4
   *    math.log2(16) / math.log2(2) // returns 4
   *    math.pow(2, 4)               // returns 16
   *
   * See also:
   *
   *    exp, log, log1p, log10
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            Value for which to calculate the logarithm.
   * @return {number | BigNumber | Complex | Array | Matrix}
   *            Returns the 2-base logarithm of `x`
   */
  return typed(name, {
    number: function number(x) {
      if (x >= 0 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["log2Number"])(x);
      } else {
        // negative value -> complex value computation
        return _log2Complex(new Complex(x, 0));
      }
    },
    Complex: _log2Complex,
    BigNumber: function BigNumber(x) {
      if (!x.isNegative() || config.predictable) {
        return x.log(2);
      } else {
        // downgrade to number, return Complex valued result
        return _log2Complex(new Complex(x.toNumber(), 0));
      }
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
  /**
   * Calculate log2 for a complex value
   * @param {Complex} x
   * @returns {Complex}
   * @private
   */

  function _log2Complex(x) {
    var newX = Math.sqrt(x.re * x.re + x.im * x.im);
    return new Complex(Math.log2 ? Math.log2(newX) : Math.log(newX) / Math.LN2, Math.atan2(x.im, x.re) / Math.LN2);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/mod.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/mod.js ***!
  \************************************************************/
/*! exports provided: createMod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMod", function() { return createMod; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm05.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");









var name = 'mod';
var dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];
var createMod = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm05 = Object(_type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm05"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Calculates the modulus, the remainder of an integer division.
   *
   * For matrices, the function is evaluated element wise.
   *
   * The modulus is defined as:
   *
   *     x - y * floor(x / y)
   *
   * See https://en.wikipedia.org/wiki/Modulo_operation.
   *
   * Syntax:
   *
   *    math.mod(x, y)
   *
   * Examples:
   *
   *    math.mod(8, 3)                // returns 2
   *    math.mod(11, 2)               // returns 1
   *
   *    function isOdd(x) {
   *      return math.mod(x, 2) != 0
   *    }
   *
   *    isOdd(2)                      // returns false
   *    isOdd(3)                      // returns true
   *
   * See also:
   *
   *    divide
   *
   * @param  {number | BigNumber | Fraction | Array | Matrix} x Dividend
   * @param  {number | BigNumber | Fraction | Array | Matrix} y Divisor
   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the remainder of `x` divided by `y`.
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_8__["modNumber"],
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return y.isZero() ? x : x.mod(y);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.mod(y);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm05(x, y, this, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/multiply.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/multiply.js ***!
  \*****************************************************************/
/*! exports provided: createMultiply */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMultiply", function() { return createMultiply; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");






var name = 'multiply';
var dependencies = ['typed', 'matrix', 'addScalar', 'multiplyScalar', 'equalScalar', 'dot'];
var createMultiply = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      addScalar = _ref.addScalar,
      multiplyScalar = _ref.multiplyScalar,
      equalScalar = _ref.equalScalar,
      dot = _ref.dot;
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });

  function _validateMatrixDimensions(size1, size2) {
    // check left operand dimensions
    switch (size1.length) {
      case 1:
        // check size2
        switch (size2.length) {
          case 1:
            // Vector x Vector
            if (size1[0] !== size2[0]) {
              // throw error
              throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length');
            }

            break;

          case 2:
            // Vector x Matrix
            if (size1[0] !== size2[0]) {
              // throw error
              throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')');
            }

            break;

          default:
            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');
        }

        break;

      case 2:
        // check size2
        switch (size2.length) {
          case 1:
            // Matrix x Vector
            if (size1[1] !== size2[0]) {
              // throw error
              throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')');
            }

            break;

          case 2:
            // Matrix x Matrix
            if (size1[1] !== size2[0]) {
              // throw error
              throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')');
            }

            break;

          default:
            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');
        }

        break;

      default:
        throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)');
    }
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            Dense Vector   (N)
   * @param {Matrix} b            Dense Vector   (N)
   *
   * @return {number}             Scalar value
   */


  function _multiplyVectorVector(a, b, n) {
    // check empty vector
    if (n === 0) {
      throw new Error('Cannot multiply two empty vectors');
    }

    return dot(a, b);
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            Dense Vector   (M)
   * @param {Matrix} b            Matrix         (MxN)
   *
   * @return {Matrix}             Dense Vector   (N)
   */


  function _multiplyVectorMatrix(a, b) {
    // process storage
    if (b.storage() !== 'dense') {
      throw new Error('Support for SparseMatrix not implemented');
    }

    return _multiplyVectorDenseMatrix(a, b);
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            Dense Vector   (M)
   * @param {Matrix} b            Dense Matrix   (MxN)
   *
   * @return {Matrix}             Dense Vector   (N)
   */


  function _multiplyVectorDenseMatrix(a, b) {
    // a dense
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype; // b dense

    var bdata = b._data;
    var bsize = b._size;
    var bdt = b._datatype; // rows & columns

    var alength = asize[0];
    var bcolumns = bsize[1]; // datatype

    var dt; // addScalar signature to use

    var af = addScalar; // multiplyScalar signature to use

    var mf = multiplyScalar; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      // datatype
      dt = adt; // find signatures that matches (dt, dt)

      af = typed.find(addScalar, [dt, dt]);
      mf = typed.find(multiplyScalar, [dt, dt]);
    } // result


    var c = []; // loop matrix columns

    for (var j = 0; j < bcolumns; j++) {
      // sum (do not initialize it with zero)
      var sum = mf(adata[0], bdata[0][j]); // loop vector

      for (var i = 1; i < alength; i++) {
        // multiply & accumulate
        sum = af(sum, mf(adata[i], bdata[i][j]));
      }

      c[j] = sum;
    } // return matrix


    return a.createDenseMatrix({
      data: c,
      size: [bcolumns],
      datatype: dt
    });
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            Matrix         (MxN)
   * @param {Matrix} b            Dense Vector   (N)
   *
   * @return {Matrix}             Dense Vector   (M)
   */


  var _multiplyMatrixVector = typed('_multiplyMatrixVector', {
    'DenseMatrix, any': _multiplyDenseMatrixVector,
    'SparseMatrix, any': _multiplySparseMatrixVector
  });
  /**
   * C = A * B
   *
   * @param {Matrix} a            Matrix         (MxN)
   * @param {Matrix} b            Matrix         (NxC)
   *
   * @return {Matrix}             Matrix         (MxC)
   */


  var _multiplyMatrixMatrix = typed('_multiplyMatrixMatrix', {
    'DenseMatrix, DenseMatrix': _multiplyDenseMatrixDenseMatrix,
    'DenseMatrix, SparseMatrix': _multiplyDenseMatrixSparseMatrix,
    'SparseMatrix, DenseMatrix': _multiplySparseMatrixDenseMatrix,
    'SparseMatrix, SparseMatrix': _multiplySparseMatrixSparseMatrix
  });
  /**
   * C = A * B
   *
   * @param {Matrix} a            DenseMatrix  (MxN)
   * @param {Matrix} b            Dense Vector (N)
   *
   * @return {Matrix}             Dense Vector (M)
   */


  function _multiplyDenseMatrixVector(a, b) {
    // a dense
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype; // b dense

    var bdata = b._data;
    var bdt = b._datatype; // rows & columns

    var arows = asize[0];
    var acolumns = asize[1]; // datatype

    var dt; // addScalar signature to use

    var af = addScalar; // multiplyScalar signature to use

    var mf = multiplyScalar; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      // datatype
      dt = adt; // find signatures that matches (dt, dt)

      af = typed.find(addScalar, [dt, dt]);
      mf = typed.find(multiplyScalar, [dt, dt]);
    } // result


    var c = []; // loop matrix a rows

    for (var i = 0; i < arows; i++) {
      // current row
      var row = adata[i]; // sum (do not initialize it with zero)

      var sum = mf(row[0], bdata[0]); // loop matrix a columns

      for (var j = 1; j < acolumns; j++) {
        // multiply & accumulate
        sum = af(sum, mf(row[j], bdata[j]));
      }

      c[i] = sum;
    } // return matrix


    return a.createDenseMatrix({
      data: c,
      size: [arows],
      datatype: dt
    });
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            DenseMatrix    (MxN)
   * @param {Matrix} b            DenseMatrix    (NxC)
   *
   * @return {Matrix}             DenseMatrix    (MxC)
   */


  function _multiplyDenseMatrixDenseMatrix(a, b) {
    // a dense
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype; // b dense

    var bdata = b._data;
    var bsize = b._size;
    var bdt = b._datatype; // rows & columns

    var arows = asize[0];
    var acolumns = asize[1];
    var bcolumns = bsize[1]; // datatype

    var dt; // addScalar signature to use

    var af = addScalar; // multiplyScalar signature to use

    var mf = multiplyScalar; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      // datatype
      dt = adt; // find signatures that matches (dt, dt)

      af = typed.find(addScalar, [dt, dt]);
      mf = typed.find(multiplyScalar, [dt, dt]);
    } // result


    var c = []; // loop matrix a rows

    for (var i = 0; i < arows; i++) {
      // current row
      var row = adata[i]; // initialize row array

      c[i] = []; // loop matrix b columns

      for (var j = 0; j < bcolumns; j++) {
        // sum (avoid initializing sum to zero)
        var sum = mf(row[0], bdata[0][j]); // loop matrix a columns

        for (var x = 1; x < acolumns; x++) {
          // multiply & accumulate
          sum = af(sum, mf(row[x], bdata[x][j]));
        }

        c[i][j] = sum;
      }
    } // return matrix


    return a.createDenseMatrix({
      data: c,
      size: [arows, bcolumns],
      datatype: dt
    });
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            DenseMatrix    (MxN)
   * @param {Matrix} b            SparseMatrix   (NxC)
   *
   * @return {Matrix}             SparseMatrix   (MxC)
   */


  function _multiplyDenseMatrixSparseMatrix(a, b) {
    // a dense
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype; // b sparse

    var bvalues = b._values;
    var bindex = b._index;
    var bptr = b._ptr;
    var bsize = b._size;
    var bdt = b._datatype; // validate b matrix

    if (!bvalues) {
      throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix');
    } // rows & columns


    var arows = asize[0];
    var bcolumns = bsize[1]; // datatype

    var dt; // addScalar signature to use

    var af = addScalar; // multiplyScalar signature to use

    var mf = multiplyScalar; // equalScalar signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      // datatype
      dt = adt; // find signatures that matches (dt, dt)

      af = typed.find(addScalar, [dt, dt]);
      mf = typed.find(multiplyScalar, [dt, dt]);
      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt);
    } // result


    var cvalues = [];
    var cindex = [];
    var cptr = []; // c matrix

    var c = b.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, bcolumns],
      datatype: dt
    }); // loop b columns

    for (var jb = 0; jb < bcolumns; jb++) {
      // update ptr
      cptr[jb] = cindex.length; // indeces in column jb

      var kb0 = bptr[jb];
      var kb1 = bptr[jb + 1]; // do not process column jb if no data exists

      if (kb1 > kb0) {
        // last row mark processed
        var last = 0; // loop a rows

        for (var i = 0; i < arows; i++) {
          // column mark
          var mark = i + 1; // C[i, jb]

          var cij = void 0; // values in b column j

          for (var kb = kb0; kb < kb1; kb++) {
            // row
            var ib = bindex[kb]; // check value has been initialized

            if (last !== mark) {
              // first value in column jb
              cij = mf(adata[i][ib], bvalues[kb]); // update mark

              last = mark;
            } else {
              // accumulate value
              cij = af(cij, mf(adata[i][ib], bvalues[kb]));
            }
          } // check column has been processed and value != 0


          if (last === mark && !eq(cij, zero)) {
            // push row & value
            cindex.push(i);
            cvalues.push(cij);
          }
        }
      }
    } // update ptr


    cptr[bcolumns] = cindex.length; // return sparse matrix

    return c;
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            SparseMatrix    (MxN)
   * @param {Matrix} b            Dense Vector (N)
   *
   * @return {Matrix}             SparseMatrix    (M, 1)
   */


  function _multiplySparseMatrixVector(a, b) {
    // a sparse
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var adt = a._datatype; // validate a matrix

    if (!avalues) {
      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');
    } // b dense


    var bdata = b._data;
    var bdt = b._datatype; // rows & columns

    var arows = a._size[0];
    var brows = b._size[0]; // result

    var cvalues = [];
    var cindex = [];
    var cptr = []; // datatype

    var dt; // addScalar signature to use

    var af = addScalar; // multiplyScalar signature to use

    var mf = multiplyScalar; // equalScalar signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      // datatype
      dt = adt; // find signatures that matches (dt, dt)

      af = typed.find(addScalar, [dt, dt]);
      mf = typed.find(multiplyScalar, [dt, dt]);
      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt);
    } // workspace


    var x = []; // vector with marks indicating a value x[i] exists in a given column

    var w = []; // update ptr

    cptr[0] = 0; // rows in b

    for (var ib = 0; ib < brows; ib++) {
      // b[ib]
      var vbi = bdata[ib]; // check b[ib] != 0, avoid loops

      if (!eq(vbi, zero)) {
        // A values & index in ib column
        for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
          // a row
          var ia = aindex[ka]; // check value exists in current j

          if (!w[ia]) {
            // ia is new entry in j
            w[ia] = true; // add i to pattern of C

            cindex.push(ia); // x(ia) = A

            x[ia] = mf(vbi, avalues[ka]);
          } else {
            // i exists in C already
            x[ia] = af(x[ia], mf(vbi, avalues[ka]));
          }
        }
      }
    } // copy values from x to column jb of c


    for (var p1 = cindex.length, p = 0; p < p1; p++) {
      // row
      var ic = cindex[p]; // copy value

      cvalues[p] = x[ic];
    } // update ptr


    cptr[1] = cindex.length; // return sparse matrix

    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, 1],
      datatype: dt
    });
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            SparseMatrix      (MxN)
   * @param {Matrix} b            DenseMatrix       (NxC)
   *
   * @return {Matrix}             SparseMatrix      (MxC)
   */


  function _multiplySparseMatrixDenseMatrix(a, b) {
    // a sparse
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var adt = a._datatype; // validate a matrix

    if (!avalues) {
      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');
    } // b dense


    var bdata = b._data;
    var bdt = b._datatype; // rows & columns

    var arows = a._size[0];
    var brows = b._size[0];
    var bcolumns = b._size[1]; // datatype

    var dt; // addScalar signature to use

    var af = addScalar; // multiplyScalar signature to use

    var mf = multiplyScalar; // equalScalar signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      // datatype
      dt = adt; // find signatures that matches (dt, dt)

      af = typed.find(addScalar, [dt, dt]);
      mf = typed.find(multiplyScalar, [dt, dt]);
      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt);
    } // result


    var cvalues = [];
    var cindex = [];
    var cptr = []; // c matrix

    var c = a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, bcolumns],
      datatype: dt
    }); // workspace

    var x = []; // vector with marks indicating a value x[i] exists in a given column

    var w = []; // loop b columns

    for (var jb = 0; jb < bcolumns; jb++) {
      // update ptr
      cptr[jb] = cindex.length; // mark in workspace for current column

      var mark = jb + 1; // rows in jb

      for (var ib = 0; ib < brows; ib++) {
        // b[ib, jb]
        var vbij = bdata[ib][jb]; // check b[ib, jb] != 0, avoid loops

        if (!eq(vbij, zero)) {
          // A values & index in ib column
          for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
            // a row
            var ia = aindex[ka]; // check value exists in current j

            if (w[ia] !== mark) {
              // ia is new entry in j
              w[ia] = mark; // add i to pattern of C

              cindex.push(ia); // x(ia) = A

              x[ia] = mf(vbij, avalues[ka]);
            } else {
              // i exists in C already
              x[ia] = af(x[ia], mf(vbij, avalues[ka]));
            }
          }
        }
      } // copy values from x to column jb of c


      for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {
        // row
        var ic = cindex[p]; // copy value

        cvalues[p] = x[ic];
      }
    } // update ptr


    cptr[bcolumns] = cindex.length; // return sparse matrix

    return c;
  }
  /**
   * C = A * B
   *
   * @param {Matrix} a            SparseMatrix      (MxN)
   * @param {Matrix} b            SparseMatrix      (NxC)
   *
   * @return {Matrix}             SparseMatrix      (MxC)
   */


  function _multiplySparseMatrixSparseMatrix(a, b) {
    // a sparse
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var adt = a._datatype; // b sparse

    var bvalues = b._values;
    var bindex = b._index;
    var bptr = b._ptr;
    var bdt = b._datatype; // rows & columns

    var arows = a._size[0];
    var bcolumns = b._size[1]; // flag indicating both matrices (a & b) contain data

    var values = avalues && bvalues; // datatype

    var dt; // addScalar signature to use

    var af = addScalar; // multiplyScalar signature to use

    var mf = multiplyScalar; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      // datatype
      dt = adt; // find signatures that matches (dt, dt)

      af = typed.find(addScalar, [dt, dt]);
      mf = typed.find(multiplyScalar, [dt, dt]);
    } // result


    var cvalues = values ? [] : undefined;
    var cindex = [];
    var cptr = []; // c matrix

    var c = a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, bcolumns],
      datatype: dt
    }); // workspace

    var x = values ? [] : undefined; // vector with marks indicating a value x[i] exists in a given column

    var w = []; // variables

    var ka, ka0, ka1, kb, kb0, kb1, ia, ib; // loop b columns

    for (var jb = 0; jb < bcolumns; jb++) {
      // update ptr
      cptr[jb] = cindex.length; // mark in workspace for current column

      var mark = jb + 1; // B values & index in j

      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {
        // b row
        ib = bindex[kb]; // check we need to process values

        if (values) {
          // loop values in a[:,ib]
          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
            // row
            ia = aindex[ka]; // check value exists in current j

            if (w[ia] !== mark) {
              // ia is new entry in j
              w[ia] = mark; // add i to pattern of C

              cindex.push(ia); // x(ia) = A

              x[ia] = mf(bvalues[kb], avalues[ka]);
            } else {
              // i exists in C already
              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]));
            }
          }
        } else {
          // loop values in a[:,ib]
          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
            // row
            ia = aindex[ka]; // check value exists in current j

            if (w[ia] !== mark) {
              // ia is new entry in j
              w[ia] = mark; // add i to pattern of C

              cindex.push(ia);
            }
          }
        }
      } // check we need to process matrix values (pattern matrix)


      if (values) {
        // copy values from x to column jb of c
        for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {
          // row
          var ic = cindex[p]; // copy value

          cvalues[p] = x[ic];
        }
      }
    } // update ptr


    cptr[bcolumns] = cindex.length; // return sparse matrix

    return c;
  }
  /**
   * Multiply two or more values, `x * y`.
   * For matrices, the matrix product is calculated.
   *
   * Syntax:
   *
   *    math.multiply(x, y)
   *    math.multiply(x, y, z, ...)
   *
   * Examples:
   *
   *    math.multiply(4, 5.2)        // returns number 20.8
   *    math.multiply(2, 3, 4)       // returns number 24
   *
   *    const a = math.complex(2, 3)
   *    const b = math.complex(4, 1)
   *    math.multiply(a, b)          // returns Complex 5 + 14i
   *
   *    const c = [[1, 2], [4, 3]]
   *    const d = [[1, 2, 3], [3, -4, 7]]
   *    math.multiply(c, d)          // returns Array [[7, -6, 17], [13, -4, 33]]
   *
   *    const e = math.unit('2.1 km')
   *    math.multiply(3, e)          // returns Unit 6.3 km
   *
   * See also:
   *
   *    divide, prod, cross, dot
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to multiply
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to multiply
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`
   */


  return typed(name, Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["extend"])({
    // we extend the signatures of multiplyScalar with signatures dealing with matrices
    'Array, Array': function ArrayArray(x, y) {
      // check dimensions
      _validateMatrixDimensions(Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["arraySize"])(x), Object(_utils_array__WEBPACK_IMPORTED_MODULE_3__["arraySize"])(y)); // use dense matrix implementation


      var m = this(matrix(x), matrix(y)); // return array or scalar

      return Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(m) ? m.valueOf() : m;
    },
    'Matrix, Matrix': function MatrixMatrix(x, y) {
      // dimensions
      var xsize = x.size();
      var ysize = y.size(); // check dimensions

      _validateMatrixDimensions(xsize, ysize); // process dimensions


      if (xsize.length === 1) {
        // process y dimensions
        if (ysize.length === 1) {
          // Vector * Vector
          return _multiplyVectorVector(x, y, xsize[0]);
        } // Vector * Matrix


        return _multiplyVectorMatrix(x, y);
      } // process y dimensions


      if (ysize.length === 1) {
        // Matrix * Vector
        return _multiplyMatrixVector(x, y);
      } // Matrix * Matrix


      return _multiplyMatrixMatrix(x, y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use Matrix * Matrix implementation
      return this(x, matrix(y));
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use Matrix * Matrix implementation
      return this(matrix(x, y.storage()), y);
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm11(x, y, multiplyScalar, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, multiplyScalar, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm11(y, x, multiplyScalar, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, multiplyScalar, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();
    },
    'any, any': multiplyScalar,
    'any, any, ...any': function anyAnyAny(x, y, rest) {
      var result = this(x, y);

      for (var i = 0; i < rest.length; i++) {
        result = this(result, rest[i]);
      }

      return result;
    }
  }, multiplyScalar.signatures));
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/multiplyScalar.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/multiplyScalar.js ***!
  \***********************************************************************/
/*! exports provided: createMultiplyScalar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMultiplyScalar", function() { return createMultiplyScalar; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");


var name = 'multiplyScalar';
var dependencies = ['typed'];
var createMultiplyScalar = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Multiply two scalar values, `x * y`.
   * This function is meant for internal use: it is used by the public function
   * `multiply`
   *
   * This function does not support collections (Array or Matrix).
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to multiply
   * @param  {number | BigNumber | Fraction | Complex} y          Second value to multiply
   * @return {number | BigNumber | Fraction | Complex | Unit}     Multiplication of `x` and `y`
   * @private
   */
  return typed('multiplyScalar', {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_1__["multiplyNumber"],
    'Complex, Complex': function ComplexComplex(x, y) {
      return x.mul(y);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.times(y);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.mul(y);
    },
    'number | Fraction | BigNumber | Complex, Unit': function numberFractionBigNumberComplexUnit(x, y) {
      var res = y.clone();
      res.value = res.value === null ? res._normalize(x) : this(res.value, x);
      return res;
    },
    'Unit, number | Fraction | BigNumber | Complex': function UnitNumberFractionBigNumberComplex(x, y) {
      var res = x.clone();
      res.value = res.value === null ? res._normalize(y) : this(res.value, y);
      return res;
    },
    'Unit, Unit': function UnitUnit(x, y) {
      return x.multiply(y);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/norm.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/norm.js ***!
  \*************************************************************/
/*! exports provided: createNorm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNorm", function() { return createNorm; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'norm';
var dependencies = ['typed', 'abs', 'add', 'pow', 'conj', 'sqrt', 'multiply', 'equalScalar', 'larger', 'smaller', 'matrix', 'ctranspose', 'eigs'];
var createNorm = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      abs = _ref.abs,
      add = _ref.add,
      pow = _ref.pow,
      conj = _ref.conj,
      sqrt = _ref.sqrt,
      multiply = _ref.multiply,
      equalScalar = _ref.equalScalar,
      larger = _ref.larger,
      smaller = _ref.smaller,
      matrix = _ref.matrix,
      ctranspose = _ref.ctranspose,
      eigs = _ref.eigs;

  /**
   * Calculate the norm of a number, vector or matrix.
   *
   * The second parameter p is optional. If not provided, it defaults to 2.
   *
   * Syntax:
   *
   *    math.norm(x)
   *    math.norm(x, p)
   *
   * Examples:
   *
   *    math.abs(-3.5)                         // returns 3.5
   *    math.norm(-3.5)                        // returns 3.5
   *
   *    math.norm(math.complex(3, -4))         // returns 5
   *
   *    math.norm([1, 2, -3], Infinity)        // returns 3
   *    math.norm([1, 2, -3], -Infinity)       // returns 1
   *
   *    math.norm([3, 4], 2)                   // returns 5
   *
   *    math.norm([[1, 2], [3, 4]], 1)          // returns 6
   *    math.norm([[1, 2], [3, 4]], 'inf')     // returns 7
   *    math.norm([[1, 2], [3, 4]], 'fro')     // returns 5.477225575051661
   *
   * See also:
   *
   *    abs, hypot
   *
   * @param  {number | BigNumber | Complex | Array | Matrix} x
   *            Value for which to calculate the norm
   * @param  {number | BigNumber | string} [p=2]
   *            Vector space.
   *            Supported numbers include Infinity and -Infinity.
   *            Supported strings are: 'inf', '-inf', and 'fro' (The Frobenius norm)
   * @return {number | BigNumber} the p-norm
   */
  return typed(name, {
    number: Math.abs,
    Complex: function Complex(x) {
      return x.abs();
    },
    BigNumber: function BigNumber(x) {
      // norm(x) = abs(x)
      return x.abs();
    },
    "boolean": function boolean(x) {
      // norm(x) = abs(x)
      return Math.abs(x);
    },
    Array: function Array(x) {
      return _norm(matrix(x), 2);
    },
    Matrix: function Matrix(x) {
      return _norm(x, 2);
    },
    'number | Complex | BigNumber | boolean, number | BigNumber | string': function numberComplexBigNumberBooleanNumberBigNumberString(x) {
      // ignore second parameter, TODO: remove the option of second parameter for these types
      return this(x);
    },
    'Array, number | BigNumber | string': function ArrayNumberBigNumberString(x, p) {
      return _norm(matrix(x), p);
    },
    'Matrix, number | BigNumber | string': function MatrixNumberBigNumberString(x, p) {
      return _norm(x, p);
    }
  });
  /**
   * Calculate the plus infinity norm for a vector
   * @param {Matrix} x
   * @returns {number} Returns the norm
   * @private
   */

  function _vectorNormPlusInfinity(x) {
    // norm(x, Infinity) = max(abs(x))
    var pinf = 0; // skip zeros since abs(0) === 0

    x.forEach(function (value) {
      var v = abs(value);

      if (larger(v, pinf)) {
        pinf = v;
      }
    }, true);
    return pinf;
  }
  /**
   * Calculate the minus infinity norm for a vector
   * @param {Matrix} x
   * @returns {number} Returns the norm
   * @private
   */


  function _vectorNormMinusInfinity(x) {
    // norm(x, -Infinity) = min(abs(x))
    var ninf; // skip zeros since abs(0) === 0

    x.forEach(function (value) {
      var v = abs(value);

      if (!ninf || smaller(v, ninf)) {
        ninf = v;
      }
    }, true);
    return ninf || 0;
  }
  /**
   * Calculate the norm for a vector
   * @param {Matrix} x
   * @param {number | string} p
   * @returns {number} Returns the norm
   * @private
   */


  function _vectorNorm(x, p) {
    // check p
    if (p === Number.POSITIVE_INFINITY || p === 'inf') {
      return _vectorNormPlusInfinity(x);
    }

    if (p === Number.NEGATIVE_INFINITY || p === '-inf') {
      return _vectorNormMinusInfinity(x);
    }

    if (p === 'fro') {
      return _norm(x, 2);
    }

    if (typeof p === 'number' && !isNaN(p)) {
      // check p != 0
      if (!equalScalar(p, 0)) {
        // norm(x, p) = sum(abs(xi) ^ p) ^ 1/p
        var n = 0; // skip zeros since abs(0) === 0

        x.forEach(function (value) {
          n = add(pow(abs(value), p), n);
        }, true);
        return pow(n, 1 / p);
      }

      return Number.POSITIVE_INFINITY;
    } // invalid parameter value


    throw new Error('Unsupported parameter value');
  }
  /**
   * Calculate the Frobenius norm for a matrix
   * @param {Matrix} x
   * @returns {number} Returns the norm
   * @private
   */


  function _matrixNormFrobenius(x) {
    // norm(x) = sqrt(sum(diag(x'x)))
    var fro = 0;
    x.forEach(function (value, index) {
      fro = add(fro, multiply(value, conj(value)));
    });
    return abs(sqrt(fro));
  }
  /**
   * Calculate the norm L1 for a matrix
   * @param {Matrix} x
   * @returns {number} Returns the norm
   * @private
   */


  function _matrixNormOne(x) {
    // norm(x) = the largest column sum
    var c = []; // result

    var maxc = 0; // skip zeros since abs(0) == 0

    x.forEach(function (value, index) {
      var j = index[1];
      var cj = add(c[j] || 0, abs(value));

      if (larger(cj, maxc)) {
        maxc = cj;
      }

      c[j] = cj;
    }, true);
    return maxc;
  }
  /**
   * Calculate the norm L2 for a matrix
   * @param {Matrix} x
   * @returns {number} Returns the norm
   * @private
   */


  function _matrixNormTwo(x) {
    // norm(x) = sqrt( max eigenvalue of A*.A)
    var sizeX = x.size();

    if (sizeX[0] !== sizeX[1]) {
      throw new RangeError('Invalid matrix dimensions');
    }

    var tx = ctranspose(x);
    var squaredX = multiply(tx, x);
    var eigenVals = eigs(squaredX).values;
    var rho = eigenVals.get([eigenVals.size()[0] - 1]);
    return abs(sqrt(rho));
  }
  /**
   * Calculate the infinity norm for a matrix
   * @param {Matrix} x
   * @returns {number} Returns the norm
   * @private
   */


  function _matrixNormInfinity(x) {
    // norm(x) = the largest row sum
    var r = []; // result

    var maxr = 0; // skip zeros since abs(0) == 0

    x.forEach(function (value, index) {
      var i = index[0];
      var ri = add(r[i] || 0, abs(value));

      if (larger(ri, maxr)) {
        maxr = ri;
      }

      r[i] = ri;
    }, true);
    return maxr;
  }
  /**
   * Calculate the norm for a 2D Matrix (M*N)
   * @param {Matrix} x
   * @param {number | string} p
   * @returns {number} Returns the norm
   * @private
   */


  function _matrixNorm(x, p) {
    // check p
    if (p === 1) {
      return _matrixNormOne(x);
    }

    if (p === Number.POSITIVE_INFINITY || p === 'inf') {
      return _matrixNormInfinity(x);
    }

    if (p === 'fro') {
      return _matrixNormFrobenius(x);
    }

    if (p === 2) {
      return _matrixNormTwo(x);
    } // invalid parameter value


    throw new Error('Unsupported parameter value ' + p);
  }
  /**
   * Calculate the norm for an array
   * @param {Matrix} x
   * @param {number | string} p
   * @returns {number} Returns the norm
   * @private
   */


  function _norm(x, p) {
    // size
    var sizeX = x.size(); // check if it is a vector

    if (sizeX.length === 1) {
      return _vectorNorm(x, p);
    } // MxN matrix


    if (sizeX.length === 2) {
      if (sizeX[0] && sizeX[1]) {
        return _matrixNorm(x, p);
      } else {
        throw new RangeError('Invalid matrix dimensions');
      }
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/nthRoot.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/nthRoot.js ***!
  \****************************************************************/
/*! exports provided: createNthRoot, createNthRootNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNthRoot", function() { return createNthRoot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNthRootNumber", function() { return createNthRootNumber; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm06.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");








var name = 'nthRoot';
var dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber'];
var createNthRoot = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      _BigNumber = _ref.BigNumber;
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm06 = Object(_type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm06"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Calculate the nth root of a value.
   * The principal nth root of a positive real number A, is the positive real
   * solution of the equation
   *
   *     x^root = A
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *     math.nthRoot(a)
   *     math.nthRoot(a, root)
   *
   * Examples:
   *
   *     math.nthRoot(9, 2)    // returns 3, as 3^2 == 9
   *     math.sqrt(9)          // returns 3, as 3^2 == 9
   *     math.nthRoot(64, 3)   // returns 4, as 4^3 == 64
   *
   * See also:
   *
   *     sqrt, pow
   *
   * @param {number | BigNumber | Array | Matrix | Complex} a
   *              Value for which to calculate the nth root
   * @param {number | BigNumber} [root=2]    The root.
   * @return {number | Complex | Array | Matrix} Returns the nth root of `a`
   */

  var complexErr = '' + 'Complex number not supported in function nthRoot. ' + 'Use nthRoots instead.';
  return typed(name, {
    number: function number(x) {
      return Object(_plain_number__WEBPACK_IMPORTED_MODULE_7__["nthRootNumber"])(x, 2);
    },
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_7__["nthRootNumber"],
    BigNumber: function BigNumber(x) {
      return _bigNthRoot(x, new _BigNumber(2));
    },
    Complex: function Complex(x) {
      throw new Error(complexErr);
    },
    'Complex, number': function ComplexNumber(x, y) {
      throw new Error(complexErr);
    },
    'BigNumber, BigNumber': _bigNthRoot,
    'Array | Matrix': function ArrayMatrix(x) {
      return this(x, 2);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      // density must be one (no zeros in matrix)
      if (y.density() === 1) {
        // sparse + sparse
        return algorithm06(x, y, this);
      } else {
        // throw exception
        throw new Error('Root must be non-zero');
      }
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      // density must be one (no zeros in matrix)
      if (y.density() === 1) {
        // dense + sparse
        return algorithm01(x, y, this, false);
      } else {
        // throw exception
        throw new Error('Root must be non-zero');
      }
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      return algorithm14(x, y, this, false);
    },
    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {
      // density must be one (no zeros in matrix)
      if (y.density() === 1) {
        // sparse - scalar
        return algorithm11(y, x, this, true);
      } else {
        // throw exception
        throw new Error('Root must be non-zero');
      }
    },
    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      // use matrix implementation
      return this(matrix(x), y).valueOf();
    },
    'number | BigNumber, Array': function numberBigNumberArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y)).valueOf();
    }
  });
  /**
   * Calculate the nth root of a for BigNumbers, solve x^root == a
   * https://rosettacode.org/wiki/Nth_root#JavaScript
   * @param {BigNumber} a
   * @param {BigNumber} root
   * @private
   */

  function _bigNthRoot(a, root) {
    var precision = _BigNumber.precision;

    var Big = _BigNumber.clone({
      precision: precision + 2
    });

    var zero = new _BigNumber(0);
    var one = new Big(1);
    var inv = root.isNegative();

    if (inv) {
      root = root.neg();
    }

    if (root.isZero()) {
      throw new Error('Root must be non-zero');
    }

    if (a.isNegative() && !root.abs().mod(2).equals(1)) {
      throw new Error('Root must be odd when a is negative.');
    } // edge cases zero and infinity


    if (a.isZero()) {
      return inv ? new Big(Infinity) : 0;
    }

    if (!a.isFinite()) {
      return inv ? zero : a;
    }

    var x = a.abs().pow(one.div(root)); // If a < 0, we require that root is an odd integer,
    // so (-1) ^ (1/root) = -1

    x = a.isNeg() ? x.neg() : x;
    return new _BigNumber((inv ? one.div(x) : x).toPrecision(precision));
  }
});
var createNthRootNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, ['typed'], function (_ref2) {
  var typed = _ref2.typed;
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_7__["nthRootNumber"],
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_7__["nthRootNumber"]
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/nthRoots.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/nthRoots.js ***!
  \*****************************************************************/
/*! exports provided: createNthRoots */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNthRoots", function() { return createNthRoots; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'nthRoots';
var dependencies = ['config', 'typed', 'divideScalar', 'Complex'];
var createNthRoots = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      divideScalar = _ref.divideScalar,
      Complex = _ref.Complex;

  /**
   * Each function here returns a real multiple of i as a Complex value.
   * @param  {number} val
   * @return {Complex} val, i*val, -val or -i*val for index 0, 1, 2, 3
   */
  // This is used to fix float artifacts for zero-valued components.
  var _calculateExactResult = [function realPos(val) {
    return new Complex(val, 0);
  }, function imagPos(val) {
    return new Complex(0, val);
  }, function realNeg(val) {
    return new Complex(-val, 0);
  }, function imagNeg(val) {
    return new Complex(0, -val);
  }];
  /**
   * Calculate the nth root of a Complex Number a using De Movire's Theorem.
   * @param  {Complex} a
   * @param  {number} root
   * @return {Array} array of n Complex Roots
   */

  function _nthComplexRoots(a, root) {
    if (root < 0) throw new Error('Root must be greater than zero');
    if (root === 0) throw new Error('Root must be non-zero');
    if (root % 1 !== 0) throw new Error('Root must be an integer');
    if (a === 0 || a.abs() === 0) return [new Complex(0, 0)];
    var aIsNumeric = typeof a === 'number';
    var offset; // determine the offset (argument of a)/(pi/2)

    if (aIsNumeric || a.re === 0 || a.im === 0) {
      if (aIsNumeric) {
        offset = 2 * +(a < 0); // numeric value on the real axis
      } else if (a.im === 0) {
        offset = 2 * +(a.re < 0); // complex value on the real axis
      } else {
        offset = 2 * +(a.im < 0) + 1; // complex value on the imaginary axis
      }
    }

    var arg = a.arg();
    var abs = a.abs();
    var roots = [];
    var r = Math.pow(abs, 1 / root);

    for (var k = 0; k < root; k++) {
      var halfPiFactor = (offset + 4 * k) / root;
      /**
       * If (offset + 4*k)/root is an integral multiple of pi/2
       * then we can produce a more exact result.
       */

      if (halfPiFactor === Math.round(halfPiFactor)) {
        roots.push(_calculateExactResult[halfPiFactor % 4](r));
        continue;
      }

      roots.push(new Complex({
        r: r,
        phi: (arg + 2 * Math.PI * k) / root
      }));
    }

    return roots;
  }
  /**
   * Calculate the nth roots of a value.
   * An nth root of a positive real number A,
   * is a positive real solution of the equation "x^root = A".
   * This function returns an array of complex values.
   *
   * Syntax:
   *
   *    math.nthRoots(x)
   *    math.nthRoots(x, root)
   *
   * Examples:
   *
   *    math.nthRoots(1)
   *    // returns [
   *    //   {re: 1, im: 0},
   *    //   {re: -1, im: 0}
   *    // ]
   *    nthRoots(1, 3)
   *    // returns [
   *    //   { re: 1, im: 0 },
   *    //   { re: -0.4999999999999998, im: 0.8660254037844387 },
   *    //   { re: -0.5000000000000004, im: -0.8660254037844385 }
   *    ]
   *
   * See also:
   *
   *    nthRoot, pow, sqrt
   *
   * @param {number | BigNumber | Fraction | Complex} x Number to be rounded
   * @return {number | BigNumber | Fraction | Complex}            Rounded value
   */


  return typed(name, {
    Complex: function Complex(x) {
      return _nthComplexRoots(x, 2);
    },
    'Complex, number': _nthComplexRoots
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/pow.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/pow.js ***!
  \************************************************************/
/*! exports provided: createPow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPow", function() { return createPow; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");




var name = 'pow';
var dependencies = ['typed', 'config', 'identity', 'multiply', 'matrix', 'fraction', 'number', 'Complex'];
var createPow = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      identity = _ref.identity,
      multiply = _ref.multiply,
      matrix = _ref.matrix,
      number = _ref.number,
      fraction = _ref.fraction,
      Complex = _ref.Complex;

  /**
   * Calculates the power of x to y, `x ^ y`.
   * Matrix exponentiation is supported for square matrices `x`, and positive
   * integer exponents `y`.
   *
   * For cubic roots of negative numbers, the function returns the principal
   * root by default. In order to let the function return the real root,
   * math.js can be configured with `math.config({predictable: true})`.
   * To retrieve all cubic roots of a value, use `math.cbrt(x, true)`.
   *
   * Syntax:
   *
   *    math.pow(x, y)
   *
   * Examples:
   *
   *    math.pow(2, 3)               // returns number 8
   *
   *    const a = math.complex(2, 3)
   *    math.pow(a, 2)                // returns Complex -5 + 12i
   *
   *    const b = [[1, 2], [4, 3]]
   *    math.pow(b, 2)               // returns Array [[9, 8], [16, 17]]
   *
   * See also:
   *
   *    multiply, sqrt, cbrt, nthRoot
   *
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x  The base
   * @param  {number | BigNumber | Complex} y                          The exponent
   * @return {number | BigNumber | Complex | Array | Matrix} The value of `x` to the power `y`
   */
  return typed(name, {
    'number, number': _pow,
    'Complex, Complex': function ComplexComplex(x, y) {
      return x.pow(y);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      if (y.isInteger() || x >= 0 || config.predictable) {
        return x.pow(y);
      } else {
        return new Complex(x.toNumber(), 0).pow(y.toNumber(), 0);
      }
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      if (y.d !== 1) {
        if (config.predictable) {
          throw new Error('Function pow does not support non-integer exponents for fractions.');
        } else {
          return _pow(x.valueOf(), y.valueOf());
        }
      } else {
        return x.pow(y);
      }
    },
    'Array, number': _powArray,
    'Array, BigNumber': function ArrayBigNumber(x, y) {
      return _powArray(x, y.toNumber());
    },
    'Matrix, number': _powMatrix,
    'Matrix, BigNumber': function MatrixBigNumber(x, y) {
      return _powMatrix(x, y.toNumber());
    },
    'Unit, number | BigNumber': function UnitNumberBigNumber(x, y) {
      return x.pow(y);
    }
  });
  /**
   * Calculates the power of x to y, x^y, for two numbers.
   * @param {number} x
   * @param {number} y
   * @return {number | Complex} res
   * @private
   */

  function _pow(x, y) {
    // Alternatively could define a 'realmode' config option or something, but
    // 'predictable' will work for now
    if (config.predictable && !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(y) && x < 0) {
      // Check to see if y can be represented as a fraction
      try {
        var yFrac = fraction(y);
        var yNum = number(yFrac);

        if (y === yNum || Math.abs((y - yNum) / y) < 1e-14) {
          if (yFrac.d % 2 === 1) {
            return (yFrac.n % 2 === 0 ? 1 : -1) * Math.pow(-x, y);
          }
        }
      } catch (ex) {// fraction() throws an error if y is Infinity, etc.
      } // Unable to express y as a fraction, so continue on

    } // **for predictable mode** x^Infinity === NaN if x < -1
    // N.B. this behavour is different from `Math.pow` which gives
    // (-2)^Infinity === Infinity


    if (config.predictable && (x < -1 && y === Infinity || x > -1 && x < 0 && y === -Infinity)) {
      return NaN;
    }

    if (Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(y) || x >= 0 || config.predictable) {
      return Object(_plain_number__WEBPACK_IMPORTED_MODULE_3__["powNumber"])(x, y);
    } else {
      // TODO: the following infinity checks are duplicated from powNumber. Deduplicate this somehow
      // x^Infinity === 0 if -1 < x < 1
      // A real number 0 is returned instead of complex(0)
      if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {
        return 0;
      }

      return new Complex(x, 0).pow(y, 0);
    }
  }
  /**
   * Calculate the power of a 2d array
   * @param {Array} x     must be a 2 dimensional, square matrix
   * @param {number} y    a positive, integer value
   * @returns {Array}
   * @private
   */


  function _powArray(x, y) {
    if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(y) || y < 0) {
      throw new TypeError('For A^b, b must be a positive integer (value is ' + y + ')');
    } // verify that A is a 2 dimensional square matrix


    var s = Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["arraySize"])(x);

    if (s.length !== 2) {
      throw new Error('For A^b, A must be 2 dimensional (A has ' + s.length + ' dimensions)');
    }

    if (s[0] !== s[1]) {
      throw new Error('For A^b, A must be square (size is ' + s[0] + 'x' + s[1] + ')');
    }

    var res = identity(s[0]).valueOf();
    var px = x;

    while (y >= 1) {
      if ((y & 1) === 1) {
        res = multiply(px, res);
      }

      y >>= 1;
      px = multiply(px, px);
    }

    return res;
  }
  /**
   * Calculate the power of a 2d matrix
   * @param {Matrix} x     must be a 2 dimensional, square matrix
   * @param {number} y    a positive, integer value
   * @returns {Matrix}
   * @private
   */


  function _powMatrix(x, y) {
    return matrix(_powArray(x.valueOf(), y));
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/round.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/round.js ***!
  \**************************************************************/
/*! exports provided: createRound, createRoundNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRound", function() { return createRound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRoundNumber", function() { return createRoundNumber; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var NO_INT = 'Number of decimals in function round must be an integer';
var name = 'round';
var dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];
var createRound = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      zeros = _ref.zeros,
      BigNumber = _ref.BigNumber,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Round a value towards the nearest integer.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.round(x)
   *    math.round(x, n)
   *
   * Examples:
   *
   *    math.round(3.2)              // returns number 3
   *    math.round(3.8)              // returns number 4
   *    math.round(-4.2)             // returns number -4
   *    math.round(-4.7)             // returns number -5
   *    math.round(math.pi, 3)       // returns number 3.142
   *    math.round(123.45678, 2)     // returns number 123.46
   *
   *    const c = math.complex(3.2, -2.7)
   *    math.round(c)                // returns Complex 3 - 3i
   *
   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]
   *
   * See also:
   *
   *    ceil, fix, floor
   *
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded
   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value
   */

  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {
    Complex: function Complex(x) {
      return x.round();
    },
    'Complex, number': function ComplexNumber(x, n) {
      if (n % 1) {
        throw new TypeError(NO_INT);
      }

      return x.round(n);
    },
    'Complex, BigNumber': function ComplexBigNumber(x, n) {
      if (!n.isInteger()) {
        throw new TypeError(NO_INT);
      }

      var _n = n.toNumber();

      return x.round(_n);
    },
    'number, BigNumber': function numberBigNumber(x, n) {
      if (!n.isInteger()) {
        throw new TypeError(NO_INT);
      }

      return new BigNumber(x).toDecimalPlaces(n.toNumber());
    },
    BigNumber: function BigNumber(x) {
      return x.toDecimalPlaces(0);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {
      if (!n.isInteger()) {
        throw new TypeError(NO_INT);
      }

      return x.toDecimalPlaces(n.toNumber());
    },
    Fraction: function Fraction(x) {
      return x.round();
    },
    'Fraction, number': function FractionNumber(x, n) {
      if (n % 1) {
        throw new TypeError(NO_INT);
      }

      return x.round(n);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since round(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      return algorithm14(x, y, this, false);
    },
    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {
      // check scalar is zero
      if (equalScalar(x, 0)) {
        // do not execute algorithm, result will be a zero matrix
        return zeros(y.size(), y.storage());
      }

      return algorithm12(y, x, this, true);
    },
    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {
      // check scalar is zero
      if (equalScalar(x, 0)) {
        // do not execute algorithm, result will be a zero matrix
        return zeros(y.size(), y.storage());
      }

      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  }));
});
var roundNumberSignatures = {
  number: _plain_number__WEBPACK_IMPORTED_MODULE_6__["roundNumber"],
  'number, number': function numberNumber(x, n) {
    if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["isInteger"])(n)) {
      throw new TypeError(NO_INT);
    }

    if (n < 0 || n > 15) {
      throw new Error('Number of decimals in function round must be in te range of 0-15');
    }

    return Object(_plain_number__WEBPACK_IMPORTED_MODULE_6__["roundNumber"])(x, n);
  }
};
var createRoundNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, ['typed'], function (_ref2) {
  var typed = _ref2.typed;
  return typed(name, roundNumberSignatures);
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/sign.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/sign.js ***!
  \*************************************************************/
/*! exports provided: createSign */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSign", function() { return createSign; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'sign';
var dependencies = ['typed', 'BigNumber', 'Fraction', 'complex'];
var createSign = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber,
      complex = _ref.complex,
      _Fraction = _ref.Fraction;

  /**
   * Compute the sign of a value. The sign of a value x is:
   *
   * -  1 when x > 0
   * - -1 when x < 0
   * -  0 when x == 0
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.sign(x)
   *
   * Examples:
   *
   *    math.sign(3.5)               // returns 1
   *    math.sign(-4.2)              // returns -1
   *    math.sign(0)                 // returns 0
   *
   *    math.sign([3, 5, -2, 0, 2])  // returns [1, 1, -1, 0, 1]
   *
   * See also:
   *
   *    abs
   *
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x
   *            The number for which to determine the sign
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}e
   *            The sign of `x`
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["signNumber"],
    Complex: function Complex(x) {
      return x.im === 0 ? complex(Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["signNumber"])(x.re)) : x.sign();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(x.cmp(0));
    },
    Fraction: function Fraction(x) {
      return new _Fraction(x.s, 1);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since sign(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    },
    Unit: function Unit(x) {
      return this(x.value);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/sqrt.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/sqrt.js ***!
  \*************************************************************/
/*! exports provided: createSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSqrt", function() { return createSqrt; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'sqrt';
var dependencies = ['config', 'typed', 'Complex'];
var createSqrt = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var config = _ref.config,
      typed = _ref.typed,
      Complex = _ref.Complex;

  /**
   * Calculate the square root of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.sqrt(x)
   *
   * Examples:
   *
   *    math.sqrt(25)                // returns 5
   *    math.square(5)               // returns 25
   *    math.sqrt(-4)                // returns Complex 2i
   *
   * See also:
   *
   *    square, multiply, cube, cbrt, sqrtm
   *
   * @param {number | BigNumber | Complex | Array | Matrix | Unit} x
   *            Value for which to calculate the square root.
   * @return {number | BigNumber | Complex | Array | Matrix | Unit}
   *            Returns the square root of `x`
   */
  return typed('sqrt', {
    number: _sqrtNumber,
    Complex: function Complex(x) {
      return x.sqrt();
    },
    BigNumber: function BigNumber(x) {
      if (!x.isNegative() || config.predictable) {
        return x.sqrt();
      } else {
        // negative value -> downgrade to number to do complex value computation
        return _sqrtNumber(x.toNumber());
      }
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since sqrt(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    },
    Unit: function Unit(x) {
      // Someday will work for complex units when they are implemented
      return x.pow(0.5);
    }
  });
  /**
   * Calculate sqrt for a number
   * @param {number} x
   * @returns {number | Complex} Returns the square root of x
   * @private
   */

  function _sqrtNumber(x) {
    if (isNaN(x)) {
      return NaN;
    } else if (x >= 0 || config.predictable) {
      return Math.sqrt(x);
    } else {
      return new Complex(x, 0).sqrt();
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/square.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/square.js ***!
  \***************************************************************/
/*! exports provided: createSquare */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSquare", function() { return createSquare; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'square';
var dependencies = ['typed'];
var createSquare = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Compute the square of a value, `x * x`.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.square(x)
   *
   * Examples:
   *
   *    math.square(2)           // returns number 4
   *    math.square(3)           // returns number 9
   *    math.pow(3, 2)           // returns number 9
   *    math.multiply(3, 3)      // returns number 9
   *
   *    math.square([1, 2, 3, 4])  // returns Array [1, 4, 9, 16]
   *
   * See also:
   *
   *    multiply, cube, sqrt, pow
   *
   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x
   *            Number for which to calculate the square
   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}
   *            Squared value
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["squareNumber"],
    Complex: function Complex(x) {
      return x.mul(x);
    },
    BigNumber: function BigNumber(x) {
      return x.times(x);
    },
    Fraction: function Fraction(x) {
      return x.mul(x);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since square(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    },
    Unit: function Unit(x) {
      return x.pow(2);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/subtract.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/subtract.js ***!
  \*****************************************************************/
/*! exports provided: createSubtract */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSubtract", function() { return createSubtract; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm05.js");
/* harmony import */ var _type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");








var name = 'subtract';
var dependencies = ['typed', 'matrix', 'equalScalar', 'addScalar', 'unaryMinus', 'DenseMatrix'];
var createSubtract = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      addScalar = _ref.addScalar,
      unaryMinus = _ref.unaryMinus,
      DenseMatrix = _ref.DenseMatrix;
  // TODO: split function subtract in two: subtract and subtractScalar
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm05 = Object(_type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm05"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm10 = Object(_type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm10"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Subtract two values, `x - y`.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.subtract(x, y)
   *
   * Examples:
   *
   *    math.subtract(5.3, 2)        // returns number 3.3
   *
   *    const a = math.complex(2, 3)
   *    const b = math.complex(4, 1)
   *    math.subtract(a, b)          // returns Complex -2 + 2i
   *
   *    math.subtract([5, 7, 4], 4)  // returns Array [1, 3, 0]
   *
   *    const c = math.unit('2.1 km')
   *    const d = math.unit('500m')
   *    math.subtract(c, d)          // returns Unit 1.6 km
   *
   * See also:
   *
   *    add
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x
   *            Initial value
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y
   *            Value to subtract from `x`
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}
   *            Subtraction of `x` and `y`
   */

  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return x - y;
    },
    'Complex, Complex': function ComplexComplex(x, y) {
      return x.sub(y);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.minus(y);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.sub(y);
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (x.value === null) {
        throw new Error('Parameter x contains a unit with undefined value');
      }

      if (y.value === null) {
        throw new Error('Parameter y contains a unit with undefined value');
      }

      if (!x.equalBase(y)) {
        throw new Error('Units do not match');
      }

      var res = x.clone();
      res.value = this(res.value, y.value);
      res.fixPrefix = false;
      return res;
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      checkEqualDimensions(x, y);
      return algorithm05(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      checkEqualDimensions(x, y);
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      checkEqualDimensions(x, y);
      return algorithm01(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      checkEqualDimensions(x, y);
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm10(x, unaryMinus(y), addScalar);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm10(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});
/**
 * Check whether matrix x and y have the same number of dimensions.
 * Throws a DimensionError when dimensions are not equal
 * @param {Matrix} x
 * @param {Matrix} y
 */

function checkEqualDimensions(x, y) {
  var xsize = x.size();
  var ysize = y.size();

  if (xsize.length !== ysize.length) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](xsize.length, ysize.length);
  }
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/unaryMinus.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/unaryMinus.js ***!
  \*******************************************************************/
/*! exports provided: createUnaryMinus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnaryMinus", function() { return createUnaryMinus; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'unaryMinus';
var dependencies = ['typed'];
var createUnaryMinus = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Inverse the sign of a value, apply a unary minus operation.
   *
   * For matrices, the function is evaluated element wise. Boolean values and
   * strings will be converted to a number. For complex numbers, both real and
   * complex value are inverted.
   *
   * Syntax:
   *
   *    math.unaryMinus(x)
   *
   * Examples:
   *
   *    math.unaryMinus(3.5)      // returns -3.5
   *    math.unaryMinus(-4.2)     // returns 4.2
   *
   * See also:
   *
   *    add, subtract, unaryPlus
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Number to be inverted.
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Returns the value with inverted sign.
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["unaryMinusNumber"],
    Complex: function Complex(x) {
      return x.neg();
    },
    BigNumber: function BigNumber(x) {
      return x.neg();
    },
    Fraction: function Fraction(x) {
      return x.neg();
    },
    Unit: function Unit(x) {
      var res = x.clone();
      res.value = this(x.value);
      return res;
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since unaryMinus(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    } // TODO: add support for string

  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/unaryPlus.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/unaryPlus.js ***!
  \******************************************************************/
/*! exports provided: createUnaryPlus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnaryPlus", function() { return createUnaryPlus; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'unaryPlus';
var dependencies = ['typed', 'config', 'BigNumber'];
var createUnaryPlus = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      BigNumber = _ref.BigNumber;

  /**
   * Unary plus operation.
   * Boolean values and strings will be converted to a number, numeric values will be returned as is.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.unaryPlus(x)
   *
   * Examples:
   *
   *    math.unaryPlus(3.5)      // returns 3.5
   *    math.unaryPlus(1)     // returns 1
   *
   * See also:
   *
   *    unaryMinus, add, subtract
   *
   * @param  {number | BigNumber | Fraction | string | Complex | Unit | Array | Matrix} x
   *            Input value
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}
   *            Returns the input value when numeric, converts to a number when input is non-numeric.
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["unaryPlusNumber"],
    Complex: function Complex(x) {
      return x; // complex numbers are immutable
    },
    BigNumber: function BigNumber(x) {
      return x; // bignumbers are immutable
    },
    Fraction: function Fraction(x) {
      return x; // fractions are immutable
    },
    Unit: function Unit(x) {
      return x.clone();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since unaryPlus(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    },
    'boolean | string': function booleanString(x) {
      // convert to a number or bignumber
      return config.number === 'BigNumber' ? new BigNumber(+x) : +x;
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/arithmetic/xgcd.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/arithmetic/xgcd.js ***!
  \*************************************************************/
/*! exports provided: createXgcd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createXgcd", function() { return createXgcd; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");


var name = 'xgcd';
var dependencies = ['typed', 'config', 'matrix', 'BigNumber'];
var createXgcd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      BigNumber = _ref.BigNumber;

  /**
   * Calculate the extended greatest common divisor for two values.
   * See https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm.
   *
   * Syntax:
   *
   *    math.xgcd(a, b)
   *
   * Examples:
   *
   *    math.xgcd(8, 12)             // returns [4, -1, 1]
   *    math.gcd(8, 12)              // returns 4
   *    math.xgcd(36163, 21199)      // returns [1247, -7, 12]
   *
   * See also:
   *
   *    gcd, lcm
   *
   * @param {number | BigNumber} a  An integer number
   * @param {number | BigNumber} b  An integer number
   * @return {Array}              Returns an array containing 3 integers `[div, m, n]`
   *                              where `div = gcd(a, b)` and `a*m + b*n = div`
   */
  return typed(name, {
    'number, number': function numberNumber(a, b) {
      var res = Object(_plain_number__WEBPACK_IMPORTED_MODULE_1__["xgcdNumber"])(a, b);
      return config.matrix === 'Array' ? res : matrix(res);
    },
    'BigNumber, BigNumber': _xgcdBigNumber // TODO: implement support for Fraction

  });
  /**
   * Calculate xgcd for two BigNumbers
   * @param {BigNumber} a
   * @param {BigNumber} b
   * @return {BigNumber[]} result
   * @private
   */

  function _xgcdBigNumber(a, b) {
    // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm
    var // used to swap two variables
    t;
    var // quotient
    q;
    var // remainder
    r;
    var zero = new BigNumber(0);
    var one = new BigNumber(1);
    var x = zero;
    var lastx = one;
    var y = one;
    var lasty = zero;

    if (!a.isInt() || !b.isInt()) {
      throw new Error('Parameters in function xgcd must be integer numbers');
    }

    while (!b.isZero()) {
      q = a.div(b).floor();
      r = a.mod(b);
      t = x;
      x = lastx.minus(q.times(x));
      lastx = t;
      t = y;
      y = lasty.minus(q.times(y));
      lasty = t;
      a = b;
      b = r;
    }

    var res;

    if (a.lt(zero)) {
      res = [a.neg(), lastx.neg(), lasty.neg()];
    } else {
      res = [a, !a.isZero() ? lastx : 0, lasty];
    }

    return config.matrix === 'Array' ? res : matrix(res);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/bitwise/bitAnd.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/bitwise/bitAnd.js ***!
  \************************************************************/
/*! exports provided: createBitAnd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBitAnd", function() { return createBitAnd; });
/* harmony import */ var _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/bitwise */ "../node_modules/mathjs/es/utils/bignumber/bitwise.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm06.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");








var name = 'bitAnd';
var dependencies = ['typed', 'matrix', 'equalScalar'];
var createBitAnd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_6__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar;
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm06 = Object(_type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm06"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Bitwise AND two values, `x & y`.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.bitAnd(x, y)
   *
   * Examples:
   *
   *    math.bitAnd(53, 131)               // returns number 1
   *
   *    math.bitAnd([1, 12, 31], 42)       // returns Array [0, 8, 10]
   *
   * See also:
   *
   *    bitNot, bitOr, bitXor, leftShift, rightArithShift, rightLogShift
   *
   * @param  {number | BigNumber | Array | Matrix} x First value to and
   * @param  {number | BigNumber | Array | Matrix} y Second value to and
   * @return {number | BigNumber | Array | Matrix} AND of `x` and `y`
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_7__["bitAndNumber"],
    'BigNumber, BigNumber': _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__["bitAndBigNumber"],
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm06(x, y, this, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm02(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm11(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/bitwise/bitNot.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/bitwise/bitNot.js ***!
  \************************************************************/
/*! exports provided: createBitNot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBitNot", function() { return createBitNot; });
/* harmony import */ var _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/bitwise */ "../node_modules/mathjs/es/utils/bignumber/bitwise.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");




var name = 'bitNot';
var dependencies = ['typed'];
var createBitNot = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Bitwise NOT value, `~x`.
   * For matrices, the function is evaluated element wise.
   * For units, the function is evaluated on the best prefix base.
   *
   * Syntax:
   *
   *    math.bitNot(x)
   *
   * Examples:
   *
   *    math.bitNot(1)               // returns number -2
   *
   *    math.bitNot([2, -3, 4])      // returns Array [-3, 2, 5]
   *
   * See also:
   *
   *    bitAnd, bitOr, bitXor, leftShift, rightArithShift, rightLogShift
   *
   * @param  {number | BigNumber | Array | Matrix} x Value to not
   * @return {number | BigNumber | Array | Matrix} NOT of `x`
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_3__["bitNotNumber"],
    BigNumber: _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__["bitNotBigNumber"],
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/bitwise/bitOr.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/bitwise/bitOr.js ***!
  \***********************************************************/
/*! exports provided: createBitOr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBitOr", function() { return createBitOr; });
/* harmony import */ var _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/bitwise */ "../node_modules/mathjs/es/utils/bignumber/bitwise.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js");
/* harmony import */ var _type_matrix_utils_algorithm04__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm04 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm04.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");








var name = 'bitOr';
var dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];
var createBitOr = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm04 = Object(_type_matrix_utils_algorithm04__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm04"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm10 = Object(_type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm10"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Bitwise OR two values, `x | y`.
   * For matrices, the function is evaluated element wise.
   * For units, the function is evaluated on the lowest print base.
   *
   * Syntax:
   *
   *    math.bitOr(x, y)
   *
   * Examples:
   *
   *    math.bitOr(1, 2)               // returns number 3
   *
   *    math.bitOr([1, 2, 3], 4)       // returns Array [5, 6, 7]
   *
   * See also:
   *
   *    bitAnd, bitNot, bitXor, leftShift, rightArithShift, rightLogShift
   *
   * @param  {number | BigNumber | Array | Matrix} x First value to or
   * @param  {number | BigNumber | Array | Matrix} y Second value to or
   * @return {number | BigNumber | Array | Matrix} OR of `x` and `y`
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_7__["bitOrNumber"],
    'BigNumber, BigNumber': _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__["bitOrBigNumber"],
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm04(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm01(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm01(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm10(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm10(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/bitwise/bitXor.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/bitwise/bitXor.js ***!
  \************************************************************/
/*! exports provided: createBitXor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBitXor", function() { return createBitXor; });
/* harmony import */ var _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/bitwise */ "../node_modules/mathjs/es/utils/bignumber/bitwise.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");








var name = 'bitXor';
var dependencies = ['typed', 'matrix', 'DenseMatrix'];
var createBitXor = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_6__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Bitwise XOR two values, `x ^ y`.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.bitXor(x, y)
   *
   * Examples:
   *
   *    math.bitXor(1, 2)               // returns number 3
   *
   *    math.bitXor([2, 3, 4], 4)       // returns Array [6, 7, 0]
   *
   * See also:
   *
   *    bitAnd, bitNot, bitOr, leftShift, rightArithShift, rightLogShift
   *
   * @param  {number | BigNumber | Array | Matrix} x First value to xor
   * @param  {number | BigNumber | Array | Matrix} y Second value to xor
   * @return {number | BigNumber | Array | Matrix} XOR of `x` and `y`
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_7__["bitXorNumber"],
    'BigNumber, BigNumber': _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__["bitXor"],
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/bitwise/leftShift.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/bitwise/leftShift.js ***!
  \***************************************************************/
/*! exports provided: createLeftShift */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLeftShift", function() { return createLeftShift; });
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js");
/* harmony import */ var _type_matrix_utils_algorithm08__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm08 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm08.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");
/* harmony import */ var _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/bignumber/bitwise */ "../node_modules/mathjs/es/utils/bignumber/bitwise.js");










var name = 'leftShift';
var dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];
var createLeftShift = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_7__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      zeros = _ref.zeros,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_0__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm08 = Object(_type_matrix_utils_algorithm08__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm08"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm10 = Object(_type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm10"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Bitwise left logical shift of a value x by y number of bits, `x << y`.
   * For matrices, the function is evaluated element wise.
   * For units, the function is evaluated on the best prefix base.
   *
   * Syntax:
   *
   *    math.leftShift(x, y)
   *
   * Examples:
   *
   *    math.leftShift(1, 2)               // returns number 4
   *
   *    math.leftShift([1, 2, 3], 4)       // returns Array [16, 32, 64]
   *
   * See also:
   *
   *    leftShift, bitNot, bitOr, bitXor, rightArithShift, rightLogShift
   *
   * @param  {number | BigNumber | Array | Matrix} x Value to be shifted
   * @param  {number | BigNumber} y Amount of shifts
   * @return {number | BigNumber | Array | Matrix} `x` shifted left `y` times
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_8__["leftShiftNumber"],
    'BigNumber, BigNumber': _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_9__["leftShiftBigNumber"],
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm08(x, y, this, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm01(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      // check scalar
      if (equalScalar(y, 0)) {
        return x.clone();
      }

      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      // check scalar
      if (equalScalar(y, 0)) {
        return x.clone();
      }

      return algorithm14(x, y, this, false);
    },
    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {
      // check scalar
      if (equalScalar(x, 0)) {
        return zeros(y.size(), y.storage());
      }

      return algorithm10(y, x, this, true);
    },
    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {
      // check scalar
      if (equalScalar(x, 0)) {
        return zeros(y.size(), y.storage());
      }

      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      // use matrix implementation
      return this(matrix(x), y).valueOf();
    },
    'number | BigNumber, Array': function numberBigNumberArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y)).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/bitwise/rightArithShift.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/bitwise/rightArithShift.js ***!
  \*********************************************************************/
/*! exports provided: createRightArithShift */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRightArithShift", function() { return createRightArithShift; });
/* harmony import */ var _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/bitwise */ "../node_modules/mathjs/es/utils/bignumber/bitwise.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js");
/* harmony import */ var _type_matrix_utils_algorithm08__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm08 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm08.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");










var name = 'rightArithShift';
var dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];
var createRightArithShift = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_8__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      zeros = _ref.zeros,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm08 = Object(_type_matrix_utils_algorithm08__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm08"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm10 = Object(_type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm10"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Bitwise right arithmetic shift of a value x by y number of bits, `x >> y`.
   * For matrices, the function is evaluated element wise.
   * For units, the function is evaluated on the best prefix base.
   *
   * Syntax:
   *
   *    math.rightArithShift(x, y)
   *
   * Examples:
   *
   *    math.rightArithShift(4, 2)               // returns number 1
   *
   *    math.rightArithShift([16, -32, 64], 4)   // returns Array [1, -2, 3]
   *
   * See also:
   *
   *    bitAnd, bitNot, bitOr, bitXor, rightArithShift, rightLogShift
   *
   * @param  {number | BigNumber | Array | Matrix} x Value to be shifted
   * @param  {number | BigNumber} y Amount of shifts
   * @return {number | BigNumber | Array | Matrix} `x` sign-filled shifted right `y` times
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_9__["rightArithShiftNumber"],
    'BigNumber, BigNumber': _utils_bignumber_bitwise__WEBPACK_IMPORTED_MODULE_0__["rightArithShiftBigNumber"],
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm08(x, y, this, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm01(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      // check scalar
      if (equalScalar(y, 0)) {
        return x.clone();
      }

      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      // check scalar
      if (equalScalar(y, 0)) {
        return x.clone();
      }

      return algorithm14(x, y, this, false);
    },
    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {
      // check scalar
      if (equalScalar(x, 0)) {
        return zeros(y.size(), y.storage());
      }

      return algorithm10(y, x, this, true);
    },
    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {
      // check scalar
      if (equalScalar(x, 0)) {
        return zeros(y.size(), y.storage());
      }

      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      // use matrix implementation
      return this(matrix(x), y).valueOf();
    },
    'number | BigNumber, Array': function numberBigNumberArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y)).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/bitwise/rightLogShift.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/bitwise/rightLogShift.js ***!
  \*******************************************************************/
/*! exports provided: createRightLogShift */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRightLogShift", function() { return createRightLogShift; });
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js");
/* harmony import */ var _type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js");
/* harmony import */ var _type_matrix_utils_algorithm08__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm08 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm08.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");









var name = 'rightLogShift';
var dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];
var createRightLogShift = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_7__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      zeros = _ref.zeros,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm01 = Object(_type_matrix_utils_algorithm01__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm01"])({
    typed: typed
  });
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_0__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm08 = Object(_type_matrix_utils_algorithm08__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm08"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm10 = Object(_type_matrix_utils_algorithm10__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm10"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Bitwise right logical shift of value x by y number of bits, `x >>> y`.
   * For matrices, the function is evaluated element wise.
   * For units, the function is evaluated on the best prefix base.
   *
   * Syntax:
   *
   *    math.rightLogShift(x, y)
   *
   * Examples:
   *
   *    math.rightLogShift(4, 2)               // returns number 1
   *
   *    math.rightLogShift([16, -32, 64], 4)   // returns Array [1, 2, 3]
   *
   * See also:
   *
   *    bitAnd, bitNot, bitOr, bitXor, leftShift, rightLogShift
   *
   * @param  {number | Array | Matrix} x Value to be shifted
   * @param  {number} y Amount of shifts
   * @return {number | Array | Matrix} `x` zero-filled shifted right `y` times
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_8__["rightLogShiftNumber"],
    // 'BigNumber, BigNumber': ..., // TODO: implement BigNumber support for rightLogShift
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm08(x, y, this, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm01(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      // check scalar
      if (equalScalar(y, 0)) {
        return x.clone();
      }

      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      // check scalar
      if (equalScalar(y, 0)) {
        return x.clone();
      }

      return algorithm14(x, y, this, false);
    },
    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {
      // check scalar
      if (equalScalar(x, 0)) {
        return zeros(y.size(), y.storage());
      }

      return algorithm10(y, x, this, true);
    },
    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {
      // check scalar
      if (equalScalar(x, 0)) {
        return zeros(y.size(), y.storage());
      }

      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      // use matrix implementation
      return this(matrix(x), y).valueOf();
    },
    'number | BigNumber, Array': function numberBigNumberArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y)).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/combinatorics/bellNumbers.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/combinatorics/bellNumbers.js ***!
  \***********************************************************************/
/*! exports provided: createBellNumbers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBellNumbers", function() { return createBellNumbers; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'bellNumbers';
var dependencies = ['typed', 'addScalar', 'isNegative', 'isInteger', 'stirlingS2'];
var createBellNumbers = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      addScalar = _ref.addScalar,
      isNegative = _ref.isNegative,
      isInteger = _ref.isInteger,
      stirlingS2 = _ref.stirlingS2;

  /**
   * The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S.
   * bellNumbers only takes integer arguments.
   * The following condition must be enforced: n >= 0
   *
   * Syntax:
   *
   *   math.bellNumbers(n)
   *
   * Examples:
   *
   *    math.bellNumbers(3) // returns 5
   *    math.bellNumbers(8) // returns 4140
   *
   * See also:
   *
   *    stirlingS2
   *
   * @param {Number | BigNumber} n    Total number of objects in the set
   * @return {Number | BigNumber}     B(n)
   */
  return typed(name, {
    'number | BigNumber': function numberBigNumber(n) {
      if (!isInteger(n) || isNegative(n)) {
        throw new TypeError('Non-negative integer value expected in function bellNumbers');
      } // Sum (k=0, n) S(n,k).


      var result = 0;

      for (var i = 0; i <= n; i++) {
        result = addScalar(result, stirlingS2(n, i));
      }

      return result;
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/combinatorics/catalan.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/combinatorics/catalan.js ***!
  \*******************************************************************/
/*! exports provided: createCatalan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCatalan", function() { return createCatalan; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'catalan';
var dependencies = ['typed', 'addScalar', 'divideScalar', 'multiplyScalar', 'combinations', 'isNegative', 'isInteger'];
var createCatalan = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      addScalar = _ref.addScalar,
      divideScalar = _ref.divideScalar,
      multiplyScalar = _ref.multiplyScalar,
      combinations = _ref.combinations,
      isNegative = _ref.isNegative,
      isInteger = _ref.isInteger;

  /**
   * The Catalan Numbers enumerate combinatorial structures of many different types.
   * catalan only takes integer arguments.
   * The following condition must be enforced: n >= 0
   *
   * Syntax:
   *
   *   math.catalan(n)
   *
   * Examples:
   *
   *    math.catalan(3) // returns 5
   *    math.catalan(8) // returns 1430
   *
   * See also:
   *
   *    bellNumbers
   *
   * @param {Number | BigNumber} n    nth Catalan number
   * @return {Number | BigNumber}     Cn(n)
   */
  return typed(name, {
    'number | BigNumber': function numberBigNumber(n) {
      if (!isInteger(n) || isNegative(n)) {
        throw new TypeError('Non-negative integer value expected in function catalan');
      }

      return divideScalar(combinations(multiplyScalar(n, 2), n), addScalar(n, 1));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/combinatorics/composition.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/combinatorics/composition.js ***!
  \***********************************************************************/
/*! exports provided: createComposition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createComposition", function() { return createComposition; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'composition';
var dependencies = ['typed', 'addScalar', 'combinations', 'isNegative', 'isPositive', 'isInteger', 'larger'];
var createComposition = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      addScalar = _ref.addScalar,
      combinations = _ref.combinations,
      isPositive = _ref.isPositive,
      isNegative = _ref.isNegative,
      isInteger = _ref.isInteger,
      larger = _ref.larger;

  /**
   * The composition counts of n into k parts.
   *
   * composition only takes integer arguments.
   * The following condition must be enforced: k <= n.
   *
   * Syntax:
   *
   *   math.composition(n, k)
   *
   * Examples:
   *
   *    math.composition(5, 3) // returns 6
   *
   * See also:
   *
   *    combinations
   *
   * @param {Number | BigNumber} n    Total number of objects in the set
   * @param {Number | BigNumber} k    Number of objects in the subset
   * @return {Number | BigNumber}     Returns the composition counts of n into k parts.
   */
  return typed(name, {
    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(n, k) {
      if (!isInteger(n) || !isPositive(n) || !isInteger(k) || !isPositive(k)) {
        throw new TypeError('Positive integer value expected in function composition');
      } else if (larger(k, n)) {
        throw new TypeError('k must be less than or equal to n in function composition');
      }

      return combinations(addScalar(n, -1), addScalar(k, -1));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/combinatorics/stirlingS2.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/combinatorics/stirlingS2.js ***!
  \**********************************************************************/
/*! exports provided: createStirlingS2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStirlingS2", function() { return createStirlingS2; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'stirlingS2';
var dependencies = ['typed', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'factorial', 'combinations', 'isNegative', 'isInteger', 'larger'];
var createStirlingS2 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      addScalar = _ref.addScalar,
      subtract = _ref.subtract,
      multiplyScalar = _ref.multiplyScalar,
      divideScalar = _ref.divideScalar,
      pow = _ref.pow,
      factorial = _ref.factorial,
      combinations = _ref.combinations,
      isNegative = _ref.isNegative,
      isInteger = _ref.isInteger,
      larger = _ref.larger;

  /**
   * The Stirling numbers of the second kind, counts the number of ways to partition
   * a set of n labelled objects into k nonempty unlabelled subsets.
   * stirlingS2 only takes integer arguments.
   * The following condition must be enforced: k <= n.
   *
   *  If n = k or k = 1, then s(n,k) = 1
   *
   * Syntax:
   *
   *   math.stirlingS2(n, k)
   *
   * Examples:
   *
   *    math.stirlingS2(5, 3) //returns 25
   *
   * See also:
   *
   *    bellNumbers
   *
   * @param {Number | BigNumber} n    Total number of objects in the set
   * @param {Number | BigNumber} k    Number of objects in the subset
   * @return {Number | BigNumber}     S(n,k)
   */
  return typed(name, {
    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(n, k) {
      if (!isInteger(n) || isNegative(n) || !isInteger(k) || isNegative(k)) {
        throw new TypeError('Non-negative integer value expected in function stirlingS2');
      } else if (larger(k, n)) {
        throw new TypeError('k must be less than or equal to n in function stirlingS2');
      } // 1/k! Sum(i=0 -> k) [(-1)^(k-i)*C(k,j)* i^n]


      var kFactorial = factorial(k);
      var result = 0;

      for (var i = 0; i <= k; i++) {
        var negativeOne = pow(-1, subtract(k, i));
        var kChooseI = combinations(k, i);
        var iPower = pow(i, n);
        result = addScalar(result, multiplyScalar(multiplyScalar(kChooseI, iPower), negativeOne));
      }

      return divideScalar(result, kFactorial);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/complex/arg.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/complex/arg.js ***!
  \*********************************************************/
/*! exports provided: createArg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createArg", function() { return createArg; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'arg';
var dependencies = ['typed'];
var createArg = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Compute the argument of a complex value.
   * For a complex number `a + bi`, the argument is computed as `atan2(b, a)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.arg(x)
   *
   * Examples:
   *
   *    const a = math.complex(2, 2)
   *    math.arg(a) / math.pi          // returns number 0.25
   *
   *    const b = math.complex('2 + 3i')
   *    math.arg(b)                    // returns number 0.982793723247329
   *    math.atan2(3, 2)               // returns number 0.982793723247329
   *
   * See also:
   *
   *    re, im, conj, abs
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            A complex number or array with complex numbers
   * @return {number | BigNumber | Array | Matrix} The argument of x
   */
  return typed(name, {
    number: function number(x) {
      return Math.atan2(0, x);
    },
    BigNumber: function BigNumber(x) {
      return x.constructor.atan2(0, x);
    },
    Complex: function Complex(x) {
      return x.arg();
    },
    // TODO: implement BigNumber support for function arg
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/complex/conj.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/complex/conj.js ***!
  \**********************************************************/
/*! exports provided: createConj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConj", function() { return createConj; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'conj';
var dependencies = ['typed'];
var createConj = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Compute the complex conjugate of a complex value.
   * If `x = a+bi`, the complex conjugate of `x` is `a - bi`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.conj(x)
   *
   * Examples:
   *
   *    math.conj(math.complex('2 + 3i'))  // returns Complex 2 - 3i
   *    math.conj(math.complex('2 - 3i'))  // returns Complex 2 + 3i
   *    math.conj(math.complex('-5.2i'))  // returns Complex 5.2i
   *
   * See also:
   *
   *    re, im, arg, abs
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            A complex number or array with complex numbers
   * @return {number | BigNumber | Complex | Array | Matrix}
   *            The complex conjugate of x
   */
  return typed(name, {
    number: function number(x) {
      return x;
    },
    BigNumber: function BigNumber(x) {
      return x;
    },
    Complex: function Complex(x) {
      return x.conjugate();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/complex/im.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/complex/im.js ***!
  \********************************************************/
/*! exports provided: createIm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIm", function() { return createIm; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'im';
var dependencies = ['typed'];
var createIm = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Get the imaginary part of a complex number.
   * For a complex number `a + bi`, the function returns `b`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.im(x)
   *
   * Examples:
   *
   *    const a = math.complex(2, 3)
   *    math.re(a)                     // returns number 2
   *    math.im(a)                     // returns number 3
   *
   *    math.re(math.complex('-5.2i')) // returns number -5.2
   *    math.re(math.complex(2.4))     // returns number 0
   *
   * See also:
   *
   *    re, conj, abs, arg
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            A complex number or array with complex numbers
   * @return {number | BigNumber | Array | Matrix} The imaginary part of x
   */
  return typed(name, {
    number: function number(x) {
      return 0;
    },
    BigNumber: function BigNumber(x) {
      return x.mul(0);
    },
    Complex: function Complex(x) {
      return x.im;
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/complex/re.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/complex/re.js ***!
  \********************************************************/
/*! exports provided: createRe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRe", function() { return createRe; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 're';
var dependencies = ['typed'];
var createRe = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Get the real part of a complex number.
   * For a complex number `a + bi`, the function returns `a`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.re(x)
   *
   * Examples:
   *
   *    const a = math.complex(2, 3)
   *    math.re(a)                     // returns number 2
   *    math.im(a)                     // returns number 3
   *
   *    math.re(math.complex('-5.2i')) // returns number 0
   *    math.re(math.complex(2.4))     // returns number 2.4
   *
   * See also:
   *
   *    im, conj, abs, arg
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x
   *            A complex number or array with complex numbers
   * @return {number | BigNumber | Array | Matrix} The real part of x
   */
  return typed(name, {
    number: function number(x) {
      return x;
    },
    BigNumber: function BigNumber(x) {
      return x;
    },
    Complex: function Complex(x) {
      return x.re;
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/geometry/distance.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/geometry/distance.js ***!
  \***************************************************************/
/*! exports provided: createDistance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDistance", function() { return createDistance; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'distance';
var dependencies = ['typed', 'addScalar', 'subtract', 'divideScalar', 'multiplyScalar', 'unaryMinus', 'sqrt', 'abs'];
var createDistance = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      addScalar = _ref.addScalar,
      subtract = _ref.subtract,
      multiplyScalar = _ref.multiplyScalar,
      divideScalar = _ref.divideScalar,
      unaryMinus = _ref.unaryMinus,
      sqrt = _ref.sqrt,
      abs = _ref.abs;

  /**
    * Calculates:
    *    The eucledian distance between two points in N-dimensional spaces.
    *    Distance between point and a line in 2 and 3 dimensional spaces.
    *    Pairwise distance between a set of 2D or 3D points
    * NOTE:
    *    When substituting coefficients of a line(a, b and c), use ax + by + c = 0 instead of ax + by = c
    *    For parametric equation of a 3D line, x0, y0, z0, a, b, c are from: (xâˆ’x0, yâˆ’y0, zâˆ’z0) = t(a, b, c)
    *
    * Syntax:
    *    math.distance([x1, y1], [x2, y2])
    *-   math.distance({pointOneX: 4, pointOneY: 5}, {pointTwoX: 2, pointTwoY: 7})
    *    math.distance([x1, y1, z1], [x2, y2, z2])
    *    math.distance({pointOneX: 4, pointOneY: 5, pointOneZ: 8}, {pointTwoX: 2, pointTwoY: 7, pointTwoZ: 9})
    *    math.distance([x1, y1, ... , N1], [x2, y2, ... , N2])
    *    math.distance([[A], [B], [C]...])
    *    math.distance([x1, y1], [LinePtX1, LinePtY1], [LinePtX2, LinePtY2])
    *    math.distance({pointX: 1, pointY: 4}, {lineOnePtX: 6, lineOnePtY: 3}, {lineTwoPtX: 2, lineTwoPtY: 8})
    *    math.distance([x1, y1, z1], [LinePtX1, LinePtY1, LinePtZ1], [LinePtX2, LinePtY2, LinePtZ2])
    *    math.distance({pointX: 1, pointY: 4, pointZ: 7}, {lineOnePtX: 6, lineOnePtY: 3, lineOnePtZ: 4}, {lineTwoPtX: 2, lineTwoPtY: 8, lineTwoPtZ: 5})
    *    math.distance([x1, y1], [xCoeffLine, yCoeffLine, constant])
    *    math.distance({pointX: 10, pointY: 10}, {xCoeffLine: 8, yCoeffLine: 1, constant: 3})
    *    math.distance([x1, y1, z1], [x0, y0, z0, a-tCoeff, b-tCoeff, c-tCoeff]) point and parametric equation of 3D line
    *    math.distance([x, y, z], [x0, y0, z0, a, b, c])
    *    math.distance({pointX: 2, pointY: 5, pointZ: 9}, {x0: 4, y0: 6, z0: 3, a: 4, b: 2, c: 0})
    *
    * Examples:
    *    math.distance([0,0], [4,4])                     // Returns 5.6569
    *    math.distance(
    *     {pointOneX: 0, pointOneY: 0},
    *     {pointTwoX: 10, pointTwoY: 10})                // Returns 14.142135623730951
    *    math.distance([1, 0, 1], [4, -2, 2])            // Returns 3.74166
    *    math.distance(
    *     {pointOneX: 4, pointOneY: 5, pointOneZ: 8},
    *     {pointTwoX: 2, pointTwoY: 7, pointTwoZ: 9})    // Returns 3
    *    math.distance([1, 0, 1, 0], [0, -1, 0, -1])     // Returns 2
    *    math.distance([[1, 2], [1, 2], [1, 3]])         // Returns [0, 1, 1]
    *    math.distance([[1,2,4], [1,2,6], [8,1,3]])      // Returns [2, 7.14142842854285, 7.681145747868608]
    *    math.distance([10, 10], [8, 1, 3])              // Returns 11.535230316796387
    *    math.distance([10, 10], [2, 3], [-8, 0])        // Returns 8.759953130362847
    *    math.distance(
    *     {pointX: 1, pointY: 4},
    *     {lineOnePtX: 6, lineOnePtY: 3},
    *     {lineTwoPtX: 2, lineTwoPtY: 8})                // Returns 2.720549372624744
    *    math.distance([2, 3, 1], [1, 1, 2, 5, 0, 1])    // Returns 2.3204774044612857
    *    math.distance(
    *     {pointX: 2, pointY: 3, pointZ: 1},
    *     {x0: 1, y0: 1, z0: 2, a: 5, b: 0, c: 1}        // Returns 2.3204774044612857
    *
    * @param {Array | Matrix | Object} x    Co-ordinates of first point
    * @param {Array | Matrix | Object} y    Co-ordinates of second point
    * @return {Number | BigNumber} Returns the distance from two/three points
  */
  return typed(name, {
    'Array, Array, Array': function ArrayArrayArray(x, y, z) {
      // Point to Line 2D (x=Point, y=LinePoint1, z=LinePoint2)
      if (x.length === 2 && y.length === 2 && z.length === 2) {
        if (!_2d(x)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');
        }

        if (!_2d(y)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');
        }

        if (!_2d(z)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');
        }

        var m = divideScalar(subtract(z[1], z[0]), subtract(y[1], y[0]));
        var xCoeff = multiplyScalar(multiplyScalar(m, m), y[0]);
        var yCoeff = unaryMinus(multiplyScalar(m, y[0]));
        var constant = x[1];
        return _distancePointLine2D(x[0], x[1], xCoeff, yCoeff, constant);
      } else {
        throw new TypeError('Invalid Arguments: Try again');
      }
    },
    'Object, Object, Object': function ObjectObjectObject(x, y, z) {
      if (Object.keys(x).length === 2 && Object.keys(y).length === 2 && Object.keys(z).length === 2) {
        if (!_2d(x)) {
          throw new TypeError('Values of pointX and pointY should be numbers or BigNumbers');
        }

        if (!_2d(y)) {
          throw new TypeError('Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers');
        }

        if (!_2d(z)) {
          throw new TypeError('Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers');
        }

        if ('pointX' in x && 'pointY' in x && 'lineOnePtX' in y && 'lineOnePtY' in y && 'lineTwoPtX' in z && 'lineTwoPtY' in z) {
          var m = divideScalar(subtract(z.lineTwoPtY, z.lineTwoPtX), subtract(y.lineOnePtY, y.lineOnePtX));
          var xCoeff = multiplyScalar(multiplyScalar(m, m), y.lineOnePtX);
          var yCoeff = unaryMinus(multiplyScalar(m, y.lineOnePtX));
          var constant = x.pointX;
          return _distancePointLine2D(x.pointX, x.pointY, xCoeff, yCoeff, constant);
        } else {
          throw new TypeError('Key names do not match');
        }
      } else {
        throw new TypeError('Invalid Arguments: Try again');
      }
    },
    'Array, Array': function ArrayArray(x, y) {
      // Point to Line 2D (x=[pointX, pointY], y=[x-coeff, y-coeff, const])
      if (x.length === 2 && y.length === 3) {
        if (!_2d(x)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');
        }

        if (!_3d(y)) {
          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');
        }

        return _distancePointLine2D(x[0], x[1], y[0], y[1], y[2]);
      } else if (x.length === 3 && y.length === 6) {
        // Point to Line 3D
        if (!_3d(x)) {
          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');
        }

        if (!_parametricLine(y)) {
          throw new TypeError('Array with 6 numbers or BigNumbers expected for second argument');
        }

        return _distancePointLine3D(x[0], x[1], x[2], y[0], y[1], y[2], y[3], y[4], y[5]);
      } else if (x.length === y.length && x.length > 0) {
        // Point to Point N-dimensions
        if (!_containsOnlyNumbers(x)) {
          throw new TypeError('All values of an array should be numbers or BigNumbers');
        }

        if (!_containsOnlyNumbers(y)) {
          throw new TypeError('All values of an array should be numbers or BigNumbers');
        }

        return _euclideanDistance(x, y);
      } else {
        throw new TypeError('Invalid Arguments: Try again');
      }
    },
    'Object, Object': function ObjectObject(x, y) {
      if (Object.keys(x).length === 2 && Object.keys(y).length === 3) {
        if (!_2d(x)) {
          throw new TypeError('Values of pointX and pointY should be numbers or BigNumbers');
        }

        if (!_3d(y)) {
          throw new TypeError('Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers');
        }

        if ('pointX' in x && 'pointY' in x && 'xCoeffLine' in y && 'yCoeffLine' in y && 'constant' in y) {
          return _distancePointLine2D(x.pointX, x.pointY, y.xCoeffLine, y.yCoeffLine, y.constant);
        } else {
          throw new TypeError('Key names do not match');
        }
      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 6) {
        // Point to Line 3D
        if (!_3d(x)) {
          throw new TypeError('Values of pointX, pointY and pointZ should be numbers or BigNumbers');
        }

        if (!_parametricLine(y)) {
          throw new TypeError('Values of x0, y0, z0, a, b and c should be numbers or BigNumbers');
        }

        if ('pointX' in x && 'pointY' in x && 'x0' in y && 'y0' in y && 'z0' in y && 'a' in y && 'b' in y && 'c' in y) {
          return _distancePointLine3D(x.pointX, x.pointY, x.pointZ, y.x0, y.y0, y.z0, y.a, y.b, y.c);
        } else {
          throw new TypeError('Key names do not match');
        }
      } else if (Object.keys(x).length === 2 && Object.keys(y).length === 2) {
        // Point to Point 2D
        if (!_2d(x)) {
          throw new TypeError('Values of pointOneX and pointOneY should be numbers or BigNumbers');
        }

        if (!_2d(y)) {
          throw new TypeError('Values of pointTwoX and pointTwoY should be numbers or BigNumbers');
        }

        if ('pointOneX' in x && 'pointOneY' in x && 'pointTwoX' in y && 'pointTwoY' in y) {
          return _euclideanDistance([x.pointOneX, x.pointOneY], [y.pointTwoX, y.pointTwoY]);
        } else {
          throw new TypeError('Key names do not match');
        }
      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 3) {
        // Point to Point 3D
        if (!_3d(x)) {
          throw new TypeError('Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers');
        }

        if (!_3d(y)) {
          throw new TypeError('Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers');
        }

        if ('pointOneX' in x && 'pointOneY' in x && 'pointOneZ' in x && 'pointTwoX' in y && 'pointTwoY' in y && 'pointTwoZ' in y) {
          return _euclideanDistance([x.pointOneX, x.pointOneY, x.pointOneZ], [y.pointTwoX, y.pointTwoY, y.pointTwoZ]);
        } else {
          throw new TypeError('Key names do not match');
        }
      } else {
        throw new TypeError('Invalid Arguments: Try again');
      }
    },
    Array: function Array(arr) {
      if (!_pairwise(arr)) {
        throw new TypeError('Incorrect array format entered for pairwise distance calculation');
      }

      return _distancePairwise(arr);
    }
  });

  function _isNumber(a) {
    // distance supports numbers and bignumbers
    return typeof a === 'number' || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(a);
  }

  function _2d(a) {
    // checks if the number of arguments are correct in count and are valid (should be numbers)
    if (a.constructor !== Array) {
      a = _objectToArray(a);
    }

    return _isNumber(a[0]) && _isNumber(a[1]);
  }

  function _3d(a) {
    // checks if the number of arguments are correct in count and are valid (should be numbers)
    if (a.constructor !== Array) {
      a = _objectToArray(a);
    }

    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]);
  }

  function _containsOnlyNumbers(a) {
    // checks if the number of arguments are correct in count and are valid (should be numbers)
    if (!Array.isArray(a)) {
      a = _objectToArray(a);
    }

    return a.every(_isNumber);
  }

  function _parametricLine(a) {
    if (a.constructor !== Array) {
      a = _objectToArray(a);
    }

    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]) && _isNumber(a[3]) && _isNumber(a[4]) && _isNumber(a[5]);
  }

  function _objectToArray(o) {
    var keys = Object.keys(o);
    var a = [];

    for (var i = 0; i < keys.length; i++) {
      a.push(o[keys[i]]);
    }

    return a;
  }

  function _pairwise(a) {
    // checks for valid arguments passed to _distancePairwise(Array)
    if (a[0].length === 2 && _isNumber(a[0][0]) && _isNumber(a[0][1])) {
      if (a.some(function (aI) {
        return aI.length !== 2 || !_isNumber(aI[0]) || !_isNumber(aI[1]);
      })) {
        return false;
      }
    } else if (a[0].length === 3 && _isNumber(a[0][0]) && _isNumber(a[0][1]) && _isNumber(a[0][2])) {
      if (a.some(function (aI) {
        return aI.length !== 3 || !_isNumber(aI[0]) || !_isNumber(aI[1]) || !_isNumber(aI[2]);
      })) {
        return false;
      }
    } else {
      return false;
    }

    return true;
  }

  function _distancePointLine2D(x, y, a, b, c) {
    var num = abs(addScalar(addScalar(multiplyScalar(a, x), multiplyScalar(b, y)), c));
    var den = sqrt(addScalar(multiplyScalar(a, a), multiplyScalar(b, b)));
    return divideScalar(num, den);
  }

  function _distancePointLine3D(x, y, z, x0, y0, z0, a, b, c) {
    var num = [subtract(multiplyScalar(subtract(y0, y), c), multiplyScalar(subtract(z0, z), b)), subtract(multiplyScalar(subtract(z0, z), a), multiplyScalar(subtract(x0, x), c)), subtract(multiplyScalar(subtract(x0, x), b), multiplyScalar(subtract(y0, y), a))];
    num = sqrt(addScalar(addScalar(multiplyScalar(num[0], num[0]), multiplyScalar(num[1], num[1])), multiplyScalar(num[2], num[2])));
    var den = sqrt(addScalar(addScalar(multiplyScalar(a, a), multiplyScalar(b, b)), multiplyScalar(c, c)));
    return divideScalar(num, den);
  }

  function _euclideanDistance(x, y) {
    var vectorSize = x.length;
    var result = 0;
    var diff = 0;

    for (var i = 0; i < vectorSize; i++) {
      diff = subtract(x[i], y[i]);
      result = addScalar(multiplyScalar(diff, diff), result);
    }

    return sqrt(result);
  }

  function _distancePairwise(a) {
    var result = [];
    var pointA = [];
    var pointB = [];

    for (var i = 0; i < a.length - 1; i++) {
      for (var j = i + 1; j < a.length; j++) {
        if (a[0].length === 2) {
          pointA = [a[i][0], a[i][1]];
          pointB = [a[j][0], a[j][1]];
        } else if (a[0].length === 3) {
          pointA = [a[i][0], a[i][1], a[i][2]];
          pointB = [a[j][0], a[j][1], a[j][2]];
        }

        result.push(_euclideanDistance(pointA, pointB));
      }
    }

    return result;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/geometry/intersect.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/geometry/intersect.js ***!
  \****************************************************************/
/*! exports provided: createIntersect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIntersect", function() { return createIntersect; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'intersect';
var dependencies = ['typed', 'config', 'abs', 'add', 'addScalar', 'matrix', 'multiply', 'multiplyScalar', 'divideScalar', 'subtract', 'smaller', 'equalScalar'];
var createIntersect = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      abs = _ref.abs,
      add = _ref.add,
      addScalar = _ref.addScalar,
      matrix = _ref.matrix,
      multiply = _ref.multiply,
      multiplyScalar = _ref.multiplyScalar,
      divideScalar = _ref.divideScalar,
      subtract = _ref.subtract,
      smaller = _ref.smaller,
      equalScalar = _ref.equalScalar;

  /**
   * Calculates the point of intersection of two lines in two or three dimensions
   * and of a line and a plane in three dimensions. The inputs are in the form of
   * arrays or 1 dimensional matrices. The line intersection functions return null
   * if the lines do not meet.
   *
   * Note: Fill the plane coefficients as `x + y + z = c` and not as `x + y + z + c = 0`.
   *
   * Syntax:
   *
   *    math.intersect(endPoint1Line1, endPoint2Line1, endPoint1Line2, endPoint2Line2)
   *    math.intersect(endPoint1, endPoint2, planeCoefficients)
   *
   * Examples:
   *
   *    math.intersect([0, 0], [10, 10], [10, 0], [0, 10])              // Returns [5, 5]
   *    math.intersect([0, 0, 0], [10, 10, 0], [10, 0, 0], [0, 10, 0])  // Returns [5, 5, 0]
   *    math.intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])            // Returns [7, -4, 3]
   *
   * @param  {Array | Matrix} w   Co-ordinates of first end-point of first line
   * @param  {Array | Matrix} x   Co-ordinates of second end-point of first line
   * @param  {Array | Matrix} y   Co-ordinates of first end-point of second line
   *                              OR Co-efficients of the plane's equation
   * @param  {Array | Matrix} z   Co-ordinates of second end-point of second line
   *                              OR null if the calculation is for line and plane
   * @return {Array}              Returns the point of intersection of lines/lines-planes
   */
  return typed('intersect', {
    'Array, Array, Array': function ArrayArrayArray(x, y, plane) {
      if (!_3d(x)) {
        throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');
      }

      if (!_3d(y)) {
        throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');
      }

      if (!_4d(plane)) {
        throw new TypeError('Array with 4 numbers expected as third argument');
      }

      return _intersectLinePlane(x[0], x[1], x[2], y[0], y[1], y[2], plane[0], plane[1], plane[2], plane[3]);
    },
    'Array, Array, Array, Array': function ArrayArrayArrayArray(w, x, y, z) {
      if (w.length === 2) {
        if (!_2d(w)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');
        }

        if (!_2d(x)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');
        }

        if (!_2d(y)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');
        }

        if (!_2d(z)) {
          throw new TypeError('Array with 2 numbers or BigNumbers expected for fourth argument');
        }

        return _intersect2d(w, x, y, z);
      } else if (w.length === 3) {
        if (!_3d(w)) {
          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');
        }

        if (!_3d(x)) {
          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');
        }

        if (!_3d(y)) {
          throw new TypeError('Array with 3 numbers or BigNumbers expected for third argument');
        }

        if (!_3d(z)) {
          throw new TypeError('Array with 3 numbers or BigNumbers expected for fourth argument');
        }

        return _intersect3d(w[0], w[1], w[2], x[0], x[1], x[2], y[0], y[1], y[2], z[0], z[1], z[2]);
      } else {
        throw new TypeError('Arrays with two or thee dimensional points expected');
      }
    },
    'Matrix, Matrix, Matrix': function MatrixMatrixMatrix(x, y, plane) {
      return matrix(this(x.valueOf(), y.valueOf(), plane.valueOf()));
    },
    'Matrix, Matrix, Matrix, Matrix': function MatrixMatrixMatrixMatrix(w, x, y, z) {
      // TODO: output matrix type should match input matrix type
      return matrix(this(w.valueOf(), x.valueOf(), y.valueOf(), z.valueOf()));
    }
  });

  function _isNumeric(a) {
    // intersect supports numbers and bignumbers
    return typeof a === 'number' || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(a);
  }

  function _2d(x) {
    return x.length === 2 && _isNumeric(x[0]) && _isNumeric(x[1]);
  }

  function _3d(x) {
    return x.length === 3 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]);
  }

  function _4d(x) {
    return x.length === 4 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]) && _isNumeric(x[3]);
  }

  function _intersect2d(p1a, p1b, p2a, p2b) {
    var o1 = p1a;
    var o2 = p2a;
    var d1 = subtract(o1, p1b);
    var d2 = subtract(o2, p2b);
    var det = subtract(multiplyScalar(d1[0], d2[1]), multiplyScalar(d2[0], d1[1]));

    if (smaller(abs(det), config.epsilon)) {
      return null;
    }

    var d20o11 = multiplyScalar(d2[0], o1[1]);
    var d21o10 = multiplyScalar(d2[1], o1[0]);
    var d20o21 = multiplyScalar(d2[0], o2[1]);
    var d21o20 = multiplyScalar(d2[1], o2[0]);
    var t = divideScalar(addScalar(subtract(subtract(d20o11, d21o10), d20o21), d21o20), det);
    return add(multiply(d1, t), o1);
  }

  function _intersect3dHelper(a, b, c, d, e, f, g, h, i, j, k, l) {
    // (a - b)*(c - d) + (e - f)*(g - h) + (i - j)*(k - l)
    var add1 = multiplyScalar(subtract(a, b), subtract(c, d));
    var add2 = multiplyScalar(subtract(e, f), subtract(g, h));
    var add3 = multiplyScalar(subtract(i, j), subtract(k, l));
    return addScalar(addScalar(add1, add2), add3);
  }

  function _intersect3d(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4) {
    var d1343 = _intersect3dHelper(x1, x3, x4, x3, y1, y3, y4, y3, z1, z3, z4, z3);

    var d4321 = _intersect3dHelper(x4, x3, x2, x1, y4, y3, y2, y1, z4, z3, z2, z1);

    var d1321 = _intersect3dHelper(x1, x3, x2, x1, y1, y3, y2, y1, z1, z3, z2, z1);

    var d4343 = _intersect3dHelper(x4, x3, x4, x3, y4, y3, y4, y3, z4, z3, z4, z3);

    var d2121 = _intersect3dHelper(x2, x1, x2, x1, y2, y1, y2, y1, z2, z1, z2, z1);

    var ta = divideScalar(subtract(multiplyScalar(d1343, d4321), multiplyScalar(d1321, d4343)), subtract(multiplyScalar(d2121, d4343), multiplyScalar(d4321, d4321)));
    var tb = divideScalar(addScalar(d1343, multiplyScalar(ta, d4321)), d4343);
    var pax = addScalar(x1, multiplyScalar(ta, subtract(x2, x1)));
    var pay = addScalar(y1, multiplyScalar(ta, subtract(y2, y1)));
    var paz = addScalar(z1, multiplyScalar(ta, subtract(z2, z1)));
    var pbx = addScalar(x3, multiplyScalar(tb, subtract(x4, x3)));
    var pby = addScalar(y3, multiplyScalar(tb, subtract(y4, y3)));
    var pbz = addScalar(z3, multiplyScalar(tb, subtract(z4, z3)));

    if (equalScalar(pax, pbx) && equalScalar(pay, pby) && equalScalar(paz, pbz)) {
      return [pax, pay, paz];
    } else {
      return null;
    }
  }

  function _intersectLinePlane(x1, y1, z1, x2, y2, z2, x, y, z, c) {
    var x1x = multiplyScalar(x1, x);
    var x2x = multiplyScalar(x2, x);
    var y1y = multiplyScalar(y1, y);
    var y2y = multiplyScalar(y2, y);
    var z1z = multiplyScalar(z1, z);
    var z2z = multiplyScalar(z2, z);
    var t = divideScalar(subtract(subtract(subtract(c, x1x), y1y), z1z), subtract(subtract(subtract(addScalar(addScalar(x2x, y2y), z2z), x1x), y1y), z1z));
    var px = addScalar(x1, multiplyScalar(t, subtract(x2, x1)));
    var py = addScalar(y1, multiplyScalar(t, subtract(y2, y1)));
    var pz = addScalar(z1, multiplyScalar(t, subtract(z2, z1)));
    return [px, py, pz]; // TODO: Add cases when line is parallel to the plane:
    //       (a) no intersection,
    //       (b) line contained in plane
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/logical/and.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/logical/and.js ***!
  \*********************************************************/
/*! exports provided: createAnd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAnd", function() { return createAnd; });
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm06.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");







var name = 'and';
var dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];
var createAnd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      zeros = _ref.zeros,
      not = _ref.not;
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_0__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm06 = Object(_type_matrix_utils_algorithm06__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm06"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.and(x, y)
   *
   * Examples:
   *
   *    math.and(2, 4)   // returns true
   *
   *    a = [2, 0, 0]
   *    b = [3, 7, 0]
   *    c = 0
   *
   *    math.and(a, b)   // returns [true, false, false]
   *    math.and(a, c)   // returns [false, false, false]
   *
   * See also:
   *
   *    not, or, xor
   *
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check
   * @return {boolean | Array | Matrix}
   *            Returns true when both inputs are defined with a nonzero/nonempty value.
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_6__["andNumber"],
    'Complex, Complex': function ComplexComplex(x, y) {
      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();
    },
    'Unit, Unit': function UnitUnit(x, y) {
      return this(x.value || 0, y.value || 0);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm06(x, y, this, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm02(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      // check scalar
      if (not(y)) {
        // return zero matrix
        return zeros(x.size(), x.storage());
      }

      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      // check scalar
      if (not(y)) {
        // return zero matrix
        return zeros(x.size(), x.storage());
      }

      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      // check scalar
      if (not(x)) {
        // return zero matrix
        return zeros(x.size(), x.storage());
      }

      return algorithm11(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      // check scalar
      if (not(x)) {
        // return zero matrix
        return zeros(x.size(), x.storage());
      }

      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return this(matrix(x), y).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y)).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/logical/not.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/logical/not.js ***!
  \*********************************************************/
/*! exports provided: createNot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNot", function() { return createNot; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'not';
var dependencies = ['typed'];
var createNot = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Logical `not`. Flips boolean value of a given parameter.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.not(x)
   *
   * Examples:
   *
   *    math.not(2)      // returns false
   *    math.not(0)      // returns true
   *    math.not(true)   // returns false
   *
   *    a = [2, -7, 0]
   *    math.not(a)      // returns [false, false, true]
   *
   * See also:
   *
   *    and, or, xor
   *
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check
   * @return {boolean | Array | Matrix}
   *            Returns true when input is a zero or empty value.
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["notNumber"],
    Complex: function Complex(x) {
      return x.re === 0 && x.im === 0;
    },
    BigNumber: function BigNumber(x) {
      return x.isZero() || x.isNaN();
    },
    Unit: function Unit(x) {
      return x.value !== null ? this(x.value) : true;
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/logical/or.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/logical/or.js ***!
  \********************************************************/
/*! exports provided: createOr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOr", function() { return createOr; });
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm05.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");







var name = 'or';
var dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];
var createOr = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_0__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm05 = Object(_type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm05"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Logical `or`. Test if at least one value is defined with a nonzero/nonempty value.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.or(x, y)
   *
   * Examples:
   *
   *    math.or(2, 4)   // returns true
   *
   *    a = [2, 5, 0]
   *    b = [0, 22, 0]
   *    c = 0
   *
   *    math.or(a, b)   // returns [true, true, false]
   *    math.or(b, c)   // returns [false, true, false]
   *
   * See also:
   *
   *    and, not, xor
   *
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check
   * @return {boolean | Array | Matrix}
   *            Returns true when one of the inputs is defined with a nonzero/nonempty value.
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_6__["orNumber"],
    'Complex, Complex': function ComplexComplex(x, y) {
      return x.re !== 0 || x.im !== 0 || y.re !== 0 || y.im !== 0;
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return !x.isZero() && !x.isNaN() || !y.isZero() && !y.isNaN();
    },
    'Unit, Unit': function UnitUnit(x, y) {
      return this(x.value || 0, y.value || 0);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm05(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/logical/xor.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/logical/xor.js ***!
  \*********************************************************/
/*! exports provided: createXor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createXor", function() { return createXor; });
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");







var name = 'xor';
var dependencies = ['typed', 'matrix', 'DenseMatrix'];
var createXor = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_0__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Logical `xor`. Test whether one and only one value is defined with a nonzero/nonempty value.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.xor(x, y)
   *
   * Examples:
   *
   *    math.xor(2, 4)   // returns false
   *
   *    a = [2, 0, 0]
   *    b = [2, 7, 0]
   *    c = 0
   *
   *    math.xor(a, b)   // returns [false, true, false]
   *    math.xor(a, c)   // returns [true, false, false]
   *
   * See also:
   *
   *    and, not, or
   *
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check
   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check
   * @return {boolean | Array | Matrix}
   *            Returns true when one and only one input is defined with a nonzero/nonempty value.
   */

  return typed(name, {
    'number, number': _plain_number__WEBPACK_IMPORTED_MODULE_6__["xorNumber"],
    'Complex, Complex': function ComplexComplex(x, y) {
      return (x.re !== 0 || x.im !== 0) !== (y.re !== 0 || y.im !== 0);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return (!x.isZero() && !x.isNaN()) !== (!y.isZero() && !y.isNaN());
    },
    'Unit, Unit': function UnitUnit(x, y) {
      return this(x.value || 0, y.value || 0);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/apply.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/apply.js ***!
  \**********************************************************/
/*! exports provided: createApply */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createApply", function() { return createApply; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _error_IndexError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/IndexError */ "../node_modules/mathjs/es/error/IndexError.js");




var name = 'apply';
var dependencies = ['typed', 'isInteger'];
var createApply = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      isInteger = _ref.isInteger;

  /**
   * Apply a function that maps an array to a scalar
   * along a given axis of a matrix or array.
   * Returns a new matrix or array with one less dimension than the input.
   *
   * Syntax:
   *
   *     math.apply(A, dim, callback)
   *
   * Where:
   *
   * - `dim: number` is a zero-based dimension over which to concatenate the matrices.
   *
   * Examples:
   *
   *    const A = [[1, 2], [3, 4]]
   *    const sum = math.sum
   *
   *    math.apply(A, 0, sum)             // returns [4, 6]
   *    math.apply(A, 1, sum)             // returns [3, 7]
   *
   * See also:
   *
   *    map, filter, forEach
   *
   * @param {Array | Matrix} array   The input Matrix
   * @param {number} dim             The dimension along which the callback is applied
   * @param {Function} callback      The callback function that is applied. This Function
   *                                 should take an array or 1-d matrix as an input and
   *                                 return a number.
   * @return {Array | Matrix} res    The residual matrix with the function applied over some dimension.
   */
  return typed(name, {
    'Array | Matrix, number | BigNumber, function': function ArrayMatrixNumberBigNumberFunction(mat, dim, callback) {
      if (!isInteger(dim)) {
        throw new TypeError('Integer number expected for dimension');
      }

      var size = Array.isArray(mat) ? Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(mat) : mat.size();

      if (dim < 0 || dim >= size.length) {
        throw new _error_IndexError__WEBPACK_IMPORTED_MODULE_3__["IndexError"](dim, size.length);
      }

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isMatrix"])(mat)) {
        return mat.create(_apply(mat.valueOf(), dim, callback));
      } else {
        return _apply(mat, dim, callback);
      }
    }
  });
});
/**
 * Recursively reduce a matrix
 * @param {Array} mat
 * @param {number} dim
 * @param {Function} callback
 * @returns {Array} ret
 * @private
 */

function _apply(mat, dim, callback) {
  var i, ret, tran;

  if (dim <= 0) {
    if (!Array.isArray(mat[0])) {
      return callback(mat);
    } else {
      tran = _switch(mat);
      ret = [];

      for (i = 0; i < tran.length; i++) {
        ret[i] = _apply(tran[i], dim - 1, callback);
      }

      return ret;
    }
  } else {
    ret = [];

    for (i = 0; i < mat.length; i++) {
      ret[i] = _apply(mat[i], dim - 1, callback);
    }

    return ret;
  }
}
/**
 * Transpose a matrix
 * @param {Array} mat
 * @returns {Array} ret
 * @private
 */


function _switch(mat) {
  var I = mat.length;
  var J = mat[0].length;
  var i, j;
  var ret = [];

  for (j = 0; j < J; j++) {
    var tmp = [];

    for (i = 0; i < I; i++) {
      tmp.push(mat[i][j]);
    }

    ret.push(tmp);
  }

  return ret;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/column.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/column.js ***!
  \***********************************************************/
/*! exports provided: createColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createColumn", function() { return createColumn; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");



var name = 'column';
var dependencies = ['typed', 'Index', 'matrix', 'range'];
var createColumn = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Index = _ref.Index,
      matrix = _ref.matrix,
      range = _ref.range;

  /**
   * Return a column from a Matrix.
   *
   * Syntax:
   *
   *     math.column(value, index)
   *
   * Example:
   *
   *     // get a column
   *     const d = [[1, 2], [3, 4]]
   *     math.column(d, 1) // returns [[2], [4]]
   *
   * See also:
   *
   *     row
   *
   * @param {Array | Matrix } value   An array or matrix
   * @param {number} column           The index of the column
   * @return {Array | Matrix}         The retrieved column
   */
  return typed(name, {
    'Matrix, number': _column,
    'Array, number': function ArrayNumber(value, column) {
      return _column(matrix(Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(value)), column).valueOf();
    }
  });
  /**
   * Retrieve a column of a matrix
   * @param {Matrix } value  A matrix
   * @param {number} column  The index of the column
   * @return {Matrix}        The retrieved column
   */

  function _column(value, column) {
    // check dimensions
    if (value.size().length !== 2) {
      throw new Error('Only two dimensional matrix is supported');
    }

    Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["validateIndex"])(column, value.size()[1]);
    var rowRange = range(0, value.size()[0]);
    var index = new Index(rowRange, column);
    return value.subset(index);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/concat.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/concat.js ***!
  \***********************************************************/
/*! exports provided: createConcat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConcat", function() { return createConcat; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _error_IndexError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/IndexError */ "../node_modules/mathjs/es/error/IndexError.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");






var name = 'concat';
var dependencies = ['typed', 'matrix', 'isInteger'];
var createConcat = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      isInteger = _ref.isInteger;

  /**
   * Concatenate two or more matrices.
   *
   * Syntax:
   *
   *     math.concat(A, B, C, ...)
   *     math.concat(A, B, C, ..., dim)
   *
   * Where:
   *
   * - `dim: number` is a zero-based dimension over which to concatenate the matrices.
   *   By default the last dimension of the matrices.
   *
   * Examples:
   *
   *    const A = [[1, 2], [5, 6]]
   *    const B = [[3, 4], [7, 8]]
   *
   *    math.concat(A, B)                  // returns [[1, 2, 3, 4], [5, 6, 7, 8]]
   *    math.concat(A, B, 0)               // returns [[1, 2], [5, 6], [3, 4], [7, 8]]
   *    math.concat('hello', ' ', 'world') // returns 'hello world'
   *
   * See also:
   *
   *    size, squeeze, subset, transpose
   *
   * @param {... Array | Matrix} args     Two or more matrices
   * @return {Array | Matrix} Concatenated matrix
   */
  return typed(name, {
    // TODO: change signature to '...Array | Matrix, dim?' when supported
    '...Array | Matrix | number | BigNumber': function ArrayMatrixNumberBigNumber(args) {
      var i;
      var len = args.length;
      var dim = -1; // zero-based dimension

      var prevDim;
      var asMatrix = false;
      var matrices = []; // contains multi dimensional arrays

      for (i = 0; i < len; i++) {
        var arg = args[i]; // test whether we need to return a Matrix (if not we return an Array)

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(arg)) {
          asMatrix = true;
        }

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(arg) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(arg)) {
          if (i !== len - 1) {
            throw new Error('Dimension must be specified as last argument');
          } // last argument contains the dimension on which to concatenate


          prevDim = dim;
          dim = arg.valueOf(); // change BigNumber to number

          if (!isInteger(dim)) {
            throw new TypeError('Integer number expected for dimension');
          }

          if (dim < 0 || i > 0 && dim > prevDim) {
            // TODO: would be more clear when throwing a DimensionError here
            throw new _error_IndexError__WEBPACK_IMPORTED_MODULE_3__["IndexError"](dim, prevDim + 1);
          }
        } else {
          // this is a matrix or array
          var m = Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(arg).valueOf();
          var size = Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["arraySize"])(m);
          matrices[i] = m;
          prevDim = dim;
          dim = size.length - 1; // verify whether each of the matrices has the same number of dimensions

          if (i > 0 && dim !== prevDim) {
            throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__["DimensionError"](prevDim + 1, dim + 1);
          }
        }
      }

      if (matrices.length === 0) {
        throw new SyntaxError('At least one matrix expected');
      }

      var res = matrices.shift();

      while (matrices.length) {
        res = _concat(res, matrices.shift(), dim, 0);
      }

      return asMatrix ? matrix(res) : res;
    },
    '...string': function string(args) {
      return args.join('');
    }
  });
});
/**
 * Recursively concatenate two matrices.
 * The contents of the matrices is not cloned.
 * @param {Array} a             Multi dimensional array
 * @param {Array} b             Multi dimensional array
 * @param {number} concatDim    The dimension on which to concatenate (zero-based)
 * @param {number} dim          The current dim (zero-based)
 * @return {Array} c            The concatenated matrix
 * @private
 */

function _concat(a, b, concatDim, dim) {
  if (dim < concatDim) {
    // recurse into next dimension
    if (a.length !== b.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__["DimensionError"](a.length, b.length);
    }

    var c = [];

    for (var i = 0; i < a.length; i++) {
      c[i] = _concat(a[i], b[i], concatDim, dim + 1);
    }

    return c;
  } else {
    // concatenate this dimension
    return a.concat(b);
  }
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/cross.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/cross.js ***!
  \**********************************************************/
/*! exports provided: createCross */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCross", function() { return createCross; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'cross';
var dependencies = ['typed', 'matrix', 'subtract', 'multiply'];
var createCross = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      subtract = _ref.subtract,
      multiply = _ref.multiply;

  /**
   * Calculate the cross product for two vectors in three dimensional space.
   * The cross product of `A = [a1, a2, a3]` and `B = [b1, b2, b3]` is defined
   * as:
   *
   *    cross(A, B) = [
   *      a2 * b3 - a3 * b2,
   *      a3 * b1 - a1 * b3,
   *      a1 * b2 - a2 * b1
   *    ]
   *
   * If one of the input vectors has a dimension greater than 1, the output
   * vector will be a 1x3 (2-dimensional) matrix.
   *
   * Syntax:
   *
   *    math.cross(x, y)
   *
   * Examples:
   *
   *    math.cross([1, 1, 0],   [0, 1, 1])       // Returns [1, -1, 1]
   *    math.cross([3, -3, 1],  [4, 9, 2])       // Returns [-15, -2, 39]
   *    math.cross([2, 3, 4],   [5, 6, 7])       // Returns [-3, 6, -3]
   *    math.cross([[1, 2, 3]], [[4], [5], [6]]) // Returns [[-3, 6, -3]]
   *
   * See also:
   *
   *    dot, multiply
   *
   * @param  {Array | Matrix} x   First vector
   * @param  {Array | Matrix} y   Second vector
   * @return {Array | Matrix}     Returns the cross product of `x` and `y`
   */
  return typed(name, {
    'Matrix, Matrix': function MatrixMatrix(x, y) {
      return matrix(_cross(x.toArray(), y.toArray()));
    },
    'Matrix, Array': function MatrixArray(x, y) {
      return matrix(_cross(x.toArray(), y));
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      return matrix(_cross(x, y.toArray()));
    },
    'Array, Array': _cross
  });
  /**
   * Calculate the cross product for two arrays
   * @param {Array} x  First vector
   * @param {Array} y  Second vector
   * @returns {Array} Returns the cross product of x and y
   * @private
   */

  function _cross(x, y) {
    var highestDimension = Math.max(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(x).length, Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(y).length);
    x = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["squeeze"])(x);
    y = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["squeeze"])(y);
    var xSize = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(x);
    var ySize = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(y);

    if (xSize.length !== 1 || ySize.length !== 1 || xSize[0] !== 3 || ySize[0] !== 3) {
      throw new RangeError('Vectors with length 3 expected ' + '(Size A = [' + xSize.join(', ') + '], B = [' + ySize.join(', ') + '])');
    }

    var product = [subtract(multiply(x[1], y[2]), multiply(x[2], y[1])), subtract(multiply(x[2], y[0]), multiply(x[0], y[2])), subtract(multiply(x[0], y[1]), multiply(x[1], y[0]))];

    if (highestDimension > 1) {
      return [product];
    } else {
      return product;
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/ctranspose.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/ctranspose.js ***!
  \***************************************************************/
/*! exports provided: createCtranspose */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCtranspose", function() { return createCtranspose; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'ctranspose';
var dependencies = ['typed', 'transpose', 'conj'];
var createCtranspose = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      transpose = _ref.transpose,
      conj = _ref.conj;

  /**
   * Transpose and complex conjugate a matrix. All values of the matrix are
   * reflected over its main diagonal and then the complex conjugate is
   * taken. This is equivalent to complex conjugation for scalars and
   * vectors.
   *
   * Syntax:
   *
   *     math.ctranspose(x)
   *
   * Examples:
   *
   *     const A = [[1, 2, 3], [4, 5, math.complex(6,7)]]
   *     math.ctranspose(A)               // returns [[1, 4], [2, 5], [3, {re:6,im:7}]]
   *
   * See also:
   *
   *     transpose, diag, inv, subset, squeeze
   *
   * @param {Array | Matrix} x  Matrix to be ctransposed
   * @return {Array | Matrix}   The ctransposed matrix
   */
  return typed(name, {
    any: function any(x) {
      return conj(transpose(x));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/det.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/det.js ***!
  \********************************************************/
/*! exports provided: createDet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDet", function() { return createDet; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'det';
var dependencies = ['typed', 'matrix', 'subtract', 'multiply', 'unaryMinus', 'lup'];
var createDet = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      subtract = _ref.subtract,
      multiply = _ref.multiply,
      unaryMinus = _ref.unaryMinus,
      lup = _ref.lup;

  /**
   * Calculate the determinant of a matrix.
   *
   * Syntax:
   *
   *    math.det(x)
   *
   * Examples:
   *
   *    math.det([[1, 2], [3, 4]]) // returns -2
   *
   *    const A = [
   *      [-2, 2, 3],
   *      [-1, 1, 3],
   *      [2, 0, -1]
   *    ]
   *    math.det(A) // returns 6
   *
   * See also:
   *
   *    inv
   *
   * @param {Array | Matrix} x  A matrix
   * @return {number} The determinant of `x`
   */
  return typed(name, {
    any: function any(x) {
      return Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(x);
    },
    'Array | Matrix': function det(x) {
      var size;

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(x)) {
        size = x.size();
      } else if (Array.isArray(x)) {
        x = matrix(x);
        size = x.size();
      } else {
        // a scalar
        size = [];
      }

      switch (size.length) {
        case 0:
          // scalar
          return Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(x);

        case 1:
          // vector
          if (size[0] === 1) {
            return Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(x.valueOf()[0]);
          } else {
            throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
          }

        case 2:
          {
            // two dimensional array
            var rows = size[0];
            var cols = size[1];

            if (rows === cols) {
              return _det(x.clone().valueOf(), rows, cols);
            } else {
              throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
            }
          }

        default:
          // multi dimensional array
          throw new RangeError('Matrix must be two dimensional ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
      }
    }
  });
  /**
   * Calculate the determinant of a matrix
   * @param {Array[]} matrix  A square, two dimensional matrix
   * @param {number} rows     Number of rows of the matrix (zero-based)
   * @param {number} cols     Number of columns of the matrix (zero-based)
   * @returns {number} det
   * @private
   */

  function _det(matrix, rows, cols) {
    if (rows === 1) {
      // this is a 1 x 1 matrix
      return Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(matrix[0][0]);
    } else if (rows === 2) {
      // this is a 2 x 2 matrix
      // the determinant of [a11,a12;a21,a22] is det = a11*a22-a21*a12
      return subtract(multiply(matrix[0][0], matrix[1][1]), multiply(matrix[1][0], matrix[0][1]));
    } else {
      // Compute the LU decomposition
      var decomp = lup(matrix); // The determinant is the product of the diagonal entries of U (and those of L, but they are all 1)

      var det = decomp.U[0][0];

      for (var _i = 1; _i < rows; _i++) {
        det = multiply(det, decomp.U[_i][_i]);
      } // The determinant will be multiplied by 1 or -1 depending on the parity of the permutation matrix.
      // This can be determined by counting the cycles. This is roughly a linear time algorithm.


      var evenCycles = 0;
      var i = 0;
      var visited = [];

      while (true) {
        while (visited[i]) {
          i++;
        }

        if (i >= rows) break;
        var j = i;
        var cycleLen = 0;

        while (!visited[decomp.p[j]]) {
          visited[decomp.p[j]] = true;
          j = decomp.p[j];
          cycleLen++;
        }

        if (cycleLen % 2 === 0) {
          evenCycles++;
        }
      }

      return evenCycles % 2 === 0 ? det : unaryMinus(det);
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/diag.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/diag.js ***!
  \*********************************************************/
/*! exports provided: createDiag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDiag", function() { return createDiag; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'diag';
var dependencies = ['typed', 'matrix', 'DenseMatrix', 'SparseMatrix'];
var createDiag = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix,
      SparseMatrix = _ref.SparseMatrix;

  /**
   * Create a diagonal matrix or retrieve the diagonal of a matrix
   *
   * When `x` is a vector, a matrix with vector `x` on the diagonal will be returned.
   * When `x` is a two dimensional matrix, the matrixes `k`th diagonal will be returned as vector.
   * When k is positive, the values are placed on the super diagonal.
   * When k is negative, the values are placed on the sub diagonal.
   *
   * Syntax:
   *
   *     math.diag(X)
   *     math.diag(X, format)
   *     math.diag(X, k)
   *     math.diag(X, k, format)
   *
   * Examples:
   *
   *     // create a diagonal matrix
   *     math.diag([1, 2, 3])      // returns [[1, 0, 0], [0, 2, 0], [0, 0, 3]]
   *     math.diag([1, 2, 3], 1)   // returns [[0, 1, 0, 0], [0, 0, 2, 0], [0, 0, 0, 3]]
   *     math.diag([1, 2, 3], -1)  // returns [[0, 0, 0], [1, 0, 0], [0, 2, 0], [0, 0, 3]]
   *
   *    // retrieve the diagonal from a matrix
   *    const a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
   *    math.diag(a)   // returns [1, 5, 9]
   *
   * See also:
   *
   *     ones, zeros, identity
   *
   * @param {Matrix | Array} x          A two dimensional matrix or a vector
   * @param {number | BigNumber} [k=0]  The diagonal where the vector will be filled
   *                                    in or retrieved.
   * @param {string} [format='dense']   The matrix storage format.
   *
   * @returns {Matrix | Array} Diagonal matrix from input vector, or diagonal from input matrix.
   */
  return typed(name, {
    // FIXME: simplify this huge amount of signatures as soon as typed-function supports optional arguments
    Array: function Array(x) {
      return _diag(x, 0, Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(x), null);
    },
    'Array, number': function ArrayNumber(x, k) {
      return _diag(x, k, Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(x), null);
    },
    'Array, BigNumber': function ArrayBigNumber(x, k) {
      return _diag(x, k.toNumber(), Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(x), null);
    },
    'Array, string': function ArrayString(x, format) {
      return _diag(x, 0, Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(x), format);
    },
    'Array, number, string': function ArrayNumberString(x, k, format) {
      return _diag(x, k, Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(x), format);
    },
    'Array, BigNumber, string': function ArrayBigNumberString(x, k, format) {
      return _diag(x, k.toNumber(), Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(x), format);
    },
    Matrix: function Matrix(x) {
      return _diag(x, 0, x.size(), x.storage());
    },
    'Matrix, number': function MatrixNumber(x, k) {
      return _diag(x, k, x.size(), x.storage());
    },
    'Matrix, BigNumber': function MatrixBigNumber(x, k) {
      return _diag(x, k.toNumber(), x.size(), x.storage());
    },
    'Matrix, string': function MatrixString(x, format) {
      return _diag(x, 0, x.size(), format);
    },
    'Matrix, number, string': function MatrixNumberString(x, k, format) {
      return _diag(x, k, x.size(), format);
    },
    'Matrix, BigNumber, string': function MatrixBigNumberString(x, k, format) {
      return _diag(x, k.toNumber(), x.size(), format);
    }
  });
  /**
   * Creeate diagonal matrix from a vector or vice versa
   * @param {Array | Matrix} x
   * @param {number} k
   * @param {string} format Storage format for matrix. If null,
   *                          an Array is returned
   * @returns {Array | Matrix}
   * @private
   */

  function _diag(x, k, size, format) {
    if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["isInteger"])(k)) {
      throw new TypeError('Second parameter in function diag must be an integer');
    }

    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0; // check dimensions

    switch (size.length) {
      case 1:
        return _createDiagonalMatrix(x, k, format, size[0], kSub, kSuper);

      case 2:
        return _getDiagonal(x, k, format, size, kSub, kSuper);
    }

    throw new RangeError('Matrix for function diag must be 2 dimensional');
  }

  function _createDiagonalMatrix(x, k, format, l, kSub, kSuper) {
    // matrix size
    var ms = [l + kSub, l + kSuper];

    if (format && format !== 'sparse' && format !== 'dense') {
      throw new TypeError("Unknown matrix type ".concat(format, "\""));
    } // create diagonal matrix


    var m = format === 'sparse' ? SparseMatrix.diagonal(ms, x, k) : DenseMatrix.diagonal(ms, x, k); // check we need to return a matrix

    return format !== null ? m : m.valueOf();
  }

  function _getDiagonal(x, k, format, s, kSub, kSuper) {
    // check x is a Matrix
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(x)) {
      // get diagonal matrix
      var dm = x.diagonal(k); // check we need to return a matrix

      if (format !== null) {
        // check we need to change matrix format
        if (format !== dm.storage()) {
          return matrix(dm, format);
        }

        return dm;
      }

      return dm.valueOf();
    } // vector size


    var n = Math.min(s[0] - kSub, s[1] - kSuper); // diagonal values

    var vector = []; // loop diagonal

    for (var i = 0; i < n; i++) {
      vector[i] = x[i + kSub][i + kSuper];
    } // check we need to return a matrix


    return format !== null ? matrix(vector) : vector;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/diff.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/diff.js ***!
  \*********************************************************/
/*! exports provided: createDiff */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDiff", function() { return createDiff; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");



var name = 'diff';
var dependencies = ['typed', 'matrix', 'subtract', 'number'];
var createDiff = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      subtract = _ref.subtract,
      number = _ref.number;

  /**
   * Create a new matrix or array of the difference between elements of the given array
   * The optional dim parameter lets you specify the dimension to evaluate the difference of
   * If no dimension parameter is passed it is assumed as dimension 0
   *
   * Dimension is zero-based in javascript and one-based in the parser and can be a number or bignumber
   * Arrays must be 'rectangular' meaning arrays like [1, 2]
   * If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays
   *
   * Syntax:
   *
   *     math.diff(arr)
   *     math.diff(arr, dim)
   *
   * Examples:
   *
   *     const arr = [1, 2, 4, 7, 0]
   *     math.diff(arr) // returns [1, 2, 3, -7] (no dimension passed so 0 is assumed)
   *     math.diff(math.matrix(arr)) // returns math.matrix([1, 2, 3, -7])
   *
   *     const arr = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [9, 8, 7, 6, 4]]
   *     math.diff(arr) // returns [[0, 0, 0, 0, 0], [8, 6, 4, 2, -1]]
   *     math.diff(arr, 0) // returns [[0, 0, 0, 0, 0], [8, 6, 4, 2, -1]]
   *     math.diff(arr, 1) // returns [[1, 1, 1, 1], [1, 1, 1, 1], [-1, -1, -1, -2]]
   *     math.diff(arr, math.bignumber(1)) // returns [[1, 1, 1, 1], [1, 1, 1, 1], [-1, -1, -1, -2]]
   *
   *     math.diff(arr, 2) // throws RangeError as arr is 2 dimensional not 3
   *     math.diff(arr, -1) // throws RangeError as negative dimensions are not allowed
   *
   *     // These will all produce the same result
   *     math.diff([[1, 2], [3, 4]])
   *     math.diff([math.matrix([1, 2]), math.matrix([3, 4])])
   *     math.diff([[1, 2], math.matrix([3, 4])])
   *     math.diff([math.matrix([1, 2]), [3, 4]])
   *     // They do not produce the same result as  math.diff(math.matrix([[1, 2], [3, 4]])) as this returns a matrix
   *
   * See Also:
   *
   *      sum
   *      subtract
   *      partitionSelect
   *
   * @param {Array | Matrix} arr    An array or matrix
   * @param {number} dim            Dimension
   * @return {Array | Matrix}       Difference between array elements in given dimension
   */
  return typed(name, {
    'Array | Matrix': function ArrayMatrix(arr) {
      // No dimension specified => assume dimension 0
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isMatrix"])(arr)) {
        return matrix(_diff(arr.toArray()));
      } else {
        return _diff(arr);
      }
    },
    'Array | Matrix, number': function ArrayMatrixNumber(arr, dim) {
      if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(dim)) throw new RangeError('Dimension must be a whole number');

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isMatrix"])(arr)) {
        return matrix(_recursive(arr.toArray(), dim));
      } else {
        return _recursive(arr, dim);
      }
    },
    'Array | Matrix, BigNumber': function ArrayMatrixBigNumber(arr, dim) {
      return this(arr, number(dim));
    }
  });
  /**
   * Recursively find the correct dimension in the array/matrix
   * Then Apply _diff to that dimension
   *
   * @param {Array} arr      The array
   * @param {number} dim     Dimension
   * @return {Array}         resulting array
   */

  function _recursive(arr, dim) {
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isMatrix"])(arr)) {
      arr = arr.toArray(); // Makes sure arrays like [ matrix([0, 1]), matrix([1, 0]) ] are processed properly
    }

    if (!Array.isArray(arr)) {
      throw RangeError('Array/Matrix does not have that many dimensions');
    }

    if (dim > 0) {
      var result = [];
      arr.forEach(function (element) {
        result.push(_recursive(element, dim - 1));
      });
      return result;
    } else if (dim === 0) {
      return _diff(arr);
    } else {
      throw RangeError('Cannot have negative dimension');
    }
  }
  /**
   * Difference between elements in the array
   *
   * @param {Array} arr      An array
   * @return {Array}         resulting array
   */


  function _diff(arr) {
    var result = [];
    var size = arr.length;

    if (size < 2) {
      return arr;
    }

    for (var i = 1; i < size; i++) {
      result.push(_ElementDiff(arr[i - 1], arr[i]));
    }

    return result;
  }
  /**
   * Difference between 2 objects
   *
   * @param {Object} obj1    First object
   * @param {Object} obj2    Second object
   * @return {Array}         resulting array
   */


  function _ElementDiff(obj1, obj2) {
    // Convert matrices to arrays
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isMatrix"])(obj1)) obj1 = obj1.toArray();
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isMatrix"])(obj2)) obj2 = obj2.toArray();
    var obj1IsArray = Array.isArray(obj1);
    var obj2IsArray = Array.isArray(obj2);

    if (obj1IsArray && obj2IsArray) {
      return _ArrayDiff(obj1, obj2);
    }

    if (!obj1IsArray && !obj2IsArray) {
      return subtract(obj2, obj1); // Difference is (second - first) NOT (first - second)
    }

    throw TypeError('Cannot calculate difference between 1 array and 1 non-array');
  }
  /**
   * Difference of elements in 2 arrays
   *
   * @param {Array} arr1     Array 1
   * @param {Array} arr2     Array 2
   * @return {Array}         resulting array
   */


  function _ArrayDiff(arr1, arr2) {
    if (arr1.length !== arr2.length) {
      throw RangeError('Not all sub-arrays have the same length');
    }

    var result = [];
    var size = arr1.length;

    for (var i = 0; i < size; i++) {
      result.push(_ElementDiff(arr1[i], arr2[i]));
    }

    return result;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/dot.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/dot.js ***!
  \********************************************************/
/*! exports provided: createDot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDot", function() { return createDot; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");


var name = 'dot';
var dependencies = ['typed', 'addScalar', 'multiplyScalar', 'conj', 'size'];
var createDot = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      addScalar = _ref.addScalar,
      multiplyScalar = _ref.multiplyScalar,
      conj = _ref.conj,
      size = _ref.size;

  /**
   * Calculate the dot product of two vectors. The dot product of
   * `A = [a1, a2, ..., an]` and `B = [b1, b2, ..., bn]` is defined as:
   *
   *    dot(A, B) = conj(a1) * b1 + conj(a2) * b2 + ... + conj(an) * bn
   *
   * Syntax:
   *
   *    math.dot(x, y)
   *
   * Examples:
   *
   *    math.dot([2, 4, 1], [2, 2, 3])       // returns number 15
   *    math.multiply([2, 4, 1], [2, 2, 3])  // returns number 15
   *
   * See also:
   *
   *    multiply, cross
   *
   * @param  {Array | Matrix} x     First vector
   * @param  {Array | Matrix} y     Second vector
   * @return {number}               Returns the dot product of `x` and `y`
   */
  return typed(name, {
    'Array | DenseMatrix, Array | DenseMatrix': _denseDot,
    'SparseMatrix, SparseMatrix': _sparseDot
  });

  function _validateDim(x, y) {
    var xSize = _size(x);

    var ySize = _size(y);

    var xLen, yLen;

    if (xSize.length === 1) {
      xLen = xSize[0];
    } else if (xSize.length === 2 && xSize[1] === 1) {
      xLen = xSize[0];
    } else {
      throw new RangeError('Expected a column vector, instead got a matrix of size (' + xSize.join(', ') + ')');
    }

    if (ySize.length === 1) {
      yLen = ySize[0];
    } else if (ySize.length === 2 && ySize[1] === 1) {
      yLen = ySize[0];
    } else {
      throw new RangeError('Expected a column vector, instead got a matrix of size (' + ySize.join(', ') + ')');
    }

    if (xLen !== yLen) throw new RangeError('Vectors must have equal length (' + xLen + ' != ' + yLen + ')');
    if (xLen === 0) throw new RangeError('Cannot calculate the dot product of empty vectors');
    return xLen;
  }

  function _denseDot(a, b) {
    var N = _validateDim(a, b);

    var adata = Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(a) ? a._data : a;
    var adt = Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(a) ? a._datatype : undefined;
    var bdata = Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(b) ? b._data : b;
    var bdt = Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(b) ? b._datatype : undefined; // are these 2-dimensional column vectors? (as opposed to 1-dimensional vectors)

    var aIsColumn = _size(a).length === 2;
    var bIsColumn = _size(b).length === 2;
    var add = addScalar;
    var mul = multiplyScalar; // process data types

    if (adt && bdt && adt === bdt && typeof adt === 'string') {
      var dt = adt; // find signatures that matches (dt, dt)

      add = typed.find(addScalar, [dt, dt]);
      mul = typed.find(multiplyScalar, [dt, dt]);
    } // both vectors 1-dimensional


    if (!aIsColumn && !bIsColumn) {
      var c = mul(conj(adata[0]), bdata[0]);

      for (var i = 1; i < N; i++) {
        c = add(c, mul(conj(adata[i]), bdata[i]));
      }

      return c;
    } // a is 1-dim, b is column


    if (!aIsColumn && bIsColumn) {
      var _c = mul(conj(adata[0]), bdata[0][0]);

      for (var _i = 1; _i < N; _i++) {
        _c = add(_c, mul(conj(adata[_i]), bdata[_i][0]));
      }

      return _c;
    } // a is column, b is 1-dim


    if (aIsColumn && !bIsColumn) {
      var _c2 = mul(conj(adata[0][0]), bdata[0]);

      for (var _i2 = 1; _i2 < N; _i2++) {
        _c2 = add(_c2, mul(conj(adata[_i2][0]), bdata[_i2]));
      }

      return _c2;
    } // both vectors are column


    if (aIsColumn && bIsColumn) {
      var _c3 = mul(conj(adata[0][0]), bdata[0][0]);

      for (var _i3 = 1; _i3 < N; _i3++) {
        _c3 = add(_c3, mul(conj(adata[_i3][0]), bdata[_i3][0]));
      }

      return _c3;
    }
  }

  function _sparseDot(x, y) {
    _validateDim(x, y);

    var xindex = x._index;
    var xvalues = x._values;
    var yindex = y._index;
    var yvalues = y._values; // TODO optimize add & mul using datatype

    var c = 0;
    var add = addScalar;
    var mul = multiplyScalar;
    var i = 0;
    var j = 0;

    while (i < xindex.length && j < yindex.length) {
      var I = xindex[i];
      var J = yindex[j];

      if (I < J) {
        i++;
        continue;
      }

      if (I > J) {
        j++;
        continue;
      }

      if (I === J) {
        c = add(c, mul(xvalues[i], yvalues[j]));
        i++;
        j++;
      }
    }

    return c;
  } // TODO remove this once #1771 is fixed


  function _size(x) {
    return Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(x) ? x.size() : size(x);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/eigs.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/eigs.js ***!
  \*********************************************************/
/*! exports provided: createEigs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEigs", function() { return createEigs; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");



var name = 'eigs';
var dependencies = ['config', 'typed', 'matrix', 'addScalar', 'equal', 'subtract', 'abs', 'atan', 'cos', 'sin', 'multiplyScalar', 'inv', 'bignumber', 'multiply', 'add'];
var createEigs = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var config = _ref.config,
      typed = _ref.typed,
      matrix = _ref.matrix,
      addScalar = _ref.addScalar,
      subtract = _ref.subtract,
      equal = _ref.equal,
      abs = _ref.abs,
      atan = _ref.atan,
      cos = _ref.cos,
      sin = _ref.sin,
      multiplyScalar = _ref.multiplyScalar,
      inv = _ref.inv,
      bignumber = _ref.bignumber,
      multiply = _ref.multiply,
      add = _ref.add;

  /**
   * Compute eigenvalue and eigenvector of a real symmetric matrix.
   * Only applicable to two dimensional symmetric matrices. Uses Jacobi
   * Algorithm. Matrix containing mixed type ('number', 'bignumber', 'fraction')
   * of elements are not supported. Input matrix or 2D array should contain all elements
   * of either 'number', 'bignumber' or 'fraction' type. For 'number' and 'fraction', the
   * eigenvalues are of 'number' type. For 'bignumber' the eigenvalues are of ''bignumber' type.
   * Eigenvectors are always of 'number' type.
   *
   * Syntax:
   *
   *     math.eigs(x)
   *
   * Examples:
   *
   *     const H = [[5, 2.3], [2.3, 1]]
   *     const ans = math.eigs(H) // returns {values: [E1,E2...sorted], vectors: [v1,v2.... corresponding vectors as columns]}
   *     const E = ans.values
   *     const U = ans.vectors
   *     math.multiply(H, math.column(U, 0)) // returns math.multiply(E[0], math.column(U, 0))
   *     const UTxHxU = math.multiply(math.transpose(U), H, U) // rotates H to the eigen-representation
   *     E[0] == UTxHxU[0][0]  // returns true
   * See also:
   *
   *     inv
   *
   * @param {Array | Matrix} x  Matrix to be diagonalized
   * @return {{values: Array, vectors: Array} | {values: Matrix, vectors: Matrix}} Object containing eigenvalues (Array or Matrix) and eigenvectors (2D Array/Matrix with eigenvectors as columns).
   */
  return typed('eigs', {
    Array: function Array(x) {
      // check array size
      var mat = matrix(x);
      var size = mat.size();

      if (size.length !== 2 || size[0] !== size[1]) {
        throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
      } // use dense 2D matrix implementation


      var ans = checkAndSubmit(mat, size[0]);
      return {
        values: ans[0],
        vectors: ans[1]
      };
    },
    Matrix: function Matrix(x) {
      // use dense 2D array implementation
      // dense matrix
      var size = x.size();

      if (size.length !== 2 || size[0] !== size[1]) {
        throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
      }

      var ans = checkAndSubmit(x, size[0]);
      return {
        values: matrix(ans[0]),
        vectors: matrix(ans[1])
      };
    }
  }); // Is the matrix
  // symmetric ?

  function isSymmetric(x, n) {
    for (var i = 0; i < n; i++) {
      for (var j = i; j < n; j++) {
        // not symmtric
        if (!equal(x[i][j], x[j][i])) {
          throw new TypeError('Input matrix is not symmetric');
        }
      }
    }
  } // check input for possible problems
  // and perform diagonalization efficiently for
  // specific type of number


  function checkAndSubmit(x, n) {
    var type = x.datatype(); // type check

    if (type === undefined) {
      type = x.getDataType();
    }

    if (type !== 'number' && type !== 'BigNumber' && type !== 'Fraction') {
      if (type === 'mixed') {
        throw new TypeError('Mixed matrix element type is not supported');
      } else {
        throw new TypeError('Matrix element type not supported (' + type + ')');
      }
    } else {
      isSymmetric(x.toArray(), n);
    } // perform efficient calculation for 'numbers'


    if (type === 'number') {
      return diag(x.toArray());
    } else if (type === 'Fraction') {
      var xArr = x.toArray(); // convert fraction to numbers

      for (var i = 0; i < n; i++) {
        for (var j = i; j < n; j++) {
          xArr[i][j] = xArr[i][j].valueOf();
          xArr[j][i] = xArr[i][j];
        }
      }

      return diag(x.toArray());
    } else if (type === 'BigNumber') {
      return diagBig(x.toArray());
    }
  } // diagonalization implementation for number (efficient)


  function diag(x) {
    var N = x.length;
    var e0 = Math.abs(config.epsilon / N);
    var psi;
    var Sij = new Array(N); // Sij is Identity Matrix

    for (var i = 0; i < N; i++) {
      Sij[i] = createArray(N, 0);
      Sij[i][i] = 1.0;
    } // initial error


    var Vab = getAij(x);

    while (Math.abs(Vab[1]) >= Math.abs(e0)) {
      var _i = Vab[0][0];
      var j = Vab[0][1];
      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);
      x = x1(x, psi, _i, j);
      Sij = Sij1(Sij, psi, _i, j);
      Vab = getAij(x);
    }

    var Ei = createArray(N, 0); // eigenvalues

    for (var _i2 = 0; _i2 < N; _i2++) {
      Ei[_i2] = x[_i2][_i2];
    }

    return sorting(Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(Ei), Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(Sij));
  } // diagonalization implementation for bigNumber


  function diagBig(x) {
    var N = x.length;
    var e0 = abs(config.epsilon / N);
    var psi;
    var Sij = new Array(N); // Sij is Identity Matrix

    for (var i = 0; i < N; i++) {
      Sij[i] = createArray(N, 0);
      Sij[i][i] = 1.0;
    } // initial error


    var Vab = getAijBig(x);

    while (abs(Vab[1]) >= abs(e0)) {
      var _i3 = Vab[0][0];
      var j = Vab[0][1];
      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);
      x = x1Big(x, psi, _i3, j);
      Sij = Sij1Big(Sij, psi, _i3, j);
      Vab = getAijBig(x);
    }

    var Ei = createArray(N, 0); // eigenvalues

    for (var _i4 = 0; _i4 < N; _i4++) {
      Ei[_i4] = x[_i4][_i4];
    } // return [clone(Ei), clone(Sij)]


    return sorting(Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(Ei), Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(Sij));
  } // get angle


  function getTheta(aii, ajj, aij) {
    var denom = ajj - aii;

    if (Math.abs(denom) <= config.epsilon) {
      return Math.PI / 4;
    } else {
      return 0.5 * Math.atan(2 * aij / (ajj - aii));
    }
  } // get angle


  function getThetaBig(aii, ajj, aij) {
    var denom = subtract(ajj, aii);

    if (abs(denom) <= config.epsilon) {
      return bignumber(-1).acos().div(4);
    } else {
      return multiplyScalar(0.5, atan(multiply(2, aij, inv(denom))));
    }
  } // update eigvec


  function Sij1(Sij, theta, i, j) {
    var N = Sij.length;
    var c = Math.cos(theta);
    var s = Math.sin(theta);
    var Ski = createArray(N, 0);
    var Skj = createArray(N, 0);

    for (var k = 0; k < N; k++) {
      Ski[k] = c * Sij[k][i] - s * Sij[k][j];
      Skj[k] = s * Sij[k][i] + c * Sij[k][j];
    }

    for (var _k = 0; _k < N; _k++) {
      Sij[_k][i] = Ski[_k];
      Sij[_k][j] = Skj[_k];
    }

    return Sij;
  } // update eigvec for overlap


  function Sij1Big(Sij, theta, i, j) {
    var N = Sij.length;
    var c = cos(theta);
    var s = sin(theta);
    var Ski = createArray(N, bignumber(0));
    var Skj = createArray(N, bignumber(0));

    for (var k = 0; k < N; k++) {
      Ski[k] = subtract(multiplyScalar(c, Sij[k][i]), multiplyScalar(s, Sij[k][j]));
      Skj[k] = addScalar(multiplyScalar(s, Sij[k][i]), multiplyScalar(c, Sij[k][j]));
    }

    for (var _k2 = 0; _k2 < N; _k2++) {
      Sij[_k2][i] = Ski[_k2];
      Sij[_k2][j] = Skj[_k2];
    }

    return Sij;
  } // update matrix


  function x1Big(Hij, theta, i, j) {
    var N = Hij.length;
    var c = bignumber(cos(theta));
    var s = bignumber(sin(theta));
    var c2 = multiplyScalar(c, c);
    var s2 = multiplyScalar(s, s);
    var Aki = createArray(N, bignumber(0));
    var Akj = createArray(N, bignumber(0)); // 2cs Hij

    var csHij = multiply(bignumber(2), c, s, Hij[i][j]); //  Aii

    var Aii = addScalar(subtract(multiplyScalar(c2, Hij[i][i]), csHij), multiplyScalar(s2, Hij[j][j]));
    var Ajj = add(multiplyScalar(s2, Hij[i][i]), csHij, multiplyScalar(c2, Hij[j][j])); // 0  to i

    for (var k = 0; k < N; k++) {
      Aki[k] = subtract(multiplyScalar(c, Hij[i][k]), multiplyScalar(s, Hij[j][k]));
      Akj[k] = addScalar(multiplyScalar(s, Hij[i][k]), multiplyScalar(c, Hij[j][k]));
    } // Modify Hij


    Hij[i][i] = Aii;
    Hij[j][j] = Ajj;
    Hij[i][j] = bignumber(0);
    Hij[j][i] = bignumber(0); // 0  to i

    for (var _k3 = 0; _k3 < N; _k3++) {
      if (_k3 !== i && _k3 !== j) {
        Hij[i][_k3] = Aki[_k3];
        Hij[_k3][i] = Aki[_k3];
        Hij[j][_k3] = Akj[_k3];
        Hij[_k3][j] = Akj[_k3];
      }
    }

    return Hij;
  } // update matrix


  function x1(Hij, theta, i, j) {
    var N = Hij.length;
    var c = Math.cos(theta);
    var s = Math.sin(theta);
    var c2 = c * c;
    var s2 = s * s;
    var Aki = createArray(N, 0);
    var Akj = createArray(N, 0); //  Aii

    var Aii = c2 * Hij[i][i] - 2 * c * s * Hij[i][j] + s2 * Hij[j][j];
    var Ajj = s2 * Hij[i][i] + 2 * c * s * Hij[i][j] + c2 * Hij[j][j]; // 0  to i

    for (var k = 0; k < N; k++) {
      Aki[k] = c * Hij[i][k] - s * Hij[j][k];
      Akj[k] = s * Hij[i][k] + c * Hij[j][k];
    } // Modify Hij


    Hij[i][i] = Aii;
    Hij[j][j] = Ajj;
    Hij[i][j] = 0;
    Hij[j][i] = 0; // 0  to i

    for (var _k4 = 0; _k4 < N; _k4++) {
      if (_k4 !== i && _k4 !== j) {
        Hij[i][_k4] = Aki[_k4];
        Hij[_k4][i] = Aki[_k4];
        Hij[j][_k4] = Akj[_k4];
        Hij[_k4][j] = Akj[_k4];
      }
    }

    return Hij;
  } // get max off-diagonal value from Upper Diagonal


  function getAij(Mij) {
    var N = Mij.length;
    var maxMij = 0;
    var maxIJ = [0, 1];

    for (var i = 0; i < N; i++) {
      for (var j = i + 1; j < N; j++) {
        if (Math.abs(maxMij) < Math.abs(Mij[i][j])) {
          maxMij = Math.abs(Mij[i][j]);
          maxIJ = [i, j];
        }
      }
    }

    return [maxIJ, maxMij];
  } // get max off-diagonal value from Upper Diagonal


  function getAijBig(Mij) {
    var N = Mij.length;
    var maxMij = 0;
    var maxIJ = [0, 1];

    for (var i = 0; i < N; i++) {
      for (var j = i + 1; j < N; j++) {
        if (abs(maxMij) < abs(Mij[i][j])) {
          maxMij = abs(Mij[i][j]);
          maxIJ = [i, j];
        }
      }
    }

    return [maxIJ, maxMij];
  } // sort results


  function sorting(E, S) {
    var N = E.length;
    var Ef = Array(N);
    var Sf = Array(N);

    for (var k = 0; k < N; k++) {
      Sf[k] = Array(N);
    }

    for (var i = 0; i < N; i++) {
      var minID = 0;
      var minE = E[0];

      for (var j = 0; j < E.length; j++) {
        if (E[j] < minE) {
          minID = j;
          minE = E[minID];
        }
      }

      Ef[i] = E.splice(minID, 1)[0];

      for (var _k5 = 0; _k5 < N; _k5++) {
        Sf[_k5][i] = S[_k5][minID];

        S[_k5].splice(minID, 1);
      }
    }

    return [Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(Ef), Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(Sf)];
  }
  /**
   * Create an array of a certain size and fill all items with an initial value
   * @param {number} size
   * @param {number} value
   * @return {number[]}
   */


  function createArray(size, value) {
    // TODO: as soon as all browsers support Array.fill, use that instead (IE doesn't support it)
    var array = new Array(size);

    for (var i = 0; i < size; i++) {
      array[i] = value;
    }

    return array;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/expm.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/expm.js ***!
  \*********************************************************/
/*! exports provided: createExpm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createExpm", function() { return createExpm; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'expm';
var dependencies = ['typed', 'abs', 'add', 'identity', 'inv', 'multiply'];
var createExpm = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      abs = _ref.abs,
      add = _ref.add,
      identity = _ref.identity,
      inv = _ref.inv,
      multiply = _ref.multiply;

  /**
   * Compute the matrix exponential, expm(A) = e^A. The matrix must be square.
   * Not to be confused with exp(a), which performs element-wise
   * exponentiation.
   *
   * The exponential is calculated using the PadÃ© approximant with scaling and
   * squaring; see "Nineteen Dubious Ways to Compute the Exponential of a
   * Matrix," by Moler and Van Loan.
   *
   * Syntax:
   *
   *     math.expm(x)
   *
   * Examples:
   *
   *     const A = [[0,2],[0,0]]
   *     math.expm(A)        // returns [[1,2],[0,1]]
   *
   * See also:
   *
   *     exp
   *
   * @param {Matrix} x  A square Matrix
   * @return {Matrix}   The exponential of x
   */
  return typed(name, {
    Matrix: function Matrix(A) {
      // Check matrix size
      var size = A.size();

      if (size.length !== 2 || size[0] !== size[1]) {
        throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');
      }

      var n = size[0]; // Desired accuracy of the approximant (The actual accuracy
      // will be affected by round-off error)

      var eps = 1e-15; // The PadÃ© approximant is not so accurate when the values of A
      // are "large", so scale A by powers of two. Then compute the
      // exponential, and square the result repeatedly according to
      // the identity e^A = (e^(A/m))^m
      // Compute infinity-norm of A, ||A||, to see how "big" it is

      var infNorm = infinityNorm(A); // Find the optimal scaling factor and number of terms in the
      // PadÃ© approximant to reach the desired accuracy

      var params = findParams(infNorm, eps);
      var q = params.q;
      var j = params.j; // The Pade approximation to e^A is:
      // Rqq(A) = Dqq(A) ^ -1 * Nqq(A)
      // where
      // Nqq(A) = sum(i=0, q, (2q-i)!p! / [ (2q)!i!(q-i)! ] A^i
      // Dqq(A) = sum(i=0, q, (2q-i)!q! / [ (2q)!i!(q-i)! ] (-A)^i
      // Scale A by 1 / 2^j

      var Apos = multiply(A, Math.pow(2, -j)); // The i=0 term is just the identity matrix

      var N = identity(n);
      var D = identity(n); // Initialization (i=0)

      var factor = 1; // Initialization (i=1)

      var AposToI = Apos; // Cloning not necessary

      var alternate = -1;

      for (var i = 1; i <= q; i++) {
        if (i > 1) {
          AposToI = multiply(AposToI, Apos);
          alternate = -alternate;
        }

        factor = factor * (q - i + 1) / ((2 * q - i + 1) * i);
        N = add(N, multiply(factor, AposToI));
        D = add(D, multiply(factor * alternate, AposToI));
      }

      var R = multiply(inv(D), N); // Square j times

      for (var _i = 0; _i < j; _i++) {
        R = multiply(R, R);
      }

      return Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isSparseMatrix"])(A) ? A.createSparseMatrix(R) : R;
    }
  });

  function infinityNorm(A) {
    var n = A.size()[0];
    var infNorm = 0;

    for (var i = 0; i < n; i++) {
      var rowSum = 0;

      for (var j = 0; j < n; j++) {
        rowSum += abs(A.get([i, j]));
      }

      infNorm = Math.max(rowSum, infNorm);
    }

    return infNorm;
  }
  /**
   * Find the best parameters for the Pade approximant given
   * the matrix norm and desired accuracy. Returns the first acceptable
   * combination in order of increasing computational load.
   */


  function findParams(infNorm, eps) {
    var maxSearchSize = 30;

    for (var k = 0; k < maxSearchSize; k++) {
      for (var q = 0; q <= k; q++) {
        var j = k - q;

        if (errorEstimate(infNorm, q, j) < eps) {
          return {
            q: q,
            j: j
          };
        }
      }
    }

    throw new Error('Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)');
  }
  /**
   * Returns the estimated error of the Pade approximant for the given
   * parameters.
   */


  function errorEstimate(infNorm, q, j) {
    var qfac = 1;

    for (var i = 2; i <= q; i++) {
      qfac *= i;
    }

    var twoqfac = qfac;

    for (var _i2 = q + 1; _i2 <= 2 * q; _i2++) {
      twoqfac *= _i2;
    }

    var twoqp1fac = twoqfac * (2 * q + 1);
    return 8.0 * Math.pow(infNorm / Math.pow(2, j), 2 * q) * qfac * qfac / (twoqfac * twoqp1fac);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/filter.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/filter.js ***!
  \***********************************************************/
/*! exports provided: createFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFilter", function() { return createFilter; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/function */ "../node_modules/mathjs/es/utils/function.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'filter';
var dependencies = ['typed'];
var createFilter = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Filter the items in an array or one dimensional matrix.
   *
   * Syntax:
   *
   *    math.filter(x, test)
   *
   * Examples:
   *
   *    function isPositive (x) {
   *      return x > 0
   *    }
   *    math.filter([6, -2, -1, 4, 3], isPositive) // returns [6, 4, 3]
   *
   *    math.filter(["23", "foo", "100", "55", "bar"], /[0-9]+/) // returns ["23", "100", "55"]
   *
   * See also:
   *
   *    forEach, map, sort
   *
   * @param {Matrix | Array} x    A one dimensional matrix or array to filter
   * @param {Function | RegExp} test
   *        A function or regular expression to test items.
   *        All entries for which `test` returns true are returned.
   *        When `test` is a function, it is invoked with three parameters:
   *        the value of the element, the index of the element, and the
   *        matrix/array being traversed. The function must return a boolean.
   * @return {Matrix | Array} Returns the filtered matrix.
   */
  return typed('filter', {
    'Array, function': _filterCallback,
    'Matrix, function': function MatrixFunction(x, test) {
      return x.create(_filterCallback(x.toArray(), test));
    },
    'Array, RegExp': _utils_array__WEBPACK_IMPORTED_MODULE_0__["filterRegExp"],
    'Matrix, RegExp': function MatrixRegExp(x, test) {
      return x.create(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["filterRegExp"])(x.toArray(), test));
    }
  });
});
/**
 * Filter values in a callback given a callback function
 * @param {Array} x
 * @param {Function} callback
 * @return {Array} Returns the filtered array
 * @private
 */

function _filterCallback(x, callback) {
  // figure out what number of arguments the callback function expects
  var args = Object(_utils_function__WEBPACK_IMPORTED_MODULE_1__["maxArgumentCount"])(callback);
  return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["filter"])(x, function (value, index, array) {
    // invoke the callback function with the right number of arguments
    if (args === 1) {
      return callback(value);
    } else if (args === 2) {
      return callback(value, [index]);
    } else {
      // 3 or -1
      return callback(value, [index], array);
    }
  });
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/flatten.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/flatten.js ***!
  \************************************************************/
/*! exports provided: createFlatten */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFlatten", function() { return createFlatten; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'flatten';
var dependencies = ['typed', 'matrix'];
var createFlatten = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix;

  /**
   * Flatten a multi dimensional matrix into a single dimensional matrix.
   *
   * Syntax:
   *
   *    math.flatten(x)
   *
   * Examples:
   *
   *    math.flatten([[1,2], [3,4]])   // returns [1, 2, 3, 4]
   *
   * See also:
   *
   *    concat, resize, size, squeeze
   *
   * @param {Matrix | Array} x   Matrix to be flattened
   * @return {Matrix | Array} Returns the flattened matrix
   */
  return typed(name, {
    Array: function Array(x) {
      return Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["flatten"])(Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(x));
    },
    Matrix: function Matrix(x) {
      var flat = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["flatten"])(Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(x.toArray())); // TODO: return the same matrix type as x

      return matrix(flat);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/forEach.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/forEach.js ***!
  \************************************************************/
/*! exports provided: createForEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createForEach", function() { return createForEach; });
/* harmony import */ var _utils_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/function */ "../node_modules/mathjs/es/utils/function.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'forEach';
var dependencies = ['typed'];
var createForEach = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Iterate over all elements of a matrix/array, and executes the given callback function.
   *
   * Syntax:
   *
   *    math.forEach(x, callback)
   *
   * Examples:
   *
   *    math.forEach([1, 2, 3], function(value) {
   *      console.log(value)
   *    })
   *    // outputs 1, 2, 3
   *
   * See also:
   *
   *    filter, map, sort
   *
   * @param {Matrix | Array} x    The matrix to iterate on.
   * @param {Function} callback   The callback function is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix/array being traversed.
   */
  return typed(name, {
    'Array, function': _forEach,
    'Matrix, function': function MatrixFunction(x, callback) {
      return x.forEach(callback);
    }
  });
});
/**
 * forEach for a multi dimensional array
 * @param {Array} array
 * @param {Function} callback
 * @private
 */

function _forEach(array, callback) {
  // figure out what number of arguments the callback function expects
  var args = Object(_utils_function__WEBPACK_IMPORTED_MODULE_0__["maxArgumentCount"])(callback);

  var recurse = function recurse(value, index) {
    if (Array.isArray(value)) {
      Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["forEach"])(value, function (child, i) {
        // we create a copy of the index array and append the new index value
        recurse(child, index.concat(i));
      });
    } else {
      // invoke the callback function with the right number of arguments
      if (args === 1) {
        callback(value);
      } else if (args === 2) {
        callback(value, index);
      } else {
        // 3 or -1
        callback(value, index, array);
      }
    }
  };

  recurse(array, []);
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/getMatrixDataType.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/getMatrixDataType.js ***!
  \**********************************************************************/
/*! exports provided: createGetMatrixDataType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetMatrixDataType", function() { return createGetMatrixDataType; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");



var name = 'getMatrixDataType';
var dependencies = ['typed'];
var createGetMatrixDataType = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Find the data type of all elements in a matrix or array,
   * for example 'number' if all items are a number and 'Complex' if all values
   * are complex numbers.
   * If a matrix contains more than one data type, it will return 'mixed'.
   *
   * Syntax:
   *
   *    math.getMatrixDataType(x)
   *
   * Examples:
   *
   *    const x = [ [1, 2, 3], [4, 5, 6] ]
   *    const mixedX = [ [1, true], [2, 3] ]
   *    const fractionX = [ [math.fraction(1, 3)], [math.fraction(1, 3] ]
   *    const unitX = [ [math.unit('5cm')], [math.unit('5cm')] ]
   *    const bigNumberX = [ [math.bignumber(1)], [math.bignumber(0)] ]
   *    const sparse = math.sparse(x)
   *    const dense = math.matrix(x)
   *    math.getMatrixDataType(x)   // returns 'number'
   *    math.getMatrixDataType(sparse)   // returns 'number'
   *    math.getMatrixDataType(dense)   // returns 'number'
   *    math.getMatrixDataType(mixedX) // returns 'mixed'
   *    math.getMatrixDataType(fractionX) // returns 'Fraction'
   *    math.getMatrixDataType(unitX) // returns 'Unit'
   *    math.getMatrixDataType(bigNumberX) // return 'BigNumber'
   *
   * See also:
   *  SparseMatrix, DenseMatrix
   *
   * @param {...Matrix | Array} x   The Matrix with values.
   *
   * @return {string} A string representation of the matrix type
   */
  return typed(name, {
    Array: function Array(x) {
      return Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["getArrayDataType"])(x, _utils_is__WEBPACK_IMPORTED_MODULE_2__["typeOf"]);
    },
    Matrix: function Matrix(x) {
      return x.getDataType();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/identity.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/identity.js ***!
  \*************************************************************/
/*! exports provided: createIdentity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIdentity", function() { return createIdentity; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'identity';
var dependencies = ['typed', 'config', 'matrix', 'BigNumber', 'DenseMatrix', 'SparseMatrix'];
var createIdentity = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      BigNumber = _ref.BigNumber,
      DenseMatrix = _ref.DenseMatrix,
      SparseMatrix = _ref.SparseMatrix;

  /**
   * Create a 2-dimensional identity matrix with size m x n or n x n.
   * The matrix has ones on the diagonal and zeros elsewhere.
   *
   * Syntax:
   *
   *    math.identity(n)
   *    math.identity(n, format)
   *    math.identity(m, n)
   *    math.identity(m, n, format)
   *    math.identity([m, n])
   *    math.identity([m, n], format)
   *
   * Examples:
   *
   *    math.identity(3)                    // returns [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
   *    math.identity(3, 2)                 // returns [[1, 0], [0, 1], [0, 0]]
   *
   *    const A = [[1, 2, 3], [4, 5, 6]]
   *    math.identity(math.size(A))         // returns [[1, 0, 0], [0, 1, 0]]
   *
   * See also:
   *
   *    diag, ones, zeros, size, range
   *
   * @param {...number | Matrix | Array} size   The size for the matrix
   * @param {string} [format]                   The Matrix storage format
   *
   * @return {Matrix | Array | number} A matrix with ones on the diagonal.
   */
  return typed(name, {
    '': function _() {
      return config.matrix === 'Matrix' ? matrix([]) : [];
    },
    string: function string(format) {
      return matrix(format);
    },
    'number | BigNumber': function numberBigNumber(rows) {
      return _identity(rows, rows, config.matrix === 'Matrix' ? 'dense' : undefined);
    },
    'number | BigNumber, string': function numberBigNumberString(rows, format) {
      return _identity(rows, rows, format);
    },
    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(rows, cols) {
      return _identity(rows, cols, config.matrix === 'Matrix' ? 'dense' : undefined);
    },
    'number | BigNumber, number | BigNumber, string': function numberBigNumberNumberBigNumberString(rows, cols, format) {
      return _identity(rows, cols, format);
    },
    Array: function Array(size) {
      return _identityVector(size);
    },
    'Array, string': function ArrayString(size, format) {
      return _identityVector(size, format);
    },
    Matrix: function Matrix(size) {
      return _identityVector(size.valueOf(), size.storage());
    },
    'Matrix, string': function MatrixString(size, format) {
      return _identityVector(size.valueOf(), format);
    }
  });

  function _identityVector(size, format) {
    switch (size.length) {
      case 0:
        return format ? matrix(format) : [];

      case 1:
        return _identity(size[0], size[0], format);

      case 2:
        return _identity(size[0], size[1], format);

      default:
        throw new Error('Vector containing two values expected');
    }
  }
  /**
   * Create an identity matrix
   * @param {number | BigNumber} rows
   * @param {number | BigNumber} cols
   * @param {string} [format]
   * @returns {Matrix}
   * @private
   */


  function _identity(rows, cols, format) {
    // BigNumber constructor with the right precision
    var Big = Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(rows) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(cols) ? BigNumber : null;
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(rows)) rows = rows.toNumber();
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(cols)) cols = cols.toNumber();

    if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["isInteger"])(rows) || rows < 1) {
      throw new Error('Parameters in function identity must be positive integers');
    }

    if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["isInteger"])(cols) || cols < 1) {
      throw new Error('Parameters in function identity must be positive integers');
    }

    var one = Big ? new BigNumber(1) : 1;
    var defaultValue = Big ? new Big(0) : 0;
    var size = [rows, cols]; // check we need to return a matrix

    if (format) {
      // create diagonal matrix (use optimized implementation for storage format)
      if (format === 'sparse') {
        return SparseMatrix.diagonal(size, one, 0, defaultValue);
      }

      if (format === 'dense') {
        return DenseMatrix.diagonal(size, one, 0, defaultValue);
      }

      throw new TypeError("Unknown matrix type \"".concat(format, "\""));
    } // create and resize array


    var res = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["resize"])([], size, defaultValue); // fill in ones on the diagonal

    var minimum = rows < cols ? rows : cols; // fill diagonal

    for (var d = 0; d < minimum; d++) {
      res[d][d] = one;
    }

    return res;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/inv.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/inv.js ***!
  \********************************************************/
/*! exports provided: createInv */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInv", function() { return createInv; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");




var name = 'inv';
var dependencies = ['typed', 'matrix', 'divideScalar', 'addScalar', 'multiply', 'unaryMinus', 'det', 'identity', 'abs'];
var createInv = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      divideScalar = _ref.divideScalar,
      addScalar = _ref.addScalar,
      multiply = _ref.multiply,
      unaryMinus = _ref.unaryMinus,
      det = _ref.det,
      identity = _ref.identity,
      abs = _ref.abs;

  /**
   * Calculate the inverse of a square matrix.
   *
   * Syntax:
   *
   *     math.inv(x)
   *
   * Examples:
   *
   *     math.inv([[1, 2], [3, 4]])  // returns [[-2, 1], [1.5, -0.5]]
   *     math.inv(4)                 // returns 0.25
   *     1 / 4                       // returns 0.25
   *
   * See also:
   *
   *     det, transpose
   *
   * @param {number | Complex | Array | Matrix} x     Matrix to be inversed
   * @return {number | Complex | Array | Matrix} The inverse of `x`.
   */
  return typed(name, {
    'Array | Matrix': function ArrayMatrix(x) {
      var size = Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(x) ? x.size() : Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(x);

      switch (size.length) {
        case 1:
          // vector
          if (size[0] === 1) {
            if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(x)) {
              return matrix([divideScalar(1, x.valueOf()[0])]);
            } else {
              return [divideScalar(1, x[0])];
            }
          } else {
            throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_3__["format"])(size) + ')');
          }

        case 2:
          // two dimensional array
          {
            var rows = size[0];
            var cols = size[1];

            if (rows === cols) {
              if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(x)) {
                return matrix(_inv(x.valueOf(), rows, cols), x.storage());
              } else {
                // return an Array
                return _inv(x, rows, cols);
              }
            } else {
              throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_3__["format"])(size) + ')');
            }
          }

        default:
          // multi dimensional array
          throw new RangeError('Matrix must be two dimensional ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_3__["format"])(size) + ')');
      }
    },
    any: function any(x) {
      // scalar
      return divideScalar(1, x); // FIXME: create a BigNumber one when configured for bignumbers
    }
  });
  /**
   * Calculate the inverse of a square matrix
   * @param {Array[]} mat     A square matrix
   * @param {number} rows     Number of rows
   * @param {number} cols     Number of columns, must equal rows
   * @return {Array[]} inv    Inverse matrix
   * @private
   */

  function _inv(mat, rows, cols) {
    var r, s, f, value, temp;

    if (rows === 1) {
      // this is a 1 x 1 matrix
      value = mat[0][0];

      if (value === 0) {
        throw Error('Cannot calculate inverse, determinant is zero');
      }

      return [[divideScalar(1, value)]];
    } else if (rows === 2) {
      // this is a 2 x 2 matrix
      var d = det(mat);

      if (d === 0) {
        throw Error('Cannot calculate inverse, determinant is zero');
      }

      return [[divideScalar(mat[1][1], d), divideScalar(unaryMinus(mat[0][1]), d)], [divideScalar(unaryMinus(mat[1][0]), d), divideScalar(mat[0][0], d)]];
    } else {
      // this is a matrix of 3 x 3 or larger
      // calculate inverse using gauss-jordan elimination
      //      https://en.wikipedia.org/wiki/Gaussian_elimination
      //      http://mathworld.wolfram.com/MatrixInverse.html
      //      http://math.uww.edu/~mcfarlat/inverse.htm
      // make a copy of the matrix (only the arrays, not of the elements)
      var A = mat.concat();

      for (r = 0; r < rows; r++) {
        A[r] = A[r].concat();
      } // create an identity matrix which in the end will contain the
      // matrix inverse


      var B = identity(rows).valueOf(); // loop over all columns, and perform row reductions

      for (var c = 0; c < cols; c++) {
        // Pivoting: Swap row c with row r, where row r contains the largest element A[r][c]
        var ABig = abs(A[c][c]);
        var rBig = c;
        r = c + 1;

        while (r < rows) {
          if (abs(A[r][c]) > ABig) {
            ABig = abs(A[r][c]);
            rBig = r;
          }

          r++;
        }

        if (ABig === 0) {
          throw Error('Cannot calculate inverse, determinant is zero');
        }

        r = rBig;

        if (r !== c) {
          temp = A[c];
          A[c] = A[r];
          A[r] = temp;
          temp = B[c];
          B[c] = B[r];
          B[r] = temp;
        } // eliminate non-zero values on the other rows at column c


        var Ac = A[c];
        var Bc = B[c];

        for (r = 0; r < rows; r++) {
          var Ar = A[r];
          var Br = B[r];

          if (r !== c) {
            // eliminate value at column c and row r
            if (Ar[c] !== 0) {
              f = divideScalar(unaryMinus(Ar[c]), Ac[c]); // add (f * row c) to row r to eliminate the value
              // at column c

              for (s = c; s < cols; s++) {
                Ar[s] = addScalar(Ar[s], multiply(f, Ac[s]));
              }

              for (s = 0; s < cols; s++) {
                Br[s] = addScalar(Br[s], multiply(f, Bc[s]));
              }
            }
          } else {
            // normalize value at Acc to 1,
            // divide each value on row r with the value at Acc
            f = Ac[c];

            for (s = c; s < cols; s++) {
              Ar[s] = divideScalar(Ar[s], f);
            }

            for (s = 0; s < cols; s++) {
              Br[s] = divideScalar(Br[s], f);
            }
          }
        }
      }

      return B;
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/kron.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/kron.js ***!
  \*********************************************************/
/*! exports provided: createKron */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createKron", function() { return createKron; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'kron';
var dependencies = ['typed', 'matrix', 'multiplyScalar'];
var createKron = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      multiplyScalar = _ref.multiplyScalar;

  /**
     * Calculates the kronecker product of 2 matrices or vectors.
     *
     * NOTE: If a one dimensional vector / matrix is given, it will be
     * wrapped so its two dimensions.
     * See the examples.
     *
     * Syntax:
     *
     *    math.kron(x, y)
     *
     * Examples:
     *
     *    math.kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])
     *    // returns [ [ 1, 2, 0, 0 ], [ 3, 4, 0, 0 ], [ 0, 0, 1, 2 ], [ 0, 0, 3, 4 ] ]
     *
     *    math.kron([1,1], [2,3,4])
     *    // returns [ [ 2, 3, 4, 2, 3, 4 ] ]
     *
     * See also:
     *
     *    multiply, dot, cross
     *
     * @param  {Array | Matrix} x     First vector
     * @param  {Array | Matrix} y     Second vector
     * @return {Array | Matrix}       Returns the kronecker product of `x` and `y`
     */
  return typed(name, {
    'Matrix, Matrix': function MatrixMatrix(x, y) {
      return matrix(_kron(x.toArray(), y.toArray()));
    },
    'Matrix, Array': function MatrixArray(x, y) {
      return matrix(_kron(x.toArray(), y));
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      return matrix(_kron(x, y.toArray()));
    },
    'Array, Array': _kron
  });
  /**
     * Calculate the kronecker product of two matrices / vectors
     * @param {Array} a  First vector
     * @param {Array} b  Second vector
     * @returns {Array} Returns the kronecker product of x and y
     * @private
     */

  function _kron(a, b) {
    // Deal with the dimensions of the matricies.
    if (Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(a).length === 1) {
      // Wrap it in a 2D Matrix
      a = [a];
    }

    if (Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(b).length === 1) {
      // Wrap it in a 2D Matrix
      b = [b];
    }

    if (Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(a).length > 2 || Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(b).length > 2) {
      throw new RangeError('Vectors with dimensions greater then 2 are not supported expected ' + '(Size x = ' + JSON.stringify(a.length) + ', y = ' + JSON.stringify(b.length) + ')');
    }

    var t = [];
    var r = [];
    return a.map(function (a) {
      return b.map(function (b) {
        r = [];
        t.push(r);
        return a.map(function (y) {
          return b.map(function (x) {
            return r.push(multiplyScalar(y, x));
          });
        });
      });
    }) && t;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/map.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/map.js ***!
  \********************************************************/
/*! exports provided: createMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMap", function() { return createMap; });
/* harmony import */ var _utils_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/function */ "../node_modules/mathjs/es/utils/function.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'map';
var dependencies = ['typed'];
var createMap = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Create a new matrix or array with the results of the callback function executed on
   * each entry of the matrix/array.
   *
   * Syntax:
   *
   *    math.map(x, callback)
   *
   * Examples:
   *
   *    math.map([1, 2, 3], function(value) {
   *      return value * value
   *    })  // returns [1, 4, 9]
   *
   * See also:
   *
   *    filter, forEach, sort
   *
   * @param {Matrix | Array} x    The matrix to iterate on.
   * @param {Function} callback   The callback method is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the matrix being traversed.
   * @return {Matrix | array}     Transformed map of x
   */
  return typed(name, {
    'Array, function': _map,
    'Matrix, function': function MatrixFunction(x, callback) {
      return x.map(callback);
    }
  });
});
/**
 * Map for a multi dimensional array
 * @param {Array} array
 * @param {Function} callback
 * @return {Array}
 * @private
 */

function _map(array, callback) {
  // figure out what number of arguments the callback function expects
  var args = Object(_utils_function__WEBPACK_IMPORTED_MODULE_0__["maxArgumentCount"])(callback);

  var recurse = function recurse(value, index) {
    if (Array.isArray(value)) {
      return value.map(function (child, i) {
        // we create a copy of the index array and append the new index value
        return recurse(child, index.concat(i));
      });
    } else {
      // invoke the callback function with the right number of arguments
      if (args === 1) {
        return callback(value);
      } else if (args === 2) {
        return callback(value, index);
      } else {
        // 3 or -1
        return callback(value, index, array);
      }
    }
  };

  return recurse(array, []);
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/ones.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/ones.js ***!
  \*********************************************************/
/*! exports provided: createOnes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOnes", function() { return createOnes; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'ones';
var dependencies = ['typed', 'config', 'matrix', 'BigNumber'];
var createOnes = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      BigNumber = _ref.BigNumber;

  /**
   * Create a matrix filled with ones. The created matrix can have one or
   * multiple dimensions.
   *
   * Syntax:
   *
   *    math.ones(m)
   *    math.ones(m, format)
   *    math.ones(m, n)
   *    math.ones(m, n, format)
   *    math.ones([m, n])
   *    math.ones([m, n], format)
   *    math.ones([m, n, p, ...])
   *    math.ones([m, n, p, ...], format)
   *
   * Examples:
   *
   *    math.ones(3)                   // returns [1, 1, 1]
   *    math.ones(3, 2)                // returns [[1, 1], [1, 1], [1, 1]]
   *    math.ones(3, 2, 'dense')       // returns Dense Matrix [[1, 1], [1, 1], [1, 1]]
   *
   *    const A = [[1, 2, 3], [4, 5, 6]]
   *    math.ones(math.size(A))       // returns [[1, 1, 1], [1, 1, 1]]
   *
   * See also:
   *
   *    zeros, identity, size, range
   *
   * @param {...number | Array} size    The size of each dimension of the matrix
   * @param {string} [format]           The Matrix storage format
   *
   * @return {Array | Matrix | number}  A matrix filled with ones
   */
  return typed('ones', {
    '': function _() {
      return config.matrix === 'Array' ? _ones([]) : _ones([], 'default');
    },
    // math.ones(m, n, p, ..., format)
    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this
    '...number | BigNumber | string': function numberBigNumberString(size) {
      var last = size[size.length - 1];

      if (typeof last === 'string') {
        var format = size.pop();
        return _ones(size, format);
      } else if (config.matrix === 'Array') {
        return _ones(size);
      } else {
        return _ones(size, 'default');
      }
    },
    Array: _ones,
    Matrix: function Matrix(size) {
      var format = size.storage();
      return _ones(size.valueOf(), format);
    },
    'Array | Matrix, string': function ArrayMatrixString(size, format) {
      return _ones(size.valueOf(), format);
    }
  });
  /**
   * Create an Array or Matrix with ones
   * @param {Array} size
   * @param {string} [format='default']
   * @return {Array | Matrix}
   * @private
   */

  function _ones(size, format) {
    var hasBigNumbers = _normalize(size);

    var defaultValue = hasBigNumbers ? new BigNumber(1) : 1;

    _validate(size);

    if (format) {
      // return a matrix
      var m = matrix(format);

      if (size.length > 0) {
        return m.resize(size, defaultValue);
      }

      return m;
    } else {
      // return an Array
      var arr = [];

      if (size.length > 0) {
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["resize"])(arr, size, defaultValue);
      }

      return arr;
    }
  } // replace BigNumbers with numbers, returns true if size contained BigNumbers


  function _normalize(size) {
    var hasBigNumbers = false;
    size.forEach(function (value, index, arr) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(value)) {
        hasBigNumbers = true;
        arr[index] = value.toNumber();
      }
    });
    return hasBigNumbers;
  } // validate arguments


  function _validate(size) {
    size.forEach(function (value) {
      if (typeof value !== 'number' || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(value) || value < 0) {
        throw new Error('Parameters in function ones must be positive integers');
      }
    });
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/partitionSelect.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/partitionSelect.js ***!
  \********************************************************************/
/*! exports provided: createPartitionSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPartitionSelect", function() { return createPartitionSelect; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'partitionSelect';
var dependencies = ['typed', 'isNumeric', 'isNaN', 'compare'];
var createPartitionSelect = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      isNumeric = _ref.isNumeric,
      isNaN = _ref.isNaN,
      compare = _ref.compare;
  var asc = compare;

  var desc = function desc(a, b) {
    return -compare(a, b);
  };
  /**
   * Partition-based selection of an array or 1D matrix.
   * Will find the kth smallest value, and mutates the input array.
   * Uses Quickselect.
   *
   * Syntax:
   *
   *    math.partitionSelect(x, k)
   *    math.partitionSelect(x, k, compare)
   *
   * Examples:
   *
   *    math.partitionSelect([5, 10, 1], 2)           // returns 10
   *    math.partitionSelect(['C', 'B', 'A', 'D'], 1) // returns 'B'
   *
   *    function sortByLength (a, b) {
   *      return a.length - b.length
   *    }
   *    math.partitionSelect(['Langdon', 'Tom', 'Sara'], 2, sortByLength) // returns 'Langdon'
   *
   * See also:
   *
   *    sort
   *
   * @param {Matrix | Array} x    A one dimensional matrix or array to sort
   * @param {Number} k            The kth smallest value to be retrieved zero-based index
   * @param {Function | 'asc' | 'desc'} [compare='asc']
   *        An optional comparator function. The function is called as
   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,
   *        and 0 when a == b.
   * @return {*} Returns the kth lowest value.
   */


  return typed(name, {
    'Array | Matrix, number': function ArrayMatrixNumber(x, k) {
      return _partitionSelect(x, k, asc);
    },
    'Array | Matrix, number, string': function ArrayMatrixNumberString(x, k, compare) {
      if (compare === 'asc') {
        return _partitionSelect(x, k, asc);
      } else if (compare === 'desc') {
        return _partitionSelect(x, k, desc);
      } else {
        throw new Error('Compare string must be "asc" or "desc"');
      }
    },
    'Array | Matrix, number, function': _partitionSelect
  });

  function _partitionSelect(x, k, compare) {
    if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(k) || k < 0) {
      throw new Error('k must be a non-negative integer');
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(x)) {
      var size = x.size();

      if (size.length > 1) {
        throw new Error('Only one dimensional matrices supported');
      }

      return quickSelect(x.valueOf(), k, compare);
    }

    if (Array.isArray(x)) {
      return quickSelect(x, k, compare);
    }
  }
  /**
   * Quickselect algorithm.
   * Code adapted from:
   * https://blog.teamleadnet.com/2012/07/quick-select-algorithm-find-kth-element.html
   *
   * @param {Array} arr
   * @param {Number} k
   * @param {Function} compare
   * @private
   */


  function quickSelect(arr, k, compare) {
    if (k >= arr.length) {
      throw new Error('k out of bounds');
    } // check for NaN values since these can cause an infinite while loop


    for (var i = 0; i < arr.length; i++) {
      if (isNumeric(arr[i]) && isNaN(arr[i])) {
        return arr[i]; // return NaN
      }
    }

    var from = 0;
    var to = arr.length - 1; // if from == to we reached the kth element

    while (from < to) {
      var r = from;
      var w = to;
      var pivot = arr[Math.floor(Math.random() * (to - from + 1)) + from]; // stop if the reader and writer meets

      while (r < w) {
        // arr[r] >= pivot
        if (compare(arr[r], pivot) >= 0) {
          // put the large values at the end
          var tmp = arr[w];
          arr[w] = arr[r];
          arr[r] = tmp;
          --w;
        } else {
          // the value is smaller than the pivot, skip
          ++r;
        }
      } // if we stepped up (r++) we need to step one down (arr[r] > pivot)


      if (compare(arr[r], pivot) > 0) {
        --r;
      } // the r pointer is on the end of the first k elements


      if (k <= r) {
        to = r;
      } else {
        from = r + 1;
      }
    }

    return arr[k];
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/range.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/range.js ***!
  \**********************************************************/
/*! exports provided: createRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRange", function() { return createRange; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/noop */ "../node_modules/mathjs/es/utils/noop.js");


var name = 'range';
var dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq'];
var createRange = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      bignumber = _ref.bignumber,
      smaller = _ref.smaller,
      smallerEq = _ref.smallerEq,
      larger = _ref.larger,
      largerEq = _ref.largerEq;

  /**
   * Create an array from a range.
   * By default, the range end is excluded. This can be customized by providing
   * an extra parameter `includeEnd`.
   *
   * Syntax:
   *
   *     math.range(str [, includeEnd])               // Create a range from a string,
   *                                                  // where the string contains the
   *                                                  // start, optional step, and end,
   *                                                  // separated by a colon.
   *     math.range(start, end [, includeEnd])        // Create a range with start and
   *                                                  // end and a step size of 1.
   *     math.range(start, end, step [, includeEnd])  // Create a range with start, step,
   *                                                  // and end.
   *
   * Where:
   *
   * - `str: string`
   *   A string 'start:end' or 'start:step:end'
   * - `start: {number | BigNumber}`
   *   Start of the range
   * - `end: number | BigNumber`
   *   End of the range, excluded by default, included when parameter includeEnd=true
   * - `step: number | BigNumber`
   *   Step size. Default value is 1.
   * - `includeEnd: boolean`
   *   Option to specify whether to include the end or not. False by default.
   *
   * Examples:
   *
   *     math.range(2, 6)        // [2, 3, 4, 5]
   *     math.range(2, -3, -1)   // [2, 1, 0, -1, -2]
   *     math.range('2:1:6')     // [2, 3, 4, 5]
   *     math.range(2, 6, true)  // [2, 3, 4, 5, 6]
   *
   * See also:
   *
   *     ones, zeros, size, subset
   *
   * @param {*} args   Parameters describing the ranges `start`, `end`, and optional `step`.
   * @return {Array | Matrix} range
   */
  return typed(name, {
    // TODO: simplify signatures when typed-function supports default values and optional arguments
    // TODO: a number or boolean should not be converted to string here
    string: _strRange,
    'string, boolean': _strRange,
    'number, number': function numberNumber(start, end) {
      return _out(_rangeEx(start, end, 1));
    },
    'number, number, number': function numberNumberNumber(start, end, step) {
      return _out(_rangeEx(start, end, step));
    },
    'number, number, boolean': function numberNumberBoolean(start, end, includeEnd) {
      return includeEnd ? _out(_rangeInc(start, end, 1)) : _out(_rangeEx(start, end, 1));
    },
    'number, number, number, boolean': function numberNumberNumberBoolean(start, end, step, includeEnd) {
      return includeEnd ? _out(_rangeInc(start, end, step)) : _out(_rangeEx(start, end, step));
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(start, end) {
      var BigNumber = start.constructor;
      return _out(_bigRangeEx(start, end, new BigNumber(1)));
    },
    'BigNumber, BigNumber, BigNumber': function BigNumberBigNumberBigNumber(start, end, step) {
      return _out(_bigRangeEx(start, end, step));
    },
    'BigNumber, BigNumber, boolean': function BigNumberBigNumberBoolean(start, end, includeEnd) {
      var BigNumber = start.constructor;
      return includeEnd ? _out(_bigRangeInc(start, end, new BigNumber(1))) : _out(_bigRangeEx(start, end, new BigNumber(1)));
    },
    'BigNumber, BigNumber, BigNumber, boolean': function BigNumberBigNumberBigNumberBoolean(start, end, step, includeEnd) {
      return includeEnd ? _out(_bigRangeInc(start, end, step)) : _out(_bigRangeEx(start, end, step));
    }
  });

  function _out(arr) {
    if (config.matrix === 'Matrix') {
      return matrix ? matrix(arr) : Object(_utils_noop__WEBPACK_IMPORTED_MODULE_1__["noMatrix"])();
    }

    return arr;
  }

  function _strRange(str, includeEnd) {
    var r = _parse(str);

    if (!r) {
      throw new SyntaxError('String "' + str + '" is no valid range');
    }

    var fn;

    if (config.number === 'BigNumber') {
      if (bignumber === undefined) {
        Object(_utils_noop__WEBPACK_IMPORTED_MODULE_1__["noBignumber"])();
      }

      fn = includeEnd ? _bigRangeInc : _bigRangeEx;
      return _out(fn(bignumber(r.start), bignumber(r.end), bignumber(r.step)));
    } else {
      fn = includeEnd ? _rangeInc : _rangeEx;
      return _out(fn(r.start, r.end, r.step));
    }
  }
  /**
   * Create a range with numbers. End is excluded
   * @param {number} start
   * @param {number} end
   * @param {number} step
   * @returns {Array} range
   * @private
   */


  function _rangeEx(start, end, step) {
    var array = [];
    var x = start;

    if (step > 0) {
      while (smaller(x, end)) {
        array.push(x);
        x += step;
      }
    } else if (step < 0) {
      while (larger(x, end)) {
        array.push(x);
        x += step;
      }
    }

    return array;
  }
  /**
   * Create a range with numbers. End is included
   * @param {number} start
   * @param {number} end
   * @param {number} step
   * @returns {Array} range
   * @private
   */


  function _rangeInc(start, end, step) {
    var array = [];
    var x = start;

    if (step > 0) {
      while (smallerEq(x, end)) {
        array.push(x);
        x += step;
      }
    } else if (step < 0) {
      while (largerEq(x, end)) {
        array.push(x);
        x += step;
      }
    }

    return array;
  }
  /**
   * Create a range with big numbers. End is excluded
   * @param {BigNumber} start
   * @param {BigNumber} end
   * @param {BigNumber} step
   * @returns {Array} range
   * @private
   */


  function _bigRangeEx(start, end, step) {
    var zero = bignumber(0);
    var array = [];
    var x = start;

    if (step.gt(zero)) {
      while (smaller(x, end)) {
        array.push(x);
        x = x.plus(step);
      }
    } else if (step.lt(zero)) {
      while (larger(x, end)) {
        array.push(x);
        x = x.plus(step);
      }
    }

    return array;
  }
  /**
   * Create a range with big numbers. End is included
   * @param {BigNumber} start
   * @param {BigNumber} end
   * @param {BigNumber} step
   * @returns {Array} range
   * @private
   */


  function _bigRangeInc(start, end, step) {
    var zero = bignumber(0);
    var array = [];
    var x = start;

    if (step.gt(zero)) {
      while (smallerEq(x, end)) {
        array.push(x);
        x = x.plus(step);
      }
    } else if (step.lt(zero)) {
      while (largerEq(x, end)) {
        array.push(x);
        x = x.plus(step);
      }
    }

    return array;
  }
  /**
   * Parse a string into a range,
   * The string contains the start, optional step, and end, separated by a colon.
   * If the string does not contain a valid range, null is returned.
   * For example str='0:2:11'.
   * @param {string} str
   * @return {{start: number, end: number, step: number} | null} range Object containing properties start, end, step
   * @private
   */


  function _parse(str) {
    var args = str.split(':'); // number

    var nums = args.map(function (arg) {
      // use Number and not parseFloat as Number returns NaN on invalid garbage in the string
      return Number(arg);
    });
    var invalid = nums.some(function (num) {
      return isNaN(num);
    });

    if (invalid) {
      return null;
    }

    switch (nums.length) {
      case 2:
        return {
          start: nums[0],
          end: nums[1],
          step: 1
        };

      case 3:
        return {
          start: nums[0],
          end: nums[2],
          step: nums[1]
        };

      default:
        return null;
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/reshape.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/reshape.js ***!
  \************************************************************/
/*! exports provided: createReshape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createReshape", function() { return createReshape; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'reshape';
var dependencies = ['typed', 'isInteger', 'matrix'];
var createReshape = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      isInteger = _ref.isInteger,
      matrix = _ref.matrix;

  /**
   * Reshape a multi dimensional array to fit the specified dimensions
   *
   * Syntax:
   *
   *     math.reshape(x, sizes)
   *
   * Examples:
   *
   *     math.reshape([1, 2, 3, 4, 5, 6], [2, 3])
   *     // returns Array  [[1, 2, 3], [4, 5, 6]]
   *
   *     math.reshape([[1, 2], [3, 4]], [1, 4])
   *     // returns Array  [[1, 2, 3, 4]]
   *
   *     math.reshape([[1, 2], [3, 4]], [4])
   *     // returns Array [1, 2, 3, 4]
   *
   *     const x = math.matrix([1, 2, 3, 4, 5, 6, 7, 8])
   *     math.reshape(x, [2, 2, 2])
   *     // returns Matrix [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]
   *
   * See also:
   *
   *     size, squeeze, resize
   *
   * @param {Array | Matrix | *} x  Matrix to be reshaped
   * @param {number[]} sizes        One dimensional array with integral sizes for
   *                                each dimension
   *
   * @return {* | Array | Matrix}   A reshaped clone of matrix `x`
   *
   * @throws {TypeError}            If `sizes` does not contain solely integers
   * @throws {DimensionError}       If the product of the new dimension sizes does
   *                                not equal that of the old ones
   */
  return typed(name, {
    'Matrix, Array': function MatrixArray(x, sizes) {
      if (x.reshape) {
        return x.reshape(sizes);
      } else {
        return matrix(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["reshape"])(x.valueOf(), sizes));
      }
    },
    'Array, Array': function ArrayArray(x, sizes) {
      sizes.forEach(function (size) {
        if (!isInteger(size)) {
          throw new TypeError('Invalid size for dimension: ' + size);
        }
      });
      return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["reshape"])(x, sizes);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/resize.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/resize.js ***!
  \***********************************************************/
/*! exports provided: createResize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createResize", function() { return createResize; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/ArgumentsError */ "../node_modules/mathjs/es/error/ArgumentsError.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");








var name = 'resize';
var dependencies = ['config', 'matrix'];
var createResize = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_7__["factory"])(name, dependencies, function (_ref) {
  var config = _ref.config,
      matrix = _ref.matrix;

  /**
   * Resize a matrix
   *
   * Syntax:
   *
   *     math.resize(x, size)
   *     math.resize(x, size, defaultValue)
   *
   * Examples:
   *
   *     math.resize([1, 2, 3, 4, 5], [3]) // returns Array  [1, 2, 3]
   *     math.resize([1, 2, 3], [5], 0)    // returns Array  [1, 2, 3, 0, 0]
   *     math.resize(2, [2, 3], 0)         // returns Matrix [[2, 0, 0], [0, 0, 0]]
   *     math.resize("hello", [8], "!")    // returns string 'hello!!!'
   *
   * See also:
   *
   *     size, squeeze, subset, reshape
   *
   * @param {Array | Matrix | *} x             Matrix to be resized
   * @param {Array | Matrix} size              One dimensional array with numbers
   * @param {number | string} [defaultValue=0] Zero by default, except in
   *                                           case of a string, in that case
   *                                           defaultValue = ' '
   * @return {* | Array | Matrix} A resized clone of matrix `x`
   */
  // TODO: rework resize to a typed-function
  return function resize(x, size, defaultValue) {
    if (arguments.length !== 2 && arguments.length !== 3) {
      throw new _error_ArgumentsError__WEBPACK_IMPORTED_MODULE_2__["ArgumentsError"]('resize', arguments.length, 2, 3);
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(size)) {
      size = size.valueOf(); // get Array
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(size[0])) {
      // convert bignumbers to numbers
      size = size.map(function (value) {
        return !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(value) ? value : value.toNumber();
      });
    } // check x is a Matrix


    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(x)) {
      // use optimized matrix implementation, return copy
      return x.resize(size, defaultValue, true);
    }

    if (typeof x === 'string') {
      // resize string
      return _resizeString(x, size, defaultValue);
    } // check result should be a matrix


    var asMatrix = Array.isArray(x) ? false : config.matrix !== 'Array';

    if (size.length === 0) {
      // output a scalar
      while (Array.isArray(x)) {
        x = x[0];
      }

      return Object(_utils_object__WEBPACK_IMPORTED_MODULE_5__["clone"])(x);
    } else {
      // output an array/matrix
      if (!Array.isArray(x)) {
        x = [x];
      }

      x = Object(_utils_object__WEBPACK_IMPORTED_MODULE_5__["clone"])(x);
      var res = Object(_utils_array__WEBPACK_IMPORTED_MODULE_6__["resize"])(x, size, defaultValue);
      return asMatrix ? matrix(res) : res;
    }
  };
  /**
   * Resize a string
   * @param {string} str
   * @param {number[]} size
   * @param {string} [defaultChar=' ']
   * @private
   */

  function _resizeString(str, size, defaultChar) {
    if (defaultChar !== undefined) {
      if (typeof defaultChar !== 'string' || defaultChar.length !== 1) {
        throw new TypeError('Single character expected as defaultValue');
      }
    } else {
      defaultChar = ' ';
    }

    if (size.length !== 1) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](size.length, 1);
    }

    var len = size[0];

    if (typeof len !== 'number' || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_3__["isInteger"])(len)) {
      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_4__["format"])(size) + ')');
    }

    if (str.length > len) {
      return str.substring(0, len);
    } else if (str.length < len) {
      var res = str;

      for (var i = 0, ii = len - str.length; i < ii; i++) {
        res += defaultChar;
      }

      return res;
    } else {
      return str;
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/row.js":
/*!********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/row.js ***!
  \********************************************************/
/*! exports provided: createRow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRow", function() { return createRow; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");



var name = 'row';
var dependencies = ['typed', 'Index', 'matrix', 'range'];
var createRow = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Index = _ref.Index,
      matrix = _ref.matrix,
      range = _ref.range;

  /**
   * Return a row from a Matrix.
   *
   * Syntax:
   *
   *     math.row(value, index)
   *
   * Example:
   *
   *     // get a row
   *     const d = [[1, 2], [3, 4]]
   *     math.row(d, 1) // returns [[3, 4]]
   *
   * See also:
   *
   *     column
   *
   * @param {Array | Matrix } value   An array or matrix
   * @param {number} row              The index of the row
   * @return {Array | Matrix}         The retrieved row
   */
  return typed(name, {
    'Matrix, number': _row,
    'Array, number': function ArrayNumber(value, row) {
      return _row(matrix(Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(value)), row).valueOf();
    }
  });
  /**
   * Retrieve a row of a matrix
   * @param {Matrix } value  A matrix
   * @param {number} row     The index of the row
   * @return {Matrix}        The retrieved row
   */

  function _row(value, row) {
    // check dimensions
    if (value.size().length !== 2) {
      throw new Error('Only two dimensional matrix is supported');
    }

    Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["validateIndex"])(row, value.size()[0]);
    var columnRange = range(0, value.size()[1]);
    var index = new Index(row, columnRange);
    return value.subset(index);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/size.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/size.js ***!
  \*********************************************************/
/*! exports provided: createSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSize", function() { return createSize; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/noop */ "../node_modules/mathjs/es/utils/noop.js");



var name = 'size';
var dependencies = ['typed', 'config', '?matrix'];
var createSize = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix;

  /**
   * Calculate the size of a matrix or scalar.
   *
   * Syntax:
   *
   *     math.size(x)
   *
   * Examples:
   *
   *     math.size(2.3)                  // returns []
   *     math.size('hello world')        // returns [11]
   *
   *     const A = [[1, 2, 3], [4, 5, 6]]
   *     math.size(A)                    // returns [2, 3]
   *     math.size(math.range(1,6))      // returns [5]
   *
   * See also:
   *
   *     resize, squeeze, subset
   *
   * @param {boolean | number | Complex | Unit | string | Array | Matrix} x  A matrix
   * @return {Array | Matrix} A vector with size of `x`.
   */
  return typed(name, {
    Matrix: function Matrix(x) {
      return x.create(x.size());
    },
    Array: _utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"],
    string: function string(x) {
      return config.matrix === 'Array' ? [x.length] : matrix([x.length]);
    },
    'number | Complex | BigNumber | Unit | boolean | null': function numberComplexBigNumberUnitBooleanNull(x) {
      // scalar
      return config.matrix === 'Array' ? [] : matrix ? matrix([]) : Object(_utils_noop__WEBPACK_IMPORTED_MODULE_2__["noMatrix"])();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/sort.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/sort.js ***!
  \*********************************************************/
/*! exports provided: createSort */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSort", function() { return createSort; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'sort';
var dependencies = ['typed', 'matrix', 'compare', 'compareNatural'];
var createSort = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      compare = _ref.compare,
      compareNatural = _ref.compareNatural;
  var compareAsc = compare;

  var compareDesc = function compareDesc(a, b) {
    return -compare(a, b);
  };
  /**
   * Sort the items in a matrix.
   *
   * Syntax:
   *
   *    math.sort(x)
   *    math.sort(x, compare)
   *
   * Examples:
   *
   *    math.sort([5, 10, 1]) // returns [1, 5, 10]
   *    math.sort(['C', 'B', 'A', 'D'], math.compareNatural)
   *    // returns ['A', 'B', 'C', 'D']
   *
   *    function sortByLength (a, b) {
   *      return a.length - b.length
   *    }
   *    math.sort(['Langdon', 'Tom', 'Sara'], sortByLength)
   *    // returns ['Tom', 'Sara', 'Langdon']
   *
   * See also:
   *
   *    filter, forEach, map, compare, compareNatural
   *
   * @param {Matrix | Array} x    A one dimensional matrix or array to sort
   * @param {Function | 'asc' | 'desc' | 'natural'} [compare='asc']
   *        An optional _comparator function or name. The function is called as
   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,
   *        and 0 when a == b.
   * @return {Matrix | Array} Returns the sorted matrix.
   */


  return typed(name, {
    Array: function Array(x) {
      _arrayIsVector(x);

      return x.sort(compareAsc);
    },
    Matrix: function Matrix(x) {
      _matrixIsVector(x);

      return matrix(x.toArray().sort(compareAsc), x.storage());
    },
    'Array, function': function ArrayFunction(x, _comparator) {
      _arrayIsVector(x);

      return x.sort(_comparator);
    },
    'Matrix, function': function MatrixFunction(x, _comparator) {
      _matrixIsVector(x);

      return matrix(x.toArray().sort(_comparator), x.storage());
    },
    'Array, string': function ArrayString(x, order) {
      _arrayIsVector(x);

      return x.sort(_comparator(order));
    },
    'Matrix, string': function MatrixString(x, order) {
      _matrixIsVector(x);

      return matrix(x.toArray().sort(_comparator(order)), x.storage());
    }
  });
  /**
   * Get the comparator for given order ('asc', 'desc', 'natural')
   * @param {'asc' | 'desc' | 'natural'} order
   * @return {Function} Returns a _comparator function
   */

  function _comparator(order) {
    if (order === 'asc') {
      return compareAsc;
    } else if (order === 'desc') {
      return compareDesc;
    } else if (order === 'natural') {
      return compareNatural;
    } else {
      throw new Error('String "asc", "desc", or "natural" expected');
    }
  }
  /**
   * Validate whether an array is one dimensional
   * Throws an error when this is not the case
   * @param {Array} array
   * @private
   */


  function _arrayIsVector(array) {
    if (Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["arraySize"])(array).length !== 1) {
      throw new Error('One dimensional array expected');
    }
  }
  /**
   * Validate whether a matrix is one dimensional
   * Throws an error when this is not the case
   * @param {Matrix} matrix
   * @private
   */


  function _matrixIsVector(matrix) {
    if (matrix.size().length !== 1) {
      throw new Error('One dimensional matrix expected');
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/sqrtm.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/sqrtm.js ***!
  \**********************************************************/
/*! exports provided: createSqrtm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSqrtm", function() { return createSqrtm; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'sqrtm';
var dependencies = ['typed', 'abs', 'add', 'multiply', 'sqrt', 'subtract', 'inv', 'size', 'max', 'identity'];
var createSqrtm = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      abs = _ref.abs,
      add = _ref.add,
      multiply = _ref.multiply,
      sqrt = _ref.sqrt,
      subtract = _ref.subtract,
      inv = _ref.inv,
      size = _ref.size,
      max = _ref.max,
      identity = _ref.identity;
  var _maxIterations = 1e3;
  var _tolerance = 1e-6;
  /**
   * Calculate the principal square root matrix using the Denmanâ€“Beavers iterative method
   *
   * https://en.wikipedia.org/wiki/Square_root_of_a_matrix#By_Denmanâ€“Beavers_iteration
   *
   * @param  {Array | Matrix} A   The square matrix `A`
   * @return {Array | Matrix}     The principal square root of matrix `A`
   * @private
   */

  function _denmanBeavers(A) {
    var error;
    var iterations = 0;
    var Y = A;
    var Z = identity(size(A));

    do {
      var Yk = Y;
      Y = multiply(0.5, add(Yk, inv(Z)));
      Z = multiply(0.5, add(Z, inv(Yk)));
      error = max(abs(subtract(Y, Yk)));

      if (error > _tolerance && ++iterations > _maxIterations) {
        throw new Error('computing square root of matrix: iterative method could not converge');
      }
    } while (error > _tolerance);

    return Y;
  }
  /**
   * Calculate the principal square root of a square matrix.
   * The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.
   *
   * https://en.wikipedia.org/wiki/Square_root_of_a_matrix
   *
   * Syntax:
   *
   *     X = math.sqrtm(A)
   *
   * Examples:
   *
   *     math.sqrtm([[1, 2], [3, 4]]) // returns [[-2, 1], [1.5, -0.5]]
   *
   * See also:
   *
   *     sqrt, pow
   *
   * @param  {Array | Matrix} A   The square matrix `A`
   * @return {Array | Matrix}     The principal square root of matrix `A`
   */


  return typed(name, {
    'Array | Matrix': function ArrayMatrix(A) {
      var size = Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(A) ? A.size() : Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["arraySize"])(A);

      switch (size.length) {
        case 1:
          // Single element Array | Matrix
          if (size[0] === 1) {
            return sqrt(A);
          } else {
            throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');
          }

        case 2:
          {
            // Two-dimensional Array | Matrix
            var rows = size[0];
            var cols = size[1];

            if (rows === cols) {
              return _denmanBeavers(A);
            } else {
              throw new RangeError('Matrix must be square ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');
            }
          }
      }
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/squeeze.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/squeeze.js ***!
  \************************************************************/
/*! exports provided: createSqueeze */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSqueeze", function() { return createSqueeze; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'squeeze';
var dependencies = ['typed', 'matrix'];
var createSqueeze = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix;

  /**
   * Squeeze a matrix, remove inner and outer singleton dimensions from a matrix.
   *
   * Syntax:
   *
   *     math.squeeze(x)
   *
   * Examples:
   *
   *     math.squeeze([3])           // returns 3
   *     math.squeeze([[3]])         // returns 3
   *
   *     const A = math.zeros(3, 1)    // returns [[0], [0], [0]] (size 3x1)
   *     math.squeeze(A)             // returns [0, 0, 0] (size 3)
   *
   *     const B = math.zeros(1, 3)    // returns [[0, 0, 0]] (size 1x3)
   *     math.squeeze(B)             // returns [0, 0, 0] (size 3)
   *
   *     // only inner and outer dimensions are removed
   *     const C = math.zeros(2, 1, 3) // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)
   *     math.squeeze(C)             // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)
   *
   * See also:
   *
   *     subset
   *
   * @param {Matrix | Array} x      Matrix to be squeezed
   * @return {Matrix | Array} Squeezed matrix
   */
  return typed(name, {
    Array: function Array(x) {
      return Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["squeeze"])(Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(x));
    },
    Matrix: function Matrix(x) {
      var res = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["squeeze"])(x.toArray()); // FIXME: return the same type of matrix as the input

      return Array.isArray(res) ? matrix(res) : res;
    },
    any: function any(x) {
      // scalar
      return Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(x);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/subset.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/subset.js ***!
  \***********************************************************/
/*! exports provided: createSubset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSubset", function() { return createSubset; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_customs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/customs */ "../node_modules/mathjs/es/utils/customs.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");






var name = 'subset';
var dependencies = ['typed', 'matrix'];
var createSubset = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix;

  /**
   * Get or set a subset of a matrix or string.
   *
   * Syntax:
   *     math.subset(value, index)                                // retrieve a subset
   *     math.subset(value, index, replacement [, defaultValue])  // replace a subset
   *
   * Examples:
   *
   *     // get a subset
   *     const d = [[1, 2], [3, 4]]
   *     math.subset(d, math.index(1, 0))        // returns 3
   *     math.subset(d, math.index([0, 1], 1))   // returns [[2], [4]]
   *
   *     // replace a subset
   *     const e = []
   *     const f = math.subset(e, math.index(0, [0, 2]), [5, 6])  // f = [[5, 6]]
   *     const g = math.subset(f, math.index(1, 1), 7, 0)         // g = [[5, 6], [0, 7]]
   *
   * See also:
   *
   *     size, resize, squeeze, index
   *
   * @param {Array | Matrix | string} matrix  An array, matrix, or string
   * @param {Index} index                     An index containing ranges for each
   *                                          dimension
   * @param {*} [replacement]                 An array, matrix, or scalar.
   *                                          If provided, the subset is replaced with replacement.
   *                                          If not provided, the subset is returned
   * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when
   *                                          the matrix is resized. If not provided,
   *                                          math.matrix elements will be left undefined.
   * @return {Array | Matrix | string} Either the retrieved subset or the updated matrix.
   */
  return typed(name, {
    // get subset
    'Array, Index': function ArrayIndex(value, index) {
      var m = matrix(value);
      var subset = m.subset(index); // returns a Matrix

      return index.isScalar() ? subset : subset.valueOf(); // return an Array (like the input)
    },
    'Matrix, Index': function MatrixIndex(value, index) {
      return value.subset(index);
    },
    'Object, Index': _getObjectProperty,
    'string, Index': _getSubstring,
    // set subset
    'Array, Index, any': function ArrayIndexAny(value, index, replacement) {
      return matrix(Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(value)).subset(index, replacement, undefined).valueOf();
    },
    'Array, Index, any, any': function ArrayIndexAnyAny(value, index, replacement, defaultValue) {
      return matrix(Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(value)).subset(index, replacement, defaultValue).valueOf();
    },
    'Matrix, Index, any': function MatrixIndexAny(value, index, replacement) {
      return value.clone().subset(index, replacement);
    },
    'Matrix, Index, any, any': function MatrixIndexAnyAny(value, index, replacement, defaultValue) {
      return value.clone().subset(index, replacement, defaultValue);
    },
    'string, Index, string': _setSubstring,
    'string, Index, string, string': _setSubstring,
    'Object, Index, any': _setObjectProperty
  });
});
/**
 * Retrieve a subset of a string
 * @param {string} str            string from which to get a substring
 * @param {Index} index           An index containing ranges for each dimension
 * @returns {string} substring
 * @private
 */

function _getSubstring(str, index) {
  if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndex"])(index)) {
    // TODO: better error message
    throw new TypeError('Index expected');
  }

  if (index.size().length !== 1) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__["DimensionError"](index.size().length, 1);
  } // validate whether the range is out of range


  var strLen = str.length;
  Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["validateIndex"])(index.min()[0], strLen);
  Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["validateIndex"])(index.max()[0], strLen);
  var range = index.dimension(0);
  var substr = '';
  range.forEach(function (v) {
    substr += str.charAt(v);
  });
  return substr;
}
/**
 * Replace a substring in a string
 * @param {string} str            string to be replaced
 * @param {Index} index           An index containing ranges for each dimension
 * @param {string} replacement    Replacement string
 * @param {string} [defaultValue] Default value to be uses when resizing
 *                                the string. is ' ' by default
 * @returns {string} result
 * @private
 */


function _setSubstring(str, index, replacement, defaultValue) {
  if (!index || index.isIndex !== true) {
    // TODO: better error message
    throw new TypeError('Index expected');
  }

  if (index.size().length !== 1) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__["DimensionError"](index.size().length, 1);
  }

  if (defaultValue !== undefined) {
    if (typeof defaultValue !== 'string' || defaultValue.length !== 1) {
      throw new TypeError('Single character expected as defaultValue');
    }
  } else {
    defaultValue = ' ';
  }

  var range = index.dimension(0);
  var len = range.size()[0];

  if (len !== replacement.length) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__["DimensionError"](range.size()[0], replacement.length);
  } // validate whether the range is out of range


  var strLen = str.length;
  Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["validateIndex"])(index.min()[0]);
  Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["validateIndex"])(index.max()[0]); // copy the string into an array with characters

  var chars = [];

  for (var i = 0; i < strLen; i++) {
    chars[i] = str.charAt(i);
  }

  range.forEach(function (v, i) {
    chars[v] = replacement.charAt(i[0]);
  }); // initialize undefined characters with a space

  if (chars.length > strLen) {
    for (var _i = strLen - 1, _len = chars.length; _i < _len; _i++) {
      if (!chars[_i]) {
        chars[_i] = defaultValue;
      }
    }
  }

  return chars.join('');
}
/**
 * Retrieve a property from an object
 * @param {Object} object
 * @param {Index} index
 * @return {*} Returns the value of the property
 * @private
 */


function _getObjectProperty(object, index) {
  if (index.size().length !== 1) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__["DimensionError"](index.size(), 1);
  }

  var key = index.dimension(0);

  if (typeof key !== 'string') {
    throw new TypeError('String expected as index to retrieve an object property');
  }

  return Object(_utils_customs__WEBPACK_IMPORTED_MODULE_3__["getSafeProperty"])(object, key);
}
/**
 * Set a property on an object
 * @param {Object} object
 * @param {Index} index
 * @param {*} replacement
 * @return {*} Returns the updated object
 * @private
 */


function _setObjectProperty(object, index, replacement) {
  if (index.size().length !== 1) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_4__["DimensionError"](index.size(), 1);
  }

  var key = index.dimension(0);

  if (typeof key !== 'string') {
    throw new TypeError('String expected as index to retrieve an object property');
  } // clone the object, and apply the property to the clone


  var updated = Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(object);
  Object(_utils_customs__WEBPACK_IMPORTED_MODULE_3__["setSafeProperty"])(updated, key, replacement);
  return updated;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/trace.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/trace.js ***!
  \**********************************************************/
/*! exports provided: createTrace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTrace", function() { return createTrace; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'trace';
var dependencies = ['typed', 'matrix', 'add'];
var createTrace = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      add = _ref.add;

  /**
   * Calculate the trace of a matrix: the sum of the elements on the main
   * diagonal of a square matrix.
   *
   * Syntax:
   *
   *    math.trace(x)
   *
   * Examples:
   *
   *    math.trace([[1, 2], [3, 4]]) // returns 5
   *
   *    const A = [
   *      [1, 2, 3],
   *      [-1, 2, 3],
   *      [2, 0, 3]
   *    ]
   *    math.trace(A) // returns 6
   *
   * See also:
   *
   *    diag
   *
   * @param {Array | Matrix} x  A matrix
   *
   * @return {number} The trace of `x`
   */
  return typed('trace', {
    Array: function _arrayTrace(x) {
      // use dense matrix implementation
      return _denseTrace(matrix(x));
    },
    SparseMatrix: _sparseTrace,
    DenseMatrix: _denseTrace,
    any: _utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"]
  });

  function _denseTrace(m) {
    // matrix size & data
    var size = m._size;
    var data = m._data; // process dimensions

    switch (size.length) {
      case 1:
        // vector
        if (size[0] === 1) {
          // return data[0]
          return Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(data[0]);
        }

        throw new RangeError('Matrix must be square (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');

      case 2:
        {
          // two dimensional
          var rows = size[0];
          var cols = size[1];

          if (rows === cols) {
            // calulate sum
            var sum = 0; // loop diagonal

            for (var i = 0; i < rows; i++) {
              sum = add(sum, data[i][i]);
            } // return trace


            return sum;
          } else {
            throw new RangeError('Matrix must be square (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');
          }
        }

      default:
        // multi dimensional
        throw new RangeError('Matrix must be two dimensional (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');
    }
  }

  function _sparseTrace(m) {
    // matrix arrays
    var values = m._values;
    var index = m._index;
    var ptr = m._ptr;
    var size = m._size; // check dimensions

    var rows = size[0];
    var columns = size[1]; // matrix must be square

    if (rows === columns) {
      // calulate sum
      var sum = 0; // check we have data (avoid looping columns)

      if (values.length > 0) {
        // loop columns
        for (var j = 0; j < columns; j++) {
          // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]
          var k0 = ptr[j];
          var k1 = ptr[j + 1]; // loop k within [k0, k1[

          for (var k = k0; k < k1; k++) {
            // row index
            var i = index[k]; // check row

            if (i === j) {
              // accumulate value
              sum = add(sum, values[k]); // exit loop

              break;
            }

            if (i > j) {
              // exit loop, no value on the diagonal for column j
              break;
            }
          }
        }
      } // return trace


      return sum;
    }

    throw new RangeError('Matrix must be square (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/transpose.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/transpose.js ***!
  \**************************************************************/
/*! exports provided: createTranspose */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTranspose", function() { return createTranspose; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'transpose';
var dependencies = ['typed', 'matrix'];
var createTranspose = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix;

  /**
   * Transpose a matrix. All values of the matrix are reflected over its
   * main diagonal. Only applicable to two dimensional matrices containing
   * a vector (i.e. having size `[1,n]` or `[n,1]`). One dimensional
   * vectors and scalars return the input unchanged.
   *
   * Syntax:
   *
   *     math.transpose(x)
   *
   * Examples:
   *
   *     const A = [[1, 2, 3], [4, 5, 6]]
   *     math.transpose(A)               // returns [[1, 4], [2, 5], [3, 6]]
   *
   * See also:
   *
   *     diag, inv, subset, squeeze
   *
   * @param {Array | Matrix} x  Matrix to be transposed
   * @return {Array | Matrix}   The transposed matrix
   */
  return typed('transpose', {
    Array: function Array(x) {
      // use dense matrix implementation
      return this(matrix(x)).valueOf();
    },
    Matrix: function Matrix(x) {
      // matrix size
      var size = x.size(); // result

      var c; // process dimensions

      switch (size.length) {
        case 1:
          // vector
          c = x.clone();
          break;

        case 2:
          {
            // rows and columns
            var rows = size[0];
            var columns = size[1]; // check columns

            if (columns === 0) {
              // throw exception
              throw new RangeError('Cannot transpose a 2D matrix with no columns (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(size) + ')');
            } // process storage format


            switch (x.storage()) {
              case 'dense':
                c = _denseTranspose(x, rows, columns);
                break;

              case 'sparse':
                c = _sparseTranspose(x, rows, columns);
                break;
            }
          }
          break;

        default:
          // multi dimensional
          throw new RangeError('Matrix must be a vector or two dimensional (size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(this._size) + ')');
      }

      return c;
    },
    // scalars
    any: function any(x) {
      return Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(x);
    }
  });

  function _denseTranspose(m, rows, columns) {
    // matrix array
    var data = m._data; // transposed matrix data

    var transposed = [];
    var transposedRow; // loop columns

    for (var j = 0; j < columns; j++) {
      // initialize row
      transposedRow = transposed[j] = []; // loop rows

      for (var i = 0; i < rows; i++) {
        // set data
        transposedRow[i] = Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(data[i][j]);
      }
    } // return matrix


    return m.createDenseMatrix({
      data: transposed,
      size: [columns, rows],
      datatype: m._datatype
    });
  }

  function _sparseTranspose(m, rows, columns) {
    // matrix arrays
    var values = m._values;
    var index = m._index;
    var ptr = m._ptr; // result matrices

    var cvalues = values ? [] : undefined;
    var cindex = [];
    var cptr = []; // row counts

    var w = [];

    for (var x = 0; x < rows; x++) {
      w[x] = 0;
    } // vars


    var p, l, j; // loop values in matrix

    for (p = 0, l = index.length; p < l; p++) {
      // number of values in row
      w[index[p]]++;
    } // cumulative sum


    var sum = 0; // initialize cptr with the cummulative sum of row counts

    for (var i = 0; i < rows; i++) {
      // update cptr
      cptr.push(sum); // update sum

      sum += w[i]; // update w

      w[i] = cptr[i];
    } // update cptr


    cptr.push(sum); // loop columns

    for (j = 0; j < columns; j++) {
      // values & index in column
      for (var k0 = ptr[j], k1 = ptr[j + 1], k = k0; k < k1; k++) {
        // C values & index
        var q = w[index[k]]++; // C[j, i] = A[i, j]

        cindex[q] = j; // check we need to process values (pattern matrix)

        if (values) {
          cvalues[q] = Object(_utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"])(values[k]);
        }
      }
    } // return matrix


    return m.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [columns, rows],
      datatype: m._datatype
    });
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/matrix/zeros.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/matrix/zeros.js ***!
  \**********************************************************/
/*! exports provided: createZeros */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createZeros", function() { return createZeros; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'zeros';
var dependencies = ['typed', 'config', 'matrix', 'BigNumber'];
var createZeros = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      BigNumber = _ref.BigNumber;

  /**
   * Create a matrix filled with zeros. The created matrix can have one or
   * multiple dimensions.
   *
   * Syntax:
   *
   *    math.zeros(m)
   *    math.zeros(m, format)
   *    math.zeros(m, n)
   *    math.zeros(m, n, format)
   *    math.zeros([m, n])
   *    math.zeros([m, n], format)
   *
   * Examples:
   *
   *    math.zeros(3)                  // returns [0, 0, 0]
   *    math.zeros(3, 2)               // returns [[0, 0], [0, 0], [0, 0]]
   *    math.zeros(3, 'dense')         // returns [0, 0, 0]
   *
   *    const A = [[1, 2, 3], [4, 5, 6]]
   *    math.zeros(math.size(A))       // returns [[0, 0, 0], [0, 0, 0]]
   *
   * See also:
   *
   *    ones, identity, size, range
   *
   * @param {...number | Array} size    The size of each dimension of the matrix
   * @param {string} [format]           The Matrix storage format
   *
   * @return {Array | Matrix}           A matrix filled with zeros
   */
  return typed(name, {
    '': function _() {
      return config.matrix === 'Array' ? _zeros([]) : _zeros([], 'default');
    },
    // math.zeros(m, n, p, ..., format)
    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this
    '...number | BigNumber | string': function numberBigNumberString(size) {
      var last = size[size.length - 1];

      if (typeof last === 'string') {
        var format = size.pop();
        return _zeros(size, format);
      } else if (config.matrix === 'Array') {
        return _zeros(size);
      } else {
        return _zeros(size, 'default');
      }
    },
    Array: _zeros,
    Matrix: function Matrix(size) {
      var format = size.storage();
      return _zeros(size.valueOf(), format);
    },
    'Array | Matrix, string': function ArrayMatrixString(size, format) {
      return _zeros(size.valueOf(), format);
    }
  });
  /**
   * Create an Array or Matrix with zeros
   * @param {Array} size
   * @param {string} [format='default']
   * @return {Array | Matrix}
   * @private
   */

  function _zeros(size, format) {
    var hasBigNumbers = _normalize(size);

    var defaultValue = hasBigNumbers ? new BigNumber(0) : 0;

    _validate(size);

    if (format) {
      // return a matrix
      var m = matrix(format);

      if (size.length > 0) {
        return m.resize(size, defaultValue);
      }

      return m;
    } else {
      // return an Array
      var arr = [];

      if (size.length > 0) {
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["resize"])(arr, size, defaultValue);
      }

      return arr;
    }
  } // replace BigNumbers with numbers, returns true if size contained BigNumbers


  function _normalize(size) {
    var hasBigNumbers = false;
    size.forEach(function (value, index, arr) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(value)) {
        hasBigNumbers = true;
        arr[index] = value.toNumber();
      }
    });
    return hasBigNumbers;
  } // validate arguments


  function _validate(size) {
    size.forEach(function (value) {
      if (typeof value !== 'number' || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(value) || value < 0) {
        throw new Error('Parameters in function zeros must be positive integers');
      }
    });
  }
}); // TODO: zeros contains almost the same code as ones. Reuse this?

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/combinations.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/combinations.js ***!
  \**********************************************************************/
/*! exports provided: createCombinations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCombinations", function() { return createCombinations; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number_combinations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/combinations */ "../node_modules/mathjs/es/plain/number/combinations.js");


var name = 'combinations';
var dependencies = ['typed'];
var createCombinations = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Compute the number of ways of picking `k` unordered outcomes from `n`
   * possibilities.
   *
   * Combinations only takes integer arguments.
   * The following condition must be enforced: k <= n.
   *
   * Syntax:
   *
   *     math.combinations(n, k)
   *
   * Examples:
   *
   *    math.combinations(7, 5) // returns 21
   *
   * See also:
   *
   *    combinationsWithRep, permutations, factorial
   *
   * @param {number | BigNumber} n    Total number of objects in the set
   * @param {number | BigNumber} k    Number of objects in the subset
   * @return {number | BigNumber}     Number of possible combinations.
   */
  return typed(name, {
    'number, number': _plain_number_combinations__WEBPACK_IMPORTED_MODULE_1__["combinationsNumber"],
    'BigNumber, BigNumber': function BigNumberBigNumber(n, k) {
      var BigNumber = n.constructor;
      var result, i;
      var nMinusk = n.minus(k);
      var one = new BigNumber(1);

      if (!isPositiveInteger(n) || !isPositiveInteger(k)) {
        throw new TypeError('Positive integer value expected in function combinations');
      }

      if (k.gt(n)) {
        throw new TypeError('k must be less than n in function combinations');
      }

      result = one;

      if (k.lt(nMinusk)) {
        for (i = one; i.lte(nMinusk); i = i.plus(one)) {
          result = result.times(k.plus(i)).dividedBy(i);
        }
      } else {
        for (i = one; i.lte(k); i = i.plus(one)) {
          result = result.times(nMinusk.plus(i)).dividedBy(i);
        }
      }

      return result;
    } // TODO: implement support for collection in combinations

  });
});
/**
 * Test whether BigNumber n is a positive integer
 * @param {BigNumber} n
 * @returns {boolean} isPositiveInteger
 */

function isPositiveInteger(n) {
  return n.isInteger() && n.gte(0);
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/combinationsWithRep.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/combinationsWithRep.js ***!
  \*****************************************************************************/
/*! exports provided: createCombinationsWithRep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCombinationsWithRep", function() { return createCombinationsWithRep; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_product__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/product */ "../node_modules/mathjs/es/utils/product.js");



var name = 'combinationsWithRep';
var dependencies = ['typed'];
var createCombinationsWithRep = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Compute the number of ways of picking `k` unordered outcomes from `n`
   * possibilities, allowing individual outcomes to be repeated more than once.
   *
   * CombinationsWithRep only takes integer arguments.
   * The following condition must be enforced: k <= n + k -1.
   *
   * Syntax:
   *
   *     math.combinationsWithRep(n, k)
   *
   * Examples:
   *
   *    math.combinationsWithRep(7, 5) // returns 462
   *
   * See also:
   *
   *    combinations, permutations, factorial
   *
   * @param {number | BigNumber} n    Total number of objects in the set
   * @param {number | BigNumber} k    Number of objects in the subset
   * @return {number | BigNumber}     Number of possible combinations with replacement.
   */
  return typed(name, {
    'number, number': function numberNumber(n, k) {
      if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(n) || n < 0) {
        throw new TypeError('Positive integer value expected in function combinationsWithRep');
      }

      if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(k) || k < 0) {
        throw new TypeError('Positive integer value expected in function combinationsWithRep');
      }

      if (n < 1) {
        throw new TypeError('k must be less than or equal to n + k - 1');
      }

      if (k < n - 1) {
        var _prodrange = Object(_utils_product__WEBPACK_IMPORTED_MODULE_2__["product"])(n, n + k - 1);

        return _prodrange / Object(_utils_product__WEBPACK_IMPORTED_MODULE_2__["product"])(1, k);
      }

      var prodrange = Object(_utils_product__WEBPACK_IMPORTED_MODULE_2__["product"])(k + 1, n + k - 1);
      return prodrange / Object(_utils_product__WEBPACK_IMPORTED_MODULE_2__["product"])(1, n - 1);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(n, k) {
      var BigNumber = n.constructor;
      var result, i;
      var one = new BigNumber(1);
      var nMinusOne = n.minus(one);

      if (!isPositiveInteger(n) || !isPositiveInteger(k)) {
        throw new TypeError('Positive integer value expected in function combinationsWithRep');
      }

      if (n.lt(one)) {
        throw new TypeError('k must be less than or equal to n + k - 1 in function combinationsWithRep');
      }

      result = one;

      if (k.lt(nMinusOne)) {
        for (i = one; i.lte(nMinusOne); i = i.plus(one)) {
          result = result.times(k.plus(i)).dividedBy(i);
        }
      } else {
        for (i = one; i.lte(k); i = i.plus(one)) {
          result = result.times(nMinusOne.plus(i)).dividedBy(i);
        }
      }

      return result;
    }
  });
});
/**
 * Test whether BigNumber n is a positive integer
 * @param {BigNumber} n
 * @returns {boolean} isPositiveInteger
 */

function isPositiveInteger(n) {
  return n.isInteger() && n.gte(0);
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/factorial.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/factorial.js ***!
  \*******************************************************************/
/*! exports provided: createFactorial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFactorial", function() { return createFactorial; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'factorial';
var dependencies = ['typed', 'gamma'];
var createFactorial = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      gamma = _ref.gamma;

  /**
   * Compute the factorial of a value
   *
   * Factorial only supports an integer value as argument.
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.factorial(n)
   *
   * Examples:
   *
   *    math.factorial(5)    // returns 120
   *    math.factorial(3)    // returns 6
   *
   * See also:
   *
   *    combinations, combinationsWithRep, gamma, permutations
   *
   * @param {number | BigNumber | Array | Matrix} n   An integer number
   * @return {number | BigNumber | Array | Matrix}    The factorial of `n`
   */
  return typed(name, {
    number: function number(n) {
      if (n < 0) {
        throw new Error('Value must be non-negative');
      }

      return gamma(n + 1);
    },
    BigNumber: function BigNumber(n) {
      if (n.isNegative()) {
        throw new Error('Value must be non-negative');
      }

      return gamma(n.plus(1));
    },
    'Array | Matrix': function ArrayMatrix(n) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(n, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/gamma.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/gamma.js ***!
  \***************************************************************/
/*! exports provided: createGamma */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGamma", function() { return createGamma; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'gamma';
var dependencies = ['typed', 'config', 'multiplyScalar', 'pow', 'BigNumber', 'Complex'];
var createGamma = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      multiplyScalar = _ref.multiplyScalar,
      pow = _ref.pow,
      _BigNumber = _ref.BigNumber,
      _Complex = _ref.Complex;

  /**
   * Compute the gamma function of a value using Lanczos approximation for
   * small values, and an extended Stirling approximation for large values.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.gamma(n)
   *
   * Examples:
   *
   *    math.gamma(5)       // returns 24
   *    math.gamma(-0.5)    // returns -3.5449077018110335
   *    math.gamma(math.i)  // returns -0.15494982830180973 - 0.49801566811835596i
   *
   * See also:
   *
   *    combinations, factorial, permutations
   *
   * @param {number | Array | Matrix} n   A real or complex number
   * @return {number | Array | Matrix}    The gamma of `n`
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["gammaNumber"],
    Complex: function Complex(n) {
      if (n.im === 0) {
        return this(n.re);
      }

      n = new _Complex(n.re - 1, n.im);
      var x = new _Complex(_plain_number__WEBPACK_IMPORTED_MODULE_2__["gammaP"][0], 0);

      for (var i = 1; i < _plain_number__WEBPACK_IMPORTED_MODULE_2__["gammaP"].length; ++i) {
        var real = n.re + i; // x += p[i]/(n+i)

        var den = real * real + n.im * n.im;

        if (den !== 0) {
          x.re += _plain_number__WEBPACK_IMPORTED_MODULE_2__["gammaP"][i] * real / den;
          x.im += -(_plain_number__WEBPACK_IMPORTED_MODULE_2__["gammaP"][i] * n.im) / den;
        } else {
          x.re = _plain_number__WEBPACK_IMPORTED_MODULE_2__["gammaP"][i] < 0 ? -Infinity : Infinity;
        }
      }

      var t = new _Complex(n.re + _plain_number__WEBPACK_IMPORTED_MODULE_2__["gammaG"] + 0.5, n.im);
      var twoPiSqrt = Math.sqrt(2 * Math.PI);
      n.re += 0.5;
      var result = pow(t, n);

      if (result.im === 0) {
        // sqrt(2*PI)*result
        result.re *= twoPiSqrt;
      } else if (result.re === 0) {
        result.im *= twoPiSqrt;
      } else {
        result.re *= twoPiSqrt;
        result.im *= twoPiSqrt;
      }

      var r = Math.exp(-t.re); // exp(-t)

      t.re = r * Math.cos(-t.im);
      t.im = r * Math.sin(-t.im);
      return multiplyScalar(multiplyScalar(result, t), x);
    },
    BigNumber: function BigNumber(n) {
      if (n.isInteger()) {
        return n.isNegative() || n.isZero() ? new _BigNumber(Infinity) : bigFactorial(n.minus(1));
      }

      if (!n.isFinite()) {
        return new _BigNumber(n.isNegative() ? NaN : Infinity);
      }

      throw new Error('Integer BigNumber expected');
    },
    'Array | Matrix': function ArrayMatrix(n) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(n, this);
    }
  });
  /**
   * Calculate factorial for a BigNumber
   * @param {BigNumber} n
   * @returns {BigNumber} Returns the factorial of n
   */

  function bigFactorial(n) {
    if (n < 8) {
      return new _BigNumber([1, 1, 2, 6, 24, 120, 720, 5040][n]);
    }

    var precision = config.precision + (Math.log(n.toNumber()) | 0);

    var Big = _BigNumber.clone({
      precision: precision
    });

    if (n % 2 === 1) {
      return n.times(bigFactorial(new _BigNumber(n - 1)));
    }

    var p = n;
    var prod = new Big(n);
    var sum = n.toNumber();

    while (p > 2) {
      p -= 2;
      sum += p;
      prod = prod.times(sum);
    }

    return new _BigNumber(prod.toPrecision(_BigNumber.precision));
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/kldivergence.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/kldivergence.js ***!
  \**********************************************************************/
/*! exports provided: createKldivergence */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createKldivergence", function() { return createKldivergence; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'kldivergence';
var dependencies = ['typed', 'matrix', 'divide', 'sum', 'multiply', 'dotDivide', 'log', 'isNumeric'];
var createKldivergence = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      divide = _ref.divide,
      sum = _ref.sum,
      multiply = _ref.multiply,
      dotDivide = _ref.dotDivide,
      log = _ref.log,
      isNumeric = _ref.isNumeric;

  /**
     * Calculate the Kullback-Leibler (KL) divergence  between two distributions
     *
     * Syntax:
     *
     *     math.kldivergence(x, y)
     *
     * Examples:
     *
     *     math.kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])   //returns 0.24376698773121153
     *
     *
     * @param  {Array | Matrix} q    First vector
     * @param  {Array | Matrix} p    Second vector
     * @return {number}              Returns distance between q and p
     */
  return typed(name, {
    'Array, Array': function ArrayArray(q, p) {
      return _kldiv(matrix(q), matrix(p));
    },
    'Matrix, Array': function MatrixArray(q, p) {
      return _kldiv(q, matrix(p));
    },
    'Array, Matrix': function ArrayMatrix(q, p) {
      return _kldiv(matrix(q), p);
    },
    'Matrix, Matrix': function MatrixMatrix(q, p) {
      return _kldiv(q, p);
    }
  });

  function _kldiv(q, p) {
    var plength = p.size().length;
    var qlength = q.size().length;

    if (plength > 1) {
      throw new Error('first object must be one dimensional');
    }

    if (qlength > 1) {
      throw new Error('second object must be one dimensional');
    }

    if (plength !== qlength) {
      throw new Error('Length of two vectors must be equal');
    } // Before calculation, apply normalization


    var sumq = sum(q);

    if (sumq === 0) {
      throw new Error('Sum of elements in first object must be non zero');
    }

    var sump = sum(p);

    if (sump === 0) {
      throw new Error('Sum of elements in second object must be non zero');
    }

    var qnorm = divide(q, sum(q));
    var pnorm = divide(p, sum(p));
    var result = sum(multiply(qnorm, log(dotDivide(qnorm, pnorm))));

    if (isNumeric(result)) {
      return result;
    } else {
      return Number.NaN;
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/multinomial.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/multinomial.js ***!
  \*********************************************************************/
/*! exports provided: createMultinomial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMultinomial", function() { return createMultinomial; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'multinomial';
var dependencies = ['typed', 'add', 'divide', 'multiply', 'factorial', 'isInteger', 'isPositive'];
var createMultinomial = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      add = _ref.add,
      divide = _ref.divide,
      multiply = _ref.multiply,
      factorial = _ref.factorial,
      isInteger = _ref.isInteger,
      isPositive = _ref.isPositive;

  /**
   * Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities.
   *
   * multinomial takes one array of integers as an argument.
   * The following condition must be enforced: every ai <= 0
   *
   * Syntax:
   *
   *     math.multinomial(a) // a is an array type
   *
   * Examples:
   *
   *    math.multinomial([1,2,1]) // returns 12
   *
   * See also:
   *
   *    combinations, factorial
   *
   * @param {number[] | BigNumber[]} a    Integer numbers of objects in the subset
   * @return {Number | BigNumber}         Multinomial coefficient.
   */
  return typed(name, {
    'Array | Matrix': function ArrayMatrix(a) {
      var sum = 0;
      var denom = 1;
      Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(a, function (ai) {
        if (!isInteger(ai) || !isPositive(ai)) {
          throw new TypeError('Positive integer value expected in function multinomial');
        }

        sum = add(sum, ai);
        denom = multiply(denom, factorial(ai));
      });
      return divide(factorial(sum), denom);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/permutations.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/permutations.js ***!
  \**********************************************************************/
/*! exports provided: createPermutations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPermutations", function() { return createPermutations; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_product__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/product */ "../node_modules/mathjs/es/utils/product.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'permutations';
var dependencies = ['typed', 'factorial'];
var createPermutations = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      factorial = _ref.factorial;

  /**
   * Compute the number of ways of obtaining an ordered subset of `k` elements
   * from a set of `n` elements.
   *
   * Permutations only takes integer arguments.
   * The following condition must be enforced: k <= n.
   *
   * Syntax:
   *
   *     math.permutations(n)
   *     math.permutations(n, k)
   *
   * Examples:
   *
   *    math.permutations(5)     // 120
   *    math.permutations(5, 3)  // 60
   *
   * See also:
   *
   *    combinations, combinationsWithRep, factorial
   *
   * @param {number | BigNumber} n   The number of objects in total
   * @param {number | BigNumber} [k] The number of objects in the subset
   * @return {number | BigNumber}    The number of permutations
   */
  return typed(name, {
    'number | BigNumber': factorial,
    'number, number': function numberNumber(n, k) {
      if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(n) || n < 0) {
        throw new TypeError('Positive integer value expected in function permutations');
      }

      if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(k) || k < 0) {
        throw new TypeError('Positive integer value expected in function permutations');
      }

      if (k > n) {
        throw new TypeError('second argument k must be less than or equal to first argument n');
      } // Permute n objects, k at a time


      return Object(_utils_product__WEBPACK_IMPORTED_MODULE_1__["product"])(n - k + 1, n);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(n, k) {
      var result, i;

      if (!isPositiveInteger(n) || !isPositiveInteger(k)) {
        throw new TypeError('Positive integer value expected in function permutations');
      }

      if (k.gt(n)) {
        throw new TypeError('second argument k must be less than or equal to first argument n');
      }

      var one = n.mul(0).add(1);
      result = one;

      for (i = n.minus(k).plus(1); i.lte(n); i = i.plus(1)) {
        result = result.times(i);
      }

      return result;
    } // TODO: implement support for collection in permutations

  });
});
/**
 * Test whether BigNumber n is a positive integer
 * @param {BigNumber} n
 * @returns {boolean} isPositiveInteger
 */

function isPositiveInteger(n) {
  return n.isInteger() && n.gte(0);
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/pickRandom.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/pickRandom.js ***!
  \********************************************************************/
/*! exports provided: createPickRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPickRandom", function() { return createPickRandom; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _util_seededRNG__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/seededRNG */ "../node_modules/mathjs/es/function/probability/util/seededRNG.js");




var name = 'pickRandom';
var dependencies = ['typed', 'config', '?on'];
var createPickRandom = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      on = _ref.on;
  // seeded pseudo random number generator
  var rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_3__["createRng"])(config.randomSeed);

  if (on) {
    on('config', function (curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_3__["createRng"])(curr.randomSeed);
      }
    });
  }
  /**
   * Random pick one or more values from a one dimensional array.
   * Array elements are picked using a random function with uniform or weighted distribution.
   *
   * Syntax:
   *
   *     math.pickRandom(array)
   *     math.pickRandom(array, number)
   *     math.pickRandom(array, weights)
   *     math.pickRandom(array, number, weights)
   *     math.pickRandom(array, weights, number)
   *
   * Examples:
   *
   *     math.pickRandom([3, 6, 12, 2])                  // returns one of the values in the array
   *     math.pickRandom([3, 6, 12, 2], 2)               // returns an array of two of the values in the array
   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1])    // returns one of the values in the array with weighted distribution
   *     math.pickRandom([3, 6, 12, 2], 2, [1, 3, 2, 1]) // returns an array of two of the values in the array with weighted distribution
   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1], 2) // returns an array of two of the values in the array with weighted distribution
   *
   * See also:
   *
   *     random, randomInt
   *
   * @param {Array | Matrix} array     A one dimensional array
   * @param {Int} number               An int or float
   * @param {Array | Matrix} weights   An array of ints or floats
   * @return {number | Array}          Returns a single random value from array when number is 1 or undefined.
   *                                   Returns an array with the configured number of elements when number is > 1.
   */


  return typed({
    'Array | Matrix': function ArrayMatrix(possibles) {
      return _pickRandom(possibles);
    },
    'Array | Matrix, number': function ArrayMatrixNumber(possibles, number) {
      return _pickRandom(possibles, number, undefined);
    },
    'Array | Matrix, Array': function ArrayMatrixArray(possibles, weights) {
      return _pickRandom(possibles, undefined, weights);
    },
    'Array | Matrix, Array | Matrix, number': function ArrayMatrixArrayMatrixNumber(possibles, weights, number) {
      return _pickRandom(possibles, number, weights);
    },
    'Array | Matrix, number, Array | Matrix': function ArrayMatrixNumberArrayMatrix(possibles, number, weights) {
      return _pickRandom(possibles, number, weights);
    }
  });

  function _pickRandom(possibles, number, weights) {
    var single = typeof number === 'undefined';

    if (single) {
      number = 1;
    }

    possibles = possibles.valueOf(); // get Array

    if (weights) {
      weights = weights.valueOf(); // get Array
    }

    if (Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["arraySize"])(possibles).length > 1) {
      throw new Error('Only one dimensional vectors supported');
    }

    var totalWeights = 0;

    if (typeof weights !== 'undefined') {
      if (weights.length !== possibles.length) {
        throw new Error('Weights must have the same length as possibles');
      }

      for (var i = 0, len = weights.length; i < len; i++) {
        if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(weights[i]) || weights[i] < 0) {
          throw new Error('Weights must be an array of positive numbers');
        }

        totalWeights += weights[i];
      }
    }

    var length = possibles.length;

    if (length === 0) {
      return [];
    } else if (number >= length) {
      return number > 1 ? possibles : possibles[0];
    }

    var result = [];
    var pick;

    while (result.length < number) {
      if (typeof weights === 'undefined') {
        pick = possibles[Math.floor(rng() * length)];
      } else {
        var randKey = rng() * totalWeights;

        for (var _i = 0, _len = possibles.length; _i < _len; _i++) {
          randKey -= weights[_i];

          if (randKey < 0) {
            pick = possibles[_i];
            break;
          }
        }
      }

      if (result.indexOf(pick) === -1) {
        result.push(pick);
      }
    }

    return single ? result[0] : result; // TODO: return matrix when input was a matrix
    // TODO: add support for multi dimensional matrices
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/random.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/random.js ***!
  \****************************************************************/
/*! exports provided: createRandom, createRandomNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRandom", function() { return createRandom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRandomNumber", function() { return createRandomNumber; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _util_seededRNG__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/seededRNG */ "../node_modules/mathjs/es/function/probability/util/seededRNG.js");
/* harmony import */ var _util_randomMatrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/randomMatrix */ "../node_modules/mathjs/es/function/probability/util/randomMatrix.js");




var name = 'random';
var dependencies = ['typed', 'config', '?on'];
var createRandom = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      on = _ref.on;
  // seeded pseudo random number generator
  var rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_2__["createRng"])(config.randomSeed);

  if (on) {
    on('config', function (curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_2__["createRng"])(curr.randomSeed);
      }
    });
  }
  /**
   * Return a random number larger or equal to `min` and smaller than `max`
   * using a uniform distribution.
   *
   * Syntax:
   *
   *     math.random()                // generate a random number between 0 and 1
   *     math.random(max)             // generate a random number between 0 and max
   *     math.random(min, max)        // generate a random number between min and max
   *     math.random(size)            // generate a matrix with random numbers between 0 and 1
   *     math.random(size, max)       // generate a matrix with random numbers between 0 and max
   *     math.random(size, min, max)  // generate a matrix with random numbers between min and max
   *
   * Examples:
   *
   *     math.random()       // returns a random number between 0 and 1
   *     math.random(100)    // returns a random number between 0 and 100
   *     math.random(30, 40) // returns a random number between 30 and 40
   *     math.random([2, 3]) // returns a 2x3 matrix with random numbers between 0 and 1
   *
   * See also:
   *
   *     randomInt, pickRandom
   *
   * @param {Array | Matrix} [size] If provided, an array or matrix with given
   *                                size and filled with random values is returned
   * @param {number} [min]  Minimum boundary for the random value, included
   * @param {number} [max]  Maximum boundary for the random value, excluded
   * @return {number | Array | Matrix} A random number
   */


  return typed(name, {
    '': function _() {
      return _random(0, 1);
    },
    number: function number(max) {
      return _random(0, max);
    },
    'number, number': function numberNumber(min, max) {
      return _random(min, max);
    },
    'Array | Matrix': function ArrayMatrix(size) {
      return _randomMatrix(size, 0, 1);
    },
    'Array | Matrix, number': function ArrayMatrixNumber(size, max) {
      return _randomMatrix(size, 0, max);
    },
    'Array | Matrix, number, number': function ArrayMatrixNumberNumber(size, min, max) {
      return _randomMatrix(size, min, max);
    }
  });

  function _randomMatrix(size, min, max) {
    var res = Object(_util_randomMatrix__WEBPACK_IMPORTED_MODULE_3__["randomMatrix"])(size.valueOf(), function () {
      return _random(min, max);
    });
    return Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(size) ? size.create(res) : res;
  }

  function _random(min, max) {
    return min + rng() * (max - min);
  }
}); // number only implementation of random, no matrix support
// TODO: there is quite some duplicate code in both createRandom and createRandomNumber, can we improve that?

var createRandomNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, ['typed', 'config', '?on'], function (_ref2) {
  var typed = _ref2.typed,
      config = _ref2.config,
      on = _ref2.on,
      matrix = _ref2.matrix;
  // seeded pseudo random number generator1
  var rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_2__["createRng"])(config.randomSeed);

  if (on) {
    on('config', function (curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_2__["createRng"])(curr.randomSeed);
      }
    });
  }

  return typed(name, {
    '': function _() {
      return _random(0, 1);
    },
    number: function number(max) {
      return _random(0, max);
    },
    'number, number': function numberNumber(min, max) {
      return _random(min, max);
    }
  });

  function _random(min, max) {
    return min + rng() * (max - min);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/randomInt.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/randomInt.js ***!
  \*******************************************************************/
/*! exports provided: createRandomInt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRandomInt", function() { return createRandomInt; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _util_randomMatrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/randomMatrix */ "../node_modules/mathjs/es/function/probability/util/randomMatrix.js");
/* harmony import */ var _util_seededRNG__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/seededRNG */ "../node_modules/mathjs/es/function/probability/util/seededRNG.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");




var name = 'randomInt';
var dependencies = ['typed', 'config', '?on'];
var createRandomInt = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      on = _ref.on;
  // seeded pseudo random number generator
  var rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_2__["createRng"])(config.randomSeed);

  if (on) {
    on('config', function (curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = Object(_util_seededRNG__WEBPACK_IMPORTED_MODULE_2__["createRng"])(curr.randomSeed);
      }
    });
  }
  /**
   * Return a random integer number larger or equal to `min` and smaller than `max`
   * using a uniform distribution.
   *
   * Syntax:
   *
   *     math.randomInt()                // generate a random integer between 0 and 1
   *     math.randomInt(max)             // generate a random integer between 0 and max
   *     math.randomInt(min, max)        // generate a random integer between min and max
   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1
   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max
   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max
   *
   * Examples:
   *
   *     math.randomInt(100)    // returns a random integer between 0 and 100
   *     math.randomInt(30, 40) // returns a random integer between 30 and 40
   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1
   *
   * See also:
   *
   *     random, pickRandom
   *
   * @param {Array | Matrix} [size] If provided, an array or matrix with given
   *                                size and filled with random values is returned
   * @param {number} [min]  Minimum boundary for the random value, included
   * @param {number} [max]  Maximum boundary for the random value, excluded
   * @return {number | Array | Matrix} A random integer value
   */


  return typed(name, {
    '': function _() {
      return _randomInt(0, 1);
    },
    number: function number(max) {
      return _randomInt(0, max);
    },
    'number, number': function numberNumber(min, max) {
      return _randomInt(min, max);
    },
    'Array | Matrix': function ArrayMatrix(size) {
      return _randomIntMatrix(size, 0, 1);
    },
    'Array | Matrix, number': function ArrayMatrixNumber(size, max) {
      return _randomIntMatrix(size, 0, max);
    },
    'Array | Matrix, number, number': function ArrayMatrixNumberNumber(size, min, max) {
      return _randomIntMatrix(size, min, max);
    }
  });

  function _randomIntMatrix(size, min, max) {
    var res = Object(_util_randomMatrix__WEBPACK_IMPORTED_MODULE_1__["randomMatrix"])(size.valueOf(), function () {
      return _randomInt(min, max);
    });
    return Object(_utils_is__WEBPACK_IMPORTED_MODULE_3__["isMatrix"])(size) ? size.create(res) : res;
  }

  function _randomInt(min, max) {
    return Math.floor(min + rng() * (max - min));
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/util/randomMatrix.js":
/*!***************************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/util/randomMatrix.js ***!
  \***************************************************************************/
/*! exports provided: randomMatrix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomMatrix", function() { return randomMatrix; });
/**
 * This is a util function for generating a random matrix recursively.
 * @param {number[]} size
 * @param {function} random
 * @returns {Array}
 */
function randomMatrix(size, random) {
  var data = [];
  size = size.slice(0);

  if (size.length > 1) {
    for (var i = 0, length = size.shift(); i < length; i++) {
      data.push(randomMatrix(size, random));
    }
  } else {
    for (var _i = 0, _length = size.shift(); _i < _length; _i++) {
      data.push(random());
    }
  }

  return data;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/probability/util/seededRNG.js":
/*!************************************************************************!*\
  !*** ../node_modules/mathjs/es/function/probability/util/seededRNG.js ***!
  \************************************************************************/
/*! exports provided: createRng */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRng", function() { return createRng; });
/* harmony import */ var seed_random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seed-random */ "../node_modules/seed-random/index.js");
/* harmony import */ var seed_random__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(seed_random__WEBPACK_IMPORTED_MODULE_0__);
// create a random seed here to prevent an infinite loop from seed-random
// inside the factory. Reason is that math.random is defined as a getter/setter
// and seed-random generates a seed from the local entropy by reading every
// defined object including `math` itself. That means that whilst getting
// math.random, it tries to get math.random, etc... an infinite loop.
// See https://github.com/ForbesLindesay/seed-random/issues/6

var singletonRandom = /* #__PURE__ */seed_random__WEBPACK_IMPORTED_MODULE_0___default()();
function createRng(randomSeed) {
  var random; // create a new random generator with given seed

  function setSeed(seed) {
    random = seed === null ? singletonRandom : seed_random__WEBPACK_IMPORTED_MODULE_0___default()(String(seed));
  } // initialize a seeded pseudo random number generator with config's random seed


  setSeed(randomSeed); // wrapper function so the rng can be updated via generator

  function rng() {
    return random();
  }

  return rng;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/compare.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/compare.js ***!
  \****************************************************************/
/*! exports provided: createCompare, createCompareNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCompare", function() { return createCompare; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCompareNumber", function() { return createCompareNumber; });
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm05.js");








var name = 'compare';
var dependencies = ['typed', 'config', 'matrix', 'equalScalar', 'BigNumber', 'Fraction', 'DenseMatrix'];
var createCompare = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      equalScalar = _ref.equalScalar,
      matrix = _ref.matrix,
      BigNumber = _ref.BigNumber,
      Fraction = _ref.Fraction,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm05 = Object(_type_matrix_utils_algorithm05__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm05"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.
   *
   * x and y are considered equal when the relative difference between x and y
   * is smaller than the configured epsilon. The function cannot be used to
   * compare values smaller than approximately 2.22e-16.
   *
   * For matrices, the function is evaluated element wise.
   * Strings are compared by their numerical value.
   *
   * Syntax:
   *
   *    math.compare(x, y)
   *
   * Examples:
   *
   *    math.compare(6, 1)           // returns 1
   *    math.compare(2, 3)           // returns -1
   *    math.compare(7, 7)           // returns 0
   *    math.compare('10', '2')      // returns 1
   *    math.compare('1000', '1e3')  // returns 0
   *
   *    const a = math.unit('5 cm')
   *    const b = math.unit('40 mm')
   *    math.compare(a, b)           // returns 1
   *
   *    math.compare(2, [1, 2, 3])   // returns [1, 0, -1]
   *
   * See also:
   *
   *    equal, unequal, smaller, smallerEq, larger, largerEq, compareNatural, compareText
   *
   * @param  {number | BigNumber | Fraction | Unit | string | Array | Matrix} x First value to compare
   * @param  {number | BigNumber | Fraction | Unit | string | Array | Matrix} y Second value to compare
   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the result of the comparison:
   *                                                          1 when x > y, -1 when x < y, and 0 when x == y.
   */

  return typed(name, {
    'boolean, boolean': function booleanBoolean(x, y) {
      return x === y ? 0 : x > y ? 1 : -1;
    },
    'number, number': function numberNumber(x, y) {
      return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon) ? 0 : x > y ? 1 : -1;
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x, y, config.epsilon) ? new BigNumber(0) : new BigNumber(x.cmp(y));
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return new Fraction(x.compare(y));
    },
    'Complex, Complex': function ComplexComplex() {
      throw new TypeError('No ordering relation is defined for complex numbers');
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (!x.equalBase(y)) {
        throw new Error('Cannot compare units with different base');
      }

      return this(x.value, y.value);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm05(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});
var createCompareNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, ['typed', 'config'], function (_ref2) {
  var typed = _ref2.typed,
      config = _ref2.config;
  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon) ? 0 : x > y ? 1 : -1;
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/compareNatural.js":
/*!***********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/compareNatural.js ***!
  \***********************************************************************/
/*! exports provided: createCompareNatural */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCompareNatural", function() { return createCompareNatural; });
/* harmony import */ var javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! javascript-natural-sort */ "../node_modules/javascript-natural-sort/naturalSort.js");
/* harmony import */ var javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'compareNatural';
var dependencies = ['typed', 'compare'];
var createCompareNatural = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      compare = _ref.compare;
  var compareBooleans = compare.signatures['boolean,boolean'];
  /**
   * Compare two values of any type in a deterministic, natural way.
   *
   * For numeric values, the function works the same as `math.compare`.
   * For types of values that can't be compared mathematically,
   * the function compares in a natural way.
   *
   * For numeric values, x and y are considered equal when the relative
   * difference between x and y is smaller than the configured epsilon.
   * The function cannot be used to compare values smaller than
   * approximately 2.22e-16.
   *
   * For Complex numbers, first the real parts are compared. If equal,
   * the imaginary parts are compared.
   *
   * Strings are compared with a natural sorting algorithm, which
   * orders strings in a "logic" way following some heuristics.
   * This differs from the function `compare`, which converts the string
   * into a numeric value and compares that. The function `compareText`
   * on the other hand compares text lexically.
   *
   * Arrays and Matrices are compared value by value until there is an
   * unequal pair of values encountered. Objects are compared by sorted
   * keys until the keys or their values are unequal.
   *
   * Syntax:
   *
   *    math.compareNatural(x, y)
   *
   * Examples:
   *
   *    math.compareNatural(6, 1)              // returns 1
   *    math.compareNatural(2, 3)              // returns -1
   *    math.compareNatural(7, 7)              // returns 0
   *
   *    math.compareNatural('10', '2')         // returns 1
   *    math.compareText('10', '2')            // returns -1
   *    math.compare('10', '2')                // returns 1
   *
   *    math.compareNatural('Answer: 10', 'Answer: 2') // returns 1
   *    math.compareText('Answer: 10', 'Answer: 2')    // returns -1
   *    math.compare('Answer: 10', 'Answer: 2')
   *        // Error: Cannot convert "Answer: 10" to a number
   *
   *    const a = math.unit('5 cm')
   *    const b = math.unit('40 mm')
   *    math.compareNatural(a, b)              // returns 1
   *
   *    const c = math.complex('2 + 3i')
   *    const d = math.complex('2 + 4i')
   *    math.compareNatural(c, d)              // returns -1
   *
   *    math.compareNatural([1, 2, 4], [1, 2, 3]) // returns 1
   *    math.compareNatural([1, 2, 3], [1, 2])    // returns 1
   *    math.compareNatural([1, 5], [1, 2, 3])    // returns 1
   *    math.compareNatural([1, 2], [1, 2])       // returns 0
   *
   *    math.compareNatural({a: 2}, {a: 4})       // returns -1
   *
   * See also:
   *
   *    compare, compareText
   *
   * @param  {*} x First value to compare
   * @param  {*} y Second value to compare
   * @return {number} Returns the result of the comparison:
   *                  1 when x > y, -1 when x < y, and 0 when x == y.
   */

  return typed(name, {
    'any, any': function anyAny(x, y) {
      var typeX = Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["typeOf"])(x);
      var typeY = Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["typeOf"])(y);
      var c; // numeric types

      if ((typeX === 'number' || typeX === 'BigNumber' || typeX === 'Fraction') && (typeY === 'number' || typeY === 'BigNumber' || typeY === 'Fraction')) {
        c = compare(x, y);

        if (c.toString() !== '0') {
          // c can be number, BigNumber, or Fraction
          return c > 0 ? 1 : -1; // return a number
        } else {
          return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0___default()(typeX, typeY);
        }
      } // matrix types


      if (typeX === 'Array' || typeX === 'Matrix' || typeY === 'Array' || typeY === 'Matrix') {
        c = compareMatricesAndArrays(this, x, y);

        if (c !== 0) {
          return c;
        } else {
          return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0___default()(typeX, typeY);
        }
      } // in case of different types, order by name of type, i.e. 'BigNumber' < 'Complex'


      if (typeX !== typeY) {
        return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0___default()(typeX, typeY);
      }

      if (typeX === 'Complex') {
        return compareComplexNumbers(x, y);
      }

      if (typeX === 'Unit') {
        if (x.equalBase(y)) {
          return this(x.value, y.value);
        } // compare by units


        return compareArrays(this, x.formatUnits(), y.formatUnits());
      }

      if (typeX === 'boolean') {
        return compareBooleans(x, y);
      }

      if (typeX === 'string') {
        return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0___default()(x, y);
      }

      if (typeX === 'Object') {
        return compareObjects(this, x, y);
      }

      if (typeX === 'null') {
        return 0;
      }

      if (typeX === 'undefined') {
        return 0;
      } // this should not occur...


      throw new TypeError('Unsupported type of value "' + typeX + '"');
    }
  });
  /**
   * Compare mixed matrix/array types, by converting to same-shaped array.
   * This comparator is non-deterministic regarding input types.
   * @param {Array | SparseMatrix | DenseMatrix | *} x
   * @param {Array | SparseMatrix | DenseMatrix | *} y
   * @returns {number} Returns the comparison result: -1, 0, or 1
   */

  function compareMatricesAndArrays(compareNatural, x, y) {
    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSparseMatrix"])(x) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSparseMatrix"])(y)) {
      return compareArrays(compareNatural, x.toJSON().values, y.toJSON().values);
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSparseMatrix"])(x)) {
      // note: convert to array is expensive
      return compareMatricesAndArrays(compareNatural, x.toArray(), y);
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isSparseMatrix"])(y)) {
      // note: convert to array is expensive
      return compareMatricesAndArrays(compareNatural, x, y.toArray());
    } // convert DenseArray into Array


    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isDenseMatrix"])(x)) {
      return compareMatricesAndArrays(compareNatural, x.toJSON().data, y);
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isDenseMatrix"])(y)) {
      return compareMatricesAndArrays(compareNatural, x, y.toJSON().data);
    } // convert scalars to array


    if (!Array.isArray(x)) {
      return compareMatricesAndArrays(compareNatural, [x], y);
    }

    if (!Array.isArray(y)) {
      return compareMatricesAndArrays(compareNatural, x, [y]);
    }

    return compareArrays(compareNatural, x, y);
  }
  /**
   * Compare two Arrays
   *
   * - First, compares value by value
   * - Next, if all corresponding values are equal,
   *   look at the length: longest array will be considered largest
   *
   * @param {Array} x
   * @param {Array} y
   * @returns {number} Returns the comparison result: -1, 0, or 1
   */


  function compareArrays(compareNatural, x, y) {
    // compare each value
    for (var i = 0, ii = Math.min(x.length, y.length); i < ii; i++) {
      var v = compareNatural(x[i], y[i]);

      if (v !== 0) {
        return v;
      }
    } // compare the size of the arrays


    if (x.length > y.length) {
      return 1;
    }

    if (x.length < y.length) {
      return -1;
    } // both Arrays have equal size and content


    return 0;
  }
  /**
   * Compare two objects
   *
   * - First, compare sorted property names
   * - Next, compare the property values
   *
   * @param {Object} x
   * @param {Object} y
   * @returns {number} Returns the comparison result: -1, 0, or 1
   */


  function compareObjects(compareNatural, x, y) {
    var keysX = Object.keys(x);
    var keysY = Object.keys(y); // compare keys

    keysX.sort(javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0___default.a);
    keysY.sort(javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0___default.a);
    var c = compareArrays(compareNatural, keysX, keysY);

    if (c !== 0) {
      return c;
    } // compare values


    for (var i = 0; i < keysX.length; i++) {
      var v = compareNatural(x[keysX[i]], y[keysY[i]]);

      if (v !== 0) {
        return v;
      }
    }

    return 0;
  }
});
/**
 * Compare two complex numbers, `x` and `y`:
 *
 * - First, compare the real values of `x` and `y`
 * - If equal, compare the imaginary values of `x` and `y`
 *
 * @params {Complex} x
 * @params {Complex} y
 * @returns {number} Returns the comparison result: -1, 0, or 1
 */

function compareComplexNumbers(x, y) {
  if (x.re > y.re) {
    return 1;
  }

  if (x.re < y.re) {
    return -1;
  }

  if (x.im > y.im) {
    return 1;
  }

  if (x.im < y.im) {
    return -1;
  }

  return 0;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/compareText.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/compareText.js ***!
  \********************************************************************/
/*! exports provided: createCompareText, createCompareTextNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCompareText", function() { return createCompareText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCompareTextNumber", function() { return createCompareTextNumber; });
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");




var name = 'compareText';
var dependencies = ['typed', 'matrix'];
var createCompareText = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix;
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Compare two strings lexically. Comparison is case sensitive.
   * Returns 1 when x > y, -1 when x < y, and 0 when x == y.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.compareText(x, y)
   *
   * Examples:
   *
   *    math.compareText('B', 'A')     // returns 1
   *    math.compareText('2', '10')    // returns 1
   *    math.compare('2', '10')        // returns -1
   *    math.compareNatural('2', '10') // returns -1
   *
   *    math.compareText('B', ['A', 'B', 'C']) // returns [1, 0, -1]
   *
   * See also:
   *
   *    equal, equalText, compare, compareNatural
   *
   * @param  {string | Array | DenseMatrix} x First string to compare
   * @param  {string | Array | DenseMatrix} y Second string to compare
   * @return {number | Array | DenseMatrix} Returns the result of the comparison:
   *                                        1 when x > y, -1 when x < y, and 0 when x == y.
   */

  return typed(name, {
    'any, any': _utils_string__WEBPACK_IMPORTED_MODULE_0__["compareText"],
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, _utils_string__WEBPACK_IMPORTED_MODULE_0__["compareText"]);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, _utils_string__WEBPACK_IMPORTED_MODULE_0__["compareText"], false);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, _utils_string__WEBPACK_IMPORTED_MODULE_0__["compareText"], true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, _utils_string__WEBPACK_IMPORTED_MODULE_0__["compareText"], false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, _utils_string__WEBPACK_IMPORTED_MODULE_0__["compareText"], true).valueOf();
    }
  });
});
var createCompareTextNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, ['typed'], function (_ref2) {
  var typed = _ref2.typed;
  return typed(name, {
    'any, any': _utils_string__WEBPACK_IMPORTED_MODULE_0__["compareText"]
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/deepEqual.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/deepEqual.js ***!
  \******************************************************************/
/*! exports provided: createDeepEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDeepEqual", function() { return createDeepEqual; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'deepEqual';
var dependencies = ['typed', 'equal'];
var createDeepEqual = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equal = _ref.equal;

  /**
   * Test element wise whether two matrices are equal.
   * The function accepts both matrices and scalar values.
   *
   * Strings are compared by their numerical value.
   *
   * Syntax:
   *
   *    math.deepEqual(x, y)
   *
   * Examples:
   *
   *    math.deepEqual(2, 4)   // returns false
   *
   *    a = [2, 5, 1]
   *    b = [2, 7, 1]
   *
   *    math.deepEqual(a, b)   // returns false
   *    math.equal(a, b)       // returns [true, false, true]
   *
   * See also:
   *
   *    equal, unequal
   *
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First matrix to compare
   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second matrix to compare
   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}
   *            Returns true when the input matrices have the same size and each of their elements is equal.
   */
  return typed(name, {
    'any, any': function anyAny(x, y) {
      return _deepEqual(x.valueOf(), y.valueOf());
    }
  });
  /**
   * Test whether two arrays have the same size and all elements are equal
   * @param {Array | *} x
   * @param {Array | *} y
   * @return {boolean} Returns true if both arrays are deep equal
   */

  function _deepEqual(x, y) {
    if (Array.isArray(x)) {
      if (Array.isArray(y)) {
        var len = x.length;

        if (len !== y.length) {
          return false;
        }

        for (var i = 0; i < len; i++) {
          if (!_deepEqual(x[i], y[i])) {
            return false;
          }
        }

        return true;
      } else {
        return false;
      }
    } else {
      if (Array.isArray(y)) {
        return false;
      } else {
        return equal(x, y);
      }
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/equal.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/equal.js ***!
  \**************************************************************/
/*! exports provided: createEqual, createEqualNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEqual", function() { return createEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEqualNumber", function() { return createEqualNumber; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");






var name = 'equal';
var dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];
var createEqual = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Test whether two values are equal.
   *
   * The function tests whether the relative difference between x and y is
   * smaller than the configured epsilon. The function cannot be used to
   * compare values smaller than approximately 2.22e-16.
   *
   * For matrices, the function is evaluated element wise.
   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.
   *
   * Values `null` and `undefined` are compared strictly, thus `null` is only
   * equal to `null` and nothing else, and `undefined` is only equal to
   * `undefined` and nothing else. Strings are compared by their numerical value.
   *
   * Syntax:
   *
   *    math.equal(x, y)
   *
   * Examples:
   *
   *    math.equal(2 + 2, 3)         // returns false
   *    math.equal(2 + 2, 4)         // returns true
   *
   *    const a = math.unit('50 cm')
   *    const b = math.unit('5 m')
   *    math.equal(a, b)             // returns true
   *
   *    const c = [2, 5, 1]
   *    const d = [2, 7, 1]
   *
   *    math.equal(c, d)             // returns [true, false, true]
   *    math.deepEqual(c, d)         // returns false
   *
   *    math.equal("1000", "1e3")    // returns true
   *    math.equal(0, null)          // returns false
   *
   * See also:
   *
   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText
   *
   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare
   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare
   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false
   */

  return typed(name, {
    'any, any': function anyAny(x, y) {
      // strict equality for null and undefined?
      if (x === null) {
        return y === null;
      }

      if (y === null) {
        return x === null;
      }

      if (x === undefined) {
        return y === undefined;
      }

      if (y === undefined) {
        return x === undefined;
      }

      return equalScalar(x, y);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, equalScalar);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, equalScalar, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, equalScalar, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, equalScalar);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, equalScalar, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, equalScalar, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, equalScalar, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, equalScalar, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, equalScalar, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, equalScalar, true).valueOf();
    }
  });
});
var createEqualNumber = Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, ['typed', 'equalScalar'], function (_ref2) {
  var typed = _ref2.typed,
      equalScalar = _ref2.equalScalar;
  return typed(name, {
    'any, any': function anyAny(x, y) {
      // strict equality for null and undefined?
      if (x === null) {
        return y === null;
      }

      if (y === null) {
        return x === null;
      }

      if (x === undefined) {
        return y === undefined;
      }

      if (y === undefined) {
        return x === undefined;
      }

      return equalScalar(x, y);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/equalScalar.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/equalScalar.js ***!
  \********************************************************************/
/*! exports provided: createEqualScalar, createEqualScalarNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEqualScalar", function() { return createEqualScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEqualScalarNumber", function() { return createEqualScalarNumber; });
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/complex */ "../node_modules/mathjs/es/utils/complex.js");




var name = 'equalScalar';
var dependencies = ['typed', 'config'];
var createEqualScalar = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config;

  /**
   * Test whether two scalar values are nearly equal.
   *
   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare
   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare
   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false
   * @private
   */
  return typed(name, {
    'boolean, boolean': function booleanBoolean(x, y) {
      return x === y;
    },
    'number, number': function numberNumber(x, y) {
      return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.eq(y) || Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x, y, config.epsilon);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.equals(y);
    },
    'Complex, Complex': function ComplexComplex(x, y) {
      return Object(_utils_complex__WEBPACK_IMPORTED_MODULE_3__["complexEquals"])(x, y, config.epsilon);
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (!x.equalBase(y)) {
        throw new Error('Cannot compare units with different base');
      }

      return this(x.value, y.value);
    }
  });
});
var createEqualScalarNumber = Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, ['typed', 'config'], function (_ref2) {
  var typed = _ref2.typed,
      config = _ref2.config;
  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/equalText.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/equalText.js ***!
  \******************************************************************/
/*! exports provided: createEqualText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEqualText", function() { return createEqualText; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'equalText';
var dependencies = ['typed', 'compareText', 'isZero'];
var createEqualText = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      compareText = _ref.compareText,
      isZero = _ref.isZero;

  /**
   * Check equality of two strings. Comparison is case sensitive.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.equalText(x, y)
   *
   * Examples:
   *
   *    math.equalText('Hello', 'Hello')     // returns true
   *    math.equalText('a', 'A')             // returns false
   *    math.equal('2e3', '2000')            // returns true
   *    math.equalText('2e3', '2000')        // returns false
   *
   *    math.equalText('B', ['A', 'B', 'C']) // returns [false, true, false]
   *
   * See also:
   *
   *    equal, compareText, compare, compareNatural
   *
   * @param  {string | Array | DenseMatrix} x First string to compare
   * @param  {string | Array | DenseMatrix} y Second string to compare
   * @return {number | Array | DenseMatrix} Returns true if the values are equal, and false if not.
   */
  return typed(name, {
    'any, any': function anyAny(x, y) {
      return isZero(compareText(x, y));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/larger.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/larger.js ***!
  \***************************************************************/
/*! exports provided: createLarger, createLargerNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLarger", function() { return createLarger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLargerNumber", function() { return createLargerNumber; });
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");








var name = 'larger';
var dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];
var createLarger = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Test whether value x is larger than y.
   *
   * The function returns true when x is larger than y and the relative
   * difference between x and y is larger than the configured epsilon. The
   * function cannot be used to compare values smaller than approximately 2.22e-16.
   *
   * For matrices, the function is evaluated element wise.
   * Strings are compared by their numerical value.
   *
   * Syntax:
   *
   *    math.larger(x, y)
   *
   * Examples:
   *
   *    math.larger(2, 3)             // returns false
   *    math.larger(5, 2 + 2)         // returns true
   *
   *    const a = math.unit('5 cm')
   *    const b = math.unit('2 inch')
   *    math.larger(a, b)             // returns false
   *
   * See also:
   *
   *    equal, unequal, smaller, smallerEq, largerEq, compare
   *
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare
   * @return {boolean | Array | Matrix} Returns true when the x is larger than y, else returns false
   */

  return typed(name, {
    'boolean, boolean': function booleanBoolean(x, y) {
      return x > y;
    },
    'number, number': function numberNumber(x, y) {
      return x > y && !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.gt(y) && !Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x, y, config.epsilon);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.compare(y) === 1;
    },
    'Complex, Complex': function ComplexComplex() {
      throw new TypeError('No ordering relation is defined for complex numbers');
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (!x.equalBase(y)) {
        throw new Error('Cannot compare units with different base');
      }

      return this(x.value, y.value);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});
var createLargerNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, ['typed', 'config'], function (_ref2) {
  var typed = _ref2.typed,
      config = _ref2.config;
  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return x > y && !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/largerEq.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/largerEq.js ***!
  \*****************************************************************/
/*! exports provided: createLargerEq, createLargerEqNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLargerEq", function() { return createLargerEq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLargerEqNumber", function() { return createLargerEqNumber; });
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");








var name = 'largerEq';
var dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];
var createLargerEq = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Test whether value x is larger or equal to y.
   *
   * The function returns true when x is larger than y or the relative
   * difference between x and y is smaller than the configured epsilon. The
   * function cannot be used to compare values smaller than approximately 2.22e-16.
   *
   * For matrices, the function is evaluated element wise.
   * Strings are compared by their numerical value.
   *
   * Syntax:
   *
   *    math.largerEq(x, y)
   *
   * Examples:
   *
   *    math.larger(2, 1 + 1)         // returns false
   *    math.largerEq(2, 1 + 1)       // returns true
   *
   * See also:
   *
   *    equal, unequal, smaller, smallerEq, larger, compare
   *
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare
   * @return {boolean | Array | Matrix} Returns true when the x is larger or equal to y, else returns false
   */

  return typed(name, {
    'boolean, boolean': function booleanBoolean(x, y) {
      return x >= y;
    },
    'number, number': function numberNumber(x, y) {
      return x >= y || Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.gte(y) || Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x, y, config.epsilon);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.compare(y) !== -1;
    },
    'Complex, Complex': function ComplexComplex() {
      throw new TypeError('No ordering relation is defined for complex numbers');
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (!x.equalBase(y)) {
        throw new Error('Cannot compare units with different base');
      }

      return this(x.value, y.value);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});
var createLargerEqNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, ['typed', 'config'], function (_ref2) {
  var typed = _ref2.typed,
      config = _ref2.config;
  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return x >= y || Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/smaller.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/smaller.js ***!
  \****************************************************************/
/*! exports provided: createSmaller, createSmallerNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSmaller", function() { return createSmaller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSmallerNumber", function() { return createSmallerNumber; });
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");








var name = 'smaller';
var dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];
var createSmaller = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Test whether value x is smaller than y.
   *
   * The function returns true when x is smaller than y and the relative
   * difference between x and y is smaller than the configured epsilon. The
   * function cannot be used to compare values smaller than approximately 2.22e-16.
   *
   * For matrices, the function is evaluated element wise.
   * Strings are compared by their numerical value.
   *
   * Syntax:
   *
   *    math.smaller(x, y)
   *
   * Examples:
   *
   *    math.smaller(2, 3)            // returns true
   *    math.smaller(5, 2 * 2)        // returns false
   *
   *    const a = math.unit('5 cm')
   *    const b = math.unit('2 inch')
   *    math.smaller(a, b)            // returns true
   *
   * See also:
   *
   *    equal, unequal, smallerEq, smaller, smallerEq, compare
   *
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare
   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false
   */

  return typed(name, {
    'boolean, boolean': function booleanBoolean(x, y) {
      return x < y;
    },
    'number, number': function numberNumber(x, y) {
      return x < y && !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.lt(y) && !Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x, y, config.epsilon);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.compare(y) === -1;
    },
    'Complex, Complex': function ComplexComplex(x, y) {
      throw new TypeError('No ordering relation is defined for complex numbers');
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (!x.equalBase(y)) {
        throw new Error('Cannot compare units with different base');
      }

      return this(x.value, y.value);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});
var createSmallerNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, ['typed', 'config'], function (_ref2) {
  var typed = _ref2.typed,
      config = _ref2.config;
  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return x < y && !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/smallerEq.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/smallerEq.js ***!
  \******************************************************************/
/*! exports provided: createSmallerEq, createSmallerEqNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSmallerEq", function() { return createSmallerEq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSmallerEqNumber", function() { return createSmallerEqNumber; });
/* harmony import */ var _utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual */ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");








var name = 'smallerEq';
var dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];
var createSmallerEq = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Test whether value x is smaller or equal to y.
   *
   * The function returns true when x is smaller than y or the relative
   * difference between x and y is smaller than the configured epsilon. The
   * function cannot be used to compare values smaller than approximately 2.22e-16.
   *
   * For matrices, the function is evaluated element wise.
   * Strings are compared by their numerical value.
   *
   * Syntax:
   *
   *    math.smallerEq(x, y)
   *
   * Examples:
   *
   *    math.smaller(1 + 2, 3)        // returns false
   *    math.smallerEq(1 + 2, 3)      // returns true
   *
   * See also:
   *
   *    equal, unequal, smaller, larger, largerEq, compare
   *
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare
   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare
   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false
   */

  return typed(name, {
    'boolean, boolean': function booleanBoolean(x, y) {
      return x <= y;
    },
    'number, number': function numberNumber(x, y) {
      return x <= y || Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    },
    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {
      return x.lte(y) || Object(_utils_bignumber_nearlyEqual__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x, y, config.epsilon);
    },
    'Fraction, Fraction': function FractionFraction(x, y) {
      return x.compare(y) !== 1;
    },
    'Complex, Complex': function ComplexComplex() {
      throw new TypeError('No ordering relation is defined for complex numbers');
    },
    'Unit, Unit': function UnitUnit(x, y) {
      if (!x.equalBase(y)) {
        throw new Error('Cannot compare units with different base');
      }

      return this(x.value, y.value);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, this);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, this, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, this, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, this, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});
var createSmallerEqNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, ['typed', 'config'], function (_ref2) {
  var typed = _ref2.typed,
      config = _ref2.config;
  return typed(name, {
    'number, number': function numberNumber(x, y) {
      return x <= y || Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["nearlyEqual"])(x, y, config.epsilon);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/relational/unequal.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/relational/unequal.js ***!
  \****************************************************************/
/*! exports provided: createUnequal, createUnequalNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnequal", function() { return createUnequal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnequalNumber", function() { return createUnequalNumber; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");






var name = 'unequal';
var dependencies = ['typed', 'config', 'equalScalar', 'matrix', 'DenseMatrix'];
var createUnequal = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      equalScalar = _ref.equalScalar,
      matrix = _ref.matrix,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm07 = Object(_type_matrix_utils_algorithm07__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm07"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Test whether two values are unequal.
   *
   * The function tests whether the relative difference between x and y is
   * larger than the configured epsilon. The function cannot be used to compare
   * values smaller than approximately 2.22e-16.
   *
   * For matrices, the function is evaluated element wise.
   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.
   * Strings are compared by their numerical value.
   *
   * Values `null` and `undefined` are compared strictly, thus `null` is unequal
   * with everything except `null`, and `undefined` is unequal with everything
   * except `undefined`.
   *
   * Syntax:
   *
   *    math.unequal(x, y)
   *
   * Examples:
   *
   *    math.unequal(2 + 2, 3)       // returns true
   *    math.unequal(2 + 2, 4)       // returns false
   *
   *    const a = math.unit('50 cm')
   *    const b = math.unit('5 m')
   *    math.unequal(a, b)           // returns false
   *
   *    const c = [2, 5, 1]
   *    const d = [2, 7, 1]
   *
   *    math.unequal(c, d)           // returns [false, true, false]
   *    math.deepEqual(c, d)         // returns false
   *
   *    math.unequal(0, null)        // returns true
   * See also:
   *
   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare
   *
   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare
   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare
   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false
   */

  return typed('unequal', {
    'any, any': function anyAny(x, y) {
      // strict equality for null and undefined?
      if (x === null) {
        return y !== null;
      }

      if (y === null) {
        return x !== null;
      }

      if (x === undefined) {
        return y !== undefined;
      }

      if (y === undefined) {
        return x !== undefined;
      }

      return _unequal(x, y);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm07(x, y, _unequal);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      return algorithm03(y, x, _unequal, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, _unequal, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, _unequal);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'SparseMatrix, any': function SparseMatrixAny(x, y) {
      return algorithm12(x, y, _unequal, false);
    },
    'DenseMatrix, any': function DenseMatrixAny(x, y) {
      return algorithm14(x, y, _unequal, false);
    },
    'any, SparseMatrix': function anySparseMatrix(x, y) {
      return algorithm12(y, x, _unequal, true);
    },
    'any, DenseMatrix': function anyDenseMatrix(x, y) {
      return algorithm14(y, x, _unequal, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, _unequal, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, _unequal, true).valueOf();
    }
  });

  function _unequal(x, y) {
    return !equalScalar(x, y);
  }
});
var createUnequalNumber = Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, ['typed', 'equalScalar'], function (_ref2) {
  var typed = _ref2.typed,
      equalScalar = _ref2.equalScalar;
  return typed(name, {
    'any, any': function anyAny(x, y) {
      // strict equality for null and undefined?
      if (x === null) {
        return y !== null;
      }

      if (y === null) {
        return x !== null;
      }

      if (x === undefined) {
        return y !== undefined;
      }

      if (y === undefined) {
        return x !== undefined;
      }

      return !equalScalar(x, y);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setCartesian.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setCartesian.js ***!
  \**************************************************************/
/*! exports provided: createSetCartesian */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetCartesian", function() { return createSetCartesian; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setCartesian';
var dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];
var createSetCartesian = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      subset = _ref.subset,
      compareNatural = _ref.compareNatural,
      Index = _ref.Index,
      DenseMatrix = _ref.DenseMatrix;

  /**
   * Create the cartesian product of two (multi)sets.
   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.
   *
   * Syntax:
   *
   *    math.setCartesian(set1, set2)
   *
   * Examples:
   *
   *    math.setCartesian([1, 2], [3, 4])        // returns [[1, 3], [1, 4], [2, 3], [2, 4]]
   *
   * See also:
   *
   *    setUnion, setIntersect, setDifference, setPowerset
   *
   * @param {Array | Matrix}    a1  A (multi)set
   * @param {Array | Matrix}    a2  A (multi)set
   * @return {Array | Matrix}    The cartesian product of two (multi)sets
   */
  return typed(name, {
    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {
      var result = [];

      if (subset(size(a1), new Index(0)) !== 0 && subset(size(a2), new Index(0)) !== 0) {
        // if any of them is empty, return empty
        var b1 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural);
        var b2 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural);
        result = [];

        for (var i = 0; i < b1.length; i++) {
          for (var j = 0; j < b2.length; j++) {
            result.push([b1[i], b2[j]]);
          }
        }
      } // return an array, if both inputs were arrays


      if (Array.isArray(a1) && Array.isArray(a2)) {
        return result;
      } // return a matrix otherwise


      return new DenseMatrix(result);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setDifference.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setDifference.js ***!
  \***************************************************************/
/*! exports provided: createSetDifference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetDifference", function() { return createSetDifference; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setDifference';
var dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];
var createSetDifference = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      subset = _ref.subset,
      compareNatural = _ref.compareNatural,
      Index = _ref.Index,
      DenseMatrix = _ref.DenseMatrix;

  /**
   * Create the difference of two (multi)sets: every element of set1, that is not the element of set2.
   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.
   *
   * Syntax:
   *
   *    math.setDifference(set1, set2)
   *
   * Examples:
   *
   *    math.setDifference([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2]
   *    math.setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2]
   *
   * See also:
   *
   *    setUnion, setIntersect, setSymDifference
   *
   * @param {Array | Matrix}    a1  A (multi)set
   * @param {Array | Matrix}    a2  A (multi)set
   * @return {Array | Matrix}    The difference of two (multi)sets
   */
  return typed(name, {
    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {
      var result;

      if (subset(size(a1), new Index(0)) === 0) {
        // empty-anything=empty
        result = [];
      } else if (subset(size(a2), new Index(0)) === 0) {
        // anything-empty=anything
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a1.toArray());
      } else {
        var b1 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["identify"])(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural));
        var b2 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["identify"])(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural));
        result = [];
        var inb2;

        for (var i = 0; i < b1.length; i++) {
          inb2 = false;

          for (var j = 0; j < b2.length; j++) {
            if (compareNatural(b1[i].value, b2[j].value) === 0 && b1[i].identifier === b2[j].identifier) {
              // the identifier is always a decimal int
              inb2 = true;
              break;
            }
          }

          if (!inb2) {
            result.push(b1[i]);
          }
        }
      } // return an array, if both inputs were arrays


      if (Array.isArray(a1) && Array.isArray(a2)) {
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["generalize"])(result);
      } // return a matrix otherwise


      return new DenseMatrix(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["generalize"])(result));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setDistinct.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setDistinct.js ***!
  \*************************************************************/
/*! exports provided: createSetDistinct */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetDistinct", function() { return createSetDistinct; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setDistinct';
var dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];
var createSetDistinct = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      subset = _ref.subset,
      compareNatural = _ref.compareNatural,
      Index = _ref.Index,
      DenseMatrix = _ref.DenseMatrix;

  /**
   * Collect the distinct elements of a multiset.
   * A multi-dimension array will be converted to a single-dimension array before the operation.
   *
   * Syntax:
   *
   *    math.setDistinct(set)
   *
   * Examples:
   *
   *    math.setDistinct([1, 1, 1, 2, 2, 3])        // returns [1, 2, 3]
   *
   * See also:
   *
   *    setMultiplicity
   *
   * @param {Array | Matrix}    a  A multiset
   * @return {Array | Matrix}    A set containing the distinc elements of the multiset
   */
  return typed(name, {
    'Array | Matrix': function ArrayMatrix(a) {
      var result;

      if (subset(size(a), new Index(0)) === 0) {
        // if empty, return empty
        result = [];
      } else {
        var b = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a) ? a : a.toArray()).sort(compareNatural);
        result = [];
        result.push(b[0]);

        for (var i = 1; i < b.length; i++) {
          if (compareNatural(b[i], b[i - 1]) !== 0) {
            result.push(b[i]);
          }
        }
      } // return an array, if the input was an array


      if (Array.isArray(a)) {
        return result;
      } // return a matrix otherwise


      return new DenseMatrix(result);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setIntersect.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setIntersect.js ***!
  \**************************************************************/
/*! exports provided: createSetIntersect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetIntersect", function() { return createSetIntersect; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setIntersect';
var dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];
var createSetIntersect = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      subset = _ref.subset,
      compareNatural = _ref.compareNatural,
      Index = _ref.Index,
      DenseMatrix = _ref.DenseMatrix;

  /**
   * Create the intersection of two (multi)sets.
   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.
   *
   * Syntax:
   *
   *    math.setIntersect(set1, set2)
   *
   * Examples:
   *
   *    math.setIntersect([1, 2, 3, 4], [3, 4, 5, 6])            // returns [3, 4]
   *    math.setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [3, 4]
   *
   * See also:
   *
   *    setUnion, setDifference
   *
   * @param {Array | Matrix}    a1  A (multi)set
   * @param {Array | Matrix}    a2  A (multi)set
   * @return {Array | Matrix}    The intersection of two (multi)sets
   */
  return typed(name, {
    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {
      var result;

      if (subset(size(a1), new Index(0)) === 0 || subset(size(a2), new Index(0)) === 0) {
        // of any of them is empty, return empty
        result = [];
      } else {
        var b1 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["identify"])(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural));
        var b2 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["identify"])(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural));
        result = [];

        for (var i = 0; i < b1.length; i++) {
          for (var j = 0; j < b2.length; j++) {
            if (compareNatural(b1[i].value, b2[j].value) === 0 && b1[i].identifier === b2[j].identifier) {
              // the identifier is always a decimal int
              result.push(b1[i]);
              break;
            }
          }
        }
      } // return an array, if both inputs were arrays


      if (Array.isArray(a1) && Array.isArray(a2)) {
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["generalize"])(result);
      } // return a matrix otherwise


      return new DenseMatrix(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["generalize"])(result));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setIsSubset.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setIsSubset.js ***!
  \*************************************************************/
/*! exports provided: createSetIsSubset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetIsSubset", function() { return createSetIsSubset; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setIsSubset';
var dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index'];
var createSetIsSubset = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      subset = _ref.subset,
      compareNatural = _ref.compareNatural,
      Index = _ref.Index;

  /**
   * Check whether a (multi)set is a subset of another (multi)set. (Every element of set1 is the element of set2.)
   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.
   *
   * Syntax:
   *
   *    math.setIsSubset(set1, set2)
   *
   * Examples:
   *
   *    math.setIsSubset([1, 2], [3, 4, 5, 6])        // returns false
   *    math.setIsSubset([3, 4], [3, 4, 5, 6])        // returns true
   *
   * See also:
   *
   *    setUnion, setIntersect, setDifference
   *
   * @param {Array | Matrix}    a1  A (multi)set
   * @param {Array | Matrix}    a2  A (multi)set
   * @return {boolean}            true | false
   */
  return typed(name, {
    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {
      if (subset(size(a1), new Index(0)) === 0) {
        // empty is a subset of anything
        return true;
      } else if (subset(size(a2), new Index(0)) === 0) {
        // anything is not a subset of empty
        return false;
      }

      var b1 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["identify"])(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural));
      var b2 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["identify"])(Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural));
      var inb2;

      for (var i = 0; i < b1.length; i++) {
        inb2 = false;

        for (var j = 0; j < b2.length; j++) {
          if (compareNatural(b1[i].value, b2[j].value) === 0 && b1[i].identifier === b2[j].identifier) {
            // the identifier is always a decimal int
            inb2 = true;
            break;
          }
        }

        if (inb2 === false) {
          return false;
        }
      }

      return true;
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setMultiplicity.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setMultiplicity.js ***!
  \*****************************************************************/
/*! exports provided: createSetMultiplicity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetMultiplicity", function() { return createSetMultiplicity; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setMultiplicity';
var dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index'];
var createSetMultiplicity = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      subset = _ref.subset,
      compareNatural = _ref.compareNatural,
      Index = _ref.Index;

  /**
   * Count the multiplicity of an element in a multiset.
   * A multi-dimension array will be converted to a single-dimension array before the operation.
   *
   * Syntax:
   *
   *    math.setMultiplicity(element, set)
   *
   * Examples:
   *
   *    math.setMultiplicity(1, [1, 2, 2, 4])    // returns 1
   *    math.setMultiplicity(2, [1, 2, 2, 4])    // returns 2
   *
   * See also:
   *
   *    setDistinct, setSize
   *
   * @param {number | BigNumber | Fraction | Complex} e  An element in the multiset
   * @param {Array | Matrix}     a  A multiset
   * @return {number}            The number of how many times the multiset contains the element
   */
  return typed(name, {
    'number | BigNumber | Fraction | Complex, Array | Matrix': function numberBigNumberFractionComplexArrayMatrix(e, a) {
      if (subset(size(a), new Index(0)) === 0) {
        // if empty, return 0
        return 0;
      }

      var b = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a) ? a : a.toArray());
      var count = 0;

      for (var i = 0; i < b.length; i++) {
        if (compareNatural(b[i], e) === 0) {
          count++;
        }
      }

      return count;
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setPowerset.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setPowerset.js ***!
  \*************************************************************/
/*! exports provided: createSetPowerset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetPowerset", function() { return createSetPowerset; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setPowerset';
var dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index'];
var createSetPowerset = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      subset = _ref.subset,
      compareNatural = _ref.compareNatural,
      Index = _ref.Index;

  /**
   * Create the powerset of a (multi)set. (The powerset contains very possible subsets of a (multi)set.)
   * A multi-dimension array will be converted to a single-dimension array before the operation.
   *
   * Syntax:
   *
   *    math.setPowerset(set)
   *
   * Examples:
   *
   *    math.setPowerset([1, 2, 3])        // returns [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]
   *
   * See also:
   *
   *    setCartesian
   *
   * @param {Array | Matrix}    a  A (multi)set
   * @return {Array}    The powerset of the (multi)set
   */
  return typed(name, {
    'Array | Matrix': function ArrayMatrix(a) {
      if (subset(size(a), new Index(0)) === 0) {
        // if empty, return empty
        return [];
      }

      var b = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a) ? a : a.toArray()).sort(compareNatural);
      var result = [];
      var number = 0;

      while (number.toString(2).length <= b.length) {
        result.push(_subset(b, number.toString(2).split('').reverse()));
        number++;
      } // can not return a matrix, because of the different size of the subarrays


      return _sort(result);
    }
  }); // create subset

  function _subset(array, bitarray) {
    var result = [];

    for (var i = 0; i < bitarray.length; i++) {
      if (bitarray[i] === '1') {
        result.push(array[i]);
      }
    }

    return result;
  } // sort subsests by length


  function _sort(array) {
    var temp = [];

    for (var i = array.length - 1; i > 0; i--) {
      for (var j = 0; j < i; j++) {
        if (array[j].length > array[j + 1].length) {
          temp = array[j];
          array[j] = array[j + 1];
          array[j + 1] = temp;
        }
      }
    }

    return array;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setSize.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setSize.js ***!
  \*********************************************************/
/*! exports provided: createSetSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetSize", function() { return createSetSize; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setSize';
var dependencies = ['typed', 'compareNatural'];
var createSetSize = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      compareNatural = _ref.compareNatural;

  /**
   * Count the number of elements of a (multi)set. When a second parameter is 'true', count only the unique values.
   * A multi-dimension array will be converted to a single-dimension array before the operation.
   *
   * Syntax:
   *
   *    math.setSize(set)
   *    math.setSize(set, unique)
   *
   * Examples:
   *
   *    math.setSize([1, 2, 2, 4])          // returns 4
   *    math.setSize([1, 2, 2, 4], true)    // returns 3
   *
   * See also:
   *
   *    setUnion, setIntersect, setDifference
   *
   * @param {Array | Matrix}    a  A multiset
   * @return {number}            The number of elements of the (multi)set
   */
  return typed(name, {
    'Array | Matrix': function ArrayMatrix(a) {
      return Array.isArray(a) ? Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a).length : Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a.toArray()).length;
    },
    'Array | Matrix, boolean': function ArrayMatrixBoolean(a, unique) {
      if (unique === false || a.length === 0) {
        return Array.isArray(a) ? Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a).length : Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a.toArray()).length;
      } else {
        var b = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Array.isArray(a) ? a : a.toArray()).sort(compareNatural);
        var count = 1;

        for (var i = 1; i < b.length; i++) {
          if (compareNatural(b[i], b[i - 1]) !== 0) {
            count++;
          }
        }

        return count;
      }
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setSymDifference.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setSymDifference.js ***!
  \******************************************************************/
/*! exports provided: createSetSymDifference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetSymDifference", function() { return createSetSymDifference; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setSymDifference';
var dependencies = ['typed', 'size', 'concat', 'subset', 'setDifference', 'Index'];
var createSetSymDifference = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      concat = _ref.concat,
      subset = _ref.subset,
      setDifference = _ref.setDifference,
      Index = _ref.Index;

  /**
   * Create the symmetric difference of two (multi)sets.
   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.
   *
   * Syntax:
   *
   *    math.setSymDifference(set1, set2)
   *
   * Examples:
   *
   *    math.setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2, 5, 6]
   *    math.setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2, 5, 6]
   *
   * See also:
   *
   *    setUnion, setIntersect, setDifference
   *
   * @param {Array | Matrix}    a1  A (multi)set
   * @param {Array | Matrix}    a2  A (multi)set
   * @return {Array | Matrix}    The symmetric difference of two (multi)sets
   */
  return typed(name, {
    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {
      if (subset(size(a1), new Index(0)) === 0) {
        // if any of them is empty, return the other one
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a2);
      } else if (subset(size(a2), new Index(0)) === 0) {
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a1);
      }

      var b1 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a1);
      var b2 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a2);
      return concat(setDifference(b1, b2), setDifference(b2, b1));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/set/setUnion.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/set/setUnion.js ***!
  \**********************************************************/
/*! exports provided: createSetUnion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetUnion", function() { return createSetUnion; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'setUnion';
var dependencies = ['typed', 'size', 'concat', 'subset', 'setIntersect', 'setSymDifference', 'Index'];
var createSetUnion = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      size = _ref.size,
      concat = _ref.concat,
      subset = _ref.subset,
      setIntersect = _ref.setIntersect,
      setSymDifference = _ref.setSymDifference,
      Index = _ref.Index;

  /**
   * Create the union of two (multi)sets.
   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.
   *
   * Syntax:
   *
   *    math.setUnion(set1, set2)
   *
   * Examples:
   *
   *    math.setUnion([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2, 3, 4, 5, 6]
   *    math.setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2, 3, 4, 5, 6]
   *
   * See also:
   *
   *    setIntersect, setDifference
   *
   * @param {Array | Matrix}    a1  A (multi)set
   * @param {Array | Matrix}    a2  A (multi)set
   * @return {Array | Matrix}    The union of two (multi)sets
   */
  return typed(name, {
    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {
      if (subset(size(a1), new Index(0)) === 0) {
        // if any of them is empty, return the other one
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a2);
      } else if (subset(size(a2), new Index(0)) === 0) {
        return Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a1);
      }

      var b1 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a1);
      var b2 = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(a2);
      return concat(setSymDifference(b1, b2), setIntersect(b1, b2));
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/special/erf.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/special/erf.js ***!
  \*********************************************************/
/*! exports provided: createErf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createErf", function() { return createErf; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'erf';
var dependencies = ['typed'];
var createErf = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Compute the erf function of a value using a rational Chebyshev
   * approximations for different intervals of x.
   *
   * This is a translation of W. J. Cody's Fortran implementation from 1987
   * ( https://www.netlib.org/specfun/erf ). See the AMS publication
   * "Rational Chebyshev Approximations for the Error Function" by W. J. Cody
   * for an explanation of this process.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.erf(x)
   *
   * Examples:
   *
   *    math.erf(0.2)    // returns 0.22270258921047847
   *    math.erf(-0.5)   // returns -0.5204998778130465
   *    math.erf(4)      // returns 0.9999999845827421
   *
   * @param {number | Array | Matrix} x   A real number
   * @return {number | Array | Matrix}    The erf of `x`
   */
  return typed('name', {
    number: function number(x) {
      var y = Math.abs(x);

      if (y >= MAX_NUM) {
        return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["sign"])(x);
      }

      if (y <= THRESH) {
        return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * erf1(y);
      }

      if (y <= 4.0) {
        return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * (1 - erfc2(y));
      }

      return Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * (1 - erfc3(y));
    },
    'Array | Matrix': function ArrayMatrix(n) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(n, this);
    } // TODO: For complex numbers, use the approximation for the Faddeeva function
    //  from "More Efficient Computation of the Complex Error Function" (AMS)

  });
  /**
   * Approximates the error function erf() for x <= 0.46875 using this function:
   *               n
   * erf(x) = x * sum (p_j * x^(2j)) / (q_j * x^(2j))
   *              j=0
   */

  function erf1(y) {
    var ysq = y * y;
    var xnum = P[0][4] * ysq;
    var xden = ysq;
    var i;

    for (i = 0; i < 3; i += 1) {
      xnum = (xnum + P[0][i]) * ysq;
      xden = (xden + Q[0][i]) * ysq;
    }

    return y * (xnum + P[0][3]) / (xden + Q[0][3]);
  }
  /**
   * Approximates the complement of the error function erfc() for
   * 0.46875 <= x <= 4.0 using this function:
   *                       n
   * erfc(x) = e^(-x^2) * sum (p_j * x^j) / (q_j * x^j)
   *                      j=0
   */


  function erfc2(y) {
    var xnum = P[1][8] * y;
    var xden = y;
    var i;

    for (i = 0; i < 7; i += 1) {
      xnum = (xnum + P[1][i]) * y;
      xden = (xden + Q[1][i]) * y;
    }

    var result = (xnum + P[1][7]) / (xden + Q[1][7]);
    var ysq = parseInt(y * 16) / 16;
    var del = (y - ysq) * (y + ysq);
    return Math.exp(-ysq * ysq) * Math.exp(-del) * result;
  }
  /**
   * Approximates the complement of the error function erfc() for x > 4.0 using
   * this function:
   *
   * erfc(x) = (e^(-x^2) / x) * [ 1/sqrt(pi) +
   *               n
   *    1/(x^2) * sum (p_j * x^(-2j)) / (q_j * x^(-2j)) ]
   *              j=0
   */


  function erfc3(y) {
    var ysq = 1 / (y * y);
    var xnum = P[2][5] * ysq;
    var xden = ysq;
    var i;

    for (i = 0; i < 4; i += 1) {
      xnum = (xnum + P[2][i]) * ysq;
      xden = (xden + Q[2][i]) * ysq;
    }

    var result = ysq * (xnum + P[2][4]) / (xden + Q[2][4]);
    result = (SQRPI - result) / y;
    ysq = parseInt(y * 16) / 16;
    var del = (y - ysq) * (y + ysq);
    return Math.exp(-ysq * ysq) * Math.exp(-del) * result;
  }
});
/**
 * Upper bound for the first approximation interval, 0 <= x <= THRESH
 * @constant
 */

var THRESH = 0.46875;
/**
 * Constant used by W. J. Cody's Fortran77 implementation to denote sqrt(pi)
 * @constant
 */

var SQRPI = 5.6418958354775628695e-1;
/**
 * Coefficients for each term of the numerator sum (p_j) for each approximation
 * interval (see W. J. Cody's paper for more details)
 * @constant
 */

var P = [[3.16112374387056560e00, 1.13864154151050156e02, 3.77485237685302021e02, 3.20937758913846947e03, 1.85777706184603153e-1], [5.64188496988670089e-1, 8.88314979438837594e00, 6.61191906371416295e01, 2.98635138197400131e02, 8.81952221241769090e02, 1.71204761263407058e03, 2.05107837782607147e03, 1.23033935479799725e03, 2.15311535474403846e-8], [3.05326634961232344e-1, 3.60344899949804439e-1, 1.25781726111229246e-1, 1.60837851487422766e-2, 6.58749161529837803e-4, 1.63153871373020978e-2]];
/**
 * Coefficients for each term of the denominator sum (q_j) for each approximation
 * interval (see W. J. Cody's paper for more details)
 * @constant
 */

var Q = [[2.36012909523441209e01, 2.44024637934444173e02, 1.28261652607737228e03, 2.84423683343917062e03], [1.57449261107098347e01, 1.17693950891312499e02, 5.37181101862009858e02, 1.62138957456669019e03, 3.29079923573345963e03, 4.36261909014324716e03, 3.43936767414372164e03, 1.23033935480374942e03], [2.56852019228982242e00, 1.87295284992346047e00, 5.27905102951428412e-1, 6.05183413124413191e-2, 2.33520497626869185e-3]];
/**
 * Maximum/minimum safe numbers to input to erf() (in ES6+, this number is
 * Number.[MAX|MIN]_SAFE_INTEGER). erf() for all numbers beyond this limit will
 * return 1
 */

var MAX_NUM = Math.pow(2, 53);

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/mad.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/mad.js ***!
  \************************************************************/
/*! exports provided: createMad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMad", function() { return createMad; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");



var name = 'mad';
var dependencies = ['typed', 'abs', 'map', 'median', 'subtract'];
var createMad = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      abs = _ref.abs,
      map = _ref.map,
      median = _ref.median,
      subtract = _ref.subtract;

  /**
   * Compute the median absolute deviation of a matrix or a list with values.
   * The median absolute deviation is defined as the median of the absolute
   * deviations from the median.
   *
   * Syntax:
   *
   *     math.mad(a, b, c, ...)
   *     math.mad(A)
   *
   * Examples:
   *
   *     math.mad(10, 20, 30)             // returns 10
   *     math.mad([1, 2, 3])              // returns 1
   *     math.mad([[1, 2, 3], [4, 5, 6]]) // returns 1.5
   *
   * See also:
   *
   *     median, mean, std, abs
   *
   * @param {Array | Matrix} array
   *                        A single matrix or multiple scalar values.
   * @return {*} The median absolute deviation.
   */
  return typed(name, {
    // mad([a, b, c, d, ...])
    'Array | Matrix': _mad,
    // mad(a, b, c, d, ...)
    '...': function _(args) {
      return _mad(args);
    }
  });

  function _mad(array) {
    array = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(array.valueOf());

    if (array.length === 0) {
      throw new Error('Cannot calculate median absolute deviation (mad) of an empty array');
    }

    try {
      var med = median(array);
      return median(map(array, function (value) {
        return abs(subtract(value, med));
      }));
    } catch (err) {
      if (err instanceof TypeError && err.message.indexOf('median') !== -1) {
        throw new TypeError(err.message.replace('median', 'mad'));
      } else {
        throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'mad');
      }
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/max.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/max.js ***!
  \************************************************************/
/*! exports provided: createMax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMax", function() { return createMax; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");



var name = 'max';
var dependencies = ['typed', 'config', 'numeric', 'larger'];
var createMax = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      numeric = _ref.numeric,
      larger = _ref.larger;

  /**
   * Compute the maximum value of a matrix or a  list with values.
   * In case of a multi dimensional array, the maximum of the flattened array
   * will be calculated. When `dim` is provided, the maximum over the selected
   * dimension will be calculated. Parameter `dim` is zero-based.
   *
   * Syntax:
   *
   *     math.max(a, b, c, ...)
   *     math.max(A)
   *     math.max(A, dim)
   *
   * Examples:
   *
   *     math.max(2, 1, 4, 3)                  // returns 4
   *     math.max([2, 1, 4, 3])                // returns 4
   *
   *     // maximum over a specified dimension (zero-based)
   *     math.max([[2, 5], [4, 3], [1, 7]], 0) // returns [4, 7]
   *     math.max([[2, 5], [4, 3]], [1, 7], 1) // returns [5, 4, 7]
   *
   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1)    // returns 7.1
   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1)    // returns -4.5
   *
   * See also:
   *
   *    mean, median, min, prod, std, sum, variance
   *
   * @param {... *} args  A single matrix or or multiple scalar values
   * @return {*} The maximum value
   */
  return typed(name, {
    // max([a, b, c, d, ...])
    'Array | Matrix': _max,
    // max([a, b, c, d, ...], dim)
    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["reduce"])(array, dim.valueOf(), _largest);
    },
    // max(a, b, c, d, ...)
    '...': function _(args) {
      if (Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["containsCollections"])(args)) {
        throw new TypeError('Scalar values expected in function max');
      }

      return _max(args);
    }
  });
  /**
   * Return the largest of two values
   * @param {*} x
   * @param {*} y
   * @returns {*} Returns x when x is largest, or y when y is largest
   * @private
   */

  function _largest(x, y) {
    try {
      return larger(x, y) ? x : y;
    } catch (err) {
      throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'max', y);
    }
  }
  /**
   * Recursively calculate the maximum value in an n-dimensional array
   * @param {Array} array
   * @return {number} max
   * @private
   */


  function _max(array) {
    var res;
    Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(array, function (value) {
      try {
        if (isNaN(value) && typeof value === 'number') {
          res = NaN;
        } else if (res === undefined || larger(value, res)) {
          res = value;
        }
      } catch (err) {
        throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'max', value);
      }
    });

    if (res === undefined) {
      throw new Error('Cannot calculate max of an empty array');
    } // make sure returning numeric value: parse a string into a numeric value


    if (typeof res === 'string') {
      res = numeric(res, config.number);
    }

    return res;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/mean.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/mean.js ***!
  \*************************************************************/
/*! exports provided: createMean */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMean", function() { return createMean; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");




var name = 'mean';
var dependencies = ['typed', 'add', 'divide'];
var createMean = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      add = _ref.add,
      divide = _ref.divide;

  /**
   * Compute the mean value of matrix or a list with values.
   * In case of a multi dimensional array, the mean of the flattened array
   * will be calculated. When `dim` is provided, the maximum over the selected
   * dimension will be calculated. Parameter `dim` is zero-based.
   *
   * Syntax:
   *
   *     math.mean(a, b, c, ...)
   *     math.mean(A)
   *     math.mean(A, dim)
   *
   * Examples:
   *
   *     math.mean(2, 1, 4, 3)                     // returns 2.5
   *     math.mean([1, 2.7, 3.2, 4])               // returns 2.725
   *
   *     math.mean([[2, 5], [6, 3], [1, 7]], 0)    // returns [3, 5]
   *     math.mean([[2, 5], [6, 3], [1, 7]], 1)    // returns [3.5, 4.5, 4]
   *
   * See also:
   *
   *     median, min, max, sum, prod, std, variance
   *
   * @param {... *} args  A single matrix or or multiple scalar values
   * @return {*} The mean of all values
   */
  return typed(name, {
    // mean([a, b, c, d, ...])
    'Array | Matrix': _mean,
    // mean([a, b, c, d, ...], dim)
    'Array | Matrix, number | BigNumber': _nmeanDim,
    // mean(a, b, c, d, ...)
    '...': function _(args) {
      if (Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["containsCollections"])(args)) {
        throw new TypeError('Scalar values expected in function mean');
      }

      return _mean(args);
    }
  });
  /**
   * Calculate the mean value in an n-dimensional array, returning a
   * n-1 dimensional array
   * @param {Array} array
   * @param {number} dim
   * @return {number} mean
   * @private
   */

  function _nmeanDim(array, dim) {
    try {
      var sum = Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["reduce"])(array, dim, add);
      var s = Array.isArray(array) ? Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(array) : array.size();
      return divide(sum, s[dim]);
    } catch (err) {
      throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__["improveErrorMessage"])(err, 'mean');
    }
  }
  /**
   * Recursively calculate the mean value in an n-dimensional array
   * @param {Array} array
   * @return {number} mean
   * @private
   */


  function _mean(array) {
    var sum;
    var num = 0;
    Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(array, function (value) {
      try {
        sum = sum === undefined ? value : add(sum, value);
        num++;
      } catch (err) {
        throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__["improveErrorMessage"])(err, 'mean', value);
      }
    });

    if (num === 0) {
      throw new Error('Cannot calculate the mean of an empty array');
    }

    return divide(sum, num);
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/median.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/median.js ***!
  \***************************************************************/
/*! exports provided: createMedian */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMedian", function() { return createMedian; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");




var name = 'median';
var dependencies = ['typed', 'add', 'divide', 'compare', 'partitionSelect'];
var createMedian = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      add = _ref.add,
      divide = _ref.divide,
      compare = _ref.compare,
      partitionSelect = _ref.partitionSelect;

  /**
   * Recursively calculate the median of an n-dimensional array
   * @param {Array} array
   * @return {Number} median
   * @private
   */
  function _median(array) {
    try {
      array = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["flatten"])(array.valueOf());
      var num = array.length;

      if (num === 0) {
        throw new Error('Cannot calculate median of an empty array');
      }

      if (num % 2 === 0) {
        // even: return the average of the two middle values
        var mid = num / 2 - 1;
        var right = partitionSelect(array, mid + 1); // array now partitioned at mid + 1, take max of left part

        var left = array[mid];

        for (var i = 0; i < mid; ++i) {
          if (compare(array[i], left) > 0) {
            left = array[i];
          }
        }

        return middle2(left, right);
      } else {
        // odd: return the middle value
        var m = partitionSelect(array, (num - 1) / 2);
        return middle(m);
      }
    } catch (err) {
      throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__["improveErrorMessage"])(err, 'median');
    }
  } // helper function to type check the middle value of the array


  var middle = typed({
    'number | BigNumber | Complex | Unit': function numberBigNumberComplexUnit(value) {
      return value;
    }
  }); // helper function to type check the two middle value of the array

  var middle2 = typed({
    'number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit': function numberBigNumberComplexUnitNumberBigNumberComplexUnit(left, right) {
      return divide(add(left, right), 2);
    }
  });
  /**
   * Compute the median of a matrix or a list with values. The values are
   * sorted and the middle value is returned. In case of an even number of
   * values, the average of the two middle values is returned.
   * Supported types of values are: Number, BigNumber, Unit
   *
   * In case of a (multi dimensional) array or matrix, the median of all
   * elements will be calculated.
   *
   * Syntax:
   *
   *     math.median(a, b, c, ...)
   *     math.median(A)
   *
   * Examples:
   *
   *     math.median(5, 2, 7)        // returns 5
   *     math.median([3, -1, 5, 7])  // returns 4
   *
   * See also:
   *
   *     mean, min, max, sum, prod, std, variance, quantileSeq
   *
   * @param {... *} args  A single matrix or or multiple scalar values
   * @return {*} The median
   */

  return typed(name, {
    // median([a, b, c, d, ...])
    'Array | Matrix': _median,
    // median([a, b, c, d, ...], dim)
    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {
      // TODO: implement median(A, dim)
      throw new Error('median(A, dim) is not yet supported'); // return reduce(arguments[0], arguments[1], ...)
    },
    // median(a, b, c, d, ...)
    '...': function _(args) {
      if (Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["containsCollections"])(args)) {
        throw new TypeError('Scalar values expected in function median');
      }

      return _median(args);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/min.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/min.js ***!
  \************************************************************/
/*! exports provided: createMin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMin", function() { return createMin; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");



var name = 'min';
var dependencies = ['typed', 'config', 'numeric', 'smaller'];
var createMin = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      numeric = _ref.numeric,
      smaller = _ref.smaller;

  /**
   * Compute the minimum value of a matrix or a  list of values.
   * In case of a multi dimensional array, the minimum of the flattened array
   * will be calculated. When `dim` is provided, the minimum over the selected
   * dimension will be calculated. Parameter `dim` is zero-based.
   *
   * Syntax:
   *
   *     math.min(a, b, c, ...)
   *     math.min(A)
   *     math.min(A, dim)
   *
   * Examples:
   *
   *     math.min(2, 1, 4, 3)                  // returns 1
   *     math.min([2, 1, 4, 3])                // returns 1
   *
   *     // minimum over a specified dimension (zero-based)
   *     math.min([[2, 5], [4, 3], [1, 7]], 0) // returns [1, 3]
   *     math.min([[2, 5], [4, 3], [1, 7]], 1) // returns [2, 3, 1]
   *
   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1)    // returns 7.1
   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1)    // returns -4.5
   *
   * See also:
   *
   *    mean, median, max, prod, std, sum, variance
   *
   * @param {... *} args  A single matrix or or multiple scalar values
   * @return {*} The minimum value
   */
  return typed(name, {
    // min([a, b, c, d, ...])
    'Array | Matrix': _min,
    // min([a, b, c, d, ...], dim)
    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["reduce"])(array, dim.valueOf(), _smallest);
    },
    // min(a, b, c, d, ...)
    '...': function _(args) {
      if (Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["containsCollections"])(args)) {
        throw new TypeError('Scalar values expected in function min');
      }

      return _min(args);
    }
  });
  /**
   * Return the smallest of two values
   * @param {*} x
   * @param {*} y
   * @returns {*} Returns x when x is smallest, or y when y is smallest
   * @private
   */

  function _smallest(x, y) {
    try {
      return smaller(x, y) ? x : y;
    } catch (err) {
      throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'min', y);
    }
  }
  /**
   * Recursively calculate the minimum value in an n-dimensional array
   * @param {Array} array
   * @return {number} min
   * @private
   */


  function _min(array) {
    var min;
    Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(array, function (value) {
      try {
        if (isNaN(value) && typeof value === 'number') {
          min = NaN;
        } else if (min === undefined || smaller(value, min)) {
          min = value;
        }
      } catch (err) {
        throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'min', value);
      }
    });

    if (min === undefined) {
      throw new Error('Cannot calculate min of an empty array');
    } // make sure returning numeric value: parse a string into a numeric value


    if (typeof min === 'string') {
      min = numeric(min, config.number);
    }

    return min;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/mode.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/mode.js ***!
  \*************************************************************/
/*! exports provided: createMode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMode", function() { return createMode; });
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'mode';
var dependencies = ['typed', 'isNaN', 'isNumeric'];
var createMode = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      isNaN = _ref.isNaN,
      isNumeric = _ref.isNumeric;

  /**
  * Computes the mode of a set of numbers or a list with values(numbers or characters).
  * If there are more than one modes, it returns a list of those values.
  *
  * Syntax:
  *
  *     math.mode(a, b, c, ...)
  *     math.mode(A)
  *
  * Examples:
  *
  *     math.mode(2, 1, 4, 3, 1)                            // returns [1]
  *     math.mode([1, 2.7, 3.2, 4, 2.7])                    // returns [2.7]
  *     math.mode(1, 4, 6, 1, 6)                             // returns [1, 6]
  *     math.mode('a','a','b','c')                           // returns ["a"]
  *     math.mode(1, 1.5, 'abc')                             // returns [1, 1.5, "abc"]
  *
  * See also:
  *
  *     median,
  *     mean
  *
  * @param {... *} args  A single matrix
  * @return {*} The mode of all values
  */
  return typed(name, {
    'Array | Matrix': _mode,
    '...': function _(args) {
      return _mode(args);
    }
  });
  /**
   * Calculates the mode in an 1-dimensional array
   * @param {Array} values
   * @return {Array} mode
   * @private
   */

  function _mode(values) {
    values = Object(_utils_array__WEBPACK_IMPORTED_MODULE_0__["flatten"])(values.valueOf());
    var num = values.length;

    if (num === 0) {
      throw new Error('Cannot calculate mode of an empty array');
    }

    var count = {};
    var mode = [];
    var max = 0;

    for (var i = 0; i < values.length; i++) {
      var value = values[i];

      if (isNumeric(value) && isNaN(value)) {
        throw new Error('Cannot calculate mode of an array containing NaN values');
      }

      if (!(value in count)) {
        count[value] = 0;
      }

      count[value]++;

      if (count[value] === max) {
        mode.push(value);
      } else if (count[value] > max) {
        max = count[value];
        mode = [value];
      }
    }

    return mode;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/prod.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/prod.js ***!
  \*************************************************************/
/*! exports provided: createProd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createProd", function() { return createProd; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");



var name = 'prod';
var dependencies = ['typed', 'config', 'multiplyScalar', 'numeric'];
var createProd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      multiplyScalar = _ref.multiplyScalar,
      numeric = _ref.numeric;

  /**
   * Compute the product of a matrix or a list with values.
   * In case of a (multi dimensional) array or matrix, the sum of all
   * elements will be calculated.
   *
   * Syntax:
   *
   *     math.prod(a, b, c, ...)
   *     math.prod(A)
   *
   * Examples:
   *
   *     math.multiply(2, 3)           // returns 6
   *     math.prod(2, 3)               // returns 6
   *     math.prod(2, 3, 4)            // returns 24
   *     math.prod([2, 3, 4])          // returns 24
   *     math.prod([[2, 5], [4, 3]])   // returns 120
   *
   * See also:
   *
   *    mean, median, min, max, sum, std, variance
   *
   * @param {... *} args  A single matrix or or multiple scalar values
   * @return {*} The product of all values
   */
  return typed(name, {
    // prod([a, b, c, d, ...])
    'Array | Matrix': _prod,
    // prod([a, b, c, d, ...], dim)
    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {
      // TODO: implement prod(A, dim)
      throw new Error('prod(A, dim) is not yet supported'); // return reduce(arguments[0], arguments[1], math.prod)
    },
    // prod(a, b, c, d, ...)
    '...': function _(args) {
      return _prod(args);
    }
  });
  /**
   * Recursively calculate the product of an n-dimensional array
   * @param {Array} array
   * @return {number} prod
   * @private
   */

  function _prod(array) {
    var prod;
    Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(array, function (value) {
      try {
        prod = prod === undefined ? value : multiplyScalar(prod, value);
      } catch (err) {
        throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'prod', value);
      }
    }); // make sure returning numeric value: parse a string into a numeric value

    if (typeof prod === 'string') {
      prod = numeric(prod, config.number);
    }

    if (prod === undefined) {
      throw new Error('Cannot calculate prod of an empty array');
    }

    return prod;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/quantileSeq.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/quantileSeq.js ***!
  \********************************************************************/
/*! exports provided: createQuantileSeq */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createQuantileSeq", function() { return createQuantileSeq; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'quantileSeq';
var dependencies = ['typed', 'add', 'multiply', 'partitionSelect', 'compare'];
var createQuantileSeq = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      add = _ref.add,
      multiply = _ref.multiply,
      partitionSelect = _ref.partitionSelect,
      compare = _ref.compare;

  /**
   * Compute the prob order quantile of a matrix or a list with values.
   * The sequence is sorted and the middle value is returned.
   * Supported types of sequence values are: Number, BigNumber, Unit
   * Supported types of probability are: Number, BigNumber
   *
   * In case of a (multi dimensional) array or matrix, the prob order quantile
   * of all elements will be calculated.
   *
   * Syntax:
   *
   *     math.quantileSeq(A, prob[, sorted])
   *     math.quantileSeq(A, [prob1, prob2, ...][, sorted])
   *     math.quantileSeq(A, N[, sorted])
   *
   * Examples:
   *
   *     math.quantileSeq([3, -1, 5, 7], 0.5)         // returns 4
   *     math.quantileSeq([3, -1, 5, 7], [1/3, 2/3])  // returns [3, 5]
   *     math.quantileSeq([3, -1, 5, 7], 2)           // returns [3, 5]
   *     math.quantileSeq([-1, 3, 5, 7], 0.5, true)   // returns 4
   *
   * See also:
   *
   *     median, mean, min, max, sum, prod, std, variance
   *
   * @param {Array, Matrix} data                A single matrix or Array
   * @param {Number, BigNumber, Array} probOrN  prob is the order of the quantile, while N is
   *                                            the amount of evenly distributed steps of
   *                                            probabilities; only one of these options can
   *                                            be provided
   * @param {Boolean} sorted=false              is data sorted in ascending order
   * @return {Number, BigNumber, Unit, Array}   Quantile(s)
   */
  function quantileSeq(data, probOrN, sorted) {
    var probArr, dataArr, one;

    if (arguments.length < 2 || arguments.length > 3) {
      throw new SyntaxError('Function quantileSeq requires two or three parameters');
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(data)) {
      sorted = sorted || false;

      if (typeof sorted === 'boolean') {
        dataArr = data.valueOf();

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(probOrN)) {
          if (probOrN < 0) {
            throw new Error('N/prob must be non-negative');
          }

          if (probOrN <= 1) {
            // quantileSeq([a, b, c, d, ...], prob[,sorted])
            return _quantileSeq(dataArr, probOrN, sorted);
          }

          if (probOrN > 1) {
            // quantileSeq([a, b, c, d, ...], N[,sorted])
            if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(probOrN)) {
              throw new Error('N must be a positive integer');
            }

            var nPlusOne = probOrN + 1;
            probArr = new Array(probOrN);

            for (var i = 0; i < probOrN;) {
              probArr[i] = _quantileSeq(dataArr, ++i / nPlusOne, sorted);
            }

            return probArr;
          }
        }

        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(probOrN)) {
          var BigNumber = probOrN.constructor;

          if (probOrN.isNegative()) {
            throw new Error('N/prob must be non-negative');
          }

          one = new BigNumber(1);

          if (probOrN.lte(one)) {
            // quantileSeq([a, b, c, d, ...], prob[,sorted])
            return new BigNumber(_quantileSeq(dataArr, probOrN, sorted));
          }

          if (probOrN.gt(one)) {
            // quantileSeq([a, b, c, d, ...], N[,sorted])
            if (!probOrN.isInteger()) {
              throw new Error('N must be a positive integer');
            } // largest possible Array length is 2^32-1
            // 2^32 < 10^15, thus safe conversion guaranteed


            var intN = probOrN.toNumber();

            if (intN > 4294967295) {
              throw new Error('N must be less than or equal to 2^32-1, as that is the maximum length of an Array');
            }

            var _nPlusOne = new BigNumber(intN + 1);

            probArr = new Array(intN);

            for (var _i = 0; _i < intN;) {
              probArr[_i] = new BigNumber(_quantileSeq(dataArr, new BigNumber(++_i).div(_nPlusOne), sorted));
            }

            return probArr;
          }
        }

        if (Array.isArray(probOrN)) {
          // quantileSeq([a, b, c, d, ...], [prob1, prob2, ...][,sorted])
          probArr = new Array(probOrN.length);

          for (var _i2 = 0; _i2 < probArr.length; ++_i2) {
            var currProb = probOrN[_i2];

            if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(currProb)) {
              if (currProb < 0 || currProb > 1) {
                throw new Error('Probability must be between 0 and 1, inclusive');
              }
            } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(currProb)) {
              one = new currProb.constructor(1);

              if (currProb.isNegative() || currProb.gt(one)) {
                throw new Error('Probability must be between 0 and 1, inclusive');
              }
            } else {
              throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function
            }

            probArr[_i2] = _quantileSeq(dataArr, currProb, sorted);
          }

          return probArr;
        }

        throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function
      }

      throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function
    }

    throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function
  }
  /**
   * Calculate the prob order quantile of an n-dimensional array.
   *
   * @param {Array} array
   * @param {Number, BigNumber} prob
   * @param {Boolean} sorted
   * @return {Number, BigNumber, Unit} prob order quantile
   * @private
   */


  function _quantileSeq(array, prob, sorted) {
    var flat = Object(_utils_array__WEBPACK_IMPORTED_MODULE_2__["flatten"])(array);
    var len = flat.length;

    if (len === 0) {
      throw new Error('Cannot calculate quantile of an empty sequence');
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(prob)) {
      var _index = prob * (len - 1);

      var _fracPart = _index % 1;

      if (_fracPart === 0) {
        var value = sorted ? flat[_index] : partitionSelect(flat, _index);
        validate(value);
        return value;
      }

      var _integerPart = Math.floor(_index);

      var _left;

      var _right;

      if (sorted) {
        _left = flat[_integerPart];
        _right = flat[_integerPart + 1];
      } else {
        _right = partitionSelect(flat, _integerPart + 1); // max of partition is kth largest

        _left = flat[_integerPart];

        for (var i = 0; i < _integerPart; ++i) {
          if (compare(flat[i], _left) > 0) {
            _left = flat[i];
          }
        }
      }

      validate(_left);
      validate(_right); // Q(prob) = (1-f)*A[floor(index)] + f*A[floor(index)+1]

      return add(multiply(_left, 1 - _fracPart), multiply(_right, _fracPart));
    } // If prob is a BigNumber


    var index = prob.times(len - 1);

    if (index.isInteger()) {
      index = index.toNumber();

      var _value = sorted ? flat[index] : partitionSelect(flat, index);

      validate(_value);
      return _value;
    }

    var integerPart = index.floor();
    var fracPart = index.minus(integerPart);
    var integerPartNumber = integerPart.toNumber();
    var left;
    var right;

    if (sorted) {
      left = flat[integerPartNumber];
      right = flat[integerPartNumber + 1];
    } else {
      right = partitionSelect(flat, integerPartNumber + 1); // max of partition is kth largest

      left = flat[integerPartNumber];

      for (var _i3 = 0; _i3 < integerPartNumber; ++_i3) {
        if (compare(flat[_i3], left) > 0) {
          left = flat[_i3];
        }
      }
    }

    validate(left);
    validate(right); // Q(prob) = (1-f)*A[floor(index)] + f*A[floor(index)+1]

    var one = new fracPart.constructor(1);
    return add(multiply(left, one.minus(fracPart)), multiply(right, fracPart));
  }
  /**
   * Check if array value types are valid, throw error otherwise.
   * @param {number | BigNumber | Unit} x
   * @param {number | BigNumber | Unit} x
   * @private
   */


  var validate = typed({
    'number | BigNumber | Unit': function numberBigNumberUnit(x) {
      return x;
    }
  });
  return quantileSeq;
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/std.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/std.js ***!
  \************************************************************/
/*! exports provided: createStd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStd", function() { return createStd; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'std';
var dependencies = ['typed', 'sqrt', 'variance'];
var createStd = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      sqrt = _ref.sqrt,
      variance = _ref.variance;

  /**
   * Compute the standard deviation of a matrix or a  list with values.
   * The standard deviations is defined as the square root of the variance:
   * `std(A) = sqrt(variance(A))`.
   * In case of a (multi dimensional) array or matrix, the standard deviation
   * over all elements will be calculated by default, unless an axis is specified
   * in which case the standard deviation will be computed along that axis.
   *
   * Additionally, it is possible to compute the standard deviation along the rows
   * or columns of a matrix by specifying the dimension as the second argument.
   *
   * Optionally, the type of normalization can be specified as the final
   * parameter. The parameter `normalization` can be one of the following values:
   *
   * - 'unbiased' (default) The sum of squared errors is divided by (n - 1)
   * - 'uncorrected'        The sum of squared errors is divided by n
   * - 'biased'             The sum of squared errors is divided by (n + 1)
   *
   *
   * Syntax:
   *
   *     math.std(a, b, c, ...)
   *     math.std(A)
   *     math.std(A, normalization)
   *     math.std(A, dimension)
   *     math.std(A, dimension, normalization)
   *
   * Examples:
   *
   *     math.std(2, 4, 6)                     // returns 2
   *     math.std([2, 4, 6, 8])                // returns 2.581988897471611
   *     math.std([2, 4, 6, 8], 'uncorrected') // returns 2.23606797749979
   *     math.std([2, 4, 6, 8], 'biased')      // returns 2
   *
   *     math.std([[1, 2, 3], [4, 5, 6]])      // returns 1.8708286933869707
   *     math.std([[1, 2, 3], [4, 6, 8]], 0)    // returns [2.1213203435596424, 2.8284271247461903, 3.5355339059327378]
   *     math.std([[1, 2, 3], [4, 6, 8]], 1)    // returns [1, 2]
   *     math.std([[1, 2, 3], [4, 6, 8]], 1, 'biased') // returns [0.7071067811865476, 1.4142135623730951]
   *
   * See also:
   *
   *    mean, median, max, min, prod, sum, variance
   *
   * @param {Array | Matrix} array
   *                        A single matrix or or multiple scalar values
   * @param {string} [normalization='unbiased']
   *                        Determines how to normalize the variance.
   *                        Choose 'unbiased' (default), 'uncorrected', or 'biased'.
   * @param dimension {number | BigNumber}
   *                        Determines the axis to compute the standard deviation for a matrix
   * @return {*} The standard deviation
   */
  return typed(name, {
    // std([a, b, c, d, ...])
    'Array | Matrix': _std,
    // std([a, b, c, d, ...], normalization)
    'Array | Matrix, string': _std,
    // std([a, b, c, c, ...], dim)
    'Array | Matrix, number | BigNumber': _std,
    // std([a, b, c, c, ...], dim, normalization)
    'Array | Matrix, number | BigNumber, string': _std,
    // std(a, b, c, d, ...)
    '...': function _(args) {
      return _std(args);
    }
  });

  function _std(array, normalization) {
    if (array.length === 0) {
      throw new SyntaxError('Function std requires one or more parameters (0 provided)');
    }

    try {
      return sqrt(variance.apply(null, arguments));
    } catch (err) {
      if (err instanceof TypeError && err.message.indexOf(' variance') !== -1) {
        throw new TypeError(err.message.replace(' variance', ' std'));
      } else {
        throw err;
      }
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/sum.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/sum.js ***!
  \************************************************************/
/*! exports provided: createSum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSum", function() { return createSum; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");



var name = 'sum';
var dependencies = ['typed', 'config', 'add', 'numeric'];
var createSum = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      add = _ref.add,
      numeric = _ref.numeric;

  /**
   * Compute the sum of a matrix or a list with values.
   * In case of a (multi dimensional) array or matrix, the sum of all
   * elements will be calculated.
   *
   * Syntax:
   *
   *     math.sum(a, b, c, ...)
   *     math.sum(A)
   *
   * Examples:
   *
   *     math.sum(2, 1, 4, 3)               // returns 10
   *     math.sum([2, 1, 4, 3])             // returns 10
   *     math.sum([[2, 5], [4, 3], [1, 7]]) // returns 22
   *
   * See also:
   *
   *    mean, median, min, max, prod, std, variance
   *
   * @param {... *} args  A single matrix or or multiple scalar values
   * @return {*} The sum of all values
   */
  return typed(name, {
    // sum([a, b, c, d, ...])
    'Array | Matrix': _sum,
    // sum([a, b, c, d, ...], dim)
    'Array | Matrix, number | BigNumber': _nsumDim,
    // sum(a, b, c, d, ...)
    '...': function _(args) {
      if (Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["containsCollections"])(args)) {
        throw new TypeError('Scalar values expected in function sum');
      }

      return _sum(args);
    }
  });
  /**
   * Recursively calculate the sum of an n-dimensional array
   * @param {Array | Matrix} array
   * @return {number} sum
   * @private
   */

  function _sum(array) {
    var sum;
    Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(array, function (value) {
      try {
        sum = sum === undefined ? value : add(sum, value);
      } catch (err) {
        throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'sum', value);
      }
    }); // make sure returning numeric value: parse a string into a numeric value

    if (sum === undefined) {
      sum = numeric(0, config.number);
    }

    if (typeof sum === 'string') {
      sum = numeric(sum, config.number);
    }

    return sum;
  }

  function _nsumDim(array, dim) {
    try {
      var sum = Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["reduce"])(array, dim, add);
      return sum;
    } catch (err) {
      throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_2__["improveErrorMessage"])(err, 'sum');
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js ***!
  \**********************************************************************************/
/*! exports provided: improveErrorMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "improveErrorMessage", function() { return improveErrorMessage; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");

/**
 * Improve error messages for statistics functions. Errors are typically
 * thrown in an internally used function like larger, causing the error
 * not to mention the function (like max) which is actually used by the user.
 *
 * @param {Error} err
 * @param {String} fnName
 * @param {*} [value]
 * @return {Error}
 */

function improveErrorMessage(err, fnName, value) {
  // TODO: add information with the index (also needs transform in expression parser)
  var details;

  if (String(err).indexOf('Unexpected type') !== -1) {
    details = arguments.length > 2 ? ' (type: ' + Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(value) + ', value: ' + JSON.stringify(value) + ')' : ' (type: ' + err.data.actual + ')';
    return new TypeError('Cannot calculate ' + fnName + ', unexpected type of argument' + details);
  }

  if (String(err).indexOf('complex numbers') !== -1) {
    details = arguments.length > 2 ? ' (type: ' + Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(value) + ', value: ' + JSON.stringify(value) + ')' : '';
    return new TypeError('Cannot calculate ' + fnName + ', no ordering relation is defined for complex numbers' + details);
  }

  return err;
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/statistics/variance.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/statistics/variance.js ***!
  \*****************************************************************/
/*! exports provided: createVariance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createVariance", function() { return createVariance; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/improveErrorMessage */ "../node_modules/mathjs/es/function/statistics/utils/improveErrorMessage.js");




var DEFAULT_NORMALIZATION = 'unbiased';
var name = 'variance';
var dependencies = ['typed', 'add', 'subtract', 'multiply', 'divide', 'apply', 'isNaN'];
var createVariance = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      add = _ref.add,
      subtract = _ref.subtract,
      multiply = _ref.multiply,
      divide = _ref.divide,
      apply = _ref.apply,
      isNaN = _ref.isNaN;

  /**
   * Compute the variance of a matrix or a  list with values.
   * In case of a (multi dimensional) array or matrix, the variance over all
   * elements will be calculated.
   *
   * Additionally, it is possible to compute the variance along the rows
   * or columns of a matrix by specifying the dimension as the second argument.
   *
   * Optionally, the type of normalization can be specified as the final
   * parameter. The parameter `normalization` can be one of the following values:
   *
   * - 'unbiased' (default) The sum of squared errors is divided by (n - 1)
   * - 'uncorrected'        The sum of squared errors is divided by n
   * - 'biased'             The sum of squared errors is divided by (n + 1)
   *
   *
   * Note that older browser may not like the variable name `var`. In that
   * case, the function can be called as `math['var'](...)` instead of
   * `math.var(...)`.
   *
   * Syntax:
   *
   *     math.variance(a, b, c, ...)
   *     math.variance(A)
   *     math.variance(A, normalization)
   *     math.variance(A, dimension)
   *     math.variance(A, dimension, normalization)
   *
   * Examples:
   *
   *     math.variance(2, 4, 6)                     // returns 4
   *     math.variance([2, 4, 6, 8])                // returns 6.666666666666667
   *     math.variance([2, 4, 6, 8], 'uncorrected') // returns 5
   *     math.variance([2, 4, 6, 8], 'biased')      // returns 4
   *
   *     math.variance([[1, 2, 3], [4, 5, 6]])      // returns 3.5
   *     math.variance([[1, 2, 3], [4, 6, 8]], 0)   // returns [4.5, 8, 12.5]
   *     math.variance([[1, 2, 3], [4, 6, 8]], 1)   // returns [1, 4]
   *     math.variance([[1, 2, 3], [4, 6, 8]], 1, 'biased') // returns [0.5, 2]
   *
   * See also:
   *
   *    mean, median, max, min, prod, std, sum
   *
   * @param {Array | Matrix} array
   *                        A single matrix or or multiple scalar values
   * @param {string} [normalization='unbiased']
   *                        Determines how to normalize the variance.
   *                        Choose 'unbiased' (default), 'uncorrected', or 'biased'.
   * @param dimension {number | BigNumber}
   *                        Determines the axis to compute the variance for a matrix
   * @return {*} The variance
   */
  return typed(name, {
    // variance([a, b, c, d, ...])
    'Array | Matrix': function ArrayMatrix(array) {
      return _var(array, DEFAULT_NORMALIZATION);
    },
    // variance([a, b, c, d, ...], normalization)
    'Array | Matrix, string': _var,
    // variance([a, b, c, c, ...], dim)
    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {
      return _varDim(array, dim, DEFAULT_NORMALIZATION);
    },
    // variance([a, b, c, c, ...], dim, normalization)
    'Array | Matrix, number | BigNumber, string': _varDim,
    // variance(a, b, c, d, ...)
    '...': function _(args) {
      return _var(args, DEFAULT_NORMALIZATION);
    }
  });
  /**
   * Recursively calculate the variance of an n-dimensional array
   * @param {Array} array
   * @param {string} normalization
   *                        Determines how to normalize the variance:
   *                        - 'unbiased'    The sum of squared errors is divided by (n - 1)
   *                        - 'uncorrected' The sum of squared errors is divided by n
   *                        - 'biased'      The sum of squared errors is divided by (n + 1)
   * @return {number | BigNumber} variance
   * @private
   */

  function _var(array, normalization) {
    var sum = 0;
    var num = 0;

    if (array.length === 0) {
      throw new SyntaxError('Function variance requires one or more parameters (0 provided)');
    } // calculate the mean and number of elements


    Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(array, function (value) {
      try {
        sum = add(sum, value);
        num++;
      } catch (err) {
        throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__["improveErrorMessage"])(err, 'variance', value);
      }
    });
    if (num === 0) throw new Error('Cannot calculate variance of an empty array');
    var mean = divide(sum, num); // calculate the variance

    sum = 0;
    Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepForEach"])(array, function (value) {
      var diff = subtract(value, mean);
      sum = add(sum, multiply(diff, diff));
    });

    if (isNaN(sum)) {
      return sum;
    }

    switch (normalization) {
      case 'uncorrected':
        return divide(sum, num);

      case 'biased':
        return divide(sum, num + 1);

      case 'unbiased':
        {
          var zero = Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isBigNumber"])(sum) ? sum.mul(0) : 0;
          return num === 1 ? zero : divide(sum, num - 1);
        }

      default:
        throw new Error('Unknown normalization "' + normalization + '". ' + 'Choose "unbiased" (default), "uncorrected", or "biased".');
    }
  }

  function _varDim(array, dim, normalization) {
    try {
      if (array.length === 0) {
        throw new SyntaxError('Function variance requires one or more parameters (0 provided)');
      }

      return apply(array, dim, function (x) {
        return _var(x, normalization);
      });
    } catch (err) {
      throw Object(_utils_improveErrorMessage__WEBPACK_IMPORTED_MODULE_3__["improveErrorMessage"])(err, 'variance');
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/string/format.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/string/format.js ***!
  \***********************************************************/
/*! exports provided: createFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFormat", function() { return createFormat; });
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'format';
var dependencies = ['typed'];
var createFormat = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Format a value of any type into a string.
   *
   * Syntax:
   *
   *    math.format(value)
   *    math.format(value, options)
   *    math.format(value, precision)
   *    math.format(value, callback)
   *
   * Where:
   *
   *  - `value: *`
   *    The value to be formatted
   *  - `options: Object`
   *    An object with formatting options. Available options:
   *    - `notation: string`
   *      Number notation. Choose from:
   *      - 'fixed'
   *        Always use regular number notation.
   *        For example '123.40' and '14000000'
   *      - 'exponential'
   *        Always use exponential notation.
   *        For example '1.234e+2' and '1.4e+7'
   *      - 'engineering'
   *        Always use engineering notation: always have exponential notation,
   *        and select the exponent to be a multiple of 3.
   *        For example '123.4e+0' and '14.0e+6'
   *      - 'auto' (default)
   *        Regular number notation for numbers having an absolute value between
   *        `lower` and `upper` bounds, and uses exponential notation elsewhere.
   *        Lower bound is included, upper bound is excluded.
   *        For example '123.4' and '1.4e7'.
   *    - `precision: number`
   *      A number between 0 and 16 to round the digits of the number. In case
   *      of notations 'exponential', 'engineering', and 'auto', `precision`
   *      defines the total number of significant digits returned.
   *      In case of notation 'fixed', `precision` defines the number of
   *      significant digits after the decimal point.
   *      `precision` is undefined by default.
   *    - `lowerExp: number`
   *      Exponent determining the lower boundary for formatting a value with
   *      an exponent when `notation='auto`. Default value is `-3`.
   *    - `upperExp: number`
   *      Exponent determining the upper boundary for formatting a value with
   *      an exponent when `notation='auto`. Default value is `5`.
   *    - `fraction: string`. Available values: 'ratio' (default) or 'decimal'.
   *      For example `format(fraction(1, 3))` will output '1/3' when 'ratio' is
   *      configured, and will output `0.(3)` when 'decimal' is configured.
   * - `callback: function`
   *   A custom formatting function, invoked for all numeric elements in `value`,
   *   for example all elements of a matrix, or the real and imaginary
   *   parts of a complex number. This callback can be used to override the
   *   built-in numeric notation with any type of formatting. Function `callback`
   *   is called with `value` as parameter and must return a string.
   *
   * When `value` is an Object:
   *
   * - When the object contains a property `format` being a function, this function
   *   is invoked as `value.format(options)` and the result is returned.
   * - When the object has its own `toString` method, this method is invoked
   *   and the result is returned.
   * - In other cases the function will loop over all object properties and
   *   return JSON object notation like '{"a": 2, "b": 3}'.
   *
   * When value is a function:
   *
   * - When the function has a property `syntax`, it returns this
   *   syntax description.
   * - In other cases, a string `'function'` is returned.
   *
   * Examples:
   *
   *    math.format(6.4)                                        // returns '6.4'
   *    math.format(1240000)                                    // returns '1.24e6'
   *    math.format(1/3)                                        // returns '0.3333333333333333'
   *    math.format(1/3, 3)                                     // returns '0.333'
   *    math.format(21385, 2)                                   // returns '21000'
   *    math.format(12e8, {notation: 'fixed'})                  // returns '1200000000'
   *    math.format(2.3,  {notation: 'fixed', precision: 4})    // returns '2.3000'
   *    math.format(52.8, {notation: 'exponential'})            // returns '5.28e+1'
   *    math.format(12400,{notation: 'engineering'})            // returns '12.400e+3'
   *    math.format(2000, {lowerExp: -2, upperExp: 2})          // returns '2e+3'
   *
   *    function formatCurrency(value) {
   *      // return currency notation with two digits:
   *      return '$' + value.toFixed(2)
   *
   *      // you could also use math.format inside the callback:
   *      // return '$' + math.format(value, {notation: 'fixed', precision: 2})
   *    }
   *    math.format([2.1, 3, 0.016], formatCurrency}            // returns '[$2.10, $3.00, $0.02]'
   *
   * See also:
   *
   *    print
   *
   * @param {*} value                               Value to be stringified
   * @param {Object | Function | number} [options]  Formatting options
   * @return {string} The formatted value
   */
  return typed(name, {
    any: _utils_string__WEBPACK_IMPORTED_MODULE_0__["format"],
    'any, Object | function | number': _utils_string__WEBPACK_IMPORTED_MODULE_0__["format"]
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/string/print.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/string/print.js ***!
  \**********************************************************/
/*! exports provided: createPrint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPrint", function() { return createPrint; });
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'print';
var dependencies = ['typed'];
var createPrint = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Interpolate values into a string template.
   *
   * Syntax:
   *
   *     math.print(template, values)
   *     math.print(template, values, precision)
   *     math.print(template, values, options)
   *
   * Example usage:
   *
   *     // the following outputs: 'Lucy is 5 years old'
   *     math.print('Lucy is $age years old', {age: 5})
   *
   *     // the following outputs: 'The value of pi is 3.141592654'
   *     math.print('The value of pi is $pi', {pi: math.pi}, 10)
   *
   *     // the following outputs: 'hello Mary! The date is 2013-03-23'
   *     math.print('Hello $user.name! The date is $date', {
   *       user: {
   *         name: 'Mary',
   *       },
   *       date: new Date(2013, 2, 23).toISOString().substring(0, 10)
   *     })
   *
   *     // the following outputs: 'My favorite fruits are apples and bananas !'
   *     math.print('My favorite fruits are $0 and $1 !', [
   *       'apples',
   *       'bananas'
   *     ])
   *
   * See also:
   *
   *     format
   *
   * @param {string} template           A string containing variable placeholders.
   * @param {Object | Array | Matrix}   values An object or array containing variables
   *                                    which will be filled in in the template.
   * @param {number | Object} [options] Formatting options,
   *                                    or the number of digits to format numbers.
   *                                    See function math.format for a description
   *                                    of all options.
   * @return {string} Interpolated string
   */
  return typed(name, {
    // note: Matrix will be converted automatically to an Array
    'string, Object | Array': _print,
    'string, Object | Array, number | Object': _print
  });
});
/**
 * Interpolate values into a string template.
 * @param {string} template
 * @param {Object} values
 * @param {number | Object} [options]
 * @returns {string} Interpolated string
 * @private
 */

function _print(template, values, options) {
  return template.replace(/\$([\w.]+)/g, function (original, key) {
    var keys = key.split('.');
    var value = values[keys.shift()];

    while (keys.length && value !== undefined) {
      var k = keys.shift();
      value = k ? value[k] : value + '.';
    }

    if (value !== undefined) {
      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isString"])(value)) {
        return Object(_utils_string__WEBPACK_IMPORTED_MODULE_0__["format"])(value, options);
      } else {
        return value;
      }
    }

    return original;
  });
}

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/acos.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/acos.js ***!
  \***************************************************************/
/*! exports provided: createAcos */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAcos", function() { return createAcos; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'acos';
var dependencies = ['typed', 'config', 'Complex'];
var createAcos = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex;

  /**
   * Calculate the inverse cosine of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.acos(x)
   *
   * Examples:
   *
   *    math.acos(0.5)           // returns number 1.0471975511965979
   *    math.acos(math.cos(1.5)) // returns number 1.5
   *
   *    math.acos(2)             // returns Complex 0 + 1.3169578969248166 i
   *
   * See also:
   *
   *    cos, atan, asin
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x  Function input
   * @return {number | BigNumber | Complex | Array | Matrix} The arc cosine of x
   */
  return typed(name, {
    number: function number(x) {
      if (x >= -1 && x <= 1 || config.predictable) {
        return Math.acos(x);
      } else {
        return new Complex(x, 0).acos();
      }
    },
    Complex: function Complex(x) {
      return x.acos();
    },
    BigNumber: function BigNumber(x) {
      return x.acos();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/acosh.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/acosh.js ***!
  \****************************************************************/
/*! exports provided: createAcosh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAcosh", function() { return createAcosh; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'acosh';
var dependencies = ['typed', 'config', 'Complex'];
var createAcosh = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex;

  /**
   * Calculate the hyperbolic arccos of a value,
   * defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.acosh(x)
   *
   * Examples:
   *
   *    math.acosh(1.5)       // returns 0.9624236501192069
   *
   * See also:
   *
   *    cosh, asinh, atanh
   *
   * @param {number | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic arccosine of x
   */
  return typed(name, {
    number: function number(x) {
      if (x >= 1 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["acoshNumber"])(x);
      }

      if (x <= -1) {
        return new Complex(Math.log(Math.sqrt(x * x - 1) - x), Math.PI);
      }

      return new Complex(x, 0).acosh();
    },
    Complex: function Complex(x) {
      return x.acosh();
    },
    BigNumber: function BigNumber(x) {
      return x.acosh();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/acot.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/acot.js ***!
  \***************************************************************/
/*! exports provided: createAcot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAcot", function() { return createAcot; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'acot';
var dependencies = ['typed', 'BigNumber'];
var createAcot = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the inverse cotangent of a value, defined as `acot(x) = atan(1/x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.acot(x)
   *
   * Examples:
   *
   *    math.acot(0.5)           // returns number 0.4636476090008061
   *    math.acot(math.cot(1.5)) // returns number 1.5
   *
   *    math.acot(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i
   *
   * See also:
   *
   *    cot, atan
   *
   * @param {number | Complex | Array | Matrix} x   Function input
   * @return {number | Complex | Array | Matrix} The arc cotangent of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["acotNumber"],
    Complex: function Complex(x) {
      return x.acot();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x).atan();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/acoth.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/acoth.js ***!
  \****************************************************************/
/*! exports provided: createAcoth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAcoth", function() { return createAcoth; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'acoth';
var dependencies = ['typed', 'config', 'Complex', 'BigNumber'];
var createAcoth = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the hyperbolic arccotangent of a value,
   * defined as `acoth(x) = atanh(1/x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.acoth(x)
   *
   * Examples:
   *
   *    math.acoth(0.5)       // returns 0.8047189562170503
   *
   * See also:
   *
   *    acsch, asech
   *
   * @param {number | Complex | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic arccotangent of x
   */
  return typed(name, {
    number: function number(x) {
      if (x >= 1 || x <= -1 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["acothNumber"])(x);
      }

      return new Complex(x, 0).acoth();
    },
    Complex: function Complex(x) {
      return x.acoth();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x).atanh();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/acsc.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/acsc.js ***!
  \***************************************************************/
/*! exports provided: createAcsc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAcsc", function() { return createAcsc; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'acsc';
var dependencies = ['typed', 'config', 'Complex', 'BigNumber'];
var createAcsc = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the inverse cosecant of a value, defined as `acsc(x) = asin(1/x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.acsc(x)
   *
   * Examples:
   *
   *    math.acsc(0.5)           // returns number 0.5235987755982989
   *    math.acsc(math.csc(1.5)) // returns number ~1.5
   *
   *    math.acsc(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i
   *
   * See also:
   *
   *    csc, asin, asec
   *
   * @param {number | Complex | Array | Matrix} x   Function input
   * @return {number | Complex | Array | Matrix} The arc cosecant of x
   */
  return typed(name, {
    number: function number(x) {
      if (x <= -1 || x >= 1 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["acscNumber"])(x);
      }

      return new Complex(x, 0).acsc();
    },
    Complex: function Complex(x) {
      return x.acsc();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x).asin();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/acsch.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/acsch.js ***!
  \****************************************************************/
/*! exports provided: createAcsch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAcsch", function() { return createAcsch; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'acsch';
var dependencies = ['typed', 'BigNumber'];
var createAcsch = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the hyperbolic arccosecant of a value,
   * defined as `acsch(x) = asinh(1/x) = ln(1/x + sqrt(1/x^2 + 1))`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.acsch(x)
   *
   * Examples:
   *
   *    math.acsch(0.5)       // returns 1.4436354751788103
   *
   * See also:
   *
   *    asech, acoth
   *
   * @param {number | Complex | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic arccosecant of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["acschNumber"],
    Complex: function Complex(x) {
      return x.acsch();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x).asinh();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/asec.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/asec.js ***!
  \***************************************************************/
/*! exports provided: createAsec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsec", function() { return createAsec; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'asec';
var dependencies = ['typed', 'config', 'Complex', 'BigNumber'];
var createAsec = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the inverse secant of a value. Defined as `asec(x) = acos(1/x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.asec(x)
   *
   * Examples:
   *
   *    math.asec(0.5)           // returns 1.0471975511965979
   *    math.asec(math.sec(1.5)) // returns 1.5
   *
   *    math.asec(2)             // returns 0 + 1.3169578969248166 i
   *
   * See also:
   *
   *    acos, acot, acsc
   *
   * @param {number | Complex | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} The arc secant of x
   */
  return typed(name, {
    number: function number(x) {
      if (x <= -1 || x >= 1 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["asecNumber"])(x);
      }

      return new Complex(x, 0).asec();
    },
    Complex: function Complex(x) {
      return x.asec();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x).acos();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/asech.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/asech.js ***!
  \****************************************************************/
/*! exports provided: createAsech */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsech", function() { return createAsech; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'asech';
var dependencies = ['typed', 'config', 'Complex', 'BigNumber'];
var createAsech = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the hyperbolic arcsecant of a value,
   * defined as `asech(x) = acosh(1/x) = ln(sqrt(1/x^2 - 1) + 1/x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.asech(x)
   *
   * Examples:
   *
   *    math.asech(0.5)       // returns 1.3169578969248166
   *
   * See also:
   *
   *    acsch, acoth
   *
   * @param {number | Complex | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic arcsecant of x
   */
  return typed(name, {
    number: function number(x) {
      if (x <= 1 && x >= -1 || config.predictable) {
        var xInv = 1 / x;

        if (xInv > 0 || config.predictable) {
          return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["asechNumber"])(x);
        }

        var ret = Math.sqrt(xInv * xInv - 1);
        return new Complex(Math.log(ret - xInv), Math.PI);
      }

      return new Complex(x, 0).asech();
    },
    Complex: function Complex(x) {
      return x.asech();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x).acosh();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/asin.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/asin.js ***!
  \***************************************************************/
/*! exports provided: createAsin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsin", function() { return createAsin; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'asin';
var dependencies = ['typed', 'config', 'Complex'];
var createAsin = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex;

  /**
   * Calculate the inverse sine of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.asin(x)
   *
   * Examples:
   *
   *    math.asin(0.5)           // returns number 0.5235987755982989
   *    math.asin(math.sin(1.5)) // returns number ~1.5
   *
   *    math.asin(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i
   *
   * See also:
   *
   *    sin, atan, acos
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x   Function input
   * @return {number | BigNumber | Complex | Array | Matrix} The arc sine of x
   */
  return typed(name, {
    number: function number(x) {
      if (x >= -1 && x <= 1 || config.predictable) {
        return Math.asin(x);
      } else {
        return new Complex(x, 0).asin();
      }
    },
    Complex: function Complex(x) {
      return x.asin();
    },
    BigNumber: function BigNumber(x) {
      return x.asin();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since asin(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/asinh.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/asinh.js ***!
  \****************************************************************/
/*! exports provided: createAsinh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsinh", function() { return createAsinh; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'asinh';
var dependencies = ['typed'];
var createAsinh = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the hyperbolic arcsine of a value,
   * defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.asinh(x)
   *
   * Examples:
   *
   *    math.asinh(0.5)       // returns 0.48121182505960347
   *
   * See also:
   *
   *    acosh, atanh
   *
   * @param {number | Complex | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic arcsine of x
   */
  return typed('asinh', {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["asinhNumber"],
    Complex: function Complex(x) {
      return x.asinh();
    },
    BigNumber: function BigNumber(x) {
      return x.asinh();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since asinh(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/atan.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/atan.js ***!
  \***************************************************************/
/*! exports provided: createAtan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAtan", function() { return createAtan; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'atan';
var dependencies = ['typed'];
var createAtan = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the inverse tangent of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.atan(x)
   *
   * Examples:
   *
   *    math.atan(0.5)           // returns number 0.4636476090008061
   *    math.atan(math.tan(1.5)) // returns number 1.5
   *
   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i
   *
   * See also:
   *
   *    tan, asin, acos
   *
   * @param {number | BigNumber | Complex | Array | Matrix} x   Function input
   * @return {number | BigNumber | Complex | Array | Matrix} The arc tangent of x
   */
  return typed('atan', {
    number: function number(x) {
      return Math.atan(x);
    },
    Complex: function Complex(x) {
      return x.atan();
    },
    BigNumber: function BigNumber(x) {
      return x.atan();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since atan(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/atan2.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/atan2.js ***!
  \****************************************************************/
/*! exports provided: createAtan2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAtan2", function() { return createAtan2; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js");
/* harmony import */ var _type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js");
/* harmony import */ var _type_matrix_utils_algorithm09__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm09 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm09.js");
/* harmony import */ var _type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js");
/* harmony import */ var _type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");








var name = 'atan2';
var dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];
var createAtan2 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix,
      equalScalar = _ref.equalScalar,
      BigNumber = _ref.BigNumber,
      DenseMatrix = _ref.DenseMatrix;
  var algorithm02 = Object(_type_matrix_utils_algorithm02__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm02"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm03 = Object(_type_matrix_utils_algorithm03__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm03"])({
    typed: typed
  });
  var algorithm09 = Object(_type_matrix_utils_algorithm09__WEBPACK_IMPORTED_MODULE_3__["createAlgorithm09"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm11 = Object(_type_matrix_utils_algorithm11__WEBPACK_IMPORTED_MODULE_4__["createAlgorithm11"])({
    typed: typed,
    equalScalar: equalScalar
  });
  var algorithm12 = Object(_type_matrix_utils_algorithm12__WEBPACK_IMPORTED_MODULE_5__["createAlgorithm12"])({
    typed: typed,
    DenseMatrix: DenseMatrix
  });
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_6__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_7__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Calculate the inverse tangent function with two arguments, y/x.
   * By providing two arguments, the right quadrant of the computed angle can be
   * determined.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.atan2(y, x)
   *
   * Examples:
   *
   *    math.atan2(2, 2) / math.pi       // returns number 0.25
   *
   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg
   *    const x = math.cos(angle)
   *    const y = math.sin(angle)
   *
   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i
   *
   * See also:
   *
   *    tan, atan, sin, cos
   *
   * @param {number | Array | Matrix} y  Second dimension
   * @param {number | Array | Matrix} x  First dimension
   * @return {number | Array | Matrix} Four-quadrant inverse tangent
   */

  return typed(name, {
    'number, number': Math.atan2,
    // Complex numbers doesn't seem to have a reasonable implementation of
    // atan2(). Even Matlab removed the support, after they only calculated
    // the atan only on base of the real part of the numbers and ignored the imaginary.
    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {
      return BigNumber.atan2(y, x);
    },
    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {
      return algorithm09(x, y, this, false);
    },
    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {
      // mind the order of y and x!
      return algorithm02(y, x, this, true);
    },
    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {
      return algorithm03(x, y, this, false);
    },
    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      return this(x, matrix(y));
    },
    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {
      return algorithm11(x, y, this, false);
    },
    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {
      return algorithm14(x, y, this, false);
    },
    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {
      // mind the order of y and x
      return algorithm12(y, x, this, true);
    },
    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {
      // mind the order of y and x
      return algorithm14(y, x, this, true);
    },
    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'number | BigNumber, Array': function numberBigNumberArray(x, y) {
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/atanh.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/atanh.js ***!
  \****************************************************************/
/*! exports provided: createAtanh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAtanh", function() { return createAtanh; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'atanh';
var dependencies = ['typed', 'config', 'Complex'];
var createAtanh = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      config = _ref.config,
      Complex = _ref.Complex;

  /**
   * Calculate the hyperbolic arctangent of a value,
   * defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.atanh(x)
   *
   * Examples:
   *
   *    math.atanh(0.5)       // returns 0.5493061443340549
   *
   * See also:
   *
   *    acosh, asinh
   *
   * @param {number | Complex | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic arctangent of x
   */
  return typed(name, {
    number: function number(x) {
      if (x <= 1 && x >= -1 || config.predictable) {
        return Object(_plain_number__WEBPACK_IMPORTED_MODULE_2__["atanhNumber"])(x);
      }

      return new Complex(x, 0).atanh();
    },
    Complex: function Complex(x) {
      return x.atanh();
    },
    BigNumber: function BigNumber(x) {
      return x.atanh();
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since atanh(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/cos.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/cos.js ***!
  \**************************************************************/
/*! exports provided: createCos */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCos", function() { return createCos; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'cos';
var dependencies = ['typed'];
var createCos = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the cosine of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.cos(x)
   *
   * Examples:
   *
   *    math.cos(2)                      // returns number -0.4161468365471422
   *    math.cos(math.pi / 4)            // returns number  0.7071067811865475
   *    math.cos(math.unit(180, 'deg'))  // returns number -1
   *    math.cos(math.unit(60, 'deg'))   // returns number  0.5
   *
   *    const angle = 0.2
   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1
   *
   * See also:
   *
   *    cos, tan
   *
   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | BigNumber | Complex | Array | Matrix} Cosine of x
   */
  return typed(name, {
    number: Math.cos,
    Complex: function Complex(x) {
      return x.cos();
    },
    BigNumber: function BigNumber(x) {
      return x.cos();
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function cos is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/cosh.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/cosh.js ***!
  \***************************************************************/
/*! exports provided: createCosh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCosh", function() { return createCosh; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");



var name = 'cosh';
var dependencies = ['typed'];
var createCosh = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the hyperbolic cosine of a value,
   * defined as `cosh(x) = 1/2 * (exp(x) + exp(-x))`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.cosh(x)
   *
   * Examples:
   *
   *    math.cosh(0.5)       // returns number 1.1276259652063807
   *
   * See also:
   *
   *    sinh, tanh
   *
   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic cosine of x
   */
  return typed(name, {
    number: _utils_number__WEBPACK_IMPORTED_MODULE_2__["cosh"],
    Complex: function Complex(x) {
      return x.cosh();
    },
    BigNumber: function BigNumber(x) {
      return x.cosh();
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function cosh is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/cot.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/cot.js ***!
  \**************************************************************/
/*! exports provided: createCot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCot", function() { return createCot; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'cot';
var dependencies = ['typed', 'BigNumber'];
var createCot = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the cotangent of a value. Defined as `cot(x) = 1 / tan(x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.cot(x)
   *
   * Examples:
   *
   *    math.cot(2)      // returns number -0.45765755436028577
   *    1 / math.tan(2)  // returns number -0.45765755436028577
   *
   * See also:
   *
   *    tan, sec, csc
   *
   * @param {number | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Cotangent of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["cotNumber"],
    Complex: function Complex(x) {
      return x.cot();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x.tan());
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function cot is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/coth.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/coth.js ***!
  \***************************************************************/
/*! exports provided: createCoth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCoth", function() { return createCoth; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'coth';
var dependencies = ['typed', 'BigNumber'];
var createCoth = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the hyperbolic cotangent of a value,
   * defined as `coth(x) = 1 / tanh(x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.coth(x)
   *
   * Examples:
   *
   *    // coth(x) = 1 / tanh(x)
   *    math.coth(2)         // returns 1.0373147207275482
   *    1 / math.tanh(2)     // returns 1.0373147207275482
   *
   * See also:
   *
   *    sinh, tanh, cosh
   *
   * @param {number | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic cotangent of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["cothNumber"],
    Complex: function Complex(x) {
      return x.coth();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x.tanh());
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function coth is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/csc.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/csc.js ***!
  \**************************************************************/
/*! exports provided: createCsc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCsc", function() { return createCsc; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'csc';
var dependencies = ['typed', 'BigNumber'];
var createCsc = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the cosecant of a value, defined as `csc(x) = 1/sin(x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.csc(x)
   *
   * Examples:
   *
   *    math.csc(2)      // returns number 1.099750170294617
   *    1 / math.sin(2)  // returns number 1.099750170294617
   *
   * See also:
   *
   *    sin, sec, cot
   *
   * @param {number | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Cosecant of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["cscNumber"],
    Complex: function Complex(x) {
      return x.csc();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x.sin());
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function csc is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/csch.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/csch.js ***!
  \***************************************************************/
/*! exports provided: createCsch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCsch", function() { return createCsch; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'csch';
var dependencies = ['typed', 'BigNumber'];
var createCsch = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the hyperbolic cosecant of a value,
   * defined as `csch(x) = 1 / sinh(x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.csch(x)
   *
   * Examples:
   *
   *    // csch(x) = 1/ sinh(x)
   *    math.csch(0.5)       // returns 1.9190347513349437
   *    1 / math.sinh(0.5)   // returns 1.9190347513349437
   *
   * See also:
   *
   *    sinh, sech, coth
   *
   * @param {number | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic cosecant of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["cschNumber"],
    Complex: function Complex(x) {
      return x.csch();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x.sinh());
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function csch is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/sec.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/sec.js ***!
  \**************************************************************/
/*! exports provided: createSec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSec", function() { return createSec; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'sec';
var dependencies = ['typed', 'BigNumber'];
var createSec = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the secant of a value, defined as `sec(x) = 1/cos(x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.sec(x)
   *
   * Examples:
   *
   *    math.sec(2)      // returns number -2.4029979617223822
   *    1 / math.cos(2)  // returns number -2.4029979617223822
   *
   * See also:
   *
   *    cos, csc, cot
   *
   * @param {number | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Secant of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["secNumber"],
    Complex: function Complex(x) {
      return x.sec();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x.cos());
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function sec is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/sech.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/sech.js ***!
  \***************************************************************/
/*! exports provided: createSech */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSech", function() { return createSech; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'sech';
var dependencies = ['typed', 'BigNumber'];
var createSech = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      _BigNumber = _ref.BigNumber;

  /**
   * Calculate the hyperbolic secant of a value,
   * defined as `sech(x) = 1 / cosh(x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.sech(x)
   *
   * Examples:
   *
   *    // sech(x) = 1/ cosh(x)
   *    math.sech(0.5)       // returns 0.886818883970074
   *    1 / math.cosh(0.5)   // returns 0.886818883970074
   *
   * See also:
   *
   *    cosh, csch, coth
   *
   * @param {number | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | Complex | Array | Matrix} Hyperbolic secant of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["sechNumber"],
    Complex: function Complex(x) {
      return x.sech();
    },
    BigNumber: function BigNumber(x) {
      return new _BigNumber(1).div(x.cosh());
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function sech is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/sin.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/sin.js ***!
  \**************************************************************/
/*! exports provided: createSin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSin", function() { return createSin; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'sin';
var dependencies = ['typed'];
var createSin = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the sine of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.sin(x)
   *
   * Examples:
   *
   *    math.sin(2)                      // returns number 0.9092974268256813
   *    math.sin(math.pi / 4)            // returns number 0.7071067811865475
   *    math.sin(math.unit(90, 'deg'))   // returns number 1
   *    math.sin(math.unit(30, 'deg'))   // returns number 0.5
   *
   *    const angle = 0.2
   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1
   *
   * See also:
   *
   *    cos, tan
   *
   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | BigNumber | Complex | Array | Matrix} Sine of x
   */
  return typed(name, {
    number: Math.sin,
    Complex: function Complex(x) {
      return x.sin();
    },
    BigNumber: function BigNumber(x) {
      return x.sin();
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function sin is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since sin(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/sinh.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/sinh.js ***!
  \***************************************************************/
/*! exports provided: createSinh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSinh", function() { return createSinh; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'sinh';
var dependencies = ['typed'];
var createSinh = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the hyperbolic sine of a value,
   * defined as `sinh(x) = 1/2 * (exp(x) - exp(-x))`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.sinh(x)
   *
   * Examples:
   *
   *    math.sinh(0.5)       // returns number 0.5210953054937474
   *
   * See also:
   *
   *    cosh, tanh
   *
   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic sine of x
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["sinhNumber"],
    Complex: function Complex(x) {
      return x.sinh();
    },
    BigNumber: function BigNumber(x) {
      return x.sinh();
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function sinh is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since sinh(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/tan.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/tan.js ***!
  \**************************************************************/
/*! exports provided: createTan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTan", function() { return createTan; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'tan';
var dependencies = ['typed'];
var createTan = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the tangent of a value. `tan(x)` is equal to `sin(x) / cos(x)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.tan(x)
   *
   * Examples:
   *
   *    math.tan(0.5)                    // returns number 0.5463024898437905
   *    math.sin(0.5) / math.cos(0.5)    // returns number 0.5463024898437905
   *    math.tan(math.pi / 4)            // returns number 1
   *    math.tan(math.unit(45, 'deg'))   // returns number 1
   *
   * See also:
   *
   *    atan, sin, cos
   *
   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | BigNumber | Complex | Array | Matrix} Tangent of x
   */
  return typed(name, {
    number: Math.tan,
    Complex: function Complex(x) {
      return x.tan();
    },
    BigNumber: function BigNumber(x) {
      return x.tan();
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function tan is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since tan(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/trigonometry/tanh.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/function/trigonometry/tanh.js ***!
  \***************************************************************/
/*! exports provided: createTanh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTanh", function() { return createTanh; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");



var name = 'tanh';
var dependencies = ['typed'];
var createTanh = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Calculate the hyperbolic tangent of a value,
   * defined as `tanh(x) = (exp(2 * x) - 1) / (exp(2 * x) + 1)`.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.tanh(x)
   *
   * Examples:
   *
   *    // tanh(x) = sinh(x) / cosh(x) = 1 / coth(x)
   *    math.tanh(0.5)                   // returns 0.46211715726000974
   *    math.sinh(0.5) / math.cosh(0.5)  // returns 0.46211715726000974
   *    1 / math.coth(0.5)               // returns 0.46211715726000974
   *
   * See also:
   *
   *    sinh, cosh, coth
   *
   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input
   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic tangent of x
   */
  return typed('tanh', {
    number: _utils_number__WEBPACK_IMPORTED_MODULE_2__["tanh"],
    Complex: function Complex(x) {
      return x.tanh();
    },
    BigNumber: function BigNumber(x) {
      return x.tanh();
    },
    Unit: function Unit(x) {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError('Unit in function tanh is no angle');
      }

      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      // deep map collection, skip zeros since tanh(0) = 0
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this, true);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/unit/to.js":
/*!*****************************************************!*\
  !*** ../node_modules/mathjs/es/function/unit/to.js ***!
  \*****************************************************/
/*! exports provided: createTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTo", function() { return createTo; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js");
/* harmony import */ var _type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14 */ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js");



var name = 'to';
var dependencies = ['typed', 'matrix'];
var createTo = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      matrix = _ref.matrix;
  var algorithm13 = Object(_type_matrix_utils_algorithm13__WEBPACK_IMPORTED_MODULE_1__["createAlgorithm13"])({
    typed: typed
  });
  var algorithm14 = Object(_type_matrix_utils_algorithm14__WEBPACK_IMPORTED_MODULE_2__["createAlgorithm14"])({
    typed: typed
  });
  /**
   * Change the unit of a value.
   *
   * For matrices, the function is evaluated element wise.
   *
   * Syntax:
   *
   *    math.to(x, unit)
   *
   * Examples:
   *
   *    math.to(math.unit('2 inch'), 'cm')                   // returns Unit 5.08 cm
   *    math.to(math.unit('2 inch'), math.unit(null, 'cm'))  // returns Unit 5.08 cm
   *    math.to(math.unit(16, 'bytes'), 'bits')              // returns Unit 128 bits
   *
   * See also:
   *
   *    unit
   *
   * @param {Unit | Array | Matrix} x     The unit to be converted.
   * @param {Unit | Array | Matrix} unit  New unit. Can be a string like "cm"
   *                                      or a unit without value.
   * @return {Unit | Array | Matrix} value with changed, fixed unit.
   */

  return typed(name, {
    'Unit, Unit | string': function UnitUnitString(x, unit) {
      return x.to(unit);
    },
    'Matrix, Matrix': function MatrixMatrix(x, y) {
      // SparseMatrix does not support Units
      return algorithm13(x, y, this);
    },
    'Array, Array': function ArrayArray(x, y) {
      // use matrix implementation
      return this(matrix(x), matrix(y)).valueOf();
    },
    'Array, Matrix': function ArrayMatrix(x, y) {
      // use matrix implementation
      return this(matrix(x), y);
    },
    'Matrix, Array': function MatrixArray(x, y) {
      // use matrix implementation
      return this(x, matrix(y));
    },
    'Matrix, any': function MatrixAny(x, y) {
      // SparseMatrix does not support Units
      return algorithm14(x, y, this, false);
    },
    'any, Matrix': function anyMatrix(x, y) {
      // SparseMatrix does not support Units
      return algorithm14(y, x, this, true);
    },
    'Array, any': function ArrayAny(x, y) {
      // use matrix implementation
      return algorithm14(matrix(x), y, this, false).valueOf();
    },
    'any, Array': function anyArray(x, y) {
      // use matrix implementation
      return algorithm14(matrix(y), x, this, true).valueOf();
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/clone.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/clone.js ***!
  \*********************************************************/
/*! exports provided: createClone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createClone", function() { return createClone; });
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'clone';
var dependencies = ['typed'];
var createClone = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Clone an object.
   *
   * Syntax:
   *
   *     math.clone(x)
   *
   * Examples:
   *
   *    math.clone(3.5)                   // returns number 3.5
   *    math.clone(math.complex('2-4i') // returns Complex 2 - 4i
   *    math.clone(math.unit(45, 'deg'))  // returns Unit 45 deg
   *    math.clone([[1, 2], [3, 4]])      // returns Array [[1, 2], [3, 4]]
   *    math.clone("hello world")         // returns string "hello world"
   *
   * @param {*} x   Object to be cloned
   * @return {*} A clone of object x
   */
  return typed(name, {
    any: _utils_object__WEBPACK_IMPORTED_MODULE_0__["clone"]
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/hasNumericValue.js":
/*!*******************************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/hasNumericValue.js ***!
  \*******************************************************************/
/*! exports provided: createHasNumericValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createHasNumericValue", function() { return createHasNumericValue; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'hasNumericValue';
var dependencies = ['typed', 'isNumeric'];
var createHasNumericValue = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      isNumeric = _ref.isNumeric;

  /**
   * Test whether a value is an numeric value.
   *
   * In case of a string, true is returned if the string contains a numeric value.
   *
   * Syntax:
   *
   *     math.hasNumericValue(x)
   *
   * Examples:
   *
   *    math.hasNumericValue(2)                     // returns true
   *    math.hasNumericValue('2')                   // returns true
   *    math.isNumeric('2')                         // returns false
   *    math.hasNumericValue(0)                     // returns true
   *    math.hasNumericValue(math.bignumber(500))   // returns true
   *    math.hasNumericValue(math.fraction(4))      // returns true
   *    math.hasNumericValue(math.complex('2-4i')   // returns false
   *    math.hasNumericValue([2.3, 'foo', false])   // returns [true, false, true]
   *
   * See also:
   *
   *    isZero, isPositive, isNegative, isInteger, isNumeric
   *
   * @param {*} x       Value to be tested
   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,
   *                    `Fraction`, `Boolean`, or a `String` containing number. Returns false for other types.
   *                    Throws an error in case of unknown types.
   */
  return typed(name, {
    string: function string(x) {
      return x.trim().length > 0 && !isNaN(Number(x));
    },
    any: function any(x) {
      return isNumeric(x);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/isInteger.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/isInteger.js ***!
  \*************************************************************/
/*! exports provided: createIsInteger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsInteger", function() { return createIsInteger; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'isInteger';
var dependencies = ['typed'];
var createIsInteger = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Test whether a value is an integer number.
   * The function supports `number`, `BigNumber`, and `Fraction`.
   *
   * The function is evaluated element-wise in case of Array or Matrix input.
   *
   * Syntax:
   *
   *     math.isInteger(x)
   *
   * Examples:
   *
   *    math.isInteger(2)                     // returns true
   *    math.isInteger(0)                     // returns true
   *    math.isInteger(0.5)                   // returns false
   *    math.isInteger(math.bignumber(500))   // returns true
   *    math.isInteger(math.fraction(4))      // returns true
   *    math.isInteger('3')                   // returns true
   *    math.isInteger([3, 0.5, -2])          // returns [true, false, true]
   *    math.isInteger(math.complex('2-4i')   // throws an error
   *
   * See also:
   *
   *    isNumeric, isPositive, isNegative, isZero
   *
   * @param {number | BigNumber | Fraction | Array | Matrix} x   Value to be tested
   * @return {boolean}  Returns true when `x` contains a numeric, integer value.
   *                    Throws an error in case of an unknown data type.
   */
  return typed(name, {
    number: _utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"],
    // TODO: what to do with isInteger(add(0.1, 0.2))  ?
    BigNumber: function BigNumber(x) {
      return x.isInt();
    },
    Fraction: function Fraction(x) {
      return x.d === 1 && isFinite(x.n);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/isNaN.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/isNaN.js ***!
  \*********************************************************/
/*! exports provided: createIsNaN */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNaN", function() { return createIsNaN; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'isNaN';
var dependencies = ['typed'];
var createIsNaN = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Test whether a value is NaN (not a number).
   * The function supports types `number`, `BigNumber`, `Fraction`, `Unit` and `Complex`.
   *
   * The function is evaluated element-wise in case of Array or Matrix input.
   *
   * Syntax:
   *
   *     math.isNaN(x)
   *
   * Examples:
   *
   *    math.isNaN(3)                     // returns false
   *    math.isNaN(NaN)                   // returns true
   *    math.isNaN(0)                     // returns false
   *    math.isNaN(math.bignumber(NaN))   // returns true
   *    math.isNaN(math.bignumber(0))     // returns false
   *    math.isNaN(math.fraction(-2, 5))  // returns false
   *    math.isNaN('-2')                  // returns false
   *    math.isNaN([2, 0, -3, NaN]')      // returns [false, false, false, true]
   *
   * See also:
   *
   *    isNumeric, isNegative, isPositive, isZero, isInteger
   *
   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested
   * @return {boolean}  Returns true when `x` is NaN.
   *                    Throws an error in case of an unknown data type.
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["isNaNNumber"],
    BigNumber: function BigNumber(x) {
      return x.isNaN();
    },
    Fraction: function Fraction(x) {
      return false;
    },
    Complex: function Complex(x) {
      return x.isNaN();
    },
    Unit: function Unit(x) {
      return Number.isNaN(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, Number.isNaN);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/isNegative.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/isNegative.js ***!
  \**************************************************************/
/*! exports provided: createIsNegative */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNegative", function() { return createIsNegative; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'isNegative';
var dependencies = ['typed'];
var createIsNegative = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Test whether a value is negative: smaller than zero.
   * The function supports types `number`, `BigNumber`, `Fraction`, and `Unit`.
   *
   * The function is evaluated element-wise in case of Array or Matrix input.
   *
   * Syntax:
   *
   *     math.isNegative(x)
   *
   * Examples:
   *
   *    math.isNegative(3)                     // returns false
   *    math.isNegative(-2)                    // returns true
   *    math.isNegative(0)                     // returns false
   *    math.isNegative(-0)                    // returns false
   *    math.isNegative(math.bignumber(2))     // returns false
   *    math.isNegative(math.fraction(-2, 5))  // returns true
   *    math.isNegative('-2')                  // returns true
   *    math.isNegative([2, 0, -3]')           // returns [false, false, true]
   *
   * See also:
   *
   *    isNumeric, isPositive, isZero, isInteger
   *
   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested
   * @return {boolean}  Returns true when `x` is larger than zero.
   *                    Throws an error in case of an unknown data type.
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["isNegativeNumber"],
    BigNumber: function BigNumber(x) {
      return x.isNeg() && !x.isZero() && !x.isNaN();
    },
    Fraction: function Fraction(x) {
      return x.s < 0; // It's enough to decide on the sign
    },
    Unit: function Unit(x) {
      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/isNumeric.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/isNumeric.js ***!
  \*************************************************************/
/*! exports provided: createIsNumeric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNumeric", function() { return createIsNumeric; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'isNumeric';
var dependencies = ['typed'];
var createIsNumeric = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Test whether a value is an numeric value.
   *
   * The function is evaluated element-wise in case of Array or Matrix input.
   *
   * Syntax:
   *
   *     math.isNumeric(x)
   *
   * Examples:
   *
   *    math.isNumeric(2)                     // returns true
   *    math.isNumeric('2')                   // returns false
   *    math.hasNumericValue('2')             // returns true
   *    math.isNumeric(0)                     // returns true
   *    math.isNumeric(math.bignumber(500))   // returns true
   *    math.isNumeric(math.fraction(4))      // returns true
   *    math.isNumeric(math.complex('2-4i')   // returns false
   *    math.isNumeric([2.3, 'foo', false])   // returns [true, false, true]
   *
   * See also:
   *
   *    isZero, isPositive, isNegative, isInteger, hasNumericValue
   *
   * @param {*} x       Value to be tested
   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,
   *                    `Fraction`, or `boolean`. Returns false for other types.
   *                    Throws an error in case of unknown types.
   */
  return typed(name, {
    'number | BigNumber | Fraction | boolean': function numberBigNumberFractionBoolean() {
      return true;
    },
    'Complex | Unit | string | null | undefined | Node': function ComplexUnitStringNullUndefinedNode() {
      return false;
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/isPositive.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/isPositive.js ***!
  \**************************************************************/
/*! exports provided: createIsPositive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsPositive", function() { return createIsPositive; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'isPositive';
var dependencies = ['typed'];
var createIsPositive = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Test whether a value is positive: larger than zero.
   * The function supports types `number`, `BigNumber`, `Fraction`, and `Unit`.
   *
   * The function is evaluated element-wise in case of Array or Matrix input.
   *
   * Syntax:
   *
   *     math.isPositive(x)
   *
   * Examples:
   *
   *    math.isPositive(3)                     // returns true
   *    math.isPositive(-2)                    // returns false
   *    math.isPositive(0)                     // returns false
   *    math.isPositive(-0)                    // returns false
   *    math.isPositive(0.5)                   // returns true
   *    math.isPositive(math.bignumber(2))     // returns true
   *    math.isPositive(math.fraction(-2, 5))  // returns false
   *    math.isPositive(math.fraction(1,3))    // returns false
   *    math.isPositive('2')                   // returns true
   *    math.isPositive([2, 0, -3])            // returns [true, false, false]
   *
   * See also:
   *
   *    isNumeric, isZero, isNegative, isInteger
   *
   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested
   * @return {boolean}  Returns true when `x` is larger than zero.
   *                    Throws an error in case of an unknown data type.
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["isPositiveNumber"],
    BigNumber: function BigNumber(x) {
      return !x.isNeg() && !x.isZero() && !x.isNaN();
    },
    Fraction: function Fraction(x) {
      return x.s > 0 && x.n > 0;
    },
    Unit: function Unit(x) {
      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/isPrime.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/isPrime.js ***!
  \***********************************************************/
/*! exports provided: createIsPrime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsPrime", function() { return createIsPrime; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'isPrime';
var dependencies = ['typed'];
var createIsPrime = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Test whether a value is prime: has no divisors other than itself and one.
   * The function supports type `number`, `bignumber`.
   *
   * The function is evaluated element-wise in case of Array or Matrix input.
   *
   * Syntax:
   *
   *     math.isPrime(x)
   *
   * Examples:
   *
   *    math.isPrime(3)                     // returns true
   *    math.isPrime(-2)                    // returns false
   *    math.isPrime(0)                     // returns false
   *    math.isPrime(-0)                    // returns false
   *    math.isPrime(0.5)                   // returns false
   *    math.isPrime('2')                   // returns true
   *    math.isPrime([2, 17, 100])           // returns [true, true, false]
   *
   * See also:
   *
   *    isNumeric, isZero, isNegative, isInteger
   *
   * @param {number | BigNumber | Array | Matrix} x  Value to be tested
   * @return {boolean}  Returns true when `x` is larger than zero.
   *                    Throws an error in case of an unknown data type.
   */
  return typed(name, {
    number: function number(x) {
      if (x * 0 !== 0) {
        return false;
      }

      if (x <= 3) {
        return x > 1;
      }

      if (x % 2 === 0 || x % 3 === 0) {
        return false;
      }

      for (var i = 5; i * i <= x; i += 6) {
        if (x % i === 0 || x % (i + 2) === 0) {
          return false;
        }
      }

      return true;
    },
    BigNumber: function BigNumber(n) {
      if (n.toNumber() * 0 !== 0) {
        return false;
      }

      if (n.lte(3)) return n.gt(1);
      if (n.mod(2).eq(0) || n.mod(3).eq(0)) return false;

      for (var i = 5; n.gte(i * i); i += 6) {
        if (n.mod(i).eq(0) || n.mod(i + 2).eq(0)) {
          return false;
        }
      }

      return true;
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/isZero.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/isZero.js ***!
  \**********************************************************/
/*! exports provided: createIsZero */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsZero", function() { return createIsZero; });
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _plain_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number */ "../node_modules/mathjs/es/plain/number/index.js");



var name = 'isZero';
var dependencies = ['typed'];
var createIsZero = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Test whether a value is zero.
   * The function can check for zero for types `number`, `BigNumber`, `Fraction`,
   * `Complex`, and `Unit`.
   *
   * The function is evaluated element-wise in case of Array or Matrix input.
   *
   * Syntax:
   *
   *     math.isZero(x)
   *
   * Examples:
   *
   *    math.isZero(0)                     // returns true
   *    math.isZero(2)                     // returns false
   *    math.isZero(0.5)                   // returns false
   *    math.isZero(math.bignumber(0))     // returns true
   *    math.isZero(math.fraction(0))      // returns true
   *    math.isZero(math.fraction(1,3))    // returns false
   *    math.isZero(math.complex('2 - 4i') // returns false
   *    math.isZero(math.complex('0i')     // returns true
   *    math.isZero('0')                   // returns true
   *    math.isZero('2')                   // returns false
   *    math.isZero([2, 0, -3]')           // returns [false, true, false]
   *
   * See also:
   *
   *    isNumeric, isPositive, isNegative, isInteger
   *
   * @param {number | BigNumber | Complex | Fraction | Unit | Array | Matrix} x       Value to be tested
   * @return {boolean}  Returns true when `x` is zero.
   *                    Throws an error in case of an unknown data type.
   */
  return typed(name, {
    number: _plain_number__WEBPACK_IMPORTED_MODULE_2__["isZeroNumber"],
    BigNumber: function BigNumber(x) {
      return x.isZero();
    },
    Complex: function Complex(x) {
      return x.re === 0 && x.im === 0;
    },
    Fraction: function Fraction(x) {
      return x.d === 1 && x.n === 0;
    },
    Unit: function Unit(x) {
      return this(x.value);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_0__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/numeric.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/numeric.js ***!
  \***********************************************************/
/*! exports provided: createNumeric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNumeric", function() { return createNumeric; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/noop */ "../node_modules/mathjs/es/utils/noop.js");



var name = 'numeric';
var dependencies = ['number', '?bignumber', '?fraction'];
var createNumeric = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var _number = _ref.number,
      bignumber = _ref.bignumber,
      fraction = _ref.fraction;
  var validInputTypes = {
    string: true,
    number: true,
    BigNumber: true,
    Fraction: true
  }; // Load the conversion functions for each output type

  var validOutputTypes = {
    number: function number(x) {
      return _number(x);
    },
    BigNumber: bignumber ? function (x) {
      return bignumber(x);
    } : _utils_noop__WEBPACK_IMPORTED_MODULE_2__["noBignumber"],
    Fraction: fraction ? function (x) {
      return fraction(x);
    } : _utils_noop__WEBPACK_IMPORTED_MODULE_2__["noFraction"]
  };
  /**
   * Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.
   *
   * Syntax:
   *
   *    math.numeric(x)
   *
   * Examples:
   *
   *    math.numeric('4')                           // returns number 4
   *    math.numeric('4', 'number')                 // returns number 4
   *    math.numeric('4', 'BigNumber')              // returns BigNumber 4
   *    math.numeric('4', 'Fraction')               // returns Fraction 4
   *    math.numeric(4, 'Fraction')                 // returns Fraction 4
   *    math.numeric(math.fraction(2, 5), 'number') // returns number 0.4
   *
   * See also:
   *
   *    number, fraction, bignumber, string, format
   *
   * @param {string | number | BigNumber | Fraction } value
   *              A numeric value or a string containing a numeric value
   * @param {string} outputType
   *              Desired numeric output type.
   *              Available values: 'number', 'BigNumber', or 'Fraction'
   * @return {number | BigNumber | Fraction}
   *              Returns an instance of the numeric in the requested type
   */

  return function numeric(value, outputType) {
    var inputType = Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(value);

    if (!(inputType in validInputTypes)) {
      throw new TypeError('Cannot convert ' + value + ' of type "' + inputType + '"; valid input types are ' + Object.keys(validInputTypes).join(', '));
    }

    if (!(outputType in validOutputTypes)) {
      throw new TypeError('Cannot convert ' + value + ' to type "' + outputType + '"; valid output types are ' + Object.keys(validOutputTypes).join(', '));
    }

    if (outputType === inputType) {
      return value;
    } else {
      return validOutputTypes[outputType](value);
    }
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/function/utils/typeOf.js":
/*!**********************************************************!*\
  !*** ../node_modules/mathjs/es/function/utils/typeOf.js ***!
  \**********************************************************/
/*! exports provided: createTypeOf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTypeOf", function() { return createTypeOf; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");


var name = 'typeOf';
var dependencies = ['typed'];
var createTypeOf = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Determine the type of a variable.
   *
   * Function `typeOf` recognizes the following types of objects:
   *
   * Object                 | Returns       | Example
   * ---------------------- | ------------- | ------------------------------------------
   * null                   | `'null'`      | `math.typeOf(null)`
   * number                 | `'number'`    | `math.typeOf(3.5)`
   * boolean                | `'boolean'`   | `math.typeOf(true)`
   * string                 | `'string'`    | `math.typeOf('hello world')`
   * Array                  | `'Array'`     | `math.typeOf([1, 2, 3])`
   * Date                   | `'Date'`      | `math.typeOf(new Date())`
   * Function               | `'Function'`  | `math.typeOf(function () {})`
   * Object                 | `'Object'`    | `math.typeOf({a: 2, b: 3})`
   * RegExp                 | `'RegExp'`    | `math.typeOf(/a regexp/)`
   * undefined              | `'undefined'` | `math.typeOf(undefined)`
   * math.BigNumber         | `'BigNumber'` | `math.typeOf(math.bignumber('2.3e500'))`
   * math.Chain             | `'Chain'`     | `math.typeOf(math.chain(2))`
   * math.Complex           | `'Complex'`   | `math.typeOf(math.complex(2, 3))`
   * math.Fraction          | `'Fraction'`  | `math.typeOf(math.fraction(1, 3))`
   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`
   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`
   * math.Index             | `'Index'`     | `math.typeOf(math.index(1, 3))`
   * math.Matrix            | `'Matrix'`    | `math.typeOf(math.matrix([[1,2], [3, 4]]))`
   * math.Range             | `'Range'`     | `math.typeOf(math.range(0, 10))`
   * math.ResultSet         | `'ResultSet'` | `math.typeOf(math.evaluate('a=2\nb=3'))`
   * math.Unit              | `'Unit'`      | `math.typeOf(math.unit('45 deg'))`
   * math.AccessorNode            | `'AccessorNode'`            | `math.typeOf(math.parse('A[2]'))`
   * math.ArrayNode               | `'ArrayNode'`               | `math.typeOf(math.parse('[1,2,3]'))`
   * math.AssignmentNode          | `'AssignmentNode'`          | `math.typeOf(math.parse('x=2'))`
   * math.BlockNode               | `'BlockNode'`               | `math.typeOf(math.parse('a=2; b=3'))`
   * math.ConditionalNode         | `'ConditionalNode'`         | `math.typeOf(math.parse('x<0 ? -x : x'))`
   * math.ConstantNode            | `'ConstantNode'`            | `math.typeOf(math.parse('2.3'))`
   * math.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeOf(math.parse('f(x)=x^2'))`
   * math.FunctionNode            | `'FunctionNode'`            | `math.typeOf(math.parse('sqrt(4)'))`
   * math.IndexNode               | `'IndexNode'`               | `math.typeOf(math.parse('A[2]').index)`
   * math.ObjectNode              | `'ObjectNode'`              | `math.typeOf(math.parse('{a:2}'))`
   * math.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeOf(math.parse('(2+3)'))`
   * math.RangeNode               | `'RangeNode'`               | `math.typeOf(math.parse('1:10'))`
   * math.SymbolNode              | `'SymbolNode'`              | `math.typeOf(math.parse('x'))`
   *
   * Syntax:
   *
   *    math.typeOf(x)
   *
   * Examples:
   *
   *    math.typeOf(3.5)                     // returns 'number'
   *    math.typeOf(math.complex('2-4i'))    // returns 'Complex'
   *    math.typeOf(math.unit('45 deg'))     // returns 'Unit'
   *    math.typeOf('hello world')           // returns 'string'
   *
   * @param {*} x     The variable for which to test the type.
   * @return {string} Returns the name of the type. Primitive types are lower case,
   *                  non-primitive types are upper-camel-case.
   *                  For example 'number', 'string', 'Array', 'Date'.
   */
  return typed(name, {
    any: _utils_is__WEBPACK_IMPORTED_MODULE_1__["typeOf"]
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/json/replacer.js":
/*!**************************************************!*\
  !*** ../node_modules/mathjs/es/json/replacer.js ***!
  \**************************************************/
/*! exports provided: createReplacer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createReplacer", function() { return createReplacer; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'replacer';
var dependencies = [];
var createReplacer = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function () {
  /**
   * Stringify data types into their JSON representation.
   * Most data types can be serialized using their `.toJSON` method,
   * but not all, for example the number `Infinity`. For these cases you have
   * to use the replacer. Example usage:
   *
   *     JSON.stringify([2, Infinity], math.replacer)
   *
   * @param {string} key
   * @param {*} value
   * @returns {*} Returns the replaced object
   */
  return function replacer(key, value) {
    // the numeric values Infinitiy, -Infinity, and NaN cannot be serialized to JSON
    if (typeof value === 'number' && (!isFinite(value) || isNaN(value))) {
      return {
        mathjs: 'number',
        value: String(value)
      };
    }

    return value;
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/json/reviver.js":
/*!*************************************************!*\
  !*** ../node_modules/mathjs/es/json/reviver.js ***!
  \*************************************************/
/*! exports provided: createReviver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createReviver", function() { return createReviver; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'reviver';
var dependencies = ['classes'];
var createReviver = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var classes = _ref.classes;

  /**
   * Instantiate mathjs data types from their JSON representation
   * @param {string} key
   * @param {*} value
   * @returns {*} Returns the revived object
   */
  return function reviver(key, value) {
    var constructor = classes[value && value.mathjs];

    if (constructor && typeof constructor.fromJSON === 'function') {
      return constructor.fromJSON(value);
    }

    return value;
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/arithmetic.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/arithmetic.js ***!
  \************************************************************/
/*! exports provided: absNumber, addNumber, subtractNumber, multiplyNumber, divideNumber, unaryMinusNumber, unaryPlusNumber, cbrtNumber, ceilNumber, cubeNumber, expNumber, expm1Number, fixNumber, floorNumber, gcdNumber, lcmNumber, logNumber, log10Number, log2Number, log1pNumber, modNumber, nthRootNumber, signNumber, sqrtNumber, squareNumber, xgcdNumber, powNumber, roundNumber, normNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "absNumber", function() { return absNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNumber", function() { return addNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtractNumber", function() { return subtractNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyNumber", function() { return multiplyNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divideNumber", function() { return divideNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryMinusNumber", function() { return unaryMinusNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaryPlusNumber", function() { return unaryPlusNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cbrtNumber", function() { return cbrtNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceilNumber", function() { return ceilNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubeNumber", function() { return cubeNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expNumber", function() { return expNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expm1Number", function() { return expm1Number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixNumber", function() { return fixNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floorNumber", function() { return floorNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gcdNumber", function() { return gcdNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lcmNumber", function() { return lcmNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logNumber", function() { return logNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log10Number", function() { return log10Number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log2Number", function() { return log2Number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log1pNumber", function() { return log1pNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modNumber", function() { return modNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nthRootNumber", function() { return nthRootNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signNumber", function() { return signNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrtNumber", function() { return sqrtNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squareNumber", function() { return squareNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xgcdNumber", function() { return xgcdNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "powNumber", function() { return powNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "roundNumber", function() { return roundNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normNumber", function() { return normNumber; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");

var n1 = 'number';
var n2 = 'number, number';
function absNumber(a) {
  return Math.abs(a);
}
absNumber.signature = n1;
function addNumber(a, b) {
  return a + b;
}
addNumber.signature = n2;
function subtractNumber(a, b) {
  return a - b;
}
subtractNumber.signature = n2;
function multiplyNumber(a, b) {
  return a * b;
}
multiplyNumber.signature = n2;
function divideNumber(a, b) {
  return a / b;
}
divideNumber.signature = n2;
function unaryMinusNumber(x) {
  return -x;
}
unaryMinusNumber.signature = n1;
function unaryPlusNumber(x) {
  return x;
}
unaryPlusNumber.signature = n1;
function cbrtNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["cbrt"])(x);
}
cbrtNumber.signature = n1;
function ceilNumber(x) {
  return Math.ceil(x);
}
ceilNumber.signature = n1;
function cubeNumber(x) {
  return x * x * x;
}
cubeNumber.signature = n1;
function expNumber(x) {
  return Math.exp(x);
}
expNumber.signature = n1;
function expm1Number(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["expm1"])(x);
}
expm1Number.signature = n1;
function fixNumber(x) {
  return x > 0 ? Math.floor(x) : Math.ceil(x);
}
fixNumber.signature = n1;
function floorNumber(x) {
  return Math.floor(x);
}
floorNumber.signature = n1;
/**
 * Calculate gcd for numbers
 * @param {number} a
 * @param {number} b
 * @returns {number} Returns the greatest common denominator of a and b
 */

function gcdNumber(a, b) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(a) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(b)) {
    throw new Error('Parameters in function gcd must be integer numbers');
  } // https://en.wikipedia.org/wiki/Euclidean_algorithm


  var r;

  while (b !== 0) {
    r = a % b;
    a = b;
    b = r;
  }

  return a < 0 ? -a : a;
}
gcdNumber.signature = n2;
/**
 * Calculate lcm for two numbers
 * @param {number} a
 * @param {number} b
 * @returns {number} Returns the least common multiple of a and b
 */

function lcmNumber(a, b) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(a) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(b)) {
    throw new Error('Parameters in function lcm must be integer numbers');
  }

  if (a === 0 || b === 0) {
    return 0;
  } // https://en.wikipedia.org/wiki/Euclidean_algorithm
  // evaluate lcm here inline to reduce overhead


  var t;
  var prod = a * b;

  while (b !== 0) {
    t = b;
    b = a % t;
    a = t;
  }

  return Math.abs(prod / a);
}
lcmNumber.signature = n2;
/**
 * Calculate the logarithm of a value.
 * @param {number} x
 * @return {number}
 */

function logNumber(x) {
  return Math.log(x);
}
logNumber.signature = n1;
/**
 * Calculate the 10-base logarithm of a number
 * @param {number} x
 * @return {number}
 */

function log10Number(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["log10"])(x);
}
log10Number.signature = n1;
/**
 * Calculate the 2-base logarithm of a number
 * @param {number} x
 * @return {number}
 */

function log2Number(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["log2"])(x);
}
log2Number.signature = n1;
/**
 * Calculate the natural logarithm of a `number+1`
 * @param {number} x
 * @returns {number}
 */

function log1pNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["log1p"])(x);
}
log1pNumber.signature = n1;
/**
 * Calculate the modulus of two numbers
 * @param {number} x
 * @param {number} y
 * @returns {number} res
 * @private
 */

function modNumber(x, y) {
  if (y > 0) {
    // We don't use JavaScript's % operator here as this doesn't work
    // correctly for x < 0 and x === 0
    // see https://en.wikipedia.org/wiki/Modulo_operation
    return x - y * Math.floor(x / y);
  } else if (y === 0) {
    return x;
  } else {
    // y < 0
    // TODO: implement mod for a negative divisor
    throw new Error('Cannot calculate mod for a negative divisor');
  }
}
modNumber.signature = n2;
/**
 * Calculate the nth root of a, solve x^root == a
 * http://rosettacode.org/wiki/Nth_root#JavaScript
 * @param {number} a
 * @param {number} root
 * @private
 */

function nthRootNumber(a, root) {
  var inv = root < 0;

  if (inv) {
    root = -root;
  }

  if (root === 0) {
    throw new Error('Root must be non-zero');
  }

  if (a < 0 && Math.abs(root) % 2 !== 1) {
    throw new Error('Root must be odd when a is negative.');
  } // edge cases zero and infinity


  if (a === 0) {
    return inv ? Infinity : 0;
  }

  if (!isFinite(a)) {
    return inv ? 0 : a;
  }

  var x = Math.pow(Math.abs(a), 1 / root); // If a < 0, we require that root is an odd integer,
  // so (-1) ^ (1/root) = -1

  x = a < 0 ? -x : x;
  return inv ? 1 / x : x; // Very nice algorithm, but fails with nthRoot(-2, 3).
  // Newton's method has some well-known problems at times:
  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis

  /*
  let x = 1 // Initial guess
  let xPrev = 1
  let i = 0
  const iMax = 10000
  do {
    const delta = (a / Math.pow(x, root - 1) - x) / root
    xPrev = x
    x = x + delta
    i++
  }
  while (xPrev !== x && i < iMax)
   if (xPrev !== x) {
    throw new Error('Function nthRoot failed to converge')
  }
   return inv ? 1 / x : x
  */
}
nthRootNumber.signature = n2;
function signNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["sign"])(x);
}
signNumber.signature = n1;
function sqrtNumber(x) {
  return Math.sqrt(x);
}
sqrtNumber.signature = n1;
function squareNumber(x) {
  return x * x;
}
squareNumber.signature = n1;
/**
 * Calculate xgcd for two numbers
 * @param {number} a
 * @param {number} b
 * @return {number} result
 * @private
 */

function xgcdNumber(a, b) {
  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm
  var t; // used to swap two variables

  var q; // quotient

  var r; // remainder

  var x = 0;
  var lastx = 1;
  var y = 1;
  var lasty = 0;

  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(a) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(b)) {
    throw new Error('Parameters in function xgcd must be integer numbers');
  }

  while (b) {
    q = Math.floor(a / b);
    r = a - q * b;
    t = x;
    x = lastx - q * x;
    lastx = t;
    t = y;
    y = lasty - q * y;
    lasty = t;
    a = b;
    b = r;
  }

  var res;

  if (a < 0) {
    res = [-a, -lastx, -lasty];
  } else {
    res = [a, a ? lastx : 0, lasty];
  }

  return res;
}
xgcdNumber.signature = n2;
/**
 * Calculates the power of x to y, x^y, for two numbers.
 * @param {number} x
 * @param {number} y
 * @return {number} res
 */

function powNumber(x, y) {
  // x^Infinity === 0 if -1 < x < 1
  // A real number 0 is returned instead of complex(0)
  if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {
    return 0;
  }

  return Math.pow(x, y);
}
powNumber.signature = n2;
/**
 * round a number to the given number of decimals, or to zero if decimals is
 * not provided
 * @param {number} value
 * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)
 * @return {number} roundedValue
 */

function roundNumber(value) {
  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return parseFloat(Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["toFixed"])(value, decimals));
}
roundNumber.signature = n2;
/**
 * Calculate the norm of a number, the absolute value.
 * @param {number} x
 * @return {number}
 */

function normNumber(x) {
  return Math.abs(x);
}
normNumber.signature = n1;

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/bitwise.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/bitwise.js ***!
  \*********************************************************/
/*! exports provided: bitAndNumber, bitNotNumber, bitOrNumber, bitXorNumber, leftShiftNumber, rightArithShiftNumber, rightLogShiftNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitAndNumber", function() { return bitAndNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitNotNumber", function() { return bitNotNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitOrNumber", function() { return bitOrNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitXorNumber", function() { return bitXorNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "leftShiftNumber", function() { return leftShiftNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftNumber", function() { return rightArithShiftNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightLogShiftNumber", function() { return rightLogShiftNumber; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");

var n1 = 'number';
var n2 = 'number, number';
function bitAndNumber(x, y) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(y)) {
    throw new Error('Integers expected in function bitAnd');
  }

  return x & y;
}
bitAndNumber.signature = n2;
function bitNotNumber(x) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x)) {
    throw new Error('Integer expected in function bitNot');
  }

  return ~x;
}
bitNotNumber.signature = n1;
function bitOrNumber(x, y) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(y)) {
    throw new Error('Integers expected in function bitOr');
  }

  return x | y;
}
bitOrNumber.signature = n2;
function bitXorNumber(x, y) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(y)) {
    throw new Error('Integers expected in function bitXor');
  }

  return x ^ y;
}
bitXorNumber.signature = n2;
function leftShiftNumber(x, y) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(y)) {
    throw new Error('Integers expected in function leftShift');
  }

  return x << y;
}
leftShiftNumber.signature = n2;
function rightArithShiftNumber(x, y) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(y)) {
    throw new Error('Integers expected in function rightArithShift');
  }

  return x >> y;
}
rightArithShiftNumber.signature = n2;
function rightLogShiftNumber(x, y) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(y)) {
    throw new Error('Integers expected in function rightLogShift');
  }

  return x >>> y;
}
rightLogShiftNumber.signature = n2;

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/combinations.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/combinations.js ***!
  \**************************************************************/
/*! exports provided: combinationsNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinationsNumber", function() { return combinationsNumber; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_product__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/product */ "../node_modules/mathjs/es/utils/product.js");


function combinationsNumber(n, k) {
  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(n) || n < 0) {
    throw new TypeError('Positive integer value expected in function combinations');
  }

  if (!Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(k) || k < 0) {
    throw new TypeError('Positive integer value expected in function combinations');
  }

  if (k > n) {
    throw new TypeError('k must be less than or equal to n');
  }

  var nMinusk = n - k;
  var prodrange;

  if (k < nMinusk) {
    prodrange = Object(_utils_product__WEBPACK_IMPORTED_MODULE_1__["product"])(nMinusk + 1, n);
    return prodrange / Object(_utils_product__WEBPACK_IMPORTED_MODULE_1__["product"])(1, k);
  }

  prodrange = Object(_utils_product__WEBPACK_IMPORTED_MODULE_1__["product"])(k + 1, n);
  return prodrange / Object(_utils_product__WEBPACK_IMPORTED_MODULE_1__["product"])(1, nMinusk);
}
combinationsNumber.signature = 'number, number';

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/constants.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/constants.js ***!
  \***********************************************************/
/*! exports provided: pi, tau, e, phi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return e; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return phi; });
var pi = Math.PI;
var tau = 2 * Math.PI;
var e = Math.E;
var phi = 1.61803398874989484820458683436563811772030917980576286213545;

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arithmetic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arithmetic */ "../node_modules/mathjs/es/plain/number/arithmetic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "absNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["absNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["addNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtractNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["subtractNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["multiplyNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["divideNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryMinusNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["unaryMinusNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryPlusNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["unaryPlusNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cbrtNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["cbrtNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceilNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["ceilNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubeNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["cubeNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["expNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm1Number", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["expm1Number"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fixNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["fixNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floorNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["floorNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gcdNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["gcdNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lcmNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["lcmNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["logNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log10Number", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["log10Number"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log2Number", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["log2Number"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log1pNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["log1pNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["modNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRootNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["nthRootNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["signNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["sqrtNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squareNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["squareNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xgcdNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["xgcdNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "powNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["powNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["roundNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "normNumber", function() { return _arithmetic__WEBPACK_IMPORTED_MODULE_0__["normNumber"]; });

/* harmony import */ var _bitwise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bitwise */ "../node_modules/mathjs/es/plain/number/bitwise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitAndNumber", function() { return _bitwise__WEBPACK_IMPORTED_MODULE_1__["bitAndNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitNotNumber", function() { return _bitwise__WEBPACK_IMPORTED_MODULE_1__["bitNotNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitOrNumber", function() { return _bitwise__WEBPACK_IMPORTED_MODULE_1__["bitOrNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitXorNumber", function() { return _bitwise__WEBPACK_IMPORTED_MODULE_1__["bitXorNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leftShiftNumber", function() { return _bitwise__WEBPACK_IMPORTED_MODULE_1__["leftShiftNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftNumber", function() { return _bitwise__WEBPACK_IMPORTED_MODULE_1__["rightArithShiftNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightLogShiftNumber", function() { return _bitwise__WEBPACK_IMPORTED_MODULE_1__["rightLogShiftNumber"]; });

/* harmony import */ var _combinations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./combinations */ "../node_modules/mathjs/es/plain/number/combinations.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsNumber", function() { return _combinations__WEBPACK_IMPORTED_MODULE_2__["combinationsNumber"]; });

/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ "../node_modules/mathjs/es/plain/number/constants.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return _constants__WEBPACK_IMPORTED_MODULE_3__["pi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return _constants__WEBPACK_IMPORTED_MODULE_3__["tau"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "e", function() { return _constants__WEBPACK_IMPORTED_MODULE_3__["e"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return _constants__WEBPACK_IMPORTED_MODULE_3__["phi"]; });

/* harmony import */ var _logical__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logical */ "../node_modules/mathjs/es/plain/number/logical.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "notNumber", function() { return _logical__WEBPACK_IMPORTED_MODULE_4__["notNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orNumber", function() { return _logical__WEBPACK_IMPORTED_MODULE_4__["orNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorNumber", function() { return _logical__WEBPACK_IMPORTED_MODULE_4__["xorNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "andNumber", function() { return _logical__WEBPACK_IMPORTED_MODULE_4__["andNumber"]; });

/* harmony import */ var _relational__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./relational */ "../node_modules/mathjs/es/plain/number/relational.js");
/* harmony import */ var _relational__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_relational__WEBPACK_IMPORTED_MODULE_5__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _relational__WEBPACK_IMPORTED_MODULE_5__) if(["absNumber","addNumber","subtractNumber","multiplyNumber","divideNumber","unaryMinusNumber","unaryPlusNumber","cbrtNumber","ceilNumber","cubeNumber","expNumber","expm1Number","fixNumber","floorNumber","gcdNumber","lcmNumber","logNumber","log10Number","log2Number","log1pNumber","modNumber","nthRootNumber","signNumber","sqrtNumber","squareNumber","xgcdNumber","powNumber","roundNumber","normNumber","bitAndNumber","bitNotNumber","bitOrNumber","bitXorNumber","leftShiftNumber","rightArithShiftNumber","rightLogShiftNumber","combinationsNumber","pi","tau","e","phi","notNumber","orNumber","xorNumber","andNumber","default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _relational__WEBPACK_IMPORTED_MODULE_5__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _probability__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./probability */ "../node_modules/mathjs/es/plain/number/probability.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gammaNumber", function() { return _probability__WEBPACK_IMPORTED_MODULE_6__["gammaNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gammaG", function() { return _probability__WEBPACK_IMPORTED_MODULE_6__["gammaG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gammaP", function() { return _probability__WEBPACK_IMPORTED_MODULE_6__["gammaP"]; });

/* harmony import */ var _trigonometry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./trigonometry */ "../node_modules/mathjs/es/plain/number/trigonometry.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acosNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["acosNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acoshNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["acoshNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acotNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["acotNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acothNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["acothNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acscNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["acscNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acschNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["acschNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asecNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["asecNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asechNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["asechNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["asinNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinhNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["asinhNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["atanNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan2Number", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["atan2Number"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanhNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["atanhNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cosNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["cosNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coshNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["coshNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cotNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["cotNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cothNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["cothNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cscNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["cscNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cschNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["cschNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["secNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sechNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["sechNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["sinNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinhNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["sinhNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["tanNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanhNumber", function() { return _trigonometry__WEBPACK_IMPORTED_MODULE_7__["tanhNumber"]; });

/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils */ "../node_modules/mathjs/es/plain/number/utils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIntegerNumber", function() { return _utils__WEBPACK_IMPORTED_MODULE_8__["isIntegerNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNegativeNumber", function() { return _utils__WEBPACK_IMPORTED_MODULE_8__["isNegativeNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPositiveNumber", function() { return _utils__WEBPACK_IMPORTED_MODULE_8__["isPositiveNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isZeroNumber", function() { return _utils__WEBPACK_IMPORTED_MODULE_8__["isZeroNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaNNumber", function() { return _utils__WEBPACK_IMPORTED_MODULE_8__["isNaNNumber"]; });











/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/logical.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/logical.js ***!
  \*********************************************************/
/*! exports provided: notNumber, orNumber, xorNumber, andNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notNumber", function() { return notNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orNumber", function() { return orNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xorNumber", function() { return xorNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "andNumber", function() { return andNumber; });
var n1 = 'number';
var n2 = 'number, number';
function notNumber(x) {
  return !x;
}
notNumber.signature = n1;
function orNumber(x, y) {
  return !!(x || y);
}
orNumber.signature = n2;
function xorNumber(x, y) {
  return !!x !== !!y;
}
xorNumber.signature = n2;
function andNumber(x, y) {
  return !!(x && y);
}
andNumber.signature = n2;

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/probability.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/probability.js ***!
  \*************************************************************/
/*! exports provided: gammaNumber, gammaG, gammaP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gammaNumber", function() { return gammaNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gammaG", function() { return gammaG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gammaP", function() { return gammaP; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_product__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/product */ "../node_modules/mathjs/es/utils/product.js");


function gammaNumber(n) {
  var x;

  if (Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(n)) {
    if (n <= 0) {
      return isFinite(n) ? Infinity : NaN;
    }

    if (n > 171) {
      return Infinity; // Will overflow
    }

    return Object(_utils_product__WEBPACK_IMPORTED_MODULE_1__["product"])(1, n - 1);
  }

  if (n < 0.5) {
    return Math.PI / (Math.sin(Math.PI * n) * gammaNumber(1 - n));
  }

  if (n >= 171.35) {
    return Infinity; // will overflow
  }

  if (n > 85.0) {
    // Extended Stirling Approx
    var twoN = n * n;
    var threeN = twoN * n;
    var fourN = threeN * n;
    var fiveN = fourN * n;
    return Math.sqrt(2 * Math.PI / n) * Math.pow(n / Math.E, n) * (1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) - 571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) + 5246819 / (75246796800 * fiveN * n));
  }

  --n;
  x = gammaP[0];

  for (var i = 1; i < gammaP.length; ++i) {
    x += gammaP[i] / (n + i);
  }

  var t = n + gammaG + 0.5;
  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;
}
gammaNumber.signature = 'number'; // TODO: comment on the variables g and p

var gammaG = 4.7421875;
var gammaP = [0.99999999999999709182, 57.156235665862923517, -59.597960355475491248, 14.136097974741747174, -0.49191381609762019978, 0.33994649984811888699e-4, 0.46523628927048575665e-4, -0.98374475304879564677e-4, 0.15808870322491248884e-3, -0.21026444172410488319e-3, 0.21743961811521264320e-3, -0.16431810653676389022e-3, 0.84418223983852743293e-4, -0.26190838401581408670e-4, 0.36899182659531622704e-5];

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/relational.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/relational.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/trigonometry.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/trigonometry.js ***!
  \**************************************************************/
/*! exports provided: acosNumber, acoshNumber, acotNumber, acothNumber, acscNumber, acschNumber, asecNumber, asechNumber, asinNumber, asinhNumber, atanNumber, atan2Number, atanhNumber, cosNumber, coshNumber, cotNumber, cothNumber, cscNumber, cschNumber, secNumber, sechNumber, sinNumber, sinhNumber, tanNumber, tanhNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acosNumber", function() { return acosNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acoshNumber", function() { return acoshNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acotNumber", function() { return acotNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acothNumber", function() { return acothNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acscNumber", function() { return acscNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acschNumber", function() { return acschNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asecNumber", function() { return asecNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asechNumber", function() { return asechNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinNumber", function() { return asinNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinhNumber", function() { return asinhNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanNumber", function() { return atanNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2Number", function() { return atan2Number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanhNumber", function() { return atanhNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cosNumber", function() { return cosNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coshNumber", function() { return coshNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cotNumber", function() { return cotNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cothNumber", function() { return cothNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cscNumber", function() { return cscNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cschNumber", function() { return cschNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "secNumber", function() { return secNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sechNumber", function() { return sechNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinNumber", function() { return sinNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinhNumber", function() { return sinhNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanNumber", function() { return tanNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanhNumber", function() { return tanhNumber; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");

var n1 = 'number';
var n2 = 'number, number';
function acosNumber(x) {
  return Math.acos(x);
}
acosNumber.signature = n1;
function acoshNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["acosh"])(x);
}
acoshNumber.signature = n1;
function acotNumber(x) {
  return Math.atan(1 / x);
}
acotNumber.signature = n1;
function acothNumber(x) {
  return isFinite(x) ? (Math.log((x + 1) / x) + Math.log(x / (x - 1))) / 2 : 0;
}
acothNumber.signature = n1;
function acscNumber(x) {
  return Math.asin(1 / x);
}
acscNumber.signature = n1;
function acschNumber(x) {
  var xInv = 1 / x;
  return Math.log(xInv + Math.sqrt(xInv * xInv + 1));
}
acschNumber.signature = n1;
function asecNumber(x) {
  return Math.acos(1 / x);
}
asecNumber.signature = n1;
function asechNumber(x) {
  var xInv = 1 / x;
  var ret = Math.sqrt(xInv * xInv - 1);
  return Math.log(ret + xInv);
}
asechNumber.signature = n1;
function asinNumber(x) {
  return Math.asin(x);
}
asinNumber.signature = n1;
function asinhNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["asinh"])(x);
}
asinhNumber.signature = n1;
function atanNumber(x) {
  return Math.atan(x);
}
atanNumber.signature = n1;
function atan2Number(y, x) {
  return Math.atan2(y, x);
}
atan2Number.signature = n2;
function atanhNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["atanh"])(x);
}
atanhNumber.signature = n1;
function cosNumber(x) {
  return Math.cos(x);
}
cosNumber.signature = n1;
function coshNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["cosh"])(x);
}
coshNumber.signature = n1;
function cotNumber(x) {
  return 1 / Math.tan(x);
}
cotNumber.signature = n1;
function cothNumber(x) {
  var e = Math.exp(2 * x);
  return (e + 1) / (e - 1);
}
cothNumber.signature = n1;
function cscNumber(x) {
  return 1 / Math.sin(x);
}
cscNumber.signature = n1;
function cschNumber(x) {
  // consider values close to zero (+/-)
  if (x === 0) {
    return Number.POSITIVE_INFINITY;
  } else {
    return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["sign"])(x);
  }
}
cschNumber.signature = n1;
function secNumber(x) {
  return 1 / Math.cos(x);
}
secNumber.signature = n1;
function sechNumber(x) {
  return 2 / (Math.exp(x) + Math.exp(-x));
}
sechNumber.signature = n1;
function sinNumber(x) {
  return Math.sin(x);
}
sinNumber.signature = n1;
function sinhNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["sinh"])(x);
}
sinhNumber.signature = n1;
function tanNumber(x) {
  return Math.tan(x);
}
tanNumber.signature = n1;
function tanhNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["tanh"])(x);
}
tanhNumber.signature = n1;

/***/ }),

/***/ "../node_modules/mathjs/es/plain/number/utils.js":
/*!*******************************************************!*\
  !*** ../node_modules/mathjs/es/plain/number/utils.js ***!
  \*******************************************************/
/*! exports provided: isIntegerNumber, isNegativeNumber, isPositiveNumber, isZeroNumber, isNaNNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIntegerNumber", function() { return isIntegerNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNegativeNumber", function() { return isNegativeNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPositiveNumber", function() { return isPositiveNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isZeroNumber", function() { return isZeroNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNaNNumber", function() { return isNaNNumber; });
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");

var n1 = 'number';
function isIntegerNumber(x) {
  return Object(_utils_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(x);
}
isIntegerNumber.signature = n1;
function isNegativeNumber(x) {
  return x < 0;
}
isNegativeNumber.signature = n1;
function isPositiveNumber(x) {
  return x > 0;
}
isPositiveNumber.signature = n1;
function isZeroNumber(x) {
  return x === 0;
}
isZeroNumber.signature = n1;
function isNaNNumber(x) {
  return Number.isNaN(x);
}
isNaNNumber.signature = n1;

/***/ }),

/***/ "../node_modules/mathjs/es/type/bignumber/BigNumber.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/type/bignumber/BigNumber.js ***!
  \*************************************************************/
/*! exports provided: createBigNumberClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBigNumberClass", function() { return createBigNumberClass; });
/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ "../node_modules/decimal.js/decimal.js");
/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(decimal_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'BigNumber';
var dependencies = ['?on', 'config'];
var createBigNumberClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var on = _ref.on,
      config = _ref.config;
  var BigNumber = decimal_js__WEBPACK_IMPORTED_MODULE_0___default.a.clone({
    precision: config.precision
  });
  /**
   * Attach type information
   */

  BigNumber.prototype.type = 'BigNumber';
  BigNumber.prototype.isBigNumber = true;
  /**
   * Get a JSON representation of a BigNumber containing
   * type information
   * @returns {Object} Returns a JSON object structured as:
   *                   `{"mathjs": "BigNumber", "value": "0.2"}`
   */

  BigNumber.prototype.toJSON = function () {
    return {
      mathjs: 'BigNumber',
      value: this.toString()
    };
  };
  /**
   * Instantiate a BigNumber from a JSON object
   * @param {Object} json  a JSON object structured as:
   *                       `{"mathjs": "BigNumber", "value": "0.2"}`
   * @return {BigNumber}
   */


  BigNumber.fromJSON = function (json) {
    return new BigNumber(json.value);
  };

  if (on) {
    // listen for changed in the configuration, automatically apply changed precision
    on('config', function (curr, prev) {
      if (curr.precision !== prev.precision) {
        BigNumber.config({
          precision: curr.precision
        });
      }
    });
  }

  return BigNumber;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/bignumber/function/bignumber.js":
/*!**********************************************************************!*\
  !*** ../node_modules/mathjs/es/type/bignumber/function/bignumber.js ***!
  \**********************************************************************/
/*! exports provided: createBignumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBignumber", function() { return createBignumber; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'bignumber';
var dependencies = ['typed', 'BigNumber'];
var createBignumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      BigNumber = _ref.BigNumber;

  /**
   * Create a BigNumber, which can store numbers with arbitrary precision.
   * When a matrix is provided, all elements will be converted to BigNumber.
   *
   * Syntax:
   *
   *    math.bignumber(x)
   *
   * Examples:
   *
   *    0.1 + 0.2                                  // returns number 0.30000000000000004
   *    math.bignumber(0.1) + math.bignumber(0.2)  // returns BigNumber 0.3
   *
   *
   *    7.2e500                                    // returns number Infinity
   *    math.bignumber('7.2e500')                  // returns BigNumber 7.2e500
   *
   * See also:
   *
   *    boolean, complex, index, matrix, string, unit
   *
   * @param {number | string | Fraction | BigNumber | Array | Matrix | boolean | null} [value]  Value for the big number,
   *                                                    0 by default.
   * @returns {BigNumber} The created bignumber
   */
  return typed('bignumber', {
    '': function _() {
      return new BigNumber(0);
    },
    number: function number(x) {
      // convert to string to prevent errors in case of >15 digits
      return new BigNumber(x + '');
    },
    string: function string(x) {
      return new BigNumber(x);
    },
    BigNumber: function BigNumber(x) {
      // we assume a BigNumber is immutable
      return x;
    },
    Fraction: function Fraction(x) {
      return new BigNumber(x.n).div(x.d).times(x.s);
    },
    "null": function _null(x) {
      return new BigNumber(0);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/boolean.js":
/*!*************************************************!*\
  !*** ../node_modules/mathjs/es/type/boolean.js ***!
  \*************************************************/
/*! exports provided: createBoolean */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBoolean", function() { return createBoolean; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'boolean';
var dependencies = ['typed'];
var createBoolean = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Create a boolean or convert a string or number to a boolean.
   * In case of a number, `true` is returned for non-zero numbers, and `false` in
   * case of zero.
   * Strings can be `'true'` or `'false'`, or can contain a number.
   * When value is a matrix, all elements will be converted to boolean.
   *
   * Syntax:
   *
   *    math.boolean(x)
   *
   * Examples:
   *
   *    math.boolean(0)     // returns false
   *    math.boolean(1)     // returns true
   *    math.boolean(-3)     // returns true
   *    math.boolean('true')     // returns true
   *    math.boolean('false')     // returns false
   *    math.boolean([1, 0, 1, 1])     // returns [true, false, true, true]
   *
   * See also:
   *
   *    bignumber, complex, index, matrix, string, unit
   *
   * @param {string | number | boolean | Array | Matrix | null} value  A value of any type
   * @return {boolean | Array | Matrix} The boolean value
   */
  return typed(name, {
    '': function _() {
      return false;
    },
    "boolean": function boolean(x) {
      return x;
    },
    number: function number(x) {
      return !!x;
    },
    "null": function _null(x) {
      return false;
    },
    BigNumber: function BigNumber(x) {
      return !x.isZero();
    },
    string: function string(x) {
      // try case insensitive
      var lcase = x.toLowerCase();

      if (lcase === 'true') {
        return true;
      } else if (lcase === 'false') {
        return false;
      } // test whether value is a valid number


      var num = Number(x);

      if (x !== '' && !isNaN(num)) {
        return !!num;
      }

      throw new Error('Cannot convert "' + x + '" to a boolean');
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/chain/Chain.js":
/*!*****************************************************!*\
  !*** ../node_modules/mathjs/es/type/chain/Chain.js ***!
  \*****************************************************/
/*! exports provided: createChainClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createChainClass", function() { return createChainClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'Chain';
var dependencies = ['?on', 'math'];
var createChainClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var on = _ref.on,
      math = _ref.math;

  /**
   * @constructor Chain
   * Wrap any value in a chain, allowing to perform chained operations on
   * the value.
   *
   * All methods available in the math.js library can be called upon the chain,
   * and then will be evaluated with the value itself as first argument.
   * The chain can be closed by executing chain.done(), which will return
   * the final value.
   *
   * The Chain has a number of special functions:
   * - done()             Finalize the chained operation and return the
   *                      chain's value.
   * - valueOf()          The same as done()
   * - toString()         Returns a string representation of the chain's value.
   *
   * @param {*} [value]
   */
  function Chain(value) {
    if (!(this instanceof Chain)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isChain"])(value)) {
      this.value = value.value;
    } else {
      this.value = value;
    }
  }
  /**
   * Attach type information
   */


  Chain.prototype.type = 'Chain';
  Chain.prototype.isChain = true;
  /**
   * Close the chain. Returns the final value.
   * Does the same as method valueOf()
   * @returns {*} value
   */

  Chain.prototype.done = function () {
    return this.value;
  };
  /**
   * Close the chain. Returns the final value.
   * Does the same as method done()
   * @returns {*} value
   */


  Chain.prototype.valueOf = function () {
    return this.value;
  };
  /**
   * Get a string representation of the value in the chain
   * @returns {string}
   */


  Chain.prototype.toString = function () {
    return Object(_utils_string__WEBPACK_IMPORTED_MODULE_1__["format"])(this.value);
  };
  /**
   * Get a JSON representation of the chain
   * @returns {Object}
   */


  Chain.prototype.toJSON = function () {
    return {
      mathjs: 'Chain',
      value: this.value
    };
  };
  /**
   * Instantiate a Chain from its JSON representation
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "Chain", value: ...}`,
   *                       where mathjs is optional
   * @returns {Chain}
   */


  Chain.fromJSON = function (json) {
    return new Chain(json.value);
  };
  /**
   * Create a proxy method for the chain
   * @param {string} name
   * @param {Function} fn      The function to be proxied
   *                           If fn is no function, it is silently ignored.
   * @private
   */


  function createProxy(name, fn) {
    if (typeof fn === 'function') {
      Chain.prototype[name] = chainify(fn);
    }
  }
  /**
   * Create a proxy method for the chain
   * @param {string} name
   * @param {function} resolver   The function resolving with the
   *                              function to be proxied
   * @private
   */


  function createLazyProxy(name, resolver) {
    Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["lazy"])(Chain.prototype, name, function outerResolver() {
      var fn = resolver();

      if (typeof fn === 'function') {
        return chainify(fn);
      }

      return undefined; // if not a function, ignore
    });
  }
  /**
   * Make a function chainable
   * @param {function} fn
   * @return {Function} chain function
   * @private
   */


  function chainify(fn) {
    return function () {
      var args = [this.value]; // `this` will be the context of a Chain instance

      for (var i = 0; i < arguments.length; i++) {
        args[i + 1] = arguments[i];
      }

      return new Chain(fn.apply(fn, args));
    };
  }
  /**
   * Create a proxy for a single method, or an object with multiple methods.
   * Example usage:
   *
   *   Chain.createProxy('add', function add (x, y) {...})
   *   Chain.createProxy({
   *     add:      function add (x, y) {...},
   *     subtract: function subtract (x, y) {...}
   *   }
   *
   * @param {string | Object} arg0   A name (string), or an object with
   *                                 functions
   * @param {*} [arg1]               A function, when arg0 is a name
   */


  Chain.createProxy = function (arg0, arg1) {
    if (typeof arg0 === 'string') {
      // createProxy(name, value)
      createProxy(arg0, arg1);
    } else {
      var _loop = function _loop(_name) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_2__["hasOwnProperty"])(arg0, _name) && excludedNames[_name] === undefined) {
          createLazyProxy(_name, function () {
            return arg0[_name];
          });
        }
      };

      // createProxy(values)
      for (var _name in arg0) {
        _loop(_name);
      }
    }
  };

  var excludedNames = {
    expression: true,
    docs: true,
    type: true,
    classes: true,
    json: true,
    error: true,
    isChain: true // conflicts with the property isChain of a Chain instance

  }; // create proxy for everything that is in math.js

  Chain.createProxy(math); // register on the import event, automatically add a proxy for every imported function.

  if (on) {
    on('import', function (name, resolver, path) {
      if (!path) {
        // an imported function (not a data type or something special)
        createLazyProxy(name, resolver);
      }
    });
  }

  return Chain;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/chain/function/chain.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/type/chain/function/chain.js ***!
  \**************************************************************/
/*! exports provided: createChain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createChain", function() { return createChain; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'chain';
var dependencies = ['typed', 'Chain'];
var createChain = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Chain = _ref.Chain;

  /**
   * Wrap any value in a chain, allowing to perform chained operations on
   * the value.
   *
   * All methods available in the math.js library can be called upon the chain,
   * and then will be evaluated with the value itself as first argument.
   * The chain can be closed by executing `chain.done()`, which returns
   * the final value.
   *
   * The chain has a number of special functions:
   *
   * - `done()`     Finalize the chain and return the chain's value.
   * - `valueOf()`  The same as `done()`
   * - `toString()` Executes `math.format()` onto the chain's value, returning
   *                a string representation of the value.
   *
   * Syntax:
   *
   *    math.chain(value)
   *
   * Examples:
   *
   *     math.chain(3)
   *         .add(4)
   *         .subtract(2)
   *         .done()     // 5
   *
   *     math.chain( [[1, 2], [3, 4]] )
   *         .subset(math.index(0, 0), 8)
   *         .multiply(3)
   *         .done()     // [[24, 6], [9, 12]]
   *
   * @param {*} [value]   A value of any type on which to start a chained operation.
   * @return {math.Chain} The created chain
   */
  return typed(name, {
    '': function _() {
      return new Chain();
    },
    any: function any(value) {
      return new Chain(value);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/complex/Complex.js":
/*!*********************************************************!*\
  !*** ../node_modules/mathjs/es/type/complex/Complex.js ***!
  \*********************************************************/
/*! exports provided: createComplexClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createComplexClass", function() { return createComplexClass; });
/* harmony import */ var complex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! complex.js */ "../node_modules/complex.js/complex.js");
/* harmony import */ var complex_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(complex_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }





var name = 'Complex';
var dependencies = [];
var createComplexClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function () {
  /**
   * Attach type information
   */
  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.type = 'Complex';
  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.isComplex = true;
  /**
   * Get a JSON representation of the complex number
   * @returns {Object} Returns a JSON object structured as:
   *                   `{"mathjs": "Complex", "re": 2, "im": 3}`
   */

  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.toJSON = function () {
    return {
      mathjs: 'Complex',
      re: this.re,
      im: this.im
    };
  };
  /*
   * Return the value of the complex number in polar notation
   * The angle phi will be set in the interval of [-pi, pi].
   * @return {{r: number, phi: number}} Returns and object with properties r and phi.
   */


  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.toPolar = function () {
    return {
      r: this.abs(),
      phi: this.arg()
    };
  };
  /**
   * Get a string representation of the complex number,
   * with optional formatting options.
   * @param {Object | number | Function} [options]  Formatting options. See
   *                                                lib/utils/number:format for a
   *                                                description of the available
   *                                                options.
   * @return {string} str
   */


  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.format = function (options) {
    var str = '';
    var im = this.im;
    var re = this.re;
    var strRe = Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["format"])(this.re, options);
    var strIm = Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["format"])(this.im, options); // round either re or im when smaller than the configured precision

    var precision = Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(options) ? options : options ? options.precision : null;

    if (precision !== null) {
      var epsilon = Math.pow(10, -precision);

      if (Math.abs(re / im) < epsilon) {
        re = 0;
      }

      if (Math.abs(im / re) < epsilon) {
        im = 0;
      }
    }

    if (im === 0) {
      // real value
      str = strRe;
    } else if (re === 0) {
      // purely complex value
      if (im === 1) {
        str = 'i';
      } else if (im === -1) {
        str = '-i';
      } else {
        str = strIm + 'i';
      }
    } else {
      // complex value
      if (im < 0) {
        if (im === -1) {
          str = strRe + ' - i';
        } else {
          str = strRe + ' - ' + strIm.substring(1) + 'i';
        }
      } else {
        if (im === 1) {
          str = strRe + ' + i';
        } else {
          str = strRe + ' + ' + strIm + 'i';
        }
      }
    }

    return str;
  };
  /**
   * Create a complex number from polar coordinates
   *
   * Usage:
   *
   *     Complex.fromPolar(r: number, phi: number) : Complex
   *     Complex.fromPolar({r: number, phi: number}) : Complex
   *
   * @param {*} args...
   * @return {Complex}
   */


  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.fromPolar = function (args) {
    switch (arguments.length) {
      case 1:
        {
          var arg = arguments[0];

          if (_typeof(arg) === 'object') {
            return complex_js__WEBPACK_IMPORTED_MODULE_0___default()(arg);
          } else {
            throw new TypeError('Input has to be an object with r and phi keys.');
          }
        }

      case 2:
        {
          var r = arguments[0];
          var phi = arguments[1];

          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(r)) {
            if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isUnit"])(phi) && phi.hasBase('ANGLE')) {
              // convert unit to a number in radians
              phi = phi.toNumber('rad');
            }

            if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(phi)) {
              return new complex_js__WEBPACK_IMPORTED_MODULE_0___default.a({
                r: r,
                phi: phi
              });
            }

            throw new TypeError('Phi is not a number nor an angle unit.');
          } else {
            throw new TypeError('Radius r is not a number.');
          }
        }

      default:
        throw new SyntaxError('Wrong number of arguments in function fromPolar');
    }
  };

  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.valueOf = complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.toString;
  /**
   * Create a Complex number from a JSON object
   * @param {Object} json  A JSON Object structured as
   *                       {"mathjs": "Complex", "re": 2, "im": 3}
   *                       All properties are optional, default values
   *                       for `re` and `im` are 0.
   * @return {Complex} Returns a new Complex number
   */

  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.fromJSON = function (json) {
    return new complex_js__WEBPACK_IMPORTED_MODULE_0___default.a(json);
  };
  /**
   * Compare two complex numbers, `a` and `b`:
   *
   * - Returns 1 when the real part of `a` is larger than the real part of `b`
   * - Returns -1 when the real part of `a` is smaller than the real part of `b`
   * - Returns 1 when the real parts are equal
   *   and the imaginary part of `a` is larger than the imaginary part of `b`
   * - Returns -1 when the real parts are equal
   *   and the imaginary part of `a` is smaller than the imaginary part of `b`
   * - Returns 0 when both real and imaginary parts are equal.
   *
   * @params {Complex} a
   * @params {Complex} b
   * @returns {number} Returns the comparison result: -1, 0, or 1
   */


  complex_js__WEBPACK_IMPORTED_MODULE_0___default.a.compare = function (a, b) {
    if (a.re > b.re) {
      return 1;
    }

    if (a.re < b.re) {
      return -1;
    }

    if (a.im > b.im) {
      return 1;
    }

    if (a.im < b.im) {
      return -1;
    }

    return 0;
  };

  return complex_js__WEBPACK_IMPORTED_MODULE_0___default.a;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/complex/function/complex.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/complex/function/complex.js ***!
  \******************************************************************/
/*! exports provided: createComplex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createComplex", function() { return createComplex; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'complex';
var dependencies = ['typed', 'Complex'];
var createComplex = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Complex = _ref.Complex;

  /**
   * Create a complex value or convert a value to a complex value.
   *
   * Syntax:
   *
   *     math.complex()                           // creates a complex value with zero
   *                                              // as real and imaginary part.
   *     math.complex(re : number, im : string)   // creates a complex value with provided
   *                                              // values for real and imaginary part.
   *     math.complex(re : number)                // creates a complex value with provided
   *                                              // real value and zero imaginary part.
   *     math.complex(complex : Complex)          // clones the provided complex value.
   *     math.complex(arg : string)               // parses a string into a complex value.
   *     math.complex(array : Array)              // converts the elements of the array
   *                                              // or matrix element wise into a
   *                                              // complex value.
   *     math.complex({re: number, im: number})   // creates a complex value with provided
   *                                              // values for real an imaginary part.
   *     math.complex({r: number, phi: number})   // creates a complex value with provided
   *                                              // polar coordinates
   *
   * Examples:
   *
   *    const a = math.complex(3, -4)     // a = Complex 3 - 4i
   *    a.re = 5                          // a = Complex 5 - 4i
   *    const i = a.im                    // Number -4
   *    const b = math.complex('2 + 6i')  // Complex 2 + 6i
   *    const c = math.complex()          // Complex 0 + 0i
   *    const d = math.add(a, b)          // Complex 5 + 2i
   *
   * See also:
   *
   *    bignumber, boolean, index, matrix, number, string, unit
   *
   * @param {* | Array | Matrix} [args]
   *            Arguments specifying the real and imaginary part of the complex number
   * @return {Complex | Array | Matrix} Returns a complex value
   */
  return typed('complex', {
    '': function _() {
      return Complex.ZERO;
    },
    number: function number(x) {
      return new Complex(x, 0);
    },
    'number, number': function numberNumber(re, im) {
      return new Complex(re, im);
    },
    // TODO: this signature should be redundant
    'BigNumber, BigNumber': function BigNumberBigNumber(re, im) {
      return new Complex(re.toNumber(), im.toNumber());
    },
    Fraction: function Fraction(x) {
      return new Complex(x.valueOf(), 0);
    },
    Complex: function Complex(x) {
      return x.clone();
    },
    string: function string(x) {
      return Complex(x); // for example '2 + 3i'
    },
    "null": function _null(x) {
      return Complex(0);
    },
    Object: function Object(x) {
      if ('re' in x && 'im' in x) {
        return new Complex(x.re, x.im);
      }

      if ('r' in x && 'phi' in x || 'abs' in x && 'arg' in x) {
        return new Complex(x);
      }

      throw new Error('Expected object with properties (re and im) or (r and phi) or (abs and arg)');
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/fraction/Fraction.js":
/*!***********************************************************!*\
  !*** ../node_modules/mathjs/es/type/fraction/Fraction.js ***!
  \***********************************************************/
/*! exports provided: createFractionClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFractionClass", function() { return createFractionClass; });
/* harmony import */ var fraction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fraction.js */ "../node_modules/fraction.js/fraction.js");
/* harmony import */ var fraction_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fraction_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");


var name = 'Fraction';
var dependencies = [];
var createFractionClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function () {
  /**
   * Attach type information
   */
  fraction_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.type = 'Fraction';
  fraction_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.isFraction = true;
  /**
   * Get a JSON representation of a Fraction containing type information
   * @returns {Object} Returns a JSON object structured as:
   *                   `{"mathjs": "Fraction", "n": 3, "d": 8}`
   */

  fraction_js__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.toJSON = function () {
    return {
      mathjs: 'Fraction',
      n: this.s * this.n,
      d: this.d
    };
  };
  /**
   * Instantiate a Fraction from a JSON object
   * @param {Object} json  a JSON object structured as:
   *                       `{"mathjs": "Fraction", "n": 3, "d": 8}`
   * @return {BigNumber}
   */


  fraction_js__WEBPACK_IMPORTED_MODULE_0___default.a.fromJSON = function (json) {
    return new fraction_js__WEBPACK_IMPORTED_MODULE_0___default.a(json);
  };

  return fraction_js__WEBPACK_IMPORTED_MODULE_0___default.a;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/fraction/function/fraction.js":
/*!********************************************************************!*\
  !*** ../node_modules/mathjs/es/type/fraction/function/fraction.js ***!
  \********************************************************************/
/*! exports provided: createFraction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFraction", function() { return createFraction; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'fraction';
var dependencies = ['typed', 'Fraction'];
var createFraction = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Fraction = _ref.Fraction;

  /**
   * Create a fraction convert a value to a fraction.
   *
   * Syntax:
   *     math.fraction(numerator, denominator)
   *     math.fraction({n: numerator, d: denominator})
   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries
   *                                                   into fractions
   *
   * Examples:
   *
   *     math.fraction(1, 3)
   *     math.fraction('2/3')
   *     math.fraction({n: 2, d: 3})
   *     math.fraction([0.2, 0.25, 1.25])
   *
   * See also:
   *
   *    bignumber, number, string, unit
   *
   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]
   *            Arguments specifying the numerator and denominator of
   *            the fraction
   * @return {Fraction | Array | Matrix} Returns a fraction
   */
  return typed('fraction', {
    number: function number(x) {
      if (!isFinite(x) || isNaN(x)) {
        throw new Error(x + ' cannot be represented as a fraction');
      }

      return new Fraction(x);
    },
    string: function string(x) {
      return new Fraction(x);
    },
    'number, number': function numberNumber(numerator, denominator) {
      return new Fraction(numerator, denominator);
    },
    "null": function _null(x) {
      return new Fraction(0);
    },
    BigNumber: function BigNumber(x) {
      return new Fraction(x.toString());
    },
    Fraction: function Fraction(x) {
      return x; // fractions are immutable
    },
    Object: function Object(x) {
      return new Fraction(x);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/DenseMatrix.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/DenseMatrix.js ***!
  \************************************************************/
/*! exports provided: createDenseMatrixClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDenseMatrixClass", function() { return createDenseMatrixClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");







var name = 'DenseMatrix';
var dependencies = ['Matrix'];
var createDenseMatrixClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_6__["factory"])(name, dependencies, function (_ref) {
  var Matrix = _ref.Matrix;

  /**
   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.
   * @class DenseMatrix
   */
  function DenseMatrix(data, datatype) {
    if (!(this instanceof DenseMatrix)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (datatype && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(datatype)) {
      throw new Error('Invalid datatype: ' + datatype);
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(data)) {
      // check data is a DenseMatrix
      if (data.type === 'DenseMatrix') {
        // clone data & size
        this._data = Object(_utils_object__WEBPACK_IMPORTED_MODULE_4__["clone"])(data._data);
        this._size = Object(_utils_object__WEBPACK_IMPORTED_MODULE_4__["clone"])(data._size);
        this._datatype = datatype || data._datatype;
      } else {
        // build data from existing matrix
        this._data = data.toArray();
        this._size = data.size();
        this._datatype = datatype || data._datatype;
      }
    } else if (data && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data.data) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data.size)) {
      // initialize fields from JSON representation
      this._data = data.data;
      this._size = data.size; // verify the dimensions of the array

      Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validate"])(this._data, this._size);
      this._datatype = datatype || data.datatype;
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data)) {
      // replace nested Matrices with Arrays
      this._data = preprocess(data); // get the dimensions of the array

      this._size = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(this._data); // verify the dimensions of the array, TODO: compute size while processing array

      Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validate"])(this._data, this._size); // data type unknown

      this._datatype = datatype;
    } else if (data) {
      // unsupported type
      throw new TypeError('Unsupported type of data (' + Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(data) + ')');
    } else {
      // nothing provided
      this._data = [];
      this._size = [0];
      this._datatype = datatype;
    }
  }

  DenseMatrix.prototype = new Matrix();
  /**
   * Create a new DenseMatrix
   */

  DenseMatrix.prototype.createDenseMatrix = function (data, datatype) {
    return new DenseMatrix(data, datatype);
  };
  /**
   * Attach type information
   */


  DenseMatrix.prototype.type = 'DenseMatrix';
  DenseMatrix.prototype.isDenseMatrix = true;
  /**
   * Get the matrix type
   *
   * Usage:
   *    const matrixType = matrix.getDataType()  // retrieves the matrix type
   *
   * @memberOf DenseMatrix
   * @return {string}   type information; if multiple types are found from the Matrix, it will return "mixed"
   */

  DenseMatrix.prototype.getDataType = function () {
    return Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["getArrayDataType"])(this._data, _utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"]);
  };
  /**
   * Get the storage format used by the matrix.
   *
   * Usage:
   *     const format = matrix.storage()  // retrieve storage format
   *
   * @memberof DenseMatrix
   * @return {string}           The storage format.
   */


  DenseMatrix.prototype.storage = function () {
    return 'dense';
  };
  /**
   * Get the datatype of the data stored in the matrix.
   *
   * Usage:
   *     const format = matrix.datatype()   // retrieve matrix datatype
   *
   * @memberof DenseMatrix
   * @return {string}           The datatype.
   */


  DenseMatrix.prototype.datatype = function () {
    return this._datatype;
  };
  /**
   * Create a new DenseMatrix
   * @memberof DenseMatrix
   * @param {Array} data
   * @param {string} [datatype]
   */


  DenseMatrix.prototype.create = function (data, datatype) {
    return new DenseMatrix(data, datatype);
  };
  /**
   * Get a subset of the matrix, or replace a subset of the matrix.
   *
   * Usage:
   *     const subset = matrix.subset(index)               // retrieve subset
   *     const value = matrix.subset(index, replacement)   // replace subset
   *
   * @memberof DenseMatrix
   * @param {Index} index
   * @param {Array | Matrix | *} [replacement]
   * @param {*} [defaultValue=0]      Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be filled with zeros.
   */


  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {
    switch (arguments.length) {
      case 1:
        return _get(this, index);
      // intentional fall through

      case 2:
      case 3:
        return _set(this, index, replacement, defaultValue);

      default:
        throw new SyntaxError('Wrong number of arguments');
    }
  };
  /**
   * Get a single element from the matrix.
   * @memberof DenseMatrix
   * @param {number[]} index   Zero-based index
   * @return {*} value
   */


  DenseMatrix.prototype.get = function (index) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(index)) {
      throw new TypeError('Array expected');
    }

    if (index.length !== this._size.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__["DimensionError"](index.length, this._size.length);
    } // check index


    for (var x = 0; x < index.length; x++) {
      Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(index[x], this._size[x]);
    }

    var data = this._data;

    for (var i = 0, ii = index.length; i < ii; i++) {
      var indexI = index[i];
      Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(indexI, data.length);
      data = data[indexI];
    }

    return data;
  };
  /**
   * Replace a single element in the matrix.
   * @memberof DenseMatrix
   * @param {number[]} index   Zero-based index
   * @param {*} value
   * @param {*} [defaultValue]        Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be left undefined.
   * @return {DenseMatrix} self
   */


  DenseMatrix.prototype.set = function (index, value, defaultValue) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(index)) {
      throw new TypeError('Array expected');
    }

    if (index.length < this._size.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__["DimensionError"](index.length, this._size.length, '<');
    }

    var i, ii, indexI; // enlarge matrix when needed

    var size = index.map(function (i) {
      return i + 1;
    });

    _fit(this, size, defaultValue); // traverse over the dimensions


    var data = this._data;

    for (i = 0, ii = index.length - 1; i < ii; i++) {
      indexI = index[i];
      Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(indexI, data.length);
      data = data[indexI];
    } // set new value


    indexI = index[index.length - 1];
    Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(indexI, data.length);
    data[indexI] = value;
    return this;
  };
  /**
   * Get a submatrix of this matrix
   * @memberof DenseMatrix
   * @param {DenseMatrix} matrix
   * @param {Index} index   Zero-based index
   * @private
   */


  function _get(matrix, index) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndex"])(index)) {
      throw new TypeError('Invalid index');
    }

    var isScalar = index.isScalar();

    if (isScalar) {
      // return a scalar
      return matrix.get(index.min());
    } else {
      // validate dimensions
      var size = index.size();

      if (size.length !== matrix._size.length) {
        throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__["DimensionError"](size.length, matrix._size.length);
      } // validate if any of the ranges in the index is out of range


      var min = index.min();
      var max = index.max();

      for (var i = 0, ii = matrix._size.length; i < ii; i++) {
        Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(min[i], matrix._size[i]);
        Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(max[i], matrix._size[i]);
      } // retrieve submatrix
      // TODO: more efficient when creating an empty matrix and setting _data and _size manually


      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);
    }
  }
  /**
   * Recursively get a submatrix of a multi dimensional matrix.
   * Index is not checked for correct number or length of dimensions.
   * @memberof DenseMatrix
   * @param {Array} data
   * @param {Index} index
   * @param {number} dims   Total number of dimensions
   * @param {number} dim    Current dimension
   * @return {Array} submatrix
   * @private
   */


  function _getSubmatrix(data, index, dims, dim) {
    var last = dim === dims - 1;
    var range = index.dimension(dim);

    if (last) {
      return range.map(function (i) {
        Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(i, data.length);
        return data[i];
      }).valueOf();
    } else {
      return range.map(function (i) {
        Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(i, data.length);
        var child = data[i];
        return _getSubmatrix(child, index, dims, dim + 1);
      }).valueOf();
    }
  }
  /**
   * Replace a submatrix in this matrix
   * Indexes are zero-based.
   * @memberof DenseMatrix
   * @param {DenseMatrix} matrix
   * @param {Index} index
   * @param {DenseMatrix | Array | *} submatrix
   * @param {*} defaultValue          Default value, filled in on new entries when
   *                                  the matrix is resized.
   * @return {DenseMatrix} matrix
   * @private
   */


  function _set(matrix, index, submatrix, defaultValue) {
    if (!index || index.isIndex !== true) {
      throw new TypeError('Invalid index');
    } // get index size and check whether the index contains a single value


    var iSize = index.size();
    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed

    var sSize;

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(submatrix)) {
      sSize = submatrix.size();
      submatrix = submatrix.valueOf();
    } else {
      sSize = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["arraySize"])(submatrix);
    }

    if (isScalar) {
      // set a scalar
      // check whether submatrix is a scalar
      if (sSize.length !== 0) {
        throw new TypeError('Scalar expected');
      }

      matrix.set(index.min(), submatrix, defaultValue);
    } else {
      // set a submatrix
      // validate dimensions
      if (iSize.length < matrix._size.length) {
        throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__["DimensionError"](iSize.length, matrix._size.length, '<');
      }

      if (sSize.length < iSize.length) {
        // calculate number of missing outer dimensions
        var i = 0;
        var outer = 0;

        while (iSize[i] === 1 && sSize[i] === 1) {
          i++;
        }

        while (iSize[i] === 1) {
          outer++;
          i++;
        } // unsqueeze both outer and inner dimensions


        submatrix = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["unsqueeze"])(submatrix, iSize.length, outer, sSize);
      } // check whether the size of the submatrix matches the index size


      if (!Object(_utils_object__WEBPACK_IMPORTED_MODULE_4__["deepStrictEqual"])(iSize, sSize)) {
        throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_5__["DimensionError"](iSize, sSize, '>');
      } // enlarge matrix when needed


      var size = index.max().map(function (i) {
        return i + 1;
      });

      _fit(matrix, size, defaultValue); // insert the sub matrix


      var dims = iSize.length;
      var dim = 0;

      _setSubmatrix(matrix._data, index, submatrix, dims, dim);
    }

    return matrix;
  }
  /**
   * Replace a submatrix of a multi dimensional matrix.
   * @memberof DenseMatrix
   * @param {Array} data
   * @param {Index} index
   * @param {Array} submatrix
   * @param {number} dims   Total number of dimensions
   * @param {number} dim
   * @private
   */


  function _setSubmatrix(data, index, submatrix, dims, dim) {
    var last = dim === dims - 1;
    var range = index.dimension(dim);

    if (last) {
      range.forEach(function (dataIndex, subIndex) {
        Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(dataIndex);
        data[dataIndex] = submatrix[subIndex[0]];
      });
    } else {
      range.forEach(function (dataIndex, subIndex) {
        Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(dataIndex);

        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);
      });
    }
  }
  /**
   * Resize the matrix to the given size. Returns a copy of the matrix when
   * `copy=true`, otherwise return the matrix itself (resize in place).
   *
   * @memberof DenseMatrix
   * @param {number[] || Matrix} size The new size the matrix should have.
   * @param {*} [defaultValue=0]      Default value, filled in on new entries.
   *                                  If not provided, the matrix elements will
   *                                  be filled with zeros.
   * @param {boolean} [copy]          Return a resized copy of the matrix
   *
   * @return {Matrix}                 The resized matrix
   */


  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {
    // validate arguments
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(size)) {
      throw new TypeError('Array or Matrix expected');
    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector


    var sizeArray = size.valueOf().map(function (value) {
      return Array.isArray(value) && value.length === 1 ? value[0] : value;
    }); // matrix to resize

    var m = copy ? this.clone() : this; // resize matrix

    return _resize(m, sizeArray, defaultValue);
  };

  function _resize(matrix, size, defaultValue) {
    // check size
    if (size.length === 0) {
      // first value in matrix
      var v = matrix._data; // go deep

      while (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(v)) {
        v = v[0];
      }

      return v;
    } // resize matrix


    matrix._size = size.slice(0); // copy the array

    matrix._data = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["resize"])(matrix._data, matrix._size, defaultValue); // return matrix

    return matrix;
  }
  /**
   * Reshape the matrix to the given size. Returns a copy of the matrix when
   * `copy=true`, otherwise return the matrix itself (reshape in place).
   *
   * NOTE: This might be better suited to copy by default, instead of modifying
   *       in place. For now, it operates in place to remain consistent with
   *       resize().
   *
   * @memberof DenseMatrix
   * @param {number[]} size           The new size the matrix should have.
   * @param {boolean} [copy]          Return a reshaped copy of the matrix
   *
   * @return {Matrix}                 The reshaped matrix
   */


  DenseMatrix.prototype.reshape = function (size, copy) {
    var m = copy ? this.clone() : this;
    m._data = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["reshape"])(m._data, size);
    m._size = size.slice(0);
    return m;
  };
  /**
   * Enlarge the matrix when it is smaller than given size.
   * If the matrix is larger or equal sized, nothing is done.
   * @memberof DenseMatrix
   * @param {DenseMatrix} matrix           The matrix to be resized
   * @param {number[]} size
   * @param {*} defaultValue          Default value, filled in on new entries.
   * @private
   */


  function _fit(matrix, size, defaultValue) {
    var // copy the array
    newSize = matrix._size.slice(0);

    var changed = false; // add dimensions when needed

    while (newSize.length < size.length) {
      newSize.push(0);
      changed = true;
    } // enlarge size when needed


    for (var i = 0, ii = size.length; i < ii; i++) {
      if (size[i] > newSize[i]) {
        newSize[i] = size[i];
        changed = true;
      }
    }

    if (changed) {
      // resize only when size is changed
      _resize(matrix, newSize, defaultValue);
    }
  }
  /**
   * Create a clone of the matrix
   * @memberof DenseMatrix
   * @return {DenseMatrix} clone
   */


  DenseMatrix.prototype.clone = function () {
    var m = new DenseMatrix({
      data: Object(_utils_object__WEBPACK_IMPORTED_MODULE_4__["clone"])(this._data),
      size: Object(_utils_object__WEBPACK_IMPORTED_MODULE_4__["clone"])(this._size),
      datatype: this._datatype
    });
    return m;
  };
  /**
   * Retrieve the size of the matrix.
   * @memberof DenseMatrix
   * @returns {number[]} size
   */


  DenseMatrix.prototype.size = function () {
    return this._size.slice(0); // return a clone of _size
  };
  /**
   * Create a new matrix with the results of the callback function executed on
   * each entry of the matrix.
   * @memberof DenseMatrix
   * @param {Function} callback   The callback function is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix being traversed.
   *
   * @return {DenseMatrix} matrix
   */


  DenseMatrix.prototype.map = function (callback) {
    // matrix instance
    var me = this;

    var recurse = function recurse(value, index) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value)) {
        return value.map(function (child, i) {
          return recurse(child, index.concat(i));
        });
      } else {
        return callback(value, index, me);
      }
    }; // determine the new datatype when the original matrix has datatype defined
    // TODO: should be done in matrix constructor instead


    var data = recurse(this._data, []);
    var datatype = this._datatype !== undefined ? Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["getArrayDataType"])(data, _utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"]) : undefined;
    return new DenseMatrix(data, datatype);
  };
  /**
   * Execute a callback function on each entry of the matrix.
   * @memberof DenseMatrix
   * @param {Function} callback   The callback function is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix being traversed.
   */


  DenseMatrix.prototype.forEach = function (callback) {
    // matrix instance
    var me = this;

    var recurse = function recurse(value, index) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value)) {
        value.forEach(function (child, i) {
          recurse(child, index.concat(i));
        });
      } else {
        callback(value, index, me);
      }
    };

    recurse(this._data, []);
  };
  /**
   * Create an Array with a copy of the data of the DenseMatrix
   * @memberof DenseMatrix
   * @returns {Array} array
   */


  DenseMatrix.prototype.toArray = function () {
    return Object(_utils_object__WEBPACK_IMPORTED_MODULE_4__["clone"])(this._data);
  };
  /**
   * Get the primitive value of the DenseMatrix: a multidimensional array
   * @memberof DenseMatrix
   * @returns {Array} array
   */


  DenseMatrix.prototype.valueOf = function () {
    return this._data;
  };
  /**
   * Get a string representation of the matrix, with optional formatting options.
   * @memberof DenseMatrix
   * @param {Object | number | Function} [options]  Formatting options. See
   *                                                lib/utils/number:format for a
   *                                                description of the available
   *                                                options.
   * @returns {string} str
   */


  DenseMatrix.prototype.format = function (options) {
    return Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(this._data, options);
  };
  /**
   * Get a string representation of the matrix
   * @memberof DenseMatrix
   * @returns {string} str
   */


  DenseMatrix.prototype.toString = function () {
    return Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(this._data);
  };
  /**
   * Get a JSON representation of the matrix
   * @memberof DenseMatrix
   * @returns {Object}
   */


  DenseMatrix.prototype.toJSON = function () {
    return {
      mathjs: 'DenseMatrix',
      data: this._data,
      size: this._size,
      datatype: this._datatype
    };
  };
  /**
   * Get the kth Matrix diagonal.
   *
   * @memberof DenseMatrix
   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.
   *
   * @returns {Matrix}                     The matrix with the diagonal values.
   */


  DenseMatrix.prototype.diagonal = function (k) {
    // validate k if any
    if (k) {
      // convert BigNumber to a number
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(k)) {
        k = k.toNumber();
      } // is must be an integer


      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(k) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_3__["isInteger"])(k)) {
        throw new TypeError('The parameter k must be an integer number');
      }
    } else {
      // default value
      k = 0;
    }

    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0; // rows & columns

    var rows = this._size[0];
    var columns = this._size[1]; // number diagonal values

    var n = Math.min(rows - kSub, columns - kSuper); // x is a matrix get diagonal from matrix

    var data = []; // loop rows

    for (var i = 0; i < n; i++) {
      data[i] = this._data[i + kSub][i + kSuper];
    } // create DenseMatrix


    return new DenseMatrix({
      data: data,
      size: [n],
      datatype: this._datatype
    });
  };
  /**
   * Create a diagonal matrix.
   *
   * @memberof DenseMatrix
   * @param {Array} size                     The matrix size.
   * @param {number | Matrix | Array } value The values for the diagonal.
   * @param {number | BigNumber} [k=0]       The kth diagonal where the vector will be filled in.
   * @param {number} [defaultValue]          The default value for non-diagonal
   * @param {string} [datatype]              The datatype for the diagonal
   *
   * @returns {DenseMatrix}
   */


  DenseMatrix.diagonal = function (size, value, k, defaultValue) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(size)) {
      throw new TypeError('Array expected, size parameter');
    }

    if (size.length !== 2) {
      throw new Error('Only two dimensions matrix are supported');
    } // map size & validate


    size = size.map(function (s) {
      // check it is a big number
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(s)) {
        // convert it
        s = s.toNumber();
      } // validate arguments


      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(s) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_3__["isInteger"])(s) || s < 1) {
        throw new Error('Size values must be positive integers');
      }

      return s;
    }); // validate k if any

    if (k) {
      // convert BigNumber to a number
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(k)) {
        k = k.toNumber();
      } // is must be an integer


      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(k) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_3__["isInteger"])(k)) {
        throw new TypeError('The parameter k must be an integer number');
      }
    } else {
      // default value
      k = 0;
    }

    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0; // rows and columns

    var rows = size[0];
    var columns = size[1]; // number of non-zero items

    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function

    var _value; // check value


    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value)) {
      // validate array
      if (value.length !== n) {
        // number of values in array must be n
        throw new Error('Invalid value array length');
      } // define function


      _value = function _value(i) {
        // return value @ i
        return value[i];
      };
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(value)) {
      // matrix size
      var ms = value.size(); // validate matrix

      if (ms.length !== 1 || ms[0] !== n) {
        // number of values in array must be n
        throw new Error('Invalid matrix length');
      } // define function


      _value = function _value(i) {
        // return value @ i
        return value.get([i]);
      };
    } else {
      // define function
      _value = function _value() {
        // return value
        return value;
      };
    } // discover default value if needed


    if (!defaultValue) {
      // check first value in array
      defaultValue = Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(_value(0)) ? _value(0).mul(0) // trick to create a BigNumber with value zero
      : 0;
    } // empty array


    var data = []; // check we need to resize array

    if (size.length > 0) {
      // resize array
      data = Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["resize"])(data, size, defaultValue); // fill diagonal

      for (var d = 0; d < n; d++) {
        data[d + kSub][d + kSuper] = _value(d);
      }
    } // create DenseMatrix


    return new DenseMatrix({
      data: data,
      size: [rows, columns]
    });
  };
  /**
   * Generate a matrix from a JSON object
   * @memberof DenseMatrix
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "DenseMatrix", data: [], size: []}`,
   *                       where mathjs is optional
   * @returns {DenseMatrix}
   */


  DenseMatrix.fromJSON = function (json) {
    return new DenseMatrix(json);
  };
  /**
   * Swap rows i and j in Matrix.
   *
   * @memberof DenseMatrix
   * @param {number} i       Matrix row index 1
   * @param {number} j       Matrix row index 2
   *
   * @return {Matrix}        The matrix reference
   */


  DenseMatrix.prototype.swapRows = function (i, j) {
    // check index
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(i) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_3__["isInteger"])(i) || !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(j) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_3__["isInteger"])(j)) {
      throw new Error('Row index must be positive integers');
    } // check dimensions


    if (this._size.length !== 2) {
      throw new Error('Only two dimensional matrix is supported');
    } // validate index


    Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(i, this._size[0]);
    Object(_utils_array__WEBPACK_IMPORTED_MODULE_1__["validateIndex"])(j, this._size[0]); // swap rows

    DenseMatrix._swapRows(i, j, this._data); // return current instance


    return this;
  };
  /**
   * Swap rows i and j in Dense Matrix data structure.
   *
   * @param {number} i       Matrix row index 1
   * @param {number} j       Matrix row index 2
   * @param {Array} data     Matrix data
   */


  DenseMatrix._swapRows = function (i, j, data) {
    // swap values i <-> j
    var vi = data[i];
    data[i] = data[j];
    data[j] = vi;
  };
  /**
   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and
   * Matrices. Replaces all nested Matrices with Arrays
   * @memberof DenseMatrix
   * @param {Array} data
   * @return {Array} data
   */


  function preprocess(data) {
    for (var i = 0, ii = data.length; i < ii; i++) {
      var elem = data[i];

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(elem)) {
        data[i] = preprocess(elem);
      } else if (elem && elem.isMatrix === true) {
        data[i] = preprocess(elem.valueOf());
      }
    }

    return data;
  }

  return DenseMatrix;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/FibonacciHeap.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/FibonacciHeap.js ***!
  \**************************************************************/
/*! exports provided: createFibonacciHeapClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFibonacciHeapClass", function() { return createFibonacciHeapClass; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'FibonacciHeap';
var dependencies = ['smaller', 'larger'];
var createFibonacciHeapClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var smaller = _ref.smaller,
      larger = _ref.larger;
  var oneOverLogPhi = 1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0);
  /**
   * Fibonacci Heap implementation, used interally for Matrix math.
   * @class FibonacciHeap
   * @constructor FibonacciHeap
   */

  function FibonacciHeap() {
    if (!(this instanceof FibonacciHeap)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // initialize fields


    this._minimum = null;
    this._size = 0;
  }
  /**
   * Attach type information
   */


  FibonacciHeap.prototype.type = 'FibonacciHeap';
  FibonacciHeap.prototype.isFibonacciHeap = true;
  /**
   * Inserts a new data element into the heap. No heap consolidation is
   * performed at this time, the new node is simply inserted into the root
   * list of this heap. Running time: O(1) actual.
   * @memberof FibonacciHeap
   */

  FibonacciHeap.prototype.insert = function (key, value) {
    // create node
    var node = {
      key: key,
      value: value,
      degree: 0
    }; // check we have a node in the minimum

    if (this._minimum) {
      // minimum node
      var minimum = this._minimum; // update left & right of node

      node.left = minimum;
      node.right = minimum.right;
      minimum.right = node;
      node.right.left = node; // update minimum node in heap if needed

      if (smaller(key, minimum.key)) {
        // node has a smaller key, use it as minimum
        this._minimum = node;
      }
    } else {
      // set left & right
      node.left = node;
      node.right = node; // this is the first node

      this._minimum = node;
    } // increment number of nodes in heap


    this._size++; // return node

    return node;
  };
  /**
   * Returns the number of nodes in heap. Running time: O(1) actual.
   * @memberof FibonacciHeap
   */


  FibonacciHeap.prototype.size = function () {
    return this._size;
  };
  /**
   * Removes all elements from this heap.
   * @memberof FibonacciHeap
   */


  FibonacciHeap.prototype.clear = function () {
    this._minimum = null;
    this._size = 0;
  };
  /**
   * Returns true if the heap is empty, otherwise false.
   * @memberof FibonacciHeap
   */


  FibonacciHeap.prototype.isEmpty = function () {
    return this._size === 0;
  };
  /**
   * Extracts the node with minimum key from heap. Amortized running
   * time: O(log n).
   * @memberof FibonacciHeap
   */


  FibonacciHeap.prototype.extractMinimum = function () {
    // node to remove
    var node = this._minimum; // check we have a minimum

    if (node === null) {
      return node;
    } // current minimum


    var minimum = this._minimum; // get number of children

    var numberOfChildren = node.degree; // pointer to the first child

    var x = node.child; // for each child of node do...

    while (numberOfChildren > 0) {
      // store node in right side
      var tempRight = x.right; // remove x from child list

      x.left.right = x.right;
      x.right.left = x.left; // add x to root list of heap

      x.left = minimum;
      x.right = minimum.right;
      minimum.right = x;
      x.right.left = x; // set Parent[x] to null

      x.parent = null;
      x = tempRight;
      numberOfChildren--;
    } // remove node from root list of heap


    node.left.right = node.right;
    node.right.left = node.left; // update minimum

    if (node === node.right) {
      // empty
      minimum = null;
    } else {
      // update minimum
      minimum = node.right; // we need to update the pointer to the root with minimum key

      minimum = _findMinimumNode(minimum, this._size);
    } // decrement size of heap


    this._size--; // update minimum

    this._minimum = minimum; // return node

    return node;
  };
  /**
   * Removes a node from the heap given the reference to the node. The trees
   * in the heap will be consolidated, if necessary. This operation may fail
   * to remove the correct element if there are nodes with key value -Infinity.
   * Running time: O(log n) amortized.
   * @memberof FibonacciHeap
   */


  FibonacciHeap.prototype.remove = function (node) {
    // decrease key value
    this._minimum = _decreaseKey(this._minimum, node, -1); // remove the smallest

    this.extractMinimum();
  };
  /**
   * Decreases the key value for a heap node, given the new value to take on.
   * The structure of the heap may be changed and will not be consolidated.
   * Running time: O(1) amortized.
   * @memberof FibonacciHeap
   */


  function _decreaseKey(minimum, node, key) {
    // set node key
    node.key = key; // get parent node

    var parent = node.parent;

    if (parent && smaller(node.key, parent.key)) {
      // remove node from parent
      _cut(minimum, node, parent); // remove all nodes from parent to the root parent


      _cascadingCut(minimum, parent);
    } // update minimum node if needed


    if (smaller(node.key, minimum.key)) {
      minimum = node;
    } // return minimum


    return minimum;
  }
  /**
   * The reverse of the link operation: removes node from the child list of parent.
   * This method assumes that min is non-null. Running time: O(1).
   * @memberof FibonacciHeap
   */


  function _cut(minimum, node, parent) {
    // remove node from parent children and decrement Degree[parent]
    node.left.right = node.right;
    node.right.left = node.left;
    parent.degree--; // reset y.child if necessary

    if (parent.child === node) {
      parent.child = node.right;
    } // remove child if degree is 0


    if (parent.degree === 0) {
      parent.child = null;
    } // add node to root list of heap


    node.left = minimum;
    node.right = minimum.right;
    minimum.right = node;
    node.right.left = node; // set parent[node] to null

    node.parent = null; // set mark[node] to false

    node.mark = false;
  }
  /**
   * Performs a cascading cut operation. This cuts node from its parent and then
   * does the same for its parent, and so on up the tree.
   * Running time: O(log n); O(1) excluding the recursion.
   * @memberof FibonacciHeap
   */


  function _cascadingCut(minimum, node) {
    // store parent node
    var parent = node.parent; // if there's a parent...

    if (!parent) {
      return;
    } // if node is unmarked, set it marked


    if (!node.mark) {
      node.mark = true;
    } else {
      // it's marked, cut it from parent
      _cut(minimum, node, parent); // cut its parent as well


      _cascadingCut(parent);
    }
  }
  /**
   * Make the first node a child of the second one. Running time: O(1) actual.
   * @memberof FibonacciHeap
   */


  var _linkNodes = function _linkNodes(node, parent) {
    // remove node from root list of heap
    node.left.right = node.right;
    node.right.left = node.left; // make node a Child of parent

    node.parent = parent;

    if (!parent.child) {
      parent.child = node;
      node.right = node;
      node.left = node;
    } else {
      node.left = parent.child;
      node.right = parent.child.right;
      parent.child.right = node;
      node.right.left = node;
    } // increase degree[parent]


    parent.degree++; // set mark[node] false

    node.mark = false;
  };

  function _findMinimumNode(minimum, size) {
    // to find trees of the same degree efficiently we use an array of length O(log n) in which we keep a pointer to one root of each degree
    var arraySize = Math.floor(Math.log(size) * oneOverLogPhi) + 1; // create list with initial capacity

    var array = new Array(arraySize); // find the number of root nodes.

    var numRoots = 0;
    var x = minimum;

    if (x) {
      numRoots++;
      x = x.right;

      while (x !== minimum) {
        numRoots++;
        x = x.right;
      }
    } // vars


    var y; // For each node in root list do...

    while (numRoots > 0) {
      // access this node's degree..
      var d = x.degree; // get next node

      var next = x.right; // check if there is a node already in array with the same degree

      while (true) {
        // get node with the same degree is any
        y = array[d];

        if (!y) {
          break;
        } // make one node with the same degree a child of the other, do this based on the key value.


        if (larger(x.key, y.key)) {
          var temp = y;
          y = x;
          x = temp;
        } // make y a child of x


        _linkNodes(y, x); // we have handled this degree, go to next one.


        array[d] = null;
        d++;
      } // save this node for later when we might encounter another of the same degree.


      array[d] = x; // move forward through list.

      x = next;
      numRoots--;
    } // Set min to null (effectively losing the root list) and reconstruct the root list from the array entries in array[].


    minimum = null; // loop nodes in array

    for (var i = 0; i < arraySize; i++) {
      // get current node
      y = array[i];

      if (!y) {
        continue;
      } // check if we have a linked list


      if (minimum) {
        // First remove node from root list.
        y.left.right = y.right;
        y.right.left = y.left; // now add to root list, again.

        y.left = minimum;
        y.right = minimum.right;
        minimum.right = y;
        y.right.left = y; // check if this is a new min.

        if (smaller(y.key, minimum.key)) {
          minimum = y;
        }
      } else {
        minimum = y;
      }
    }

    return minimum;
  }

  return FibonacciHeap;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/ImmutableDenseMatrix.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/ImmutableDenseMatrix.js ***!
  \*********************************************************************/
/*! exports provided: createImmutableDenseMatrixClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createImmutableDenseMatrixClass", function() { return createImmutableDenseMatrixClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'ImmutableDenseMatrix';
var dependencies = ['smaller', 'DenseMatrix'];
var createImmutableDenseMatrixClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function (_ref) {
  var smaller = _ref.smaller,
      DenseMatrix = _ref.DenseMatrix;

  function ImmutableDenseMatrix(data, datatype) {
    if (!(this instanceof ImmutableDenseMatrix)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (datatype && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(datatype)) {
      throw new Error('Invalid datatype: ' + datatype);
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(data) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data)) {
      // use DenseMatrix implementation
      var matrix = new DenseMatrix(data, datatype); // internal structures

      this._data = matrix._data;
      this._size = matrix._size;
      this._datatype = matrix._datatype;
      this._min = null;
      this._max = null;
    } else if (data && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data.data) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data.size)) {
      // initialize fields from JSON representation
      this._data = data.data;
      this._size = data.size;
      this._datatype = data.datatype;
      this._min = typeof data.min !== 'undefined' ? data.min : null;
      this._max = typeof data.max !== 'undefined' ? data.max : null;
    } else if (data) {
      // unsupported type
      throw new TypeError('Unsupported type of data (' + Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(data) + ')');
    } else {
      // nothing provided
      this._data = [];
      this._size = [0];
      this._datatype = datatype;
      this._min = null;
      this._max = null;
    }
  }

  ImmutableDenseMatrix.prototype = new DenseMatrix();
  /**
   * Attach type information
   */

  ImmutableDenseMatrix.prototype.type = 'ImmutableDenseMatrix';
  ImmutableDenseMatrix.prototype.isImmutableDenseMatrix = true;
  /**
   * Get a subset of the matrix, or replace a subset of the matrix.
   *
   * Usage:
   *     const subset = matrix.subset(index)               // retrieve subset
   *     const value = matrix.subset(index, replacement)   // replace subset
   *
   * @param {Index} index
   * @param {Array | ImmutableDenseMatrix | *} [replacement]
   * @param {*} [defaultValue=0]      Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be filled with zeros.
   */

  ImmutableDenseMatrix.prototype.subset = function (index) {
    switch (arguments.length) {
      case 1:
        {
          // use base implementation
          var m = DenseMatrix.prototype.subset.call(this, index); // check result is a matrix

          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(m)) {
            // return immutable matrix
            return new ImmutableDenseMatrix({
              data: m._data,
              size: m._size,
              datatype: m._datatype
            });
          }

          return m;
        }
      // intentional fall through

      case 2:
      case 3:
        throw new Error('Cannot invoke set subset on an Immutable Matrix instance');

      default:
        throw new SyntaxError('Wrong number of arguments');
    }
  };
  /**
   * Replace a single element in the matrix.
   * @param {Number[]} index   Zero-based index
   * @param {*} value
   * @param {*} [defaultValue]        Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be left undefined.
   * @return {ImmutableDenseMatrix} self
   */


  ImmutableDenseMatrix.prototype.set = function () {
    throw new Error('Cannot invoke set on an Immutable Matrix instance');
  };
  /**
   * Resize the matrix to the given size. Returns a copy of the matrix when
   * `copy=true`, otherwise return the matrix itself (resize in place).
   *
   * @param {Number[]} size           The new size the matrix should have.
   * @param {*} [defaultValue=0]      Default value, filled in on new entries.
   *                                  If not provided, the matrix elements will
   *                                  be filled with zeros.
   * @param {boolean} [copy]          Return a resized copy of the matrix
   *
   * @return {Matrix}                 The resized matrix
   */


  ImmutableDenseMatrix.prototype.resize = function () {
    throw new Error('Cannot invoke resize on an Immutable Matrix instance');
  };
  /**
   * Disallows reshaping in favor of immutability.
   *
   * @throws {Error} Operation not allowed
   */


  ImmutableDenseMatrix.prototype.reshape = function () {
    throw new Error('Cannot invoke reshape on an Immutable Matrix instance');
  };
  /**
   * Create a clone of the matrix
   * @return {ImmutableDenseMatrix} clone
   */


  ImmutableDenseMatrix.prototype.clone = function () {
    return new ImmutableDenseMatrix({
      data: Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(this._data),
      size: Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(this._size),
      datatype: this._datatype
    });
  };
  /**
   * Get a JSON representation of the matrix
   * @returns {Object}
   */


  ImmutableDenseMatrix.prototype.toJSON = function () {
    return {
      mathjs: 'ImmutableDenseMatrix',
      data: this._data,
      size: this._size,
      datatype: this._datatype
    };
  };
  /**
   * Generate a matrix from a JSON object
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "ImmutableDenseMatrix", data: [], size: []}`,
   *                       where mathjs is optional
   * @returns {ImmutableDenseMatrix}
   */


  ImmutableDenseMatrix.fromJSON = function (json) {
    return new ImmutableDenseMatrix(json);
  };
  /**
   * Swap rows i and j in Matrix.
   *
   * @param {Number} i       Matrix row index 1
   * @param {Number} j       Matrix row index 2
   *
   * @return {Matrix}        The matrix reference
   */


  ImmutableDenseMatrix.prototype.swapRows = function () {
    throw new Error('Cannot invoke swapRows on an Immutable Matrix instance');
  };
  /**
   * Calculate the minimum value in the set
   * @return {Number | undefined} min
   */


  ImmutableDenseMatrix.prototype.min = function () {
    // check min has been calculated before
    if (this._min === null) {
      // minimum
      var m = null; // compute min

      this.forEach(function (v) {
        if (m === null || smaller(v, m)) {
          m = v;
        }
      });
      this._min = m !== null ? m : undefined;
    }

    return this._min;
  };
  /**
   * Calculate the maximum value in the set
   * @return {Number | undefined} max
   */


  ImmutableDenseMatrix.prototype.max = function () {
    // check max has been calculated before
    if (this._max === null) {
      // maximum
      var m = null; // compute max

      this.forEach(function (v) {
        if (m === null || smaller(m, v)) {
          m = v;
        }
      });
      this._max = m !== null ? m : undefined;
    }

    return this._max;
  };

  return ImmutableDenseMatrix;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/Matrix.js":
/*!*******************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/Matrix.js ***!
  \*******************************************************/
/*! exports provided: createMatrixClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMatrixClass", function() { return createMatrixClass; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'Matrix';
var dependencies = [];
var createMatrixClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function () {
  /**
   * @constructor Matrix
   *
   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional
   * array. A matrix can be constructed as:
   *
   *     let matrix = math.matrix(data)
   *
   * Matrix contains the functions to resize, get and set values, get the size,
   * clone the matrix and to convert the matrix to a vector, array, or scalar.
   * Furthermore, one can iterate over the matrix using map and forEach.
   * The internal Array of the Matrix can be accessed using the function valueOf.
   *
   * Example usage:
   *
   *     let matrix = math.matrix([[1, 2], [3, 4]])
   *     matix.size()              // [2, 2]
   *     matrix.resize([3, 2], 5)
   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]
   *     matrix.subset([1,2])       // 3 (indexes are zero-based)
   *
   */
  function Matrix() {
    if (!(this instanceof Matrix)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }
  }
  /**
   * Attach type information
   */


  Matrix.prototype.type = 'Matrix';
  Matrix.prototype.isMatrix = true;
  /**
   * Get the storage format used by the matrix.
   *
   * Usage:
   *     const format = matrix.storage()   // retrieve storage format
   *
   * @return {string}           The storage format.
   */

  Matrix.prototype.storage = function () {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke storage on a Matrix interface');
  };
  /**
   * Get the datatype of the data stored in the matrix.
   *
   * Usage:
   *     const format = matrix.datatype()    // retrieve matrix datatype
   *
   * @return {string}           The datatype.
   */


  Matrix.prototype.datatype = function () {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke datatype on a Matrix interface');
  };
  /**
   * Create a new Matrix With the type of the current matrix instance
   * @param {Array | Object} data
   * @param {string} [datatype]
   */


  Matrix.prototype.create = function (data, datatype) {
    throw new Error('Cannot invoke create on a Matrix interface');
  };
  /**
   * Get a subset of the matrix, or replace a subset of the matrix.
   *
   * Usage:
   *     const subset = matrix.subset(index)               // retrieve subset
   *     const value = matrix.subset(index, replacement)   // replace subset
   *
   * @param {Index} index
   * @param {Array | Matrix | *} [replacement]
   * @param {*} [defaultValue=0]      Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be filled with zeros.
   */


  Matrix.prototype.subset = function (index, replacement, defaultValue) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke subset on a Matrix interface');
  };
  /**
   * Get a single element from the matrix.
   * @param {number[]} index   Zero-based index
   * @return {*} value
   */


  Matrix.prototype.get = function (index) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke get on a Matrix interface');
  };
  /**
   * Replace a single element in the matrix.
   * @param {number[]} index   Zero-based index
   * @param {*} value
   * @param {*} [defaultValue]        Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be left undefined.
   * @return {Matrix} self
   */


  Matrix.prototype.set = function (index, value, defaultValue) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke set on a Matrix interface');
  };
  /**
   * Resize the matrix to the given size. Returns a copy of the matrix when
   * `copy=true`, otherwise return the matrix itself (resize in place).
   *
   * @param {number[]} size           The new size the matrix should have.
   * @param {*} [defaultValue=0]      Default value, filled in on new entries.
   *                                  If not provided, the matrix elements will
   *                                  be filled with zeros.
   * @param {boolean} [copy]          Return a resized copy of the matrix
   *
   * @return {Matrix}                 The resized matrix
   */


  Matrix.prototype.resize = function (size, defaultValue) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke resize on a Matrix interface');
  };
  /**
   * Reshape the matrix to the given size. Returns a copy of the matrix when
   * `copy=true`, otherwise return the matrix itself (reshape in place).
   *
   * @param {number[]} size           The new size the matrix should have.
   * @param {boolean} [copy]          Return a reshaped copy of the matrix
   *
   * @return {Matrix}                 The reshaped matrix
   */


  Matrix.prototype.reshape = function (size, defaultValue) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke reshape on a Matrix interface');
  };
  /**
   * Create a clone of the matrix
   * @return {Matrix} clone
   */


  Matrix.prototype.clone = function () {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke clone on a Matrix interface');
  };
  /**
   * Retrieve the size of the matrix.
   * @returns {number[]} size
   */


  Matrix.prototype.size = function () {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke size on a Matrix interface');
  };
  /**
   * Create a new matrix with the results of the callback function executed on
   * each entry of the matrix.
   * @param {Function} callback   The callback function is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix being traversed.
   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.
   *
   * @return {Matrix} matrix
   */


  Matrix.prototype.map = function (callback, skipZeros) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke map on a Matrix interface');
  };
  /**
   * Execute a callback function on each entry of the matrix.
   * @param {Function} callback   The callback function is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix being traversed.
   */


  Matrix.prototype.forEach = function (callback) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke forEach on a Matrix interface');
  };
  /**
   * Create an Array with a copy of the data of the Matrix
   * @returns {Array} array
   */


  Matrix.prototype.toArray = function () {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke toArray on a Matrix interface');
  };
  /**
   * Get the primitive value of the Matrix: a multidimensional array
   * @returns {Array} array
   */


  Matrix.prototype.valueOf = function () {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke valueOf on a Matrix interface');
  };
  /**
   * Get a string representation of the matrix, with optional formatting options.
   * @param {Object | number | Function} [options]  Formatting options. See
   *                                                lib/utils/number:format for a
   *                                                description of the available
   *                                                options.
   * @returns {string} str
   */


  Matrix.prototype.format = function (options) {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke format on a Matrix interface');
  };
  /**
   * Get a string representation of the matrix
   * @returns {string} str
   */


  Matrix.prototype.toString = function () {
    // must be implemented by each of the Matrix implementations
    throw new Error('Cannot invoke toString on a Matrix interface');
  };

  return Matrix;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/MatrixIndex.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/MatrixIndex.js ***!
  \************************************************************/
/*! exports provided: createIndexClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIndexClass", function() { return createIndexClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");




var name = 'Index';
var dependencies = ['ImmutableDenseMatrix'];
var createIndexClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_3__["factory"])(name, dependencies, function (_ref) {
  var ImmutableDenseMatrix = _ref.ImmutableDenseMatrix;

  /**
   * Create an index. An Index can store ranges and sets for multiple dimensions.
   * Matrix.get, Matrix.set, and math.subset accept an Index as input.
   *
   * Usage:
   *     const index = new Index(range1, range2, matrix1, array1, ...)
   *
   * Where each parameter can be any of:
   *     A number
   *     A string (containing a name of an object property)
   *     An instance of Range
   *     An Array with the Set values
   *     A Matrix with the Set values
   *
   * The parameters start, end, and step must be integer numbers.
   *
   * @class Index
   * @Constructor Index
   * @param {...*} ranges
   */
  function Index(ranges) {
    if (!(this instanceof Index)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this._dimensions = [];
    this._isScalar = true;

    for (var i = 0, ii = arguments.length; i < ii; i++) {
      var arg = arguments[i];

      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isRange"])(arg)) {
        this._dimensions.push(arg);

        this._isScalar = false;
      } else if (Array.isArray(arg) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(arg)) {
        // create matrix
        var m = _createImmutableMatrix(arg.valueOf());

        this._dimensions.push(m); // size


        var size = m.size(); // scalar

        if (size.length !== 1 || size[0] !== 1) {
          this._isScalar = false;
        }
      } else if (typeof arg === 'number') {
        this._dimensions.push(_createImmutableMatrix([arg]));
      } else if (typeof arg === 'string') {
        // object property (arguments.count should be 1)
        this._dimensions.push(arg);
      } else {
        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');
      } // TODO: implement support for wildcard '*'

    }
  }
  /**
   * Attach type information
   */


  Index.prototype.type = 'Index';
  Index.prototype.isIndex = true;

  function _createImmutableMatrix(arg) {
    // loop array elements
    for (var i = 0, l = arg.length; i < l; i++) {
      if (typeof arg[i] !== 'number' || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_2__["isInteger"])(arg[i])) {
        throw new TypeError('Index parameters must be positive integer numbers');
      }
    } // create matrix


    return new ImmutableDenseMatrix(arg);
  }
  /**
   * Create a clone of the index
   * @memberof Index
   * @return {Index} clone
   */


  Index.prototype.clone = function () {
    var index = new Index();
    index._dimensions = Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(this._dimensions);
    index._isScalar = this._isScalar;
    return index;
  };
  /**
   * Create an index from an array with ranges/numbers
   * @memberof Index
   * @param {Array.<Array | number>} ranges
   * @return {Index} index
   * @private
   */


  Index.create = function (ranges) {
    var index = new Index();
    Index.apply(index, ranges);
    return index;
  };
  /**
   * Retrieve the size of the index, the number of elements for each dimension.
   * @memberof Index
   * @returns {number[]} size
   */


  Index.prototype.size = function () {
    var size = [];

    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {
      var d = this._dimensions[i];
      size[i] = typeof d === 'string' ? 1 : d.size()[0];
    }

    return size;
  };
  /**
   * Get the maximum value for each of the indexes ranges.
   * @memberof Index
   * @returns {number[]} max
   */


  Index.prototype.max = function () {
    var values = [];

    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {
      var range = this._dimensions[i];
      values[i] = typeof range === 'string' ? range : range.max();
    }

    return values;
  };
  /**
   * Get the minimum value for each of the indexes ranges.
   * @memberof Index
   * @returns {number[]} min
   */


  Index.prototype.min = function () {
    var values = [];

    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {
      var range = this._dimensions[i];
      values[i] = typeof range === 'string' ? range : range.min();
    }

    return values;
  };
  /**
   * Loop over each of the ranges of the index
   * @memberof Index
   * @param {Function} callback   Called for each range with a Range as first
   *                              argument, the dimension as second, and the
   *                              index object as third.
   */


  Index.prototype.forEach = function (callback) {
    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {
      callback(this._dimensions[i], i, this);
    }
  };
  /**
   * Retrieve the dimension for the given index
   * @memberof Index
   * @param {Number} dim                  Number of the dimension
   * @returns {Range | null} range
   */


  Index.prototype.dimension = function (dim) {
    return this._dimensions[dim] || null;
  };
  /**
   * Test whether this index contains an object property
   * @returns {boolean} Returns true if the index is an object property
   */


  Index.prototype.isObjectProperty = function () {
    return this._dimensions.length === 1 && typeof this._dimensions[0] === 'string';
  };
  /**
   * Returns the object property name when the Index holds a single object property,
   * else returns null
   * @returns {string | null}
   */


  Index.prototype.getObjectProperty = function () {
    return this.isObjectProperty() ? this._dimensions[0] : null;
  };
  /**
   * Test whether this index contains only a single value.
   *
   * This is the case when the index is created with only scalar values as ranges,
   * not for ranges resolving into a single value.
   * @memberof Index
   * @return {boolean} isScalar
   */


  Index.prototype.isScalar = function () {
    return this._isScalar;
  };
  /**
   * Expand the Index into an array.
   * For example new Index([0,3], [2,7]) returns [[0,1,2], [2,3,4,5,6]]
   * @memberof Index
   * @returns {Array} array
   */


  Index.prototype.toArray = function () {
    var array = [];

    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {
      var dimension = this._dimensions[i];
      array.push(typeof dimension === 'string' ? dimension : dimension.toArray());
    }

    return array;
  };
  /**
   * Get the primitive value of the Index, a two dimensional array.
   * Equivalent to Index.toArray().
   * @memberof Index
   * @returns {Array} array
   */


  Index.prototype.valueOf = Index.prototype.toArray;
  /**
   * Get the string representation of the index, for example '[2:6]' or '[0:2:10, 4:7, [1,2,3]]'
   * @memberof Index
   * @returns {String} str
   */

  Index.prototype.toString = function () {
    var strings = [];

    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {
      var dimension = this._dimensions[i];

      if (typeof dimension === 'string') {
        strings.push(JSON.stringify(dimension));
      } else {
        strings.push(dimension.toString());
      }
    }

    return '[' + strings.join(', ') + ']';
  };
  /**
   * Get a JSON representation of the Index
   * @memberof Index
   * @returns {Object} Returns a JSON object structured as:
   *                   `{"mathjs": "Index", "ranges": [{"mathjs": "Range", start: 0, end: 10, step:1}, ...]}`
   */


  Index.prototype.toJSON = function () {
    return {
      mathjs: 'Index',
      dimensions: this._dimensions
    };
  };
  /**
   * Instantiate an Index from a JSON object
   * @memberof Index
   * @param {Object} json A JSON object structured as:
   *                     `{"mathjs": "Index", "dimensions": [{"mathjs": "Range", start: 0, end: 10, step:1}, ...]}`
   * @return {Index}
   */


  Index.fromJSON = function (json) {
    return Index.create(json.dimensions);
  };

  return Index;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/Range.js":
/*!******************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/Range.js ***!
  \******************************************************/
/*! exports provided: createRangeClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRangeClass", function() { return createRangeClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");



var name = 'Range';
var dependencies = [];
var createRangeClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_2__["factory"])(name, dependencies, function () {
  /**
   * Create a range. A range has a start, step, and end, and contains functions
   * to iterate over the range.
   *
   * A range can be constructed as:
   *
   *     const range = new Range(start, end)
   *     const range = new Range(start, end, step)
   *
   * To get the result of the range:
   *     range.forEach(function (x) {
   *         console.log(x)
   *     })
   *     range.map(function (x) {
   *         return math.sin(x)
   *     })
   *     range.toArray()
   *
   * Example usage:
   *
   *     const c = new Range(2, 6)       // 2:1:5
   *     c.toArray()                     // [2, 3, 4, 5]
   *     const d = new Range(2, -3, -1)  // 2:-1:-2
   *     d.toArray()                     // [2, 1, 0, -1, -2]
   *
   * @class Range
   * @constructor Range
   * @param {number} start  included lower bound
   * @param {number} end    excluded upper bound
   * @param {number} [step] step size, default value is 1
   */
  function Range(start, end, step) {
    if (!(this instanceof Range)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    var hasStart = start !== null && start !== undefined;
    var hasEnd = end !== null && end !== undefined;
    var hasStep = step !== null && step !== undefined;

    if (hasStart) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(start)) {
        start = start.toNumber();
      } else if (typeof start !== 'number') {
        throw new TypeError('Parameter start must be a number');
      }
    }

    if (hasEnd) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(end)) {
        end = end.toNumber();
      } else if (typeof end !== 'number') {
        throw new TypeError('Parameter end must be a number');
      }
    }

    if (hasStep) {
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(step)) {
        step = step.toNumber();
      } else if (typeof step !== 'number') {
        throw new TypeError('Parameter step must be a number');
      }
    }

    this.start = hasStart ? parseFloat(start) : 0;
    this.end = hasEnd ? parseFloat(end) : 0;
    this.step = hasStep ? parseFloat(step) : 1;
  }
  /**
   * Attach type information
   */


  Range.prototype.type = 'Range';
  Range.prototype.isRange = true;
  /**
   * Parse a string into a range,
   * The string contains the start, optional step, and end, separated by a colon.
   * If the string does not contain a valid range, null is returned.
   * For example str='0:2:11'.
   * @memberof Range
   * @param {string} str
   * @return {Range | null} range
   */

  Range.parse = function (str) {
    if (typeof str !== 'string') {
      return null;
    }

    var args = str.split(':');
    var nums = args.map(function (arg) {
      return parseFloat(arg);
    });
    var invalid = nums.some(function (num) {
      return isNaN(num);
    });

    if (invalid) {
      return null;
    }

    switch (nums.length) {
      case 2:
        return new Range(nums[0], nums[1]);

      case 3:
        return new Range(nums[0], nums[2], nums[1]);

      default:
        return null;
    }
  };
  /**
   * Create a clone of the range
   * @return {Range} clone
   */


  Range.prototype.clone = function () {
    return new Range(this.start, this.end, this.step);
  };
  /**
   * Retrieve the size of the range.
   * Returns an array containing one number, the number of elements in the range.
   * @memberof Range
   * @returns {number[]} size
   */


  Range.prototype.size = function () {
    var len = 0;
    var start = this.start;
    var step = this.step;
    var end = this.end;
    var diff = end - start;

    if (Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["sign"])(step) === Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["sign"])(diff)) {
      len = Math.ceil(diff / step);
    } else if (diff === 0) {
      len = 0;
    }

    if (isNaN(len)) {
      len = 0;
    }

    return [len];
  };
  /**
   * Calculate the minimum value in the range
   * @memberof Range
   * @return {number | undefined} min
   */


  Range.prototype.min = function () {
    var size = this.size()[0];

    if (size > 0) {
      if (this.step > 0) {
        // positive step
        return this.start;
      } else {
        // negative step
        return this.start + (size - 1) * this.step;
      }
    } else {
      return undefined;
    }
  };
  /**
   * Calculate the maximum value in the range
   * @memberof Range
   * @return {number | undefined} max
   */


  Range.prototype.max = function () {
    var size = this.size()[0];

    if (size > 0) {
      if (this.step > 0) {
        // positive step
        return this.start + (size - 1) * this.step;
      } else {
        // negative step
        return this.start;
      }
    } else {
      return undefined;
    }
  };
  /**
   * Execute a callback function for each value in the range.
   * @memberof Range
   * @param {function} callback   The callback method is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Range being traversed.
   */


  Range.prototype.forEach = function (callback) {
    var x = this.start;
    var step = this.step;
    var end = this.end;
    var i = 0;

    if (step > 0) {
      while (x < end) {
        callback(x, [i], this);
        x += step;
        i++;
      }
    } else if (step < 0) {
      while (x > end) {
        callback(x, [i], this);
        x += step;
        i++;
      }
    }
  };
  /**
   * Execute a callback function for each value in the Range, and return the
   * results as an array
   * @memberof Range
   * @param {function} callback   The callback method is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix being traversed.
   * @returns {Array} array
   */


  Range.prototype.map = function (callback) {
    var array = [];
    this.forEach(function (value, index, obj) {
      array[index[0]] = callback(value, index, obj);
    });
    return array;
  };
  /**
   * Create an Array with a copy of the Ranges data
   * @memberof Range
   * @returns {Array} array
   */


  Range.prototype.toArray = function () {
    var array = [];
    this.forEach(function (value, index) {
      array[index[0]] = value;
    });
    return array;
  };
  /**
   * Get the primitive value of the Range, a one dimensional array
   * @memberof Range
   * @returns {Array} array
   */


  Range.prototype.valueOf = function () {
    // TODO: implement a caching mechanism for range.valueOf()
    return this.toArray();
  };
  /**
   * Get a string representation of the range, with optional formatting options.
   * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'
   * @memberof Range
   * @param {Object | number | function} [options]  Formatting options. See
   *                                                lib/utils/number:format for a
   *                                                description of the available
   *                                                options.
   * @returns {string} str
   */


  Range.prototype.format = function (options) {
    var str = Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["format"])(this.start, options);

    if (this.step !== 1) {
      str += ':' + Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["format"])(this.step, options);
    }

    str += ':' + Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["format"])(this.end, options);
    return str;
  };
  /**
   * Get a string representation of the range.
   * @memberof Range
   * @returns {string}
   */


  Range.prototype.toString = function () {
    return this.format();
  };
  /**
   * Get a JSON representation of the range
   * @memberof Range
   * @returns {Object} Returns a JSON object structured as:
   *                   `{"mathjs": "Range", "start": 2, "end": 4, "step": 1}`
   */


  Range.prototype.toJSON = function () {
    return {
      mathjs: 'Range',
      start: this.start,
      end: this.end,
      step: this.step
    };
  };
  /**
   * Instantiate a Range from a JSON object
   * @memberof Range
   * @param {Object} json A JSON object structured as:
   *                      `{"mathjs": "Range", "start": 2, "end": 4, "step": 1}`
   * @return {Range}
   */


  Range.fromJSON = function (json) {
    return new Range(json.start, json.end, json.step);
  };

  return Range;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/Spa.js":
/*!****************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/Spa.js ***!
  \****************************************************/
/*! exports provided: createSpaClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSpaClass", function() { return createSpaClass; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'Spa';
var dependencies = ['addScalar', 'equalScalar', 'FibonacciHeap'];
var createSpaClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var addScalar = _ref.addScalar,
      equalScalar = _ref.equalScalar,
      FibonacciHeap = _ref.FibonacciHeap;

  /**
   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array
   * of the vector elements and an ordered list of non-zero elements.
   */
  function Spa() {
    if (!(this instanceof Spa)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    } // allocate vector, TODO use typed arrays


    this._values = [];
    this._heap = new FibonacciHeap();
  }
  /**
   * Attach type information
   */


  Spa.prototype.type = 'Spa';
  Spa.prototype.isSpa = true;
  /**
   * Set the value for index i.
   *
   * @param {number} i                       The index
   * @param {number | BigNumber | Complex}   The value at index i
   */

  Spa.prototype.set = function (i, v) {
    // check we have a value @ i
    if (!this._values[i]) {
      // insert in heap
      var node = this._heap.insert(i, v); // set the value @ i


      this._values[i] = node;
    } else {
      // update the value @ i
      this._values[i].value = v;
    }
  };

  Spa.prototype.get = function (i) {
    var node = this._values[i];

    if (node) {
      return node.value;
    }

    return 0;
  };

  Spa.prototype.accumulate = function (i, v) {
    // node @ i
    var node = this._values[i];

    if (!node) {
      // insert in heap
      node = this._heap.insert(i, v); // initialize value

      this._values[i] = node;
    } else {
      // accumulate value
      node.value = addScalar(node.value, v);
    }
  };

  Spa.prototype.forEach = function (from, to, callback) {
    // references
    var heap = this._heap;
    var values = this._values; // nodes

    var nodes = []; // node with minimum key, save it

    var node = heap.extractMinimum();

    if (node) {
      nodes.push(node);
    } // extract nodes from heap (ordered)


    while (node && node.key <= to) {
      // check it is in range
      if (node.key >= from) {
        // check value is not zero
        if (!equalScalar(node.value, 0)) {
          // invoke callback
          callback(node.key, node.value, this);
        }
      } // extract next node, save it


      node = heap.extractMinimum();

      if (node) {
        nodes.push(node);
      }
    } // reinsert all nodes in heap


    for (var i = 0; i < nodes.length; i++) {
      // current node
      var n = nodes[i]; // insert node in heap

      node = heap.insert(n.key, n.value); // update values

      values[node.key] = node;
    }
  };

  Spa.prototype.swap = function (i, j) {
    // node @ i and j
    var nodei = this._values[i];
    var nodej = this._values[j]; // check we need to insert indeces

    if (!nodei && nodej) {
      // insert in heap
      nodei = this._heap.insert(i, nodej.value); // remove from heap

      this._heap.remove(nodej); // set values


      this._values[i] = nodei;
      this._values[j] = undefined;
    } else if (nodei && !nodej) {
      // insert in heap
      nodej = this._heap.insert(j, nodei.value); // remove from heap

      this._heap.remove(nodei); // set values


      this._values[j] = nodej;
      this._values[i] = undefined;
    } else if (nodei && nodej) {
      // swap values
      var v = nodei.value;
      nodei.value = nodej.value;
      nodej.value = v;
    }
  };

  return Spa;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/SparseMatrix.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/SparseMatrix.js ***!
  \*************************************************************/
/*! exports provided: createSparseMatrixClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSparseMatrixClass", function() { return createSparseMatrixClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");







var name = 'SparseMatrix';
var dependencies = ['typed', 'equalScalar', 'Matrix'];
var createSparseMatrixClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_5__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar,
      Matrix = _ref.Matrix;

  /**
   * Sparse Matrix implementation. This type implements a Compressed Column Storage format
   * for sparse matrices.
   * @class SparseMatrix
   */
  function SparseMatrix(data, datatype) {
    if (!(this instanceof SparseMatrix)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    if (datatype && !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(datatype)) {
      throw new Error('Invalid datatype: ' + datatype);
    }

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(data)) {
      // create from matrix
      _createFromMatrix(this, data, datatype);
    } else if (data && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data.index) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data.ptr) && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data.size)) {
      // initialize fields
      this._values = data.values;
      this._index = data.index;
      this._ptr = data.ptr;
      this._size = data.size;
      this._datatype = datatype || data.datatype;
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(data)) {
      // create from array
      _createFromArray(this, data, datatype);
    } else if (data) {
      // unsupported type
      throw new TypeError('Unsupported type of data (' + Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(data) + ')');
    } else {
      // nothing provided
      this._values = [];
      this._index = [];
      this._ptr = [0];
      this._size = [0, 0];
      this._datatype = datatype;
    }
  }

  function _createFromMatrix(matrix, source, datatype) {
    // check matrix type
    if (source.type === 'SparseMatrix') {
      // clone arrays
      matrix._values = source._values ? Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(source._values) : undefined;
      matrix._index = Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(source._index);
      matrix._ptr = Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(source._ptr);
      matrix._size = Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(source._size);
      matrix._datatype = datatype || source._datatype;
    } else {
      // build from matrix data
      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);
    }
  }

  function _createFromArray(matrix, data, datatype) {
    // initialize fields
    matrix._values = [];
    matrix._index = [];
    matrix._ptr = [];
    matrix._datatype = datatype; // discover rows & columns, do not use math.size() to avoid looping array twice

    var rows = data.length;
    var columns = 0; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0;

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(datatype)) {
      // find signature that matches (datatype, datatype)
      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype

      zero = typed.convert(0, datatype);
    } // check we have rows (empty array)


    if (rows > 0) {
      // column index
      var j = 0;

      do {
        // store pointer to values index
        matrix._ptr.push(matrix._index.length); // loop rows


        for (var i = 0; i < rows; i++) {
          // current row
          var row = data[i]; // check row is an array

          if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(row)) {
            // update columns if needed (only on first column)
            if (j === 0 && columns < row.length) {
              columns = row.length;
            } // check row has column


            if (j < row.length) {
              // value
              var v = row[j]; // check value != 0

              if (!eq(v, zero)) {
                // store value
                matrix._values.push(v); // index


                matrix._index.push(i);
              }
            }
          } else {
            // update columns if needed (only on first column)
            if (j === 0 && columns < 1) {
              columns = 1;
            } // check value != 0 (row is a scalar)


            if (!eq(row, zero)) {
              // store value
              matrix._values.push(row); // index


              matrix._index.push(i);
            }
          }
        } // increment index


        j++;
      } while (j < columns);
    } // store number of values in ptr


    matrix._ptr.push(matrix._index.length); // size


    matrix._size = [rows, columns];
  }

  SparseMatrix.prototype = new Matrix();
  /**
   * Create a new SparseMatrix
   */

  SparseMatrix.prototype.createSparseMatrix = function (data, datatype) {
    return new SparseMatrix(data, datatype);
  };
  /**
   * Attach type information
   */


  SparseMatrix.prototype.type = 'SparseMatrix';
  SparseMatrix.prototype.isSparseMatrix = true;
  /**
   * Get the matrix type
   *
   * Usage:
   *    const matrixType = matrix.getDataType()  // retrieves the matrix type
   *
   * @memberOf SparseMatrix
   * @return {string}   type information; if multiple types are found from the Matrix, it will return "mixed"
   */

  SparseMatrix.prototype.getDataType = function () {
    return Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["getArrayDataType"])(this._values, _utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"]);
  };
  /**
   * Get the storage format used by the matrix.
   *
   * Usage:
   *     const format = matrix.storage()   // retrieve storage format
   *
   * @memberof SparseMatrix
   * @return {string}           The storage format.
   */


  SparseMatrix.prototype.storage = function () {
    return 'sparse';
  };
  /**
   * Get the datatype of the data stored in the matrix.
   *
   * Usage:
   *     const format = matrix.datatype()    // retrieve matrix datatype
   *
   * @memberof SparseMatrix
   * @return {string}           The datatype.
   */


  SparseMatrix.prototype.datatype = function () {
    return this._datatype;
  };
  /**
   * Create a new SparseMatrix
   * @memberof SparseMatrix
   * @param {Array} data
   * @param {string} [datatype]
   */


  SparseMatrix.prototype.create = function (data, datatype) {
    return new SparseMatrix(data, datatype);
  };
  /**
   * Get the matrix density.
   *
   * Usage:
   *     const density = matrix.density()                   // retrieve matrix density
   *
   * @memberof SparseMatrix
   * @return {number}           The matrix density.
   */


  SparseMatrix.prototype.density = function () {
    // rows & columns
    var rows = this._size[0];
    var columns = this._size[1]; // calculate density

    return rows !== 0 && columns !== 0 ? this._index.length / (rows * columns) : 0;
  };
  /**
   * Get a subset of the matrix, or replace a subset of the matrix.
   *
   * Usage:
   *     const subset = matrix.subset(index)               // retrieve subset
   *     const value = matrix.subset(index, replacement)   // replace subset
   *
   * @memberof SparseMatrix
   * @param {Index} index
   * @param {Array | Matrix | *} [replacement]
   * @param {*} [defaultValue=0]      Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be filled with zeros.
   */


  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) {
    // check it is a pattern matrix
    if (!this._values) {
      throw new Error('Cannot invoke subset on a Pattern only matrix');
    } // check arguments


    switch (arguments.length) {
      case 1:
        return _getsubset(this, index);
      // intentional fall through

      case 2:
      case 3:
        return _setsubset(this, index, replacement, defaultValue);

      default:
        throw new SyntaxError('Wrong number of arguments');
    }
  };

  function _getsubset(matrix, idx) {
    // check idx
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isIndex"])(idx)) {
      throw new TypeError('Invalid index');
    }

    var isScalar = idx.isScalar();

    if (isScalar) {
      // return a scalar
      return matrix.get(idx.min());
    } // validate dimensions


    var size = idx.size();

    if (size.length !== matrix._size.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_6__["DimensionError"](size.length, matrix._size.length);
    } // vars


    var i, ii, k, kk; // validate if any of the ranges in the index is out of range

    var min = idx.min();
    var max = idx.max();

    for (i = 0, ii = matrix._size.length; i < ii; i++) {
      Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(min[i], matrix._size[i]);
      Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(max[i], matrix._size[i]);
    } // matrix arrays


    var mvalues = matrix._values;
    var mindex = matrix._index;
    var mptr = matrix._ptr; // rows & columns dimensions for result matrix

    var rows = idx.dimension(0);
    var columns = idx.dimension(1); // workspace & permutation vector

    var w = [];
    var pv = []; // loop rows in resulting matrix

    rows.forEach(function (i, r) {
      // update permutation vector
      pv[i] = r[0]; // mark i in workspace

      w[i] = true;
    }); // result matrix arrays

    var values = mvalues ? [] : undefined;
    var index = [];
    var ptr = []; // loop columns in result matrix

    columns.forEach(function (j) {
      // update ptr
      ptr.push(index.length); // loop values in column j

      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {
        // row
        i = mindex[k]; // check row is in result matrix

        if (w[i] === true) {
          // push index
          index.push(pv[i]); // check we need to process values

          if (values) {
            values.push(mvalues[k]);
          }
        }
      }
    }); // update ptr

    ptr.push(index.length); // return matrix

    return new SparseMatrix({
      values: values,
      index: index,
      ptr: ptr,
      size: size,
      datatype: matrix._datatype
    });
  }

  function _setsubset(matrix, index, submatrix, defaultValue) {
    // check index
    if (!index || index.isIndex !== true) {
      throw new TypeError('Invalid index');
    } // get index size and check whether the index contains a single value


    var iSize = index.size();
    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed

    var sSize;

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(submatrix)) {
      // submatrix size
      sSize = submatrix.size(); // use array representation

      submatrix = submatrix.toArray();
    } else {
      // get submatrix size (array, scalar)
      sSize = Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["arraySize"])(submatrix);
    } // check index is a scalar


    if (isScalar) {
      // verify submatrix is a scalar
      if (sSize.length !== 0) {
        throw new TypeError('Scalar expected');
      } // set value


      matrix.set(index.min(), submatrix, defaultValue);
    } else {
      // validate dimensions, index size must be one or two dimensions
      if (iSize.length !== 1 && iSize.length !== 2) {
        throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_6__["DimensionError"](iSize.length, matrix._size.length, '<');
      } // check submatrix and index have the same dimensions


      if (sSize.length < iSize.length) {
        // calculate number of missing outer dimensions
        var i = 0;
        var outer = 0;

        while (iSize[i] === 1 && sSize[i] === 1) {
          i++;
        }

        while (iSize[i] === 1) {
          outer++;
          i++;
        } // unsqueeze both outer and inner dimensions


        submatrix = Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["unsqueeze"])(submatrix, iSize.length, outer, sSize);
      } // check whether the size of the submatrix matches the index size


      if (!Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["deepStrictEqual"])(iSize, sSize)) {
        throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_6__["DimensionError"](iSize, sSize, '>');
      } // offsets


      var x0 = index.min()[0];
      var y0 = index.min()[1]; // submatrix rows and columns

      var m = sSize[0];
      var n = sSize[1]; // loop submatrix

      for (var x = 0; x < m; x++) {
        // loop columns
        for (var y = 0; y < n; y++) {
          // value at i, j
          var v = submatrix[x][y]; // invoke set (zero value will remove entry from matrix)

          matrix.set([x + x0, y + y0], v, defaultValue);
        }
      }
    }

    return matrix;
  }
  /**
   * Get a single element from the matrix.
   * @memberof SparseMatrix
   * @param {number[]} index   Zero-based index
   * @return {*} value
   */


  SparseMatrix.prototype.get = function (index) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(index)) {
      throw new TypeError('Array expected');
    }

    if (index.length !== this._size.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_6__["DimensionError"](index.length, this._size.length);
    } // check it is a pattern matrix


    if (!this._values) {
      throw new Error('Cannot invoke get on a Pattern only matrix');
    } // row and column


    var i = index[0];
    var j = index[1]; // check i, j are valid

    Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(i, this._size[0]);
    Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(j, this._size[1]); // find value index

    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row


    if (k < this._ptr[j + 1] && this._index[k] === i) {
      return this._values[k];
    }

    return 0;
  };
  /**
   * Replace a single element in the matrix.
   * @memberof SparseMatrix
   * @param {number[]} index   Zero-based index
   * @param {*} v
   * @param {*} [defaultValue]        Default value, filled in on new entries when
   *                                  the matrix is resized. If not provided,
   *                                  new matrix elements will be set to zero.
   * @return {SparseMatrix} self
   */


  SparseMatrix.prototype.set = function (index, v, defaultValue) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(index)) {
      throw new TypeError('Array expected');
    }

    if (index.length !== this._size.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_6__["DimensionError"](index.length, this._size.length);
    } // check it is a pattern matrix


    if (!this._values) {
      throw new Error('Cannot invoke set on a Pattern only matrix');
    } // row and column


    var i = index[0];
    var j = index[1]; // rows & columns

    var rows = this._size[0];
    var columns = this._size[1]; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0;

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(this._datatype)) {
      // find signature that matches (datatype, datatype)
      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar; // convert 0 to the same datatype

      zero = typed.convert(0, this._datatype);
    } // check we need to resize matrix


    if (i > rows - 1 || j > columns - 1) {
      // resize matrix
      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue); // update rows & columns


      rows = this._size[0];
      columns = this._size[1];
    } // check i, j are valid


    Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(i, rows);
    Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(j, columns); // find value index

    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row


    if (k < this._ptr[j + 1] && this._index[k] === i) {
      // check value != 0
      if (!eq(v, zero)) {
        // update value
        this._values[k] = v;
      } else {
        // remove value from matrix
        _remove(k, j, this._values, this._index, this._ptr);
      }
    } else {
      // insert value @ (i, j)
      _insert(k, i, j, v, this._values, this._index, this._ptr);
    }

    return this;
  };

  function _getValueIndex(i, top, bottom, index) {
    // check row is on the bottom side
    if (bottom - top === 0) {
      return bottom;
    } // loop rows [top, bottom[


    for (var r = top; r < bottom; r++) {
      // check we found value index
      if (index[r] === i) {
        return r;
      }
    } // we did not find row


    return top;
  }

  function _remove(k, j, values, index, ptr) {
    // remove value @ k
    values.splice(k, 1);
    index.splice(k, 1); // update pointers

    for (var x = j + 1; x < ptr.length; x++) {
      ptr[x]--;
    }
  }

  function _insert(k, i, j, v, values, index, ptr) {
    // insert value
    values.splice(k, 0, v); // update row for k

    index.splice(k, 0, i); // update column pointers

    for (var x = j + 1; x < ptr.length; x++) {
      ptr[x]++;
    }
  }
  /**
   * Resize the matrix to the given size. Returns a copy of the matrix when
   * `copy=true`, otherwise return the matrix itself (resize in place).
   *
   * @memberof SparseMatrix
   * @param {number[] | Matrix} size  The new size the matrix should have.
   * @param {*} [defaultValue=0]      Default value, filled in on new entries.
   *                                  If not provided, the matrix elements will
   *                                  be filled with zeros.
   * @param {boolean} [copy]          Return a resized copy of the matrix
   *
   * @return {Matrix}                 The resized matrix
   */


  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {
    // validate arguments
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(size)) {
      throw new TypeError('Array or Matrix expected');
    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector


    var sizeArray = size.valueOf().map(function (value) {
      return Array.isArray(value) && value.length === 1 ? value[0] : value;
    });

    if (sizeArray.length !== 2) {
      throw new Error('Only two dimensions matrix are supported');
    } // check sizes


    sizeArray.forEach(function (value) {
      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(value) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(value) || value < 0) {
        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(sizeArray) + ')');
      }
    }); // matrix to resize

    var m = copy ? this.clone() : this; // resize matrix

    return _resize(m, sizeArray[0], sizeArray[1], defaultValue);
  };

  function _resize(matrix, rows, columns, defaultValue) {
    // value to insert at the time of growing matrix
    var value = defaultValue || 0; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0;

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(matrix._datatype)) {
      // find signature that matches (datatype, datatype)
      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype

      zero = typed.convert(0, matrix._datatype); // convert value to the same datatype

      value = typed.convert(value, matrix._datatype);
    } // should we insert the value?


    var ins = !eq(value, zero); // old columns and rows

    var r = matrix._size[0];
    var c = matrix._size[1];
    var i, j, k; // check we need to increase columns

    if (columns > c) {
      // loop new columns
      for (j = c; j < columns; j++) {
        // update matrix._ptr for current column
        matrix._ptr[j] = matrix._values.length; // check we need to insert matrix._values

        if (ins) {
          // loop rows
          for (i = 0; i < r; i++) {
            // add new matrix._values
            matrix._values.push(value); // update matrix._index


            matrix._index.push(i);
          }
        }
      } // store number of matrix._values in matrix._ptr


      matrix._ptr[columns] = matrix._values.length;
    } else if (columns < c) {
      // truncate matrix._ptr
      matrix._ptr.splice(columns + 1, c - columns); // truncate matrix._values and matrix._index


      matrix._values.splice(matrix._ptr[columns], matrix._values.length);

      matrix._index.splice(matrix._ptr[columns], matrix._index.length);
    } // update columns


    c = columns; // check we need to increase rows

    if (rows > r) {
      // check we have to insert values
      if (ins) {
        // inserts
        var n = 0; // loop columns

        for (j = 0; j < c; j++) {
          // update matrix._ptr for current column
          matrix._ptr[j] = matrix._ptr[j] + n; // where to insert matrix._values

          k = matrix._ptr[j + 1] + n; // pointer

          var p = 0; // loop new rows, initialize pointer

          for (i = r; i < rows; i++, p++) {
            // add value
            matrix._values.splice(k + p, 0, value); // update matrix._index


            matrix._index.splice(k + p, 0, i); // increment inserts


            n++;
          }
        } // store number of matrix._values in matrix._ptr


        matrix._ptr[c] = matrix._values.length;
      }
    } else if (rows < r) {
      // deletes
      var d = 0; // loop columns

      for (j = 0; j < c; j++) {
        // update matrix._ptr for current column
        matrix._ptr[j] = matrix._ptr[j] - d; // where matrix._values start for next column

        var k0 = matrix._ptr[j];
        var k1 = matrix._ptr[j + 1] - d; // loop matrix._index

        for (k = k0; k < k1; k++) {
          // row
          i = matrix._index[k]; // check we need to delete value and matrix._index

          if (i > rows - 1) {
            // remove value
            matrix._values.splice(k, 1); // remove item from matrix._index


            matrix._index.splice(k, 1); // increase deletes


            d++;
          }
        }
      } // update matrix._ptr for current column


      matrix._ptr[j] = matrix._values.length;
    } // update matrix._size


    matrix._size[0] = rows;
    matrix._size[1] = columns; // return matrix

    return matrix;
  }
  /**
   * Reshape the matrix to the given size. Returns a copy of the matrix when
   * `copy=true`, otherwise return the matrix itself (reshape in place).
   *
   * NOTE: This might be better suited to copy by default, instead of modifying
   *       in place. For now, it operates in place to remain consistent with
   *       resize().
   *
   * @memberof SparseMatrix
   * @param {number[]} size           The new size the matrix should have.
   * @param {boolean} [copy]          Return a reshaped copy of the matrix
   *
   * @return {Matrix}                 The reshaped matrix
   */


  SparseMatrix.prototype.reshape = function (size, copy) {
    // validate arguments
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(size)) {
      throw new TypeError('Array expected');
    }

    if (size.length !== 2) {
      throw new Error('Sparse matrices can only be reshaped in two dimensions');
    } // check sizes


    size.forEach(function (value) {
      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(value) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(value) || value < 0) {
        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
      }
    }); // m * n must not change

    if (this._size[0] * this._size[1] !== size[0] * size[1]) {
      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');
    } // matrix to reshape


    var m = copy ? this.clone() : this; // return unchanged if the same shape

    if (this._size[0] === size[0] && this._size[1] === size[1]) {
      return m;
    } // Convert to COO format (generate a column index)


    var colIndex = [];

    for (var i = 0; i < m._ptr.length; i++) {
      for (var j = 0; j < m._ptr[i + 1] - m._ptr[i]; j++) {
        colIndex.push(i);
      }
    } // Clone the values array


    var values = m._values.slice(); // Clone the row index array


    var rowIndex = m._index.slice(); // Transform the (row, column) indices


    for (var _i = 0; _i < m._index.length; _i++) {
      var r1 = rowIndex[_i];
      var c1 = colIndex[_i];
      var flat = r1 * m._size[1] + c1;
      colIndex[_i] = flat % size[1];
      rowIndex[_i] = Math.floor(flat / size[1]);
    } // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored
    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,
    // sorting several arrays based on some other array.
    // OR, we could easily just:
    // 1. Remove all values from the matrix


    m._values.length = 0;
    m._index.length = 0;
    m._ptr.length = size[1] + 1;
    m._size = size.slice();

    for (var _i2 = 0; _i2 < m._ptr.length; _i2++) {
      m._ptr[_i2] = 0;
    } // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)
    // This step is probably the most time-consuming


    for (var h = 0; h < values.length; h++) {
      var _i3 = rowIndex[h];
      var _j = colIndex[h];
      var v = values[h];

      var k = _getValueIndex(_i3, m._ptr[_j], m._ptr[_j + 1], m._index);

      _insert(k, _i3, _j, v, m._values, m._index, m._ptr);
    } // The value indices are inserted out of order, but apparently that's... still OK?


    return m;
  };
  /**
   * Create a clone of the matrix
   * @memberof SparseMatrix
   * @return {SparseMatrix} clone
   */


  SparseMatrix.prototype.clone = function () {
    var m = new SparseMatrix({
      values: this._values ? Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(this._values) : undefined,
      index: Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(this._index),
      ptr: Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(this._ptr),
      size: Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(this._size),
      datatype: this._datatype
    });
    return m;
  };
  /**
   * Retrieve the size of the matrix.
   * @memberof SparseMatrix
   * @returns {number[]} size
   */


  SparseMatrix.prototype.size = function () {
    return this._size.slice(0); // copy the Array
  };
  /**
   * Create a new matrix with the results of the callback function executed on
   * each entry of the matrix.
   * @memberof SparseMatrix
   * @param {Function} callback   The callback function is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix being traversed.
   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.
   *
   * @return {SparseMatrix} matrix
   */


  SparseMatrix.prototype.map = function (callback, skipZeros) {
    // check it is a pattern matrix
    if (!this._values) {
      throw new Error('Cannot invoke map on a Pattern only matrix');
    } // matrix instance


    var me = this; // rows and columns

    var rows = this._size[0];
    var columns = this._size[1]; // invoke callback

    var invoke = function invoke(v, i, j) {
      // invoke callback
      return callback(v, [i, j], me);
    }; // invoke _map


    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);
  };
  /**
   * Create a new matrix with the results of the callback function executed on the interval
   * [minRow..maxRow, minColumn..maxColumn].
   */


  function _map(matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {
    // result arrays
    var values = [];
    var index = [];
    var ptr = []; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0;

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(matrix._datatype)) {
      // find signature that matches (datatype, datatype)
      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype

      zero = typed.convert(0, matrix._datatype);
    } // invoke callback


    var invoke = function invoke(v, x, y) {
      // invoke callback
      v = callback(v, x, y); // check value != 0

      if (!eq(v, zero)) {
        // store value
        values.push(v); // index

        index.push(x);
      }
    }; // loop columns


    for (var j = minColumn; j <= maxColumn; j++) {
      // store pointer to values index
      ptr.push(values.length); // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]

      var k0 = matrix._ptr[j];
      var k1 = matrix._ptr[j + 1];

      if (skipZeros) {
        // loop k within [k0, k1[
        for (var k = k0; k < k1; k++) {
          // row index
          var i = matrix._index[k]; // check i is in range

          if (i >= minRow && i <= maxRow) {
            // value @ k
            invoke(matrix._values[k], i - minRow, j - minColumn);
          }
        }
      } else {
        // create a cache holding all defined values
        var _values = {};

        for (var _k = k0; _k < k1; _k++) {
          var _i4 = matrix._index[_k];
          _values[_i4] = matrix._values[_k];
        } // loop over all rows (indexes can be unordered so we can't use that),
        // and either read the value or zero


        for (var _i5 = minRow; _i5 <= maxRow; _i5++) {
          var value = _i5 in _values ? _values[_i5] : 0;
          invoke(value, _i5 - minRow, j - minColumn);
        }
      }
    } // store number of values in ptr


    ptr.push(values.length); // return sparse matrix

    return new SparseMatrix({
      values: values,
      index: index,
      ptr: ptr,
      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]
    });
  }
  /**
   * Execute a callback function on each entry of the matrix.
   * @memberof SparseMatrix
   * @param {Function} callback   The callback function is invoked with three
   *                              parameters: the value of the element, the index
   *                              of the element, and the Matrix being traversed.
   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.
   */


  SparseMatrix.prototype.forEach = function (callback, skipZeros) {
    // check it is a pattern matrix
    if (!this._values) {
      throw new Error('Cannot invoke forEach on a Pattern only matrix');
    } // matrix instance


    var me = this; // rows and columns

    var rows = this._size[0];
    var columns = this._size[1]; // loop columns

    for (var j = 0; j < columns; j++) {
      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]
      var k0 = this._ptr[j];
      var k1 = this._ptr[j + 1];

      if (skipZeros) {
        // loop k within [k0, k1[
        for (var k = k0; k < k1; k++) {
          // row index
          var i = this._index[k]; // value @ k

          callback(this._values[k], [i, j], me);
        }
      } else {
        // create a cache holding all defined values
        var values = {};

        for (var _k2 = k0; _k2 < k1; _k2++) {
          var _i6 = this._index[_k2];
          values[_i6] = this._values[_k2];
        } // loop over all rows (indexes can be unordered so we can't use that),
        // and either read the value or zero


        for (var _i7 = 0; _i7 < rows; _i7++) {
          var value = _i7 in values ? values[_i7] : 0;
          callback(value, [_i7, j], me);
        }
      }
    }
  };
  /**
   * Create an Array with a copy of the data of the SparseMatrix
   * @memberof SparseMatrix
   * @returns {Array} array
   */


  SparseMatrix.prototype.toArray = function () {
    return _toArray(this._values, this._index, this._ptr, this._size, true);
  };
  /**
   * Get the primitive value of the SparseMatrix: a two dimensions array
   * @memberof SparseMatrix
   * @returns {Array} array
   */


  SparseMatrix.prototype.valueOf = function () {
    return _toArray(this._values, this._index, this._ptr, this._size, false);
  };

  function _toArray(values, index, ptr, size, copy) {
    // rows and columns
    var rows = size[0];
    var columns = size[1]; // result

    var a = []; // vars

    var i, j; // initialize array

    for (i = 0; i < rows; i++) {
      a[i] = [];

      for (j = 0; j < columns; j++) {
        a[i][j] = 0;
      }
    } // loop columns


    for (j = 0; j < columns; j++) {
      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]
      var k0 = ptr[j];
      var k1 = ptr[j + 1]; // loop k within [k0, k1[

      for (var k = k0; k < k1; k++) {
        // row index
        i = index[k]; // set value (use one for pattern matrix)

        a[i][j] = values ? copy ? Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(values[k]) : values[k] : 1;
      }
    }

    return a;
  }
  /**
   * Get a string representation of the matrix, with optional formatting options.
   * @memberof SparseMatrix
   * @param {Object | number | Function} [options]  Formatting options. See
   *                                                lib/utils/number:format for a
   *                                                description of the available
   *                                                options.
   * @returns {string} str
   */


  SparseMatrix.prototype.format = function (options) {
    // rows and columns
    var rows = this._size[0];
    var columns = this._size[1]; // density

    var density = this.density(); // rows & columns

    var str = 'Sparse Matrix [' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(rows, options) + ' x ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(columns, options) + '] density: ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(density, options) + '\n'; // loop columns

    for (var j = 0; j < columns; j++) {
      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]
      var k0 = this._ptr[j];
      var k1 = this._ptr[j + 1]; // loop k within [k0, k1[

      for (var k = k0; k < k1; k++) {
        // row index
        var i = this._index[k]; // append value

        str += '\n    (' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(i, options) + ', ' + Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(j, options) + ') ==> ' + (this._values ? Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(this._values[k], options) : 'X');
      }
    }

    return str;
  };
  /**
   * Get a string representation of the matrix
   * @memberof SparseMatrix
   * @returns {string} str
   */


  SparseMatrix.prototype.toString = function () {
    return Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["format"])(this.toArray());
  };
  /**
   * Get a JSON representation of the matrix
   * @memberof SparseMatrix
   * @returns {Object}
   */


  SparseMatrix.prototype.toJSON = function () {
    return {
      mathjs: 'SparseMatrix',
      values: this._values,
      index: this._index,
      ptr: this._ptr,
      size: this._size,
      datatype: this._datatype
    };
  };
  /**
   * Get the kth Matrix diagonal.
   *
   * @memberof SparseMatrix
   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.
   *
   * @returns {Matrix}                     The matrix vector with the diagonal values.
   */


  SparseMatrix.prototype.diagonal = function (k) {
    // validate k if any
    if (k) {
      // convert BigNumber to a number
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(k)) {
        k = k.toNumber();
      } // is must be an integer


      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(k) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(k)) {
        throw new TypeError('The parameter k must be an integer number');
      }
    } else {
      // default value
      k = 0;
    }

    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0; // rows & columns

    var rows = this._size[0];
    var columns = this._size[1]; // number diagonal values

    var n = Math.min(rows - kSub, columns - kSuper); // diagonal arrays

    var values = [];
    var index = [];
    var ptr = []; // initial ptr value

    ptr[0] = 0; // loop columns

    for (var j = kSuper; j < columns && values.length < n; j++) {
      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]
      var k0 = this._ptr[j];
      var k1 = this._ptr[j + 1]; // loop x within [k0, k1[

      for (var x = k0; x < k1; x++) {
        // row index
        var i = this._index[x]; // check row

        if (i === j - kSuper + kSub) {
          // value on this column
          values.push(this._values[x]); // store row

          index[values.length - 1] = i - kSub; // exit loop

          break;
        }
      }
    } // close ptr


    ptr.push(values.length); // return matrix

    return new SparseMatrix({
      values: values,
      index: index,
      ptr: ptr,
      size: [n, 1]
    });
  };
  /**
   * Generate a matrix from a JSON object
   * @memberof SparseMatrix
   * @param {Object} json  An object structured like
   *                       `{"mathjs": "SparseMatrix", "values": [], "index": [], "ptr": [], "size": []}`,
   *                       where mathjs is optional
   * @returns {SparseMatrix}
   */


  SparseMatrix.fromJSON = function (json) {
    return new SparseMatrix(json);
  };
  /**
   * Create a diagonal matrix.
   *
   * @memberof SparseMatrix
   * @param {Array} size                       The matrix size.
   * @param {number | Array | Matrix } value   The values for the diagonal.
   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.
   * @param {number} [defaultValue]            The default value for non-diagonal
   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.
   *
   * @returns {SparseMatrix}
   */


  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(size)) {
      throw new TypeError('Array expected, size parameter');
    }

    if (size.length !== 2) {
      throw new Error('Only two dimensions matrix are supported');
    } // map size & validate


    size = size.map(function (s) {
      // check it is a big number
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(s)) {
        // convert it
        s = s.toNumber();
      } // validate arguments


      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(s) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(s) || s < 1) {
        throw new Error('Size values must be positive integers');
      }

      return s;
    }); // validate k if any

    if (k) {
      // convert BigNumber to a number
      if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(k)) {
        k = k.toNumber();
      } // is must be an integer


      if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(k) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(k)) {
        throw new TypeError('The parameter k must be an integer number');
      }
    } else {
      // default value
      k = 0;
    } // equal signature to use


    var eq = equalScalar; // zero value

    var zero = 0;

    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(datatype)) {
      // find signature that matches (datatype, datatype)
      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype

      zero = typed.convert(0, datatype);
    }

    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0; // rows and columns

    var rows = size[0];
    var columns = size[1]; // number of non-zero items

    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function

    var _value; // check value


    if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value)) {
      // validate array
      if (value.length !== n) {
        // number of values in array must be n
        throw new Error('Invalid value array length');
      } // define function


      _value = function _value(i) {
        // return value @ i
        return value[i];
      };
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(value)) {
      // matrix size
      var ms = value.size(); // validate matrix

      if (ms.length !== 1 || ms[0] !== n) {
        // number of values in array must be n
        throw new Error('Invalid matrix length');
      } // define function


      _value = function _value(i) {
        // return value @ i
        return value.get([i]);
      };
    } else {
      // define function
      _value = function _value() {
        // return value
        return value;
      };
    } // create arrays


    var values = [];
    var index = [];
    var ptr = []; // loop items

    for (var j = 0; j < columns; j++) {
      // number of rows with value
      ptr.push(values.length); // diagonal index

      var i = j - kSuper; // check we need to set diagonal value

      if (i >= 0 && i < n) {
        // get value @ i
        var v = _value(i); // check for zero


        if (!eq(v, zero)) {
          // column
          index.push(i + kSub); // add value

          values.push(v);
        }
      }
    } // last value should be number of values


    ptr.push(values.length); // create SparseMatrix

    return new SparseMatrix({
      values: values,
      index: index,
      ptr: ptr,
      size: [rows, columns]
    });
  };
  /**
   * Swap rows i and j in Matrix.
   *
   * @memberof SparseMatrix
   * @param {number} i       Matrix row index 1
   * @param {number} j       Matrix row index 2
   *
   * @return {Matrix}        The matrix reference
   */


  SparseMatrix.prototype.swapRows = function (i, j) {
    // check index
    if (!Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(i) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(i) || !Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(j) || !Object(_utils_number__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(j)) {
      throw new Error('Row index must be positive integers');
    } // check dimensions


    if (this._size.length !== 2) {
      throw new Error('Only two dimensional matrix is supported');
    } // validate index


    Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(i, this._size[0]);
    Object(_utils_array__WEBPACK_IMPORTED_MODULE_4__["validateIndex"])(j, this._size[0]); // swap rows

    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr); // return current instance


    return this;
  };
  /**
   * Loop rows with data in column j.
   *
   * @param {number} j            Column
   * @param {Array} values        Matrix values
   * @param {Array} index         Matrix row indeces
   * @param {Array} ptr           Matrix column pointers
   * @param {Function} callback   Callback function invoked for every row in column j
   */


  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {
    // indeces for column j
    var k0 = ptr[j];
    var k1 = ptr[j + 1]; // loop

    for (var k = k0; k < k1; k++) {
      // invoke callback
      callback(index[k], values[k]);
    }
  };
  /**
   * Swap rows x and y in Sparse Matrix data structures.
   *
   * @param {number} x         Matrix row index 1
   * @param {number} y         Matrix row index 2
   * @param {number} columns   Number of columns in matrix
   * @param {Array} values     Matrix values
   * @param {Array} index      Matrix row indeces
   * @param {Array} ptr        Matrix column pointers
   */


  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {
    // loop columns
    for (var j = 0; j < columns; j++) {
      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]
      var k0 = ptr[j];
      var k1 = ptr[j + 1]; // find value index @ x

      var kx = _getValueIndex(x, k0, k1, index); // find value index @ x


      var ky = _getValueIndex(y, k0, k1, index); // check both rows exist in matrix


      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {
        // swap values (check for pattern matrix)
        if (values) {
          var v = values[kx];
          values[kx] = values[ky];
          values[ky] = v;
        } // next column


        continue;
      } // check x row exist & no y row


      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {
        // value @ x (check for pattern matrix)
        var vx = values ? values[kx] : undefined; // insert value @ y

        index.splice(ky, 0, y);

        if (values) {
          values.splice(ky, 0, vx);
        } // remove value @ x (adjust array index if needed)


        index.splice(ky <= kx ? kx + 1 : kx, 1);

        if (values) {
          values.splice(ky <= kx ? kx + 1 : kx, 1);
        } // next column


        continue;
      } // check y row exist & no x row


      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {
        // value @ y (check for pattern matrix)
        var vy = values ? values[ky] : undefined; // insert value @ x

        index.splice(kx, 0, x);

        if (values) {
          values.splice(kx, 0, vy);
        } // remove value @ y (adjust array index if needed)


        index.splice(kx <= ky ? ky + 1 : ky, 1);

        if (values) {
          values.splice(kx <= ky ? ky + 1 : ky, 1);
        }
      }
    }
  };

  return SparseMatrix;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/function/index.js":
/*!***************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/function/index.js ***!
  \***************************************************************/
/*! exports provided: createIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIndex", function() { return createIndex; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/is */ "../node_modules/mathjs/es/utils/is.js");


var name = 'index';
var dependencies = ['typed', 'Index'];
var createIndex = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Index = _ref.Index;

  /**
   * Create an index. An Index can store ranges having start, step, and end
   * for multiple dimensions.
   * Matrix.get, Matrix.set, and math.subset accept an Index as input.
   *
   * Syntax:
   *
   *     math.index(range1, range2, ...)
   *
   * Where each range can be any of:
   *
   * - A number
   * - A string for getting/setting an object property
   * - An instance of `Range`
   * - A one-dimensional Array or a Matrix with numbers
   *
   * Indexes must be zero-based, integer numbers.
   *
   * Examples:
   *
   *    const b = [1, 2, 3, 4, 5]
   *    math.subset(b, math.index([1, 2, 3]))     // returns [2, 3, 4]
   *
   *    const a = math.matrix([[1, 2], [3, 4]])
   *    a.subset(math.index(0, 1))             // returns 2
   *
   * See also:
   *
   *    bignumber, boolean, complex, matrix, number, string, unit
   *
   * @param {...*} ranges   Zero or more ranges or numbers.
   * @return {Index}        Returns the created index
   */
  return typed(name, {
    '...number | string | BigNumber | Range | Array | Matrix': function numberStringBigNumberRangeArrayMatrix(args) {
      var ranges = args.map(function (arg) {
        if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isBigNumber"])(arg)) {
          return arg.toNumber(); // convert BigNumber to Number
        } else if (Array.isArray(arg) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isMatrix"])(arg)) {
          return arg.map(function (elem) {
            // convert BigNumber to Number
            return Object(_utils_is__WEBPACK_IMPORTED_MODULE_1__["isBigNumber"])(elem) ? elem.toNumber() : elem;
          });
        } else {
          return arg;
        }
      });
      var res = new Index();
      Index.apply(res, ranges);
      return res;
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/function/matrix.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/function/matrix.js ***!
  \****************************************************************/
/*! exports provided: createMatrix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMatrix", function() { return createMatrix; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'matrix';
var dependencies = ['typed', 'Matrix', 'DenseMatrix', 'SparseMatrix'];
var createMatrix = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Matrix = _ref.Matrix,
      DenseMatrix = _ref.DenseMatrix,
      SparseMatrix = _ref.SparseMatrix;

  /**
   * Create a Matrix. The function creates a new `math.Matrix` object from
   * an `Array`. A Matrix has utility functions to manipulate the data in the
   * matrix, like getting the size and getting or setting values in the matrix.
   * Supported storage formats are 'dense' and 'sparse'.
   *
   * Syntax:
   *
   *    math.matrix()                         // creates an empty matrix using default storage format (dense).
   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).
   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.
   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.
   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.
   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.
   *
   * Examples:
   *
   *    let m = math.matrix([[1, 2], [3, 4]])
   *    m.size()                        // Array [2, 2]
   *    m.resize([3, 2], 5)
   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]
   *    m.get([1, 0])                    // number 3
   *
   * See also:
   *
   *    bignumber, boolean, complex, index, number, string, unit, sparse
   *
   * @param {Array | Matrix} [data]    A multi dimensional array
   * @param {string} [format]          The Matrix storage format
   *
   * @return {Matrix} The created matrix
   */
  return typed(name, {
    '': function _() {
      return _create([]);
    },
    string: function string(format) {
      return _create([], format);
    },
    'string, string': function stringString(format, datatype) {
      return _create([], format, datatype);
    },
    Array: function Array(data) {
      return _create(data);
    },
    Matrix: function Matrix(data) {
      return _create(data, data.storage());
    },
    'Array | Matrix, string': _create,
    'Array | Matrix, string, string': _create
  });
  /**
   * Create a new Matrix with given storage format
   * @param {Array} data
   * @param {string} [format]
   * @param {string} [datatype]
   * @returns {Matrix} Returns a new Matrix
   * @private
   */

  function _create(data, format, datatype) {
    // get storage format constructor
    if (format === 'dense' || format === 'default' || format === undefined) {
      return new DenseMatrix(data, datatype);
    }

    if (format === 'sparse') {
      return new SparseMatrix(data, datatype);
    }

    throw new TypeError('Unknown matrix type ' + JSON.stringify(format) + '.');
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/function/sparse.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/function/sparse.js ***!
  \****************************************************************/
/*! exports provided: createSparse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSparse", function() { return createSparse; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'sparse';
var dependencies = ['typed', 'SparseMatrix'];
var createSparse = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      SparseMatrix = _ref.SparseMatrix;

  /**
   * Create a Sparse Matrix. The function creates a new `math.Matrix` object from
   * an `Array`. A Matrix has utility functions to manipulate the data in the
   * matrix, like getting the size and getting or setting values in the matrix.
   *
   * Syntax:
   *
   *    math.sparse()               // creates an empty sparse matrix.
   *    math.sparse(data)           // creates a sparse matrix with initial data.
   *    math.sparse(data, 'number') // creates a sparse matrix with initial data, number datatype.
   *
   * Examples:
   *
   *    let m = math.sparse([[1, 2], [3, 4]])
   *    m.size()                        // Array [2, 2]
   *    m.resize([3, 2], 5)
   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]
   *    m.get([1, 0])                    // number 3
   *
   * See also:
   *
   *    bignumber, boolean, complex, index, number, string, unit, matrix
   *
   * @param {Array | Matrix} [data]    A two dimensional array
   *
   * @return {Matrix} The created matrix
   */
  return typed(name, {
    '': function _() {
      return new SparseMatrix([]);
    },
    string: function string(datatype) {
      return new SparseMatrix([], datatype);
    },
    'Array | Matrix': function ArrayMatrix(data) {
      return new SparseMatrix(data);
    },
    'Array | Matrix, string': function ArrayMatrixString(data, datatype) {
      return new SparseMatrix(data, datatype);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm01.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm01.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm01 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm01", function() { return createAlgorithm01; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm01';
var dependencies = ['typed'];
var createAlgorithm01 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).
   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).
   *
   *
   *          â”Œ  f(Dij, Sij)  ; S(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  Dij          ; otherwise
   *
   *
   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)
   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)
   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)
   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)
   *
   * @return {Matrix}                    DenseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571
   */
  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {
    // dense matrix arrays
    var adata = denseMatrix._data;
    var asize = denseMatrix._size;
    var adt = denseMatrix._datatype; // sparse matrix arrays

    var bvalues = sparseMatrix._values;
    var bindex = sparseMatrix._index;
    var bptr = sparseMatrix._ptr;
    var bsize = sparseMatrix._size;
    var bdt = sparseMatrix._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // sparse matrix cannot be a Pattern matrix


    if (!bvalues) {
      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // process data types

    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function

    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars

    var i, j; // result (DenseMatrix)

    var cdata = []; // initialize c

    for (i = 0; i < rows; i++) {
      cdata[i] = [];
    } // workspace


    var x = []; // marks indicating we have a value in x for a given column

    var w = []; // loop columns in b

    for (j = 0; j < columns; j++) {
      // column mark
      var mark = j + 1; // values in column j

      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        // row
        i = bindex[k]; // update workspace

        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated

        w[i] = mark;
      } // loop rows


      for (i = 0; i < rows; i++) {
        // check row is in workspace
        if (w[i] === mark) {
          // c[i][j] was already calculated
          cdata[i][j] = x[i];
        } else {
          // item does not exist in S
          cdata[i][j] = adata[i][j];
        }
      }
    } // return dense matrix


    return denseMatrix.createDenseMatrix({
      data: cdata,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm02.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm02.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm02 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm02", function() { return createAlgorithm02; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm02';
var dependencies = ['typed', 'equalScalar'];
var createAlgorithm02 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar;

  /**
   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).
   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).
   *
   *
   *          â”Œ  f(Dij, Sij)  ; S(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  0            ; otherwise
   *
   *
   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)
   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)
   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)
   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)
   *
   * @return {Matrix}                    SparseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571
   */
  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {
    // dense matrix arrays
    var adata = denseMatrix._data;
    var asize = denseMatrix._size;
    var adt = denseMatrix._datatype; // sparse matrix arrays

    var bvalues = sparseMatrix._values;
    var bindex = sparseMatrix._index;
    var bptr = sparseMatrix._ptr;
    var bsize = sparseMatrix._size;
    var bdt = sparseMatrix._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // sparse matrix cannot be a Pattern matrix


    if (!bvalues) {
      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // find signature that matches (dt, dt)

      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result (SparseMatrix)


    var cvalues = [];
    var cindex = [];
    var cptr = []; // loop columns in b

    for (var j = 0; j < columns; j++) {
      // update cptr
      cptr[j] = cindex.length; // values in column j

      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        // row
        var i = bindex[k]; // update C(i,j)

        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero

        if (!eq(cij, zero)) {
          // push i & v
          cindex.push(i);
          cvalues.push(cij);
        }
      }
    } // update cptr


    cptr[columns] = cindex.length; // return sparse matrix

    return sparseMatrix.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm03.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm03.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm03 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm03", function() { return createAlgorithm03; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm03';
var dependencies = ['typed'];
var createAlgorithm03 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).
   * Callback function invoked M*N times.
   *
   *
   *          â”Œ  f(Dij, Sij)  ; S(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  f(Dij, 0)    ; otherwise
   *
   *
   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)
   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)
   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)
   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)
   *
   * @return {Matrix}                    DenseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571
   */
  return function algorithm03(denseMatrix, sparseMatrix, callback, inverse) {
    // dense matrix arrays
    var adata = denseMatrix._data;
    var asize = denseMatrix._size;
    var adt = denseMatrix._datatype; // sparse matrix arrays

    var bvalues = sparseMatrix._values;
    var bindex = sparseMatrix._index;
    var bptr = sparseMatrix._ptr;
    var bsize = sparseMatrix._size;
    var bdt = sparseMatrix._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // sparse matrix cannot be a Pattern matrix


    if (!bvalues) {
      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result (DenseMatrix)


    var cdata = []; // initialize dense matrix

    for (var z = 0; z < rows; z++) {
      // initialize row
      cdata[z] = [];
    } // workspace


    var x = []; // marks indicating we have a value in x for a given column

    var w = []; // loop columns in b

    for (var j = 0; j < columns; j++) {
      // column mark
      var mark = j + 1; // values in column j

      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        // row
        var i = bindex[k]; // update workspace

        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);
        w[i] = mark;
      } // process workspace


      for (var y = 0; y < rows; y++) {
        // check we have a calculated value for current row
        if (w[y] === mark) {
          // use calculated value
          cdata[y][j] = x[y];
        } else {
          // calculate value
          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);
        }
      }
    } // return dense matrix


    return denseMatrix.createDenseMatrix({
      data: cdata,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm04.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm04.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm04 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm04", function() { return createAlgorithm04; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm04';
var dependencies = ['typed', 'equalScalar'];
var createAlgorithm04 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar;

  /**
   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).
   * Callback function invoked MAX(NNZA, NNZB) times
   *
   *
   *          â”Œ  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0
   * C(i,j) = â”¤  A(i,j)       ; A(i,j) !== 0
   *          â””  B(i,j)       ; B(i,j) !== 0
   *
   *
   * @param {Matrix}   a                 The SparseMatrix instance (A)
   * @param {Matrix}   b                 The SparseMatrix instance (B)
   * @param {Function} callback          The f(Aij,Bij) operation to invoke
   *
   * @return {Matrix}                    SparseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294
   */
  return function algorithm04(a, b, callback) {
    // sparse matrix arrays
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype; // sparse matrix arrays

    var bvalues = b._values;
    var bindex = b._index;
    var bptr = b._ptr;
    var bsize = b._size;
    var bdt = b._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // find signature that matches (dt, dt)

      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cvalues = avalues && bvalues ? [] : undefined;
    var cindex = [];
    var cptr = []; // workspace

    var xa = avalues && bvalues ? [] : undefined;
    var xb = avalues && bvalues ? [] : undefined; // marks indicating we have a value in x for a given column

    var wa = [];
    var wb = []; // vars

    var i, j, k, k0, k1; // loop columns

    for (j = 0; j < columns; j++) {
      // update cptr
      cptr[j] = cindex.length; // columns mark

      var mark = j + 1; // loop A(:,j)

      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        // row
        i = aindex[k]; // update c

        cindex.push(i); // update workspace

        wa[i] = mark; // check we need to process values

        if (xa) {
          xa[i] = avalues[k];
        }
      } // loop B(:,j)


      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        // row
        i = bindex[k]; // check row exists in A

        if (wa[i] === mark) {
          // update record in xa @ i
          if (xa) {
            // invoke callback
            var v = cf(xa[i], bvalues[k]); // check for zero

            if (!eq(v, zero)) {
              // update workspace
              xa[i] = v;
            } else {
              // remove mark (index will be removed later)
              wa[i] = null;
            }
          }
        } else {
          // update c
          cindex.push(i); // update workspace

          wb[i] = mark; // check we need to process values

          if (xb) {
            xb[i] = bvalues[k];
          }
        }
      } // check we need to process values (non pattern matrix)


      if (xa && xb) {
        // initialize first index in j
        k = cptr[j]; // loop index in j

        while (k < cindex.length) {
          // row
          i = cindex[k]; // check workspace has value @ i

          if (wa[i] === mark) {
            // push value (Aij != 0 || (Aij != 0 && Bij != 0))
            cvalues[k] = xa[i]; // increment pointer

            k++;
          } else if (wb[i] === mark) {
            // push value (bij != 0)
            cvalues[k] = xb[i]; // increment pointer

            k++;
          } else {
            // remove index @ k
            cindex.splice(k, 1);
          }
        }
      }
    } // update cptr


    cptr[columns] = cindex.length; // return sparse matrix

    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm05.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm05.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm05 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm05", function() { return createAlgorithm05; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm05';
var dependencies = ['typed', 'equalScalar'];
var createAlgorithm05 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar;

  /**
   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).
   * Callback function invoked MAX(NNZA, NNZB) times
   *
   *
   *          â”Œ  f(Aij, Bij)  ; A(i,j) !== 0 || B(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  0            ; otherwise
   *
   *
   * @param {Matrix}   a                 The SparseMatrix instance (A)
   * @param {Matrix}   b                 The SparseMatrix instance (B)
   * @param {Function} callback          The f(Aij,Bij) operation to invoke
   *
   * @return {Matrix}                    SparseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294
   */
  return function algorithm05(a, b, callback) {
    // sparse matrix arrays
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype; // sparse matrix arrays

    var bvalues = b._values;
    var bindex = b._index;
    var bptr = b._ptr;
    var bsize = b._size;
    var bdt = b._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // find signature that matches (dt, dt)

      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cvalues = avalues && bvalues ? [] : undefined;
    var cindex = [];
    var cptr = []; // workspaces

    var xa = cvalues ? [] : undefined;
    var xb = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column

    var wa = [];
    var wb = []; // vars

    var i, j, k, k1; // loop columns

    for (j = 0; j < columns; j++) {
      // update cptr
      cptr[j] = cindex.length; // columns mark

      var mark = j + 1; // loop values A(:,j)

      for (k = aptr[j], k1 = aptr[j + 1]; k < k1; k++) {
        // row
        i = aindex[k]; // push index

        cindex.push(i); // update workspace

        wa[i] = mark; // check we need to process values

        if (xa) {
          xa[i] = avalues[k];
        }
      } // loop values B(:,j)


      for (k = bptr[j], k1 = bptr[j + 1]; k < k1; k++) {
        // row
        i = bindex[k]; // check row existed in A

        if (wa[i] !== mark) {
          // push index
          cindex.push(i);
        } // update workspace


        wb[i] = mark; // check we need to process values

        if (xb) {
          xb[i] = bvalues[k];
        }
      } // check we need to process values (non pattern matrix)


      if (cvalues) {
        // initialize first index in j
        k = cptr[j]; // loop index in j

        while (k < cindex.length) {
          // row
          i = cindex[k]; // marks

          var wai = wa[i];
          var wbi = wb[i]; // check Aij or Bij are nonzero

          if (wai === mark || wbi === mark) {
            // matrix values @ i,j
            var va = wai === mark ? xa[i] : zero;
            var vb = wbi === mark ? xb[i] : zero; // Cij

            var vc = cf(va, vb); // check for zero

            if (!eq(vc, zero)) {
              // push value
              cvalues.push(vc); // increment pointer

              k++;
            } else {
              // remove value @ i, do not increment pointer
              cindex.splice(k, 1);
            }
          }
        }
      }
    } // update cptr


    cptr[columns] = cindex.length; // return sparse matrix

    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm06.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm06.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm06 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm06", function() { return createAlgorithm06; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");



var name = 'algorithm06';
var dependencies = ['typed', 'equalScalar'];
var createAlgorithm06 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar;

  /**
   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).
   * Callback function invoked (Anz U Bnz) times, where Anz and Bnz are the nonzero elements in both matrices.
   *
   *
   *          â”Œ  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  0            ; otherwise
   *
   *
   * @param {Matrix}   a                 The SparseMatrix instance (A)
   * @param {Matrix}   b                 The SparseMatrix instance (B)
   * @param {Function} callback          The f(Aij,Bij) operation to invoke
   *
   * @return {Matrix}                    SparseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294
   */
  return function algorithm06(a, b, callback) {
    // sparse matrix arrays
    var avalues = a._values;
    var asize = a._size;
    var adt = a._datatype; // sparse matrix arrays

    var bvalues = b._values;
    var bsize = b._size;
    var bdt = b._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // find signature that matches (dt, dt)

      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cvalues = avalues && bvalues ? [] : undefined;
    var cindex = [];
    var cptr = []; // workspaces

    var x = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column

    var w = []; // marks indicating value in a given row has been updated

    var u = []; // loop columns

    for (var j = 0; j < columns; j++) {
      // update cptr
      cptr[j] = cindex.length; // columns mark

      var mark = j + 1; // scatter the values of A(:,j) into workspace

      Object(_utils_collection__WEBPACK_IMPORTED_MODULE_2__["scatter"])(a, j, w, x, u, mark, cindex, cf); // scatter the values of B(:,j) into workspace

      Object(_utils_collection__WEBPACK_IMPORTED_MODULE_2__["scatter"])(b, j, w, x, u, mark, cindex, cf); // check we need to process values (non pattern matrix)

      if (x) {
        // initialize first index in j
        var k = cptr[j]; // loop index in j

        while (k < cindex.length) {
          // row
          var i = cindex[k]; // check function was invoked on current row (Aij !=0 && Bij != 0)

          if (u[i] === mark) {
            // value @ i
            var v = x[i]; // check for zero value

            if (!eq(v, zero)) {
              // push value
              cvalues.push(v); // increment pointer

              k++;
            } else {
              // remove value @ i, do not increment pointer
              cindex.splice(k, 1);
            }
          } else {
            // remove value @ i, do not increment pointer
            cindex.splice(k, 1);
          }
        }
      } else {
        // initialize first index in j
        var p = cptr[j]; // loop index in j

        while (p < cindex.length) {
          // row
          var r = cindex[p]; // check function was invoked on current row (Aij !=0 && Bij != 0)

          if (u[r] !== mark) {
            // remove value @ i, do not increment pointer
            cindex.splice(p, 1);
          } else {
            // increment pointer
            p++;
          }
        }
      }
    } // update cptr


    cptr[columns] = cindex.length; // return sparse matrix

    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm07.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm07.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm07 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm07", function() { return createAlgorithm07; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm07';
var dependencies = ['typed', 'DenseMatrix'];
var createAlgorithm07 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      DenseMatrix = _ref.DenseMatrix;

  /**
   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij).
   * Callback function invoked MxN times.
   *
   * C(i,j) = f(Aij, Bij)
   *
   * @param {Matrix}   a                 The SparseMatrix instance (A)
   * @param {Matrix}   b                 The SparseMatrix instance (B)
   * @param {Function} callback          The f(Aij,Bij) operation to invoke
   *
   * @return {Matrix}                    DenseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294
   */
  return function algorithm07(a, b, callback) {
    // sparse matrix arrays
    var asize = a._size;
    var adt = a._datatype; // sparse matrix arrays

    var bsize = b._size;
    var bdt = b._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // vars


    var i, j; // result arrays

    var cdata = []; // initialize c

    for (i = 0; i < rows; i++) {
      cdata[i] = [];
    } // workspaces


    var xa = [];
    var xb = []; // marks indicating we have a value in x for a given column

    var wa = [];
    var wb = []; // loop columns

    for (j = 0; j < columns; j++) {
      // columns mark
      var mark = j + 1; // scatter the values of A(:,j) into workspace

      _scatter(a, j, wa, xa, mark); // scatter the values of B(:,j) into workspace


      _scatter(b, j, wb, xb, mark); // loop rows


      for (i = 0; i < rows; i++) {
        // matrix values @ i,j
        var va = wa[i] === mark ? xa[i] : zero;
        var vb = wb[i] === mark ? xb[i] : zero; // invoke callback

        cdata[i][j] = cf(va, vb);
      }
    } // return dense matrix


    return new DenseMatrix({
      data: cdata,
      size: [rows, columns],
      datatype: dt
    });
  };

  function _scatter(m, j, w, x, mark) {
    // a arrays
    var values = m._values;
    var index = m._index;
    var ptr = m._ptr; // loop values in column j

    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {
      // row
      var i = index[k]; // update workspace

      w[i] = mark;
      x[i] = values[k];
    }
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm08.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm08.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm08 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm08", function() { return createAlgorithm08; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm08';
var dependencies = ['typed', 'equalScalar'];
var createAlgorithm08 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar;

  /**
   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).
   * Callback function invoked MAX(NNZA, NNZB) times
   *
   *
   *          â”Œ  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0
   * C(i,j) = â”¤  A(i,j)       ; A(i,j) !== 0
   *          â””  0            ; otherwise
   *
   *
   * @param {Matrix}   a                 The SparseMatrix instance (A)
   * @param {Matrix}   b                 The SparseMatrix instance (B)
   * @param {Function} callback          The f(Aij,Bij) operation to invoke
   *
   * @return {Matrix}                    SparseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294
   */
  return function algorithm08(a, b, callback) {
    // sparse matrix arrays
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype; // sparse matrix arrays

    var bvalues = b._values;
    var bindex = b._index;
    var bptr = b._ptr;
    var bsize = b._size;
    var bdt = b._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // sparse matrix cannot be a Pattern matrix


    if (!avalues || !bvalues) {
      throw new Error('Cannot perform operation on Pattern Sparse Matrices');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // find signature that matches (dt, dt)

      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cvalues = [];
    var cindex = [];
    var cptr = []; // workspace

    var x = []; // marks indicating we have a value in x for a given column

    var w = []; // vars

    var k, k0, k1, i; // loop columns

    for (var j = 0; j < columns; j++) {
      // update cptr
      cptr[j] = cindex.length; // columns mark

      var mark = j + 1; // loop values in a

      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        // row
        i = aindex[k]; // mark workspace

        w[i] = mark; // set value

        x[i] = avalues[k]; // add index

        cindex.push(i);
      } // loop values in b


      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        // row
        i = bindex[k]; // check value exists in workspace

        if (w[i] === mark) {
          // evaluate callback
          x[i] = cf(x[i], bvalues[k]);
        }
      } // initialize first index in j


      k = cptr[j]; // loop index in j

      while (k < cindex.length) {
        // row
        i = cindex[k]; // value @ i

        var v = x[i]; // check for zero value

        if (!eq(v, zero)) {
          // push value
          cvalues.push(v); // increment pointer

          k++;
        } else {
          // remove value @ i, do not increment pointer
          cindex.splice(k, 1);
        }
      }
    } // update cptr


    cptr[columns] = cindex.length; // return sparse matrix

    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm09.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm09.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm09 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm09", function() { return createAlgorithm09; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm09';
var dependencies = ['typed', 'equalScalar'];
var createAlgorithm09 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar;

  /**
   * Iterates over SparseMatrix A and invokes the callback function f(Aij, Bij).
   * Callback function invoked NZA times, number of nonzero elements in A.
   *
   *
   *          â”Œ  f(Aij, Bij)  ; A(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  0            ; otherwise
   *
   *
   * @param {Matrix}   a                 The SparseMatrix instance (A)
   * @param {Matrix}   b                 The SparseMatrix instance (B)
   * @param {Function} callback          The f(Aij,Bij) operation to invoke
   *
   * @return {Matrix}                    SparseMatrix (C)
   *
   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294
   */
  return function algorithm09(a, b, callback) {
    // sparse matrix arrays
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype; // sparse matrix arrays

    var bvalues = b._values;
    var bindex = b._index;
    var bptr = b._ptr;
    var bsize = b._size;
    var bdt = b._datatype; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // check rows & columns


    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // find signature that matches (dt, dt)

      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cvalues = avalues && bvalues ? [] : undefined;
    var cindex = [];
    var cptr = []; // workspaces

    var x = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column

    var w = []; // vars

    var i, j, k, k0, k1; // loop columns

    for (j = 0; j < columns; j++) {
      // update cptr
      cptr[j] = cindex.length; // column mark

      var mark = j + 1; // check we need to process values

      if (x) {
        // loop B(:,j)
        for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
          // row
          i = bindex[k]; // update workspace

          w[i] = mark;
          x[i] = bvalues[k];
        }
      } // loop A(:,j)


      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        // row
        i = aindex[k]; // check we need to process values

        if (x) {
          // b value @ i,j
          var vb = w[i] === mark ? x[i] : zero; // invoke f

          var vc = cf(avalues[k], vb); // check zero value

          if (!eq(vc, zero)) {
            // push index
            cindex.push(i); // push value

            cvalues.push(vc);
          }
        } else {
          // push index
          cindex.push(i);
        }
      }
    } // update cptr


    cptr[columns] = cindex.length; // return sparse matrix

    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm10.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm10.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm10", function() { return createAlgorithm10; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'algorithm10';
var dependencies = ['typed', 'DenseMatrix'];
var createAlgorithm10 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      DenseMatrix = _ref.DenseMatrix;

  /**
   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).
   * Callback function invoked NZ times (number of nonzero items in S).
   *
   *
   *          â”Œ  f(Sij, b)  ; S(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  b          ; otherwise
   *
   *
   * @param {Matrix}   s                 The SparseMatrix instance (S)
   * @param {Scalar}   b                 The Scalar value
   * @param {Function} callback          The f(Aij,b) operation to invoke
   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)
   *
   * @return {Matrix}                    DenseMatrix (C)
   *
   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813
   */
  return function algorithm10(s, b, callback, inverse) {
    // sparse matrix arrays
    var avalues = s._values;
    var aindex = s._index;
    var aptr = s._ptr;
    var asize = s._size;
    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix

    if (!avalues) {
      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string') {
      // datatype
      dt = adt; // convert b to the same datatype

      b = typed.convert(b, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cdata = []; // workspaces

    var x = []; // marks indicating we have a value in x for a given column

    var w = []; // loop columns

    for (var j = 0; j < columns; j++) {
      // columns mark
      var mark = j + 1; // values in j

      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        // row
        var r = aindex[k]; // update workspace

        x[r] = avalues[k];
        w[r] = mark;
      } // loop rows


      for (var i = 0; i < rows; i++) {
        // initialize C on first column
        if (j === 0) {
          // create row array
          cdata[i] = [];
        } // check sparse matrix has a value @ i,j


        if (w[i] === mark) {
          // invoke callback, update C
          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);
        } else {
          // dense matrix value @ i, j
          cdata[i][j] = b;
        }
      }
    } // return dense matrix


    return new DenseMatrix({
      data: cdata,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm11.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm11.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm11", function() { return createAlgorithm11; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'algorithm11';
var dependencies = ['typed', 'equalScalar'];
var createAlgorithm11 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      equalScalar = _ref.equalScalar;

  /**
   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).
   * Callback function invoked NZ times (number of nonzero items in S).
   *
   *
   *          â”Œ  f(Sij, b)  ; S(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  0          ; otherwise
   *
   *
   * @param {Matrix}   s                 The SparseMatrix instance (S)
   * @param {Scalar}   b                 The Scalar value
   * @param {Function} callback          The f(Aij,b) operation to invoke
   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)
   *
   * @return {Matrix}                    SparseMatrix (C)
   *
   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813
   */
  return function algorithm11(s, b, callback, inverse) {
    // sparse matrix arrays
    var avalues = s._values;
    var aindex = s._index;
    var aptr = s._ptr;
    var asize = s._size;
    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix

    if (!avalues) {
      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // equal signature to use

    var eq = equalScalar; // zero value

    var zero = 0; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string') {
      // datatype
      dt = adt; // find signature that matches (dt, dt)

      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype

      zero = typed.convert(0, dt); // convert b to the same datatype

      b = typed.convert(b, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cvalues = [];
    var cindex = [];
    var cptr = []; // loop columns

    for (var j = 0; j < columns; j++) {
      // initialize ptr
      cptr[j] = cindex.length; // values in j

      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        // row
        var i = aindex[k]; // invoke callback

        var v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b); // check value is zero

        if (!eq(v, zero)) {
          // push index & value
          cindex.push(i);
          cvalues.push(v);
        }
      }
    } // update ptr


    cptr[columns] = cindex.length; // return sparse matrix

    return s.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm12.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm12.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm12", function() { return createAlgorithm12; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'algorithm12';
var dependencies = ['typed', 'DenseMatrix'];
var createAlgorithm12 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      DenseMatrix = _ref.DenseMatrix;

  /**
   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).
   * Callback function invoked MxN times.
   *
   *
   *          â”Œ  f(Sij, b)  ; S(i,j) !== 0
   * C(i,j) = â”¤
   *          â””  f(0, b)    ; otherwise
   *
   *
   * @param {Matrix}   s                 The SparseMatrix instance (S)
   * @param {Scalar}   b                 The Scalar value
   * @param {Function} callback          The f(Aij,b) operation to invoke
   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)
   *
   * @return {Matrix}                    DenseMatrix (C)
   *
   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813
   */
  return function algorithm12(s, b, callback, inverse) {
    // sparse matrix arrays
    var avalues = s._values;
    var aindex = s._index;
    var aptr = s._ptr;
    var asize = s._size;
    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix

    if (!avalues) {
      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');
    } // rows & columns


    var rows = asize[0];
    var columns = asize[1]; // datatype

    var dt; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string') {
      // datatype
      dt = adt; // convert b to the same datatype

      b = typed.convert(b, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // result arrays


    var cdata = []; // workspaces

    var x = []; // marks indicating we have a value in x for a given column

    var w = []; // loop columns

    for (var j = 0; j < columns; j++) {
      // columns mark
      var mark = j + 1; // values in j

      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        // row
        var r = aindex[k]; // update workspace

        x[r] = avalues[k];
        w[r] = mark;
      } // loop rows


      for (var i = 0; i < rows; i++) {
        // initialize C on first column
        if (j === 0) {
          // create row array
          cdata[i] = [];
        } // check sparse matrix has a value @ i,j


        if (w[i] === mark) {
          // invoke callback, update C
          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);
        } else {
          // dense matrix value @ i, j
          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);
        }
      }
    } // return dense matrix


    return new DenseMatrix({
      data: cdata,
      size: [rows, columns],
      datatype: dt
    });
  };
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm13.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm13.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm13", function() { return createAlgorithm13; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");


var name = 'algorithm13';
var dependencies = ['typed'];
var createAlgorithm13 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z).
   * Callback function invoked MxN times.
   *
   * C(i,j,...z) = f(Aij..z, Bij..z)
   *
   * @param {Matrix}   a                 The DenseMatrix instance (A)
   * @param {Matrix}   b                 The DenseMatrix instance (B)
   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke
   *
   * @return {Matrix}                    DenseMatrix (C)
   *
   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658
   */
  return function algorithm13(a, b, callback) {
    // a arrays
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype; // b arrays

    var bdata = b._data;
    var bsize = b._size;
    var bdt = b._datatype; // c arrays

    var csize = []; // validate dimensions

    if (asize.length !== bsize.length) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_1__["DimensionError"](asize.length, bsize.length);
    } // validate each one of the dimension sizes


    for (var s = 0; s < asize.length; s++) {
      // must match
      if (asize[s] !== bsize[s]) {
        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');
      } // update dimension in c


      csize[s] = asize[s];
    } // datatype


    var dt; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string' && adt === bdt) {
      // datatype
      dt = adt; // callback

      cf = typed.find(callback, [dt, dt]);
    } // populate cdata, iterate through dimensions


    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : []; // c matrix

    return a.createDenseMatrix({
      data: cdata,
      size: csize,
      datatype: dt
    });
  }; // recursive function

  function _iterate(f, level, s, n, av, bv) {
    // initialize array for this level
    var cv = []; // check we reach the last level

    if (level === s.length - 1) {
      // loop arrays in last level
      for (var i = 0; i < n; i++) {
        // invoke callback and store value
        cv[i] = f(av[i], bv[i]);
      }
    } else {
      // iterate current level
      for (var j = 0; j < n; j++) {
        // iterate next level
        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);
      }
    }

    return cv;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/matrix/utils/algorithm14.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/matrix/utils/algorithm14.js ***!
  \******************************************************************/
/*! exports provided: createAlgorithm14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAlgorithm14", function() { return createAlgorithm14; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/object */ "../node_modules/mathjs/es/utils/object.js");


var name = 'algorithm14';
var dependencies = ['typed'];
var createAlgorithm14 = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b).
   * Callback function invoked MxN times.
   *
   * C(i,j,...z) = f(Aij..z, b)
   *
   * @param {Matrix}   a                 The DenseMatrix instance (A)
   * @param {Scalar}   b                 The Scalar value
   * @param {Function} callback          The f(Aij..z,b) operation to invoke
   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)
   *
   * @return {Matrix}                    DenseMatrix (C)
   *
   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042
   */
  return function algorithm14(a, b, callback, inverse) {
    // a arrays
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype; // datatype

    var dt; // callback signature to use

    var cf = callback; // process data types

    if (typeof adt === 'string') {
      // datatype
      dt = adt; // convert b to the same datatype

      b = typed.convert(b, dt); // callback

      cf = typed.find(callback, [dt, dt]);
    } // populate cdata, iterate through dimensions


    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : []; // c matrix

    return a.createDenseMatrix({
      data: cdata,
      size: Object(_utils_object__WEBPACK_IMPORTED_MODULE_1__["clone"])(asize),
      datatype: dt
    });
  }; // recursive function

  function _iterate(f, level, s, n, av, bv, inverse) {
    // initialize array for this level
    var cv = []; // check we reach the last level

    if (level === s.length - 1) {
      // loop arrays in last level
      for (var i = 0; i < n; i++) {
        // invoke callback and store value
        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);
      }
    } else {
      // iterate current level
      for (var j = 0; j < n; j++) {
        // iterate next level
        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);
      }
    }

    return cv;
  }
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/number.js":
/*!************************************************!*\
  !*** ../node_modules/mathjs/es/type/number.js ***!
  \************************************************/
/*! exports provided: createNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNumber", function() { return createNumber; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'number';
var dependencies = ['typed'];
var createNumber = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Create a number or convert a string, boolean, or unit to a number.
   * When value is a matrix, all elements will be converted to number.
   *
   * Syntax:
   *
   *    math.number(value)
   *    math.number(unit, valuelessUnit)
   *
   * Examples:
   *
   *    math.number(2)                         // returns number 2
   *    math.number('7.2')                     // returns number 7.2
   *    math.number(true)                      // returns number 1
   *    math.number([true, false, true, true]) // returns [1, 0, 1, 1]
   *    math.number(math.unit('52cm'), 'm')    // returns 0.52
   *
   * See also:
   *
   *    bignumber, boolean, complex, index, matrix, string, unit
   *
   * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted
   * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number
   * @return {number | Array | Matrix} The created number
   */
  var number = typed('number', {
    '': function _() {
      return 0;
    },
    number: function number(x) {
      return x;
    },
    string: function string(x) {
      if (x === 'NaN') return NaN;
      var num = Number(x);

      if (isNaN(num)) {
        throw new SyntaxError('String "' + x + '" is no valid number');
      }

      return num;
    },
    BigNumber: function BigNumber(x) {
      return x.toNumber();
    },
    Fraction: function Fraction(x) {
      return x.valueOf();
    },
    Unit: function Unit(x) {
      throw new Error('Second argument with valueless unit expected');
    },
    "null": function _null(x) {
      return 0;
    },
    'Unit, string | Unit': function UnitStringUnit(unit, valuelessUnit) {
      return unit.toNumber(valuelessUnit);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  }); // reviver function to parse a JSON object like:
  //
  //     {"mathjs":"number","value":"2.3"}
  //
  // into a number 2.3

  number.fromJSON = function (json) {
    return parseFloat(json.value);
  };

  return number;
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/resultset/ResultSet.js":
/*!*************************************************************!*\
  !*** ../node_modules/mathjs/es/type/resultset/ResultSet.js ***!
  \*************************************************************/
/*! exports provided: createResultSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createResultSet", function() { return createResultSet; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'ResultSet';
var dependencies = [];
var createResultSet = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function () {
  /**
   * A ResultSet contains a list or results
   * @class ResultSet
   * @param {Array} entries
   * @constructor ResultSet
   */
  function ResultSet(entries) {
    if (!(this instanceof ResultSet)) {
      throw new SyntaxError('Constructor must be called with the new operator');
    }

    this.entries = entries || [];
  }
  /**
   * Attach type information
   */


  ResultSet.prototype.type = 'ResultSet';
  ResultSet.prototype.isResultSet = true;
  /**
   * Returns the array with results hold by this ResultSet
   * @memberof ResultSet
   * @returns {Array} entries
   */

  ResultSet.prototype.valueOf = function () {
    return this.entries;
  };
  /**
   * Returns the stringified results of the ResultSet
   * @memberof ResultSet
   * @returns {string} string
   */


  ResultSet.prototype.toString = function () {
    return '[' + this.entries.join(', ') + ']';
  };
  /**
   * Get a JSON representation of the ResultSet
   * @memberof ResultSet
   * @returns {Object} Returns a JSON object structured as:
   *                   `{"mathjs": "ResultSet", "entries": [...]}`
   */


  ResultSet.prototype.toJSON = function () {
    return {
      mathjs: 'ResultSet',
      entries: this.entries
    };
  };
  /**
   * Instantiate a ResultSet from a JSON object
   * @memberof ResultSet
   * @param {Object} json  A JSON object structured as:
   *                       `{"mathjs": "ResultSet", "entries": [...]}`
   * @return {ResultSet}
   */


  ResultSet.fromJSON = function (json) {
    return new ResultSet(json.entries);
  };

  return ResultSet;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/string.js":
/*!************************************************!*\
  !*** ../node_modules/mathjs/es/type/string.js ***!
  \************************************************/
/*! exports provided: createString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createString", function() { return createString; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");
/* harmony import */ var _utils_number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/number */ "../node_modules/mathjs/es/utils/number.js");



var name = 'string';
var dependencies = ['typed'];
var createString = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Create a string or convert any object into a string.
   * Elements of Arrays and Matrices are processed element wise.
   *
   * Syntax:
   *
   *    math.string(value)
   *
   * Examples:
   *
   *    math.string(4.2)               // returns string '4.2'
   *    math.string(math.complex(3, 2) // returns string '3 + 2i'
   *
   *    const u = math.unit(5, 'km')
   *    math.string(u.to('m'))         // returns string '5000 m'
   *
   *    math.string([true, false])     // returns ['true', 'false']
   *
   * See also:
   *
   *    bignumber, boolean, complex, index, matrix, number, unit
   *
   * @param {* | Array | Matrix | null} [value]  A value to convert to a string
   * @return {string | Array | Matrix} The created string
   */
  return typed(name, {
    '': function _() {
      return '';
    },
    number: _utils_number__WEBPACK_IMPORTED_MODULE_2__["format"],
    "null": function _null(x) {
      return 'null';
    },
    "boolean": function boolean(x) {
      return x + '';
    },
    string: function string(x) {
      return x;
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    },
    any: function any(x) {
      return String(x);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/unit/Unit.js":
/*!***************************************************!*\
  !*** ../node_modules/mathjs/es/type/unit/Unit.js ***!
  \***************************************************/
/*! exports provided: createUnitClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnitClass", function() { return createUnitClass; });
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object */ "../node_modules/mathjs/es/utils/object.js");
/* harmony import */ var _utils_bignumber_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/bignumber/constants */ "../node_modules/mathjs/es/utils/bignumber/constants.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var name = 'Unit';
var dependencies = ['?on', 'config', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'abs', 'fix', 'round', 'equal', 'isNumeric', 'format', 'number', 'Complex', 'BigNumber', 'Fraction'];
var createUnitClass = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_1__["factory"])(name, dependencies, function (_ref) {
  var on = _ref.on,
      config = _ref.config,
      addScalar = _ref.addScalar,
      subtract = _ref.subtract,
      multiplyScalar = _ref.multiplyScalar,
      divideScalar = _ref.divideScalar,
      pow = _ref.pow,
      abs = _ref.abs,
      fix = _ref.fix,
      round = _ref.round,
      equal = _ref.equal,
      isNumeric = _ref.isNumeric,
      format = _ref.format,
      number = _ref.number,
      Complex = _ref.Complex,
      _BigNumber = _ref.BigNumber,
      _Fraction = _ref.Fraction;
  var toNumber = number;
  /**
   * A unit can be constructed in the following ways:
   *
   *     const a = new Unit(value, name)
   *     const b = new Unit(null, name)
   *     const c = Unit.parse(str)
   *
   * Example usage:
   *
   *     const a = new Unit(5, 'cm')               // 50 mm
   *     const b = Unit.parse('23 kg')             // 23 kg
   *     const c = math.in(a, new Unit(null, 'm')  // 0.05 m
   *     const d = new Unit(9.81, "m/s^2")         // 9.81 m/s^2
   *
   * @class Unit
   * @constructor Unit
   * @param {number | BigNumber | Fraction | Complex | boolean} [value]  A value like 5.2
   * @param {string} [name]   A unit name like "cm" or "inch", or a derived unit of the form: "u1[^ex1] [u2[^ex2] ...] [/ u3[^ex3] [u4[^ex4]]]", such as "kg m^2/s^2", where each unit appearing after the forward slash is taken to be in the denominator. "kg m^2 s^-2" is a synonym and is also acceptable. Any of the units can include a prefix.
   */

  function Unit(value, name) {
    if (!(this instanceof Unit)) {
      throw new Error('Constructor must be called with the new operator');
    }

    if (!(value === null || value === undefined || isNumeric(value) || Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isComplex"])(value))) {
      throw new TypeError('First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined');
    }

    if (name !== undefined && (typeof name !== 'string' || name === '')) {
      throw new TypeError('Second parameter in Unit constructor must be a string');
    }

    if (name !== undefined) {
      var u = Unit.parse(name);
      this.units = u.units;
      this.dimensions = u.dimensions;
    } else {
      this.units = [{
        unit: UNIT_NONE,
        prefix: PREFIXES.NONE,
        // link to a list with supported prefixes
        power: 0
      }];
      this.dimensions = [];

      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
        this.dimensions[i] = 0;
      }
    }

    this.value = value !== undefined && value !== null ? this._normalize(value) : null;
    this.fixPrefix = false; // if true, function format will not search for the
    // best prefix but leave it as initially provided.
    // fixPrefix is set true by the method Unit.to
    // The justification behind this is that if the constructor is explicitly called,
    // the caller wishes the units to be returned exactly as he supplied.

    this.skipAutomaticSimplification = true;
  }
  /**
   * Attach type information
   */


  Unit.prototype.type = 'Unit';
  Unit.prototype.isUnit = true; // private variables and functions for the Unit parser

  var text, index, c;

  function skipWhitespace() {
    while (c === ' ' || c === '\t') {
      next();
    }
  }

  function isDigitDot(c) {
    return c >= '0' && c <= '9' || c === '.';
  }

  function isDigit(c) {
    return c >= '0' && c <= '9';
  }

  function next() {
    index++;
    c = text.charAt(index);
  }

  function revert(oldIndex) {
    index = oldIndex;
    c = text.charAt(index);
  }

  function parseNumber() {
    var number = '';
    var oldIndex = index;

    if (c === '+') {
      next();
    } else if (c === '-') {
      number += c;
      next();
    }

    if (!isDigitDot(c)) {
      // a + or - must be followed by a digit
      revert(oldIndex);
      return null;
    } // get number, can have a single dot


    if (c === '.') {
      number += c;
      next();

      if (!isDigit(c)) {
        // this is no legal number, it is just a dot
        revert(oldIndex);
        return null;
      }
    } else {
      while (isDigit(c)) {
        number += c;
        next();
      }

      if (c === '.') {
        number += c;
        next();
      }
    }

    while (isDigit(c)) {
      number += c;
      next();
    } // check for exponential notation like "2.3e-4" or "1.23e50"


    if (c === 'E' || c === 'e') {
      // The grammar branches here. This could either be part of an exponent or the start of a unit that begins with the letter e, such as "4exabytes"
      var tentativeNumber = '';
      var tentativeIndex = index;
      tentativeNumber += c;
      next();

      if (c === '+' || c === '-') {
        tentativeNumber += c;
        next();
      } // Scientific notation MUST be followed by an exponent (otherwise we assume it is not scientific notation)


      if (!isDigit(c)) {
        // The e or E must belong to something else, so return the number without the e or E.
        revert(tentativeIndex);
        return number;
      } // We can now safely say that this is scientific notation.


      number = number + tentativeNumber;

      while (isDigit(c)) {
        number += c;
        next();
      }
    }

    return number;
  }

  function parseUnit() {
    var unitName = ''; // Alphanumeric characters only; matches [a-zA-Z0-9]

    var code = text.charCodeAt(index);

    while (code >= 48 && code <= 57 || code >= 65 && code <= 90 || code >= 97 && code <= 122) {
      unitName += c;
      next();
      code = text.charCodeAt(index);
    } // Must begin with [a-zA-Z]


    code = unitName.charCodeAt(0);

    if (code >= 65 && code <= 90 || code >= 97 && code <= 122) {
      return unitName || null;
    } else {
      return null;
    }
  }

  function parseCharacter(toFind) {
    if (c === toFind) {
      next();
      return toFind;
    } else {
      return null;
    }
  }
  /**
   * Parse a string into a unit. The value of the unit is parsed as number,
   * BigNumber, or Fraction depending on the math.js config setting `number`.
   *
   * Throws an exception if the provided string does not contain a valid unit or
   * cannot be parsed.
   * @memberof Unit
   * @param {string} str        A string like "5.2 inch", "4e2 cm/s^2"
   * @return {Unit} unit
   */


  Unit.parse = function (str, options) {
    options = options || {};
    text = str;
    index = -1;
    c = '';

    if (typeof text !== 'string') {
      throw new TypeError('Invalid argument in Unit.parse, string expected');
    }

    var unit = new Unit();
    unit.units = [];
    var powerMultiplierCurrent = 1;
    var expectingUnit = false; // A unit should follow this pattern:
    // [number] ...[ [*/] unit[^number] ]
    // unit[^number] ... [ [*/] unit[^number] ]
    // Rules:
    // number is any floating point number.
    // unit is any alphanumeric string beginning with an alpha. Units with names like e3 should be avoided because they look like the exponent of a floating point number!
    // The string may optionally begin with a number.
    // Each unit may optionally be followed by ^number.
    // Whitespace or a forward slash is recommended between consecutive units, although the following technically is parseable:
    //   2m^2kg/s^2
    // it is not good form. If a unit starts with e, then it could be confused as a floating point number:
    //   4erg

    next();
    skipWhitespace(); // Optional number at the start of the string

    var valueStr = parseNumber();
    var value = null;

    if (valueStr) {
      if (config.number === 'BigNumber') {
        value = new _BigNumber(valueStr);
      } else if (config.number === 'Fraction') {
        try {
          // not all numbers can be turned in Fractions, for example very small numbers not
          value = new _Fraction(valueStr);
        } catch (err) {
          value = parseFloat(valueStr);
        }
      } else {
        // number
        value = parseFloat(valueStr);
      }

      skipWhitespace(); // Whitespace is not required here
      // handle multiplication or division right after the value, like '1/s'

      if (parseCharacter('*')) {
        powerMultiplierCurrent = 1;
        expectingUnit = true;
      } else if (parseCharacter('/')) {
        powerMultiplierCurrent = -1;
        expectingUnit = true;
      }
    } // Stack to keep track of powerMultipliers applied to each parentheses group


    var powerMultiplierStack = []; // Running product of all elements in powerMultiplierStack

    var powerMultiplierStackProduct = 1;

    while (true) {
      skipWhitespace(); // Check for and consume opening parentheses, pushing powerMultiplierCurrent to the stack
      // A '(' will always appear directly before a unit.

      while (c === '(') {
        powerMultiplierStack.push(powerMultiplierCurrent);
        powerMultiplierStackProduct *= powerMultiplierCurrent;
        powerMultiplierCurrent = 1;
        next();
        skipWhitespace();
      } // Is there something here?


      var uStr = void 0;

      if (c) {
        var oldC = c;
        uStr = parseUnit();

        if (uStr === null) {
          throw new SyntaxError('Unexpected "' + oldC + '" in "' + text + '" at index ' + index.toString());
        }
      } else {
        // End of input.
        break;
      } // Verify the unit exists and get the prefix (if any)


      var res = _findUnit(uStr);

      if (res === null) {
        // Unit not found.
        throw new SyntaxError('Unit "' + uStr + '" not found.');
      }

      var power = powerMultiplierCurrent * powerMultiplierStackProduct; // Is there a "^ number"?

      skipWhitespace();

      if (parseCharacter('^')) {
        skipWhitespace();
        var p = parseNumber();

        if (p === null) {
          // No valid number found for the power!
          throw new SyntaxError('In "' + str + '", "^" must be followed by a floating-point number');
        }

        power *= p;
      } // Add the unit to the list


      unit.units.push({
        unit: res.unit,
        prefix: res.prefix,
        power: power
      });

      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
        unit.dimensions[i] += (res.unit.dimensions[i] || 0) * power;
      } // Check for and consume closing parentheses, popping from the stack.
      // A ')' will always follow a unit.


      skipWhitespace();

      while (c === ')') {
        if (powerMultiplierStack.length === 0) {
          throw new SyntaxError('Unmatched ")" in "' + text + '" at index ' + index.toString());
        }

        powerMultiplierStackProduct /= powerMultiplierStack.pop();
        next();
        skipWhitespace();
      } // "*" and "/" should mean we are expecting something to come next.
      // Is there a forward slash? If so, negate powerMultiplierCurrent. The next unit or paren group is in the denominator.


      expectingUnit = false;

      if (parseCharacter('*')) {
        // explicit multiplication
        powerMultiplierCurrent = 1;
        expectingUnit = true;
      } else if (parseCharacter('/')) {
        // division
        powerMultiplierCurrent = -1;
        expectingUnit = true;
      } else {
        // implicit multiplication
        powerMultiplierCurrent = 1;
      } // Replace the unit into the auto unit system


      if (res.unit.base) {
        var baseDim = res.unit.base.key;
        UNIT_SYSTEMS.auto[baseDim] = {
          unit: res.unit,
          prefix: res.prefix
        };
      }
    } // Has the string been entirely consumed?


    skipWhitespace();

    if (c) {
      throw new SyntaxError('Could not parse: "' + str + '"');
    } // Is there a trailing slash?


    if (expectingUnit) {
      throw new SyntaxError('Trailing characters: "' + str + '"');
    } // Is the parentheses stack empty?


    if (powerMultiplierStack.length !== 0) {
      throw new SyntaxError('Unmatched "(" in "' + text + '"');
    } // Are there any units at all?


    if (unit.units.length === 0 && !options.allowNoUnits) {
      throw new SyntaxError('"' + str + '" contains no units');
    }

    unit.value = value !== undefined ? unit._normalize(value) : null;
    return unit;
  };
  /**
   * create a copy of this unit
   * @memberof Unit
   * @return {Unit} Returns a cloned version of the unit
   */


  Unit.prototype.clone = function () {
    var unit = new Unit();
    unit.fixPrefix = this.fixPrefix;
    unit.skipAutomaticSimplification = this.skipAutomaticSimplification;
    unit.value = Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(this.value);
    unit.dimensions = this.dimensions.slice(0);
    unit.units = [];

    for (var i = 0; i < this.units.length; i++) {
      unit.units[i] = {};

      for (var p in this.units[i]) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(this.units[i], p)) {
          unit.units[i][p] = this.units[i][p];
        }
      }
    }

    return unit;
  };
  /**
   * Return whether the unit is derived (such as m/s, or cm^2, but not N)
   * @memberof Unit
   * @return {boolean} True if the unit is derived
   */


  Unit.prototype._isDerived = function () {
    if (this.units.length === 0) {
      return false;
    }

    return this.units.length > 1 || Math.abs(this.units[0].power - 1.0) > 1e-15;
  };
  /**
   * Normalize a value, based on its currently set unit(s)
   * @memberof Unit
   * @param {number | BigNumber | Fraction | boolean} value
   * @return {number | BigNumber | Fraction | boolean} normalized value
   * @private
   */


  Unit.prototype._normalize = function (value) {
    var unitValue, unitOffset, unitPower, unitPrefixValue;
    var convert;

    if (value === null || value === undefined || this.units.length === 0) {
      return value;
    } else if (this._isDerived()) {
      // This is a derived unit, so do not apply offsets.
      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.
      var res = value;
      convert = Unit._getNumberConverter(Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(value)); // convert to Fraction or BigNumber if needed

      for (var i = 0; i < this.units.length; i++) {
        unitValue = convert(this.units[i].unit.value);
        unitPrefixValue = convert(this.units[i].prefix.value);
        unitPower = convert(this.units[i].power);
        res = multiplyScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));
      }

      return res;
    } else {
      // This is a single unit of power 1, like kg or degC
      convert = Unit._getNumberConverter(Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(value)); // convert to Fraction or BigNumber if needed

      unitValue = convert(this.units[0].unit.value);
      unitOffset = convert(this.units[0].unit.offset);
      unitPrefixValue = convert(this.units[0].prefix.value);
      return multiplyScalar(addScalar(value, unitOffset), multiplyScalar(unitValue, unitPrefixValue));
    }
  };
  /**
   * Denormalize a value, based on its currently set unit(s)
   * @memberof Unit
   * @param {number} value
   * @param {number} [prefixValue]    Optional prefix value to be used (ignored if this is a derived unit)
   * @return {number} denormalized value
   * @private
   */


  Unit.prototype._denormalize = function (value, prefixValue) {
    var unitValue, unitOffset, unitPower, unitPrefixValue;
    var convert;

    if (value === null || value === undefined || this.units.length === 0) {
      return value;
    } else if (this._isDerived()) {
      // This is a derived unit, so do not apply offsets.
      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.
      // Also, prefixValue is ignored--but we will still use the prefix value stored in each unit, since kg is usually preferable to g unless the user decides otherwise.
      var res = value;
      convert = Unit._getNumberConverter(Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(value)); // convert to Fraction or BigNumber if needed

      for (var i = 0; i < this.units.length; i++) {
        unitValue = convert(this.units[i].unit.value);
        unitPrefixValue = convert(this.units[i].prefix.value);
        unitPower = convert(this.units[i].power);
        res = divideScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));
      }

      return res;
    } else {
      // This is a single unit of power 1, like kg or degC
      convert = Unit._getNumberConverter(Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(value)); // convert to Fraction or BigNumber if needed

      unitValue = convert(this.units[0].unit.value);
      unitPrefixValue = convert(this.units[0].prefix.value);
      unitOffset = convert(this.units[0].unit.offset);

      if (prefixValue === undefined || prefixValue === null) {
        return subtract(divideScalar(divideScalar(value, unitValue), unitPrefixValue), unitOffset);
      } else {
        return subtract(divideScalar(divideScalar(value, unitValue), prefixValue), unitOffset);
      }
    }
  };
  /**
   * Find a unit from a string
   * @memberof Unit
   * @param {string} str              A string like 'cm' or 'inch'
   * @returns {Object | null} result  When found, an object with fields unit and
   *                                  prefix is returned. Else, null is returned.
   * @private
   */


  function _findUnit(str) {
    // First, match units names exactly. For example, a user could define 'mm' as 10^-4 m, which is silly, but then we would want 'mm' to match the user-defined unit.
    if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNITS, str)) {
      var unit = UNITS[str];
      var prefix = unit.prefixes[''];
      return {
        unit: unit,
        prefix: prefix
      };
    }

    for (var _name in UNITS) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNITS, _name)) {
        if (Object(_utils_string__WEBPACK_IMPORTED_MODULE_2__["endsWith"])(str, _name)) {
          var _unit = UNITS[_name];
          var prefixLen = str.length - _name.length;
          var prefixName = str.substring(0, prefixLen);

          var _prefix = Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(_unit.prefixes, prefixName) ? _unit.prefixes[prefixName] : undefined;

          if (_prefix !== undefined) {
            // store unit, prefix, and value
            return {
              unit: _unit,
              prefix: _prefix
            };
          }
        }
      }
    }

    return null;
  }
  /**
   * Test if the given expression is a unit.
   * The unit can have a prefix but cannot have a value.
   * @memberof Unit
   * @param {string} name   A string to be tested whether it is a value less unit.
   *                        The unit can have prefix, like "cm"
   * @return {boolean}      true if the given string is a unit
   */


  Unit.isValuelessUnit = function (name) {
    return _findUnit(name) !== null;
  };
  /**
   * check if this unit has given base unit
   * If this unit is a derived unit, this will ALWAYS return false, since by definition base units are not derived.
   * @memberof Unit
   * @param {BASE_UNITS | string | undefined} base
   */


  Unit.prototype.hasBase = function (base) {
    if (typeof base === 'string') {
      base = BASE_UNITS[base];
    }

    if (!base) {
      return false;
    } // All dimensions must be the same


    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
      if (Math.abs((this.dimensions[i] || 0) - (base.dimensions[i] || 0)) > 1e-12) {
        return false;
      }
    }

    return true;
  };
  /**
   * Check if this unit has a base or bases equal to another base or bases
   * For derived units, the exponent on each base also must match
   * @memberof Unit
   * @param {Unit} other
   * @return {boolean} true if equal base
   */


  Unit.prototype.equalBase = function (other) {
    // All dimensions must be the same
    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
      if (Math.abs((this.dimensions[i] || 0) - (other.dimensions[i] || 0)) > 1e-12) {
        return false;
      }
    }

    return true;
  };
  /**
   * Check if this unit equals another unit
   * @memberof Unit
   * @param {Unit} other
   * @return {boolean} true if both units are equal
   */


  Unit.prototype.equals = function (other) {
    return this.equalBase(other) && equal(this.value, other.value);
  };
  /**
   * Multiply this unit with another one
   * @memberof Unit
   * @param {Unit} other
   * @return {Unit} product of this unit and the other unit
   */


  Unit.prototype.multiply = function (other) {
    var res = this.clone();

    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
      // Dimensions arrays may be of different lengths. Default to 0.
      res.dimensions[i] = (this.dimensions[i] || 0) + (other.dimensions[i] || 0);
    } // Append other's units list onto res


    for (var _i = 0; _i < other.units.length; _i++) {
      // Make a shallow copy of every unit
      var inverted = _objectSpread({}, other.units[_i]);

      res.units.push(inverted);
    } // If at least one operand has a value, then the result should also have a value


    if (this.value !== null || other.value !== null) {
      var valThis = this.value === null ? this._normalize(1) : this.value;
      var valOther = other.value === null ? other._normalize(1) : other.value;
      res.value = multiplyScalar(valThis, valOther);
    } else {
      res.value = null;
    }

    res.skipAutomaticSimplification = false;
    return getNumericIfUnitless(res);
  };
  /**
   * Divide this unit by another one
   * @memberof Unit
   * @param {Unit} other
   * @return {Unit} result of dividing this unit by the other unit
   */


  Unit.prototype.divide = function (other) {
    var res = this.clone();

    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
      // Dimensions arrays may be of different lengths. Default to 0.
      res.dimensions[i] = (this.dimensions[i] || 0) - (other.dimensions[i] || 0);
    } // Invert and append other's units list onto res


    for (var _i2 = 0; _i2 < other.units.length; _i2++) {
      // Make a shallow copy of every unit
      var inverted = _objectSpread(_objectSpread({}, other.units[_i2]), {}, {
        power: -other.units[_i2].power
      });

      res.units.push(inverted);
    } // If at least one operand has a value, the result should have a value


    if (this.value !== null || other.value !== null) {
      var valThis = this.value === null ? this._normalize(1) : this.value;
      var valOther = other.value === null ? other._normalize(1) : other.value;
      res.value = divideScalar(valThis, valOther);
    } else {
      res.value = null;
    }

    res.skipAutomaticSimplification = false;
    return getNumericIfUnitless(res);
  };
  /**
   * Calculate the power of a unit
   * @memberof Unit
   * @param {number | Fraction | BigNumber} p
   * @returns {Unit}      The result: this^p
   */


  Unit.prototype.pow = function (p) {
    var res = this.clone();

    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
      // Dimensions arrays may be of different lengths. Default to 0.
      res.dimensions[i] = (this.dimensions[i] || 0) * p;
    } // Adjust the power of each unit in the list


    for (var _i3 = 0; _i3 < res.units.length; _i3++) {
      res.units[_i3].power *= p;
    }

    if (res.value !== null) {
      res.value = pow(res.value, p); // only allow numeric output, we don't want to return a Complex number
      // if (!isNumeric(res.value)) {
      //  res.value = NaN
      // }
      // Update: Complex supported now
    } else {
      res.value = null;
    }

    res.skipAutomaticSimplification = false;
    return getNumericIfUnitless(res);
  };
  /**
   * Return the numeric value of this unit if it is dimensionless, has a value, and config.predictable == false; or the original unit otherwise
   * @param {Unit} unit
   * @returns {number | Fraction | BigNumber | Unit}  The numeric value of the unit if conditions are met, or the original unit otherwise
   */


  function getNumericIfUnitless(unit) {
    if (unit.equalBase(BASE_UNITS.NONE) && unit.value !== null && !config.predictable) {
      return unit.value;
    } else {
      return unit;
    }
  }
  /**
   * Calculate the absolute value of a unit
   * @memberof Unit
   * @param {number | Fraction | BigNumber} x
   * @returns {Unit}      The result: |x|, absolute value of x
   */


  Unit.prototype.abs = function () {
    // This gives correct, but unexpected, results for units with an offset.
    // For example, abs(-283.15 degC) = -263.15 degC !!!
    var ret = this.clone();
    ret.value = ret.value !== null ? abs(ret.value) : null;

    for (var i in ret.units) {
      if (ret.units[i].unit.name === 'VA' || ret.units[i].unit.name === 'VAR') {
        ret.units[i].unit = UNITS.W;
      }
    }

    return ret;
  };
  /**
   * Convert the unit to a specific unit name.
   * @memberof Unit
   * @param {string | Unit} valuelessUnit   A unit without value. Can have prefix, like "cm"
   * @returns {Unit} Returns a clone of the unit with a fixed prefix and unit.
   */


  Unit.prototype.to = function (valuelessUnit) {
    var other;
    var value = this.value === null ? this._normalize(1) : this.value;

    if (typeof valuelessUnit === 'string') {
      // other = new Unit(null, valuelessUnit)
      other = Unit.parse(valuelessUnit);

      if (!this.equalBase(other)) {
        throw new Error("Units do not match ('".concat(other.toString(), "' != '").concat(this.toString(), "')"));
      }

      if (other.value !== null) {
        throw new Error('Cannot convert to a unit with a value');
      }

      other.value = Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(value);
      other.fixPrefix = true;
      other.skipAutomaticSimplification = true;
      return other;
    } else if (Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isUnit"])(valuelessUnit)) {
      if (!this.equalBase(valuelessUnit)) {
        throw new Error("Units do not match ('".concat(valuelessUnit.toString(), "' != '").concat(this.toString(), "')"));
      }

      if (valuelessUnit.value !== null) {
        throw new Error('Cannot convert to a unit with a value');
      }

      other = valuelessUnit.clone();
      other.value = Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["clone"])(value);
      other.fixPrefix = true;
      other.skipAutomaticSimplification = true;
      return other;
    } else {
      throw new Error('String or Unit expected as parameter');
    }
  };
  /**
   * Return the value of the unit when represented with given valueless unit
   * @memberof Unit
   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'
   * @return {number} Returns the unit value as number.
   */
  // TODO: deprecate Unit.toNumber? It's always better to use toNumeric


  Unit.prototype.toNumber = function (valuelessUnit) {
    return toNumber(this.toNumeric(valuelessUnit));
  };
  /**
   * Return the value of the unit in the original numeric type
   * @memberof Unit
   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'
   * @return {number | BigNumber | Fraction} Returns the unit value
   */


  Unit.prototype.toNumeric = function (valuelessUnit) {
    var other;

    if (valuelessUnit) {
      // Allow getting the numeric value without converting to a different unit
      other = this.to(valuelessUnit);
    } else {
      other = this.clone();
    }

    if (other._isDerived() || other.units.length === 0) {
      return other._denormalize(other.value);
    } else {
      return other._denormalize(other.value, other.units[0].prefix.value);
    }
  };
  /**
   * Get a string representation of the unit.
   * @memberof Unit
   * @return {string}
   */


  Unit.prototype.toString = function () {
    return this.format();
  };
  /**
   * Get a JSON representation of the unit
   * @memberof Unit
   * @returns {Object} Returns a JSON object structured as:
   *                   `{"mathjs": "Unit", "value": 2, "unit": "cm", "fixPrefix": false}`
   */


  Unit.prototype.toJSON = function () {
    return {
      mathjs: 'Unit',
      value: this._denormalize(this.value),
      unit: this.formatUnits(),
      fixPrefix: this.fixPrefix
    };
  };
  /**
   * Instantiate a Unit from a JSON object
   * @memberof Unit
   * @param {Object} json  A JSON object structured as:
   *                       `{"mathjs": "Unit", "value": 2, "unit": "cm", "fixPrefix": false}`
   * @return {Unit}
   */


  Unit.fromJSON = function (json) {
    var unit = new Unit(json.value, json.unit);
    unit.fixPrefix = json.fixPrefix || false;
    return unit;
  };
  /**
   * Returns the string representation of the unit.
   * @memberof Unit
   * @return {string}
   */


  Unit.prototype.valueOf = Unit.prototype.toString;
  /**
   * Simplify this Unit's unit list and return a new Unit with the simplified list.
   * The returned Unit will contain a list of the "best" units for formatting.
   */

  Unit.prototype.simplify = function () {
    var ret = this.clone();
    var proposedUnitList = []; // Search for a matching base

    var matchingBase;

    for (var key in currentUnitSystem) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(currentUnitSystem, key)) {
        if (ret.hasBase(BASE_UNITS[key])) {
          matchingBase = key;
          break;
        }
      }
    }

    if (matchingBase === 'NONE') {
      ret.units = [];
    } else {
      var matchingUnit;

      if (matchingBase) {
        // Does the unit system have a matching unit?
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(currentUnitSystem, matchingBase)) {
          matchingUnit = currentUnitSystem[matchingBase];
        }
      }

      if (matchingUnit) {
        ret.units = [{
          unit: matchingUnit.unit,
          prefix: matchingUnit.prefix,
          power: 1.0
        }];
      } else {
        // Multiple units or units with powers are formatted like this:
        // 5 (kg m^2) / (s^3 mol)
        // Build an representation from the base units of the current unit system
        var missingBaseDim = false;

        for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
          var baseDim = BASE_DIMENSIONS[i];

          if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {
            if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(currentUnitSystem, baseDim)) {
              proposedUnitList.push({
                unit: currentUnitSystem[baseDim].unit,
                prefix: currentUnitSystem[baseDim].prefix,
                power: ret.dimensions[i] || 0
              });
            } else {
              missingBaseDim = true;
            }
          }
        } // Is the proposed unit list "simpler" than the existing one?


        if (proposedUnitList.length < ret.units.length && !missingBaseDim) {
          // Replace this unit list with the proposed list
          ret.units = proposedUnitList;
        }
      }
    }

    return ret;
  };
  /**
   * Returns a new Unit in the SI system with the same value as this one
   */


  Unit.prototype.toSI = function () {
    var ret = this.clone();
    var proposedUnitList = []; // Multiple units or units with powers are formatted like this:
    // 5 (kg m^2) / (s^3 mol)
    // Build an representation from the base units of the SI unit system

    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {
      var baseDim = BASE_DIMENSIONS[i];

      if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNIT_SYSTEMS.si, baseDim)) {
          proposedUnitList.push({
            unit: UNIT_SYSTEMS.si[baseDim].unit,
            prefix: UNIT_SYSTEMS.si[baseDim].prefix,
            power: ret.dimensions[i] || 0
          });
        } else {
          throw new Error('Cannot express custom unit ' + baseDim + ' in SI units');
        }
      }
    } // Replace this unit list with the proposed list


    ret.units = proposedUnitList;
    ret.fixPrefix = true;
    ret.skipAutomaticSimplification = true;
    return ret;
  };
  /**
   * Get a string representation of the units of this Unit, without the value. The unit list is formatted as-is without first being simplified.
   * @memberof Unit
   * @return {string}
   */


  Unit.prototype.formatUnits = function () {
    var strNum = '';
    var strDen = '';
    var nNum = 0;
    var nDen = 0;

    for (var i = 0; i < this.units.length; i++) {
      if (this.units[i].power > 0) {
        nNum++;
        strNum += ' ' + this.units[i].prefix.name + this.units[i].unit.name;

        if (Math.abs(this.units[i].power - 1.0) > 1e-15) {
          strNum += '^' + this.units[i].power;
        }
      } else if (this.units[i].power < 0) {
        nDen++;
      }
    }

    if (nDen > 0) {
      for (var _i4 = 0; _i4 < this.units.length; _i4++) {
        if (this.units[_i4].power < 0) {
          if (nNum > 0) {
            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;

            if (Math.abs(this.units[_i4].power + 1.0) > 1e-15) {
              strDen += '^' + -this.units[_i4].power;
            }
          } else {
            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;
            strDen += '^' + this.units[_i4].power;
          }
        }
      }
    } // Remove leading " "


    strNum = strNum.substr(1);
    strDen = strDen.substr(1); // Add parans for better copy/paste back into evaluate, for example, or for better pretty print formatting

    if (nNum > 1 && nDen > 0) {
      strNum = '(' + strNum + ')';
    }

    if (nDen > 1 && nNum > 0) {
      strDen = '(' + strDen + ')';
    }

    var str = strNum;

    if (nNum > 0 && nDen > 0) {
      str += ' / ';
    }

    str += strDen;
    return str;
  };
  /**
   * Get a string representation of the Unit, with optional formatting options.
   * @memberof Unit
   * @param {Object | number | Function} [options]  Formatting options. See
   *                                                lib/utils/number:format for a
   *                                                description of the available
   *                                                options.
   * @return {string}
   */


  Unit.prototype.format = function (options) {
    // Simplfy the unit list, unless it is valueless or was created directly in the
    // constructor or as the result of to or toSI
    var simp = this.skipAutomaticSimplification || this.value === null ? this.clone() : this.simplify(); // Apply some custom logic for handling VA and VAR. The goal is to express the value of the unit as a real value, if possible. Otherwise, use a real-valued unit instead of a complex-valued one.

    var isImaginary = false;

    if (typeof simp.value !== 'undefined' && simp.value !== null && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isComplex"])(simp.value)) {
      // TODO: Make this better, for example, use relative magnitude of re and im rather than absolute
      isImaginary = Math.abs(simp.value.re) < 1e-14;
    }

    for (var i in simp.units) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(simp.units, i)) {
        if (simp.units[i].unit) {
          if (simp.units[i].unit.name === 'VA' && isImaginary) {
            simp.units[i].unit = UNITS.VAR;
          } else if (simp.units[i].unit.name === 'VAR' && !isImaginary) {
            simp.units[i].unit = UNITS.VA;
          }
        }
      }
    } // Now apply the best prefix
    // Units must have only one unit and not have the fixPrefix flag set


    if (simp.units.length === 1 && !simp.fixPrefix) {
      // Units must have integer powers, otherwise the prefix will change the
      // outputted value by not-an-integer-power-of-ten
      if (Math.abs(simp.units[0].power - Math.round(simp.units[0].power)) < 1e-14) {
        // Apply the best prefix
        simp.units[0].prefix = simp._bestPrefix();
      }
    }

    var value = simp._denormalize(simp.value);

    var str = simp.value !== null ? format(value, options || {}) : '';
    var unitStr = simp.formatUnits();

    if (simp.value && Object(_utils_is__WEBPACK_IMPORTED_MODULE_0__["isComplex"])(simp.value)) {
      str = '(' + str + ')'; // Surround complex values with ( ) to enable better parsing
    }

    if (unitStr.length > 0 && str.length > 0) {
      str += ' ';
    }

    str += unitStr;
    return str;
  };
  /**
   * Calculate the best prefix using current value.
   * @memberof Unit
   * @returns {Object} prefix
   * @private
   */


  Unit.prototype._bestPrefix = function () {
    if (this.units.length !== 1) {
      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');
    }

    if (Math.abs(this.units[0].power - Math.round(this.units[0].power)) >= 1e-14) {
      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');
    } // find the best prefix value (resulting in the value of which
    // the absolute value of the log10 is closest to zero,
    // though with a little offset of 1.2 for nicer values: you get a
    // sequence 1mm 100mm 500mm 0.6m 1m 10m 100m 500m 0.6km 1km ...
    // Note: the units value can be any numeric type, but to find the best
    // prefix it's enough to work with limited precision of a regular number
    // Update: using mathjs abs since we also allow complex numbers


    var absValue = this.value !== null ? abs(this.value) : 0;
    var absUnitValue = abs(this.units[0].unit.value);
    var bestPrefix = this.units[0].prefix;

    if (absValue === 0) {
      return bestPrefix;
    }

    var power = this.units[0].power;
    var bestDiff = Math.log(absValue / Math.pow(bestPrefix.value * absUnitValue, power)) / Math.LN10 - 1.2;
    if (bestDiff > -2.200001 && bestDiff < 1.800001) return bestPrefix; // Allow the original prefix

    bestDiff = Math.abs(bestDiff);
    var prefixes = this.units[0].unit.prefixes;

    for (var p in prefixes) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(prefixes, p)) {
        var prefix = prefixes[p];

        if (prefix.scientific) {
          var diff = Math.abs(Math.log(absValue / Math.pow(prefix.value * absUnitValue, power)) / Math.LN10 - 1.2);

          if (diff < bestDiff || diff === bestDiff && prefix.name.length < bestPrefix.name.length) {
            // choose the prefix with the smallest diff, or if equal, choose the one
            // with the shortest name (can happen with SHORTLONG for example)
            bestPrefix = prefix;
            bestDiff = diff;
          }
        }
      }
    }

    return bestPrefix;
  };
  /**
   * Returns an array of units whose sum is equal to this unit
   * @memberof Unit
   * @param {Array} [parts] An array of strings or valueless units.
   *
   *   Example:
   *
   *   const u = new Unit(1, 'm')
   *   u.splitUnit(['feet', 'inch'])
   *     [ 3 feet, 3.3700787401575 inch ]
   *
   * @return {Array} An array of units.
   */


  Unit.prototype.splitUnit = function (parts) {
    var x = this.clone();
    var ret = [];

    for (var i = 0; i < parts.length; i++) {
      // Convert x to the requested unit
      x = x.to(parts[i]);
      if (i === parts.length - 1) break; // Get the numeric value of this unit

      var xNumeric = x.toNumeric(); // Check to see if xNumeric is nearly equal to an integer,
      // since fix can incorrectly round down if there is round-off error

      var xRounded = round(xNumeric);
      var xFixed = void 0;
      var isNearlyEqual = equal(xRounded, xNumeric);

      if (isNearlyEqual) {
        xFixed = xRounded;
      } else {
        xFixed = fix(x.toNumeric());
      }

      var y = new Unit(xFixed, parts[i].toString());
      ret.push(y);
      x = subtract(x, y);
    } // This little bit fixes a bug where the remainder should be 0 but is a little bit off.
    // But instead of comparing x, the remainder, with zero--we will compare the sum of
    // all the parts so far with the original value. If they are nearly equal,
    // we set the remainder to 0.


    var testSum = 0;

    for (var _i5 = 0; _i5 < ret.length; _i5++) {
      testSum = addScalar(testSum, ret[_i5].value);
    }

    if (equal(testSum, this.value)) {
      x.value = 0;
    }

    ret.push(x);
    return ret;
  };

  var PREFIXES = {
    NONE: {
      '': {
        name: '',
        value: 1,
        scientific: true
      }
    },
    SHORT: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      da: {
        name: 'da',
        value: 1e1,
        scientific: false
      },
      h: {
        name: 'h',
        value: 1e2,
        scientific: false
      },
      k: {
        name: 'k',
        value: 1e3,
        scientific: true
      },
      M: {
        name: 'M',
        value: 1e6,
        scientific: true
      },
      G: {
        name: 'G',
        value: 1e9,
        scientific: true
      },
      T: {
        name: 'T',
        value: 1e12,
        scientific: true
      },
      P: {
        name: 'P',
        value: 1e15,
        scientific: true
      },
      E: {
        name: 'E',
        value: 1e18,
        scientific: true
      },
      Z: {
        name: 'Z',
        value: 1e21,
        scientific: true
      },
      Y: {
        name: 'Y',
        value: 1e24,
        scientific: true
      },
      d: {
        name: 'd',
        value: 1e-1,
        scientific: false
      },
      c: {
        name: 'c',
        value: 1e-2,
        scientific: false
      },
      m: {
        name: 'm',
        value: 1e-3,
        scientific: true
      },
      u: {
        name: 'u',
        value: 1e-6,
        scientific: true
      },
      n: {
        name: 'n',
        value: 1e-9,
        scientific: true
      },
      p: {
        name: 'p',
        value: 1e-12,
        scientific: true
      },
      f: {
        name: 'f',
        value: 1e-15,
        scientific: true
      },
      a: {
        name: 'a',
        value: 1e-18,
        scientific: true
      },
      z: {
        name: 'z',
        value: 1e-21,
        scientific: true
      },
      y: {
        name: 'y',
        value: 1e-24,
        scientific: true
      }
    },
    LONG: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      deca: {
        name: 'deca',
        value: 1e1,
        scientific: false
      },
      hecto: {
        name: 'hecto',
        value: 1e2,
        scientific: false
      },
      kilo: {
        name: 'kilo',
        value: 1e3,
        scientific: true
      },
      mega: {
        name: 'mega',
        value: 1e6,
        scientific: true
      },
      giga: {
        name: 'giga',
        value: 1e9,
        scientific: true
      },
      tera: {
        name: 'tera',
        value: 1e12,
        scientific: true
      },
      peta: {
        name: 'peta',
        value: 1e15,
        scientific: true
      },
      exa: {
        name: 'exa',
        value: 1e18,
        scientific: true
      },
      zetta: {
        name: 'zetta',
        value: 1e21,
        scientific: true
      },
      yotta: {
        name: 'yotta',
        value: 1e24,
        scientific: true
      },
      deci: {
        name: 'deci',
        value: 1e-1,
        scientific: false
      },
      centi: {
        name: 'centi',
        value: 1e-2,
        scientific: false
      },
      milli: {
        name: 'milli',
        value: 1e-3,
        scientific: true
      },
      micro: {
        name: 'micro',
        value: 1e-6,
        scientific: true
      },
      nano: {
        name: 'nano',
        value: 1e-9,
        scientific: true
      },
      pico: {
        name: 'pico',
        value: 1e-12,
        scientific: true
      },
      femto: {
        name: 'femto',
        value: 1e-15,
        scientific: true
      },
      atto: {
        name: 'atto',
        value: 1e-18,
        scientific: true
      },
      zepto: {
        name: 'zepto',
        value: 1e-21,
        scientific: true
      },
      yocto: {
        name: 'yocto',
        value: 1e-24,
        scientific: true
      }
    },
    SQUARED: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      da: {
        name: 'da',
        value: 1e2,
        scientific: false
      },
      h: {
        name: 'h',
        value: 1e4,
        scientific: false
      },
      k: {
        name: 'k',
        value: 1e6,
        scientific: true
      },
      M: {
        name: 'M',
        value: 1e12,
        scientific: true
      },
      G: {
        name: 'G',
        value: 1e18,
        scientific: true
      },
      T: {
        name: 'T',
        value: 1e24,
        scientific: true
      },
      P: {
        name: 'P',
        value: 1e30,
        scientific: true
      },
      E: {
        name: 'E',
        value: 1e36,
        scientific: true
      },
      Z: {
        name: 'Z',
        value: 1e42,
        scientific: true
      },
      Y: {
        name: 'Y',
        value: 1e48,
        scientific: true
      },
      d: {
        name: 'd',
        value: 1e-2,
        scientific: false
      },
      c: {
        name: 'c',
        value: 1e-4,
        scientific: false
      },
      m: {
        name: 'm',
        value: 1e-6,
        scientific: true
      },
      u: {
        name: 'u',
        value: 1e-12,
        scientific: true
      },
      n: {
        name: 'n',
        value: 1e-18,
        scientific: true
      },
      p: {
        name: 'p',
        value: 1e-24,
        scientific: true
      },
      f: {
        name: 'f',
        value: 1e-30,
        scientific: true
      },
      a: {
        name: 'a',
        value: 1e-36,
        scientific: true
      },
      z: {
        name: 'z',
        value: 1e-42,
        scientific: true
      },
      y: {
        name: 'y',
        value: 1e-48,
        scientific: true
      }
    },
    CUBIC: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      da: {
        name: 'da',
        value: 1e3,
        scientific: false
      },
      h: {
        name: 'h',
        value: 1e6,
        scientific: false
      },
      k: {
        name: 'k',
        value: 1e9,
        scientific: true
      },
      M: {
        name: 'M',
        value: 1e18,
        scientific: true
      },
      G: {
        name: 'G',
        value: 1e27,
        scientific: true
      },
      T: {
        name: 'T',
        value: 1e36,
        scientific: true
      },
      P: {
        name: 'P',
        value: 1e45,
        scientific: true
      },
      E: {
        name: 'E',
        value: 1e54,
        scientific: true
      },
      Z: {
        name: 'Z',
        value: 1e63,
        scientific: true
      },
      Y: {
        name: 'Y',
        value: 1e72,
        scientific: true
      },
      d: {
        name: 'd',
        value: 1e-3,
        scientific: false
      },
      c: {
        name: 'c',
        value: 1e-6,
        scientific: false
      },
      m: {
        name: 'm',
        value: 1e-9,
        scientific: true
      },
      u: {
        name: 'u',
        value: 1e-18,
        scientific: true
      },
      n: {
        name: 'n',
        value: 1e-27,
        scientific: true
      },
      p: {
        name: 'p',
        value: 1e-36,
        scientific: true
      },
      f: {
        name: 'f',
        value: 1e-45,
        scientific: true
      },
      a: {
        name: 'a',
        value: 1e-54,
        scientific: true
      },
      z: {
        name: 'z',
        value: 1e-63,
        scientific: true
      },
      y: {
        name: 'y',
        value: 1e-72,
        scientific: true
      }
    },
    BINARY_SHORT_SI: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      k: {
        name: 'k',
        value: 1e3,
        scientific: true
      },
      M: {
        name: 'M',
        value: 1e6,
        scientific: true
      },
      G: {
        name: 'G',
        value: 1e9,
        scientific: true
      },
      T: {
        name: 'T',
        value: 1e12,
        scientific: true
      },
      P: {
        name: 'P',
        value: 1e15,
        scientific: true
      },
      E: {
        name: 'E',
        value: 1e18,
        scientific: true
      },
      Z: {
        name: 'Z',
        value: 1e21,
        scientific: true
      },
      Y: {
        name: 'Y',
        value: 1e24,
        scientific: true
      }
    },
    BINARY_SHORT_IEC: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      Ki: {
        name: 'Ki',
        value: 1024,
        scientific: true
      },
      Mi: {
        name: 'Mi',
        value: Math.pow(1024, 2),
        scientific: true
      },
      Gi: {
        name: 'Gi',
        value: Math.pow(1024, 3),
        scientific: true
      },
      Ti: {
        name: 'Ti',
        value: Math.pow(1024, 4),
        scientific: true
      },
      Pi: {
        name: 'Pi',
        value: Math.pow(1024, 5),
        scientific: true
      },
      Ei: {
        name: 'Ei',
        value: Math.pow(1024, 6),
        scientific: true
      },
      Zi: {
        name: 'Zi',
        value: Math.pow(1024, 7),
        scientific: true
      },
      Yi: {
        name: 'Yi',
        value: Math.pow(1024, 8),
        scientific: true
      }
    },
    BINARY_LONG_SI: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      kilo: {
        name: 'kilo',
        value: 1e3,
        scientific: true
      },
      mega: {
        name: 'mega',
        value: 1e6,
        scientific: true
      },
      giga: {
        name: 'giga',
        value: 1e9,
        scientific: true
      },
      tera: {
        name: 'tera',
        value: 1e12,
        scientific: true
      },
      peta: {
        name: 'peta',
        value: 1e15,
        scientific: true
      },
      exa: {
        name: 'exa',
        value: 1e18,
        scientific: true
      },
      zetta: {
        name: 'zetta',
        value: 1e21,
        scientific: true
      },
      yotta: {
        name: 'yotta',
        value: 1e24,
        scientific: true
      }
    },
    BINARY_LONG_IEC: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      kibi: {
        name: 'kibi',
        value: 1024,
        scientific: true
      },
      mebi: {
        name: 'mebi',
        value: Math.pow(1024, 2),
        scientific: true
      },
      gibi: {
        name: 'gibi',
        value: Math.pow(1024, 3),
        scientific: true
      },
      tebi: {
        name: 'tebi',
        value: Math.pow(1024, 4),
        scientific: true
      },
      pebi: {
        name: 'pebi',
        value: Math.pow(1024, 5),
        scientific: true
      },
      exi: {
        name: 'exi',
        value: Math.pow(1024, 6),
        scientific: true
      },
      zebi: {
        name: 'zebi',
        value: Math.pow(1024, 7),
        scientific: true
      },
      yobi: {
        name: 'yobi',
        value: Math.pow(1024, 8),
        scientific: true
      }
    },
    BTU: {
      '': {
        name: '',
        value: 1,
        scientific: true
      },
      MM: {
        name: 'MM',
        value: 1e6,
        scientific: true
      }
    }
  };
  PREFIXES.SHORTLONG = _extends({}, PREFIXES.SHORT, PREFIXES.LONG);
  PREFIXES.BINARY_SHORT = _extends({}, PREFIXES.BINARY_SHORT_SI, PREFIXES.BINARY_SHORT_IEC);
  PREFIXES.BINARY_LONG = _extends({}, PREFIXES.BINARY_LONG_SI, PREFIXES.BINARY_LONG_IEC);
  /* Internally, each unit is represented by a value and a dimension array. The elements of the dimensions array have the following meaning:
   * Index  Dimension
   * -----  ---------
   *   0    Length
   *   1    Mass
   *   2    Time
   *   3    Current
   *   4    Temperature
   *   5    Luminous intensity
   *   6    Amount of substance
   *   7    Angle
   *   8    Bit (digital)
   * For example, the unit "298.15 K" is a pure temperature and would have a value of 298.15 and a dimension array of [0, 0, 0, 0, 1, 0, 0, 0, 0]. The unit "1 cal / (gm Â°C)" can be written in terms of the 9 fundamental dimensions as [length^2] / ([time^2] * [temperature]), and would a value of (after conversion to SI) 4184.0 and a dimensions array of [2, 0, -2, 0, -1, 0, 0, 0, 0].
   *
   */

  var BASE_DIMENSIONS = ['MASS', 'LENGTH', 'TIME', 'CURRENT', 'TEMPERATURE', 'LUMINOUS_INTENSITY', 'AMOUNT_OF_SUBSTANCE', 'ANGLE', 'BIT'];
  var BASE_UNITS = {
    NONE: {
      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0]
    },
    MASS: {
      dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0]
    },
    LENGTH: {
      dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0]
    },
    TIME: {
      dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0]
    },
    CURRENT: {
      dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0]
    },
    TEMPERATURE: {
      dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0]
    },
    LUMINOUS_INTENSITY: {
      dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0]
    },
    AMOUNT_OF_SUBSTANCE: {
      dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0]
    },
    FORCE: {
      dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0]
    },
    SURFACE: {
      dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0]
    },
    VOLUME: {
      dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0]
    },
    ENERGY: {
      dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0]
    },
    POWER: {
      dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0]
    },
    PRESSURE: {
      dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0]
    },
    ELECTRIC_CHARGE: {
      dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0]
    },
    ELECTRIC_CAPACITANCE: {
      dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0]
    },
    ELECTRIC_POTENTIAL: {
      dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0]
    },
    ELECTRIC_RESISTANCE: {
      dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0]
    },
    ELECTRIC_INDUCTANCE: {
      dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0]
    },
    ELECTRIC_CONDUCTANCE: {
      dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0]
    },
    MAGNETIC_FLUX: {
      dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0]
    },
    MAGNETIC_FLUX_DENSITY: {
      dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0]
    },
    FREQUENCY: {
      dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0]
    },
    ANGLE: {
      dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0]
    },
    BIT: {
      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1]
    }
  };

  for (var key in BASE_UNITS) {
    if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(BASE_UNITS, key)) {
      BASE_UNITS[key].key = key;
    }
  }

  var BASE_UNIT_NONE = {};
  var UNIT_NONE = {
    name: '',
    base: BASE_UNIT_NONE,
    value: 1,
    offset: 0,
    dimensions: BASE_DIMENSIONS.map(function (x) {
      return 0;
    })
  };
  var UNITS = {
    // length
    meter: {
      name: 'meter',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    inch: {
      name: 'inch',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.0254,
      offset: 0
    },
    foot: {
      name: 'foot',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.3048,
      offset: 0
    },
    yard: {
      name: 'yard',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.9144,
      offset: 0
    },
    mile: {
      name: 'mile',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 1609.344,
      offset: 0
    },
    link: {
      name: 'link',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.201168,
      offset: 0
    },
    rod: {
      name: 'rod',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 5.0292,
      offset: 0
    },
    chain: {
      name: 'chain',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 20.1168,
      offset: 0
    },
    angstrom: {
      name: 'angstrom',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 1e-10,
      offset: 0
    },
    m: {
      name: 'm',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    "in": {
      name: 'in',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.0254,
      offset: 0
    },
    ft: {
      name: 'ft',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.3048,
      offset: 0
    },
    yd: {
      name: 'yd',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.9144,
      offset: 0
    },
    mi: {
      name: 'mi',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 1609.344,
      offset: 0
    },
    li: {
      name: 'li',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.201168,
      offset: 0
    },
    rd: {
      name: 'rd',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 5.029210,
      offset: 0
    },
    ch: {
      name: 'ch',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 20.1168,
      offset: 0
    },
    mil: {
      name: 'mil',
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.0000254,
      offset: 0
    },
    // 1/1000 inch
    // Surface
    m2: {
      name: 'm2',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.SQUARED,
      value: 1,
      offset: 0
    },
    sqin: {
      name: 'sqin',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 0.00064516,
      offset: 0
    },
    // 645.16 mm2
    sqft: {
      name: 'sqft',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 0.09290304,
      offset: 0
    },
    // 0.09290304 m2
    sqyd: {
      name: 'sqyd',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 0.83612736,
      offset: 0
    },
    // 0.83612736 m2
    sqmi: {
      name: 'sqmi',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 2589988.110336,
      offset: 0
    },
    // 2.589988110336 km2
    sqrd: {
      name: 'sqrd',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 25.29295,
      offset: 0
    },
    // 25.29295 m2
    sqch: {
      name: 'sqch',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 404.6873,
      offset: 0
    },
    // 404.6873 m2
    sqmil: {
      name: 'sqmil',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 6.4516e-10,
      offset: 0
    },
    // 6.4516 * 10^-10 m2
    acre: {
      name: 'acre',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 4046.86,
      offset: 0
    },
    // 4046.86 m2
    hectare: {
      name: 'hectare',
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 10000,
      offset: 0
    },
    // 10000 m2
    // Volume
    m3: {
      name: 'm3',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.CUBIC,
      value: 1,
      offset: 0
    },
    L: {
      name: 'L',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.SHORT,
      value: 0.001,
      offset: 0
    },
    // litre
    l: {
      name: 'l',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.SHORT,
      value: 0.001,
      offset: 0
    },
    // litre
    litre: {
      name: 'litre',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.LONG,
      value: 0.001,
      offset: 0
    },
    cuin: {
      name: 'cuin',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 1.6387064e-5,
      offset: 0
    },
    // 1.6387064e-5 m3
    cuft: {
      name: 'cuft',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.028316846592,
      offset: 0
    },
    // 28.316 846 592 L
    cuyd: {
      name: 'cuyd',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.764554857984,
      offset: 0
    },
    // 764.554 857 984 L
    teaspoon: {
      name: 'teaspoon',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.000005,
      offset: 0
    },
    // 5 mL
    tablespoon: {
      name: 'tablespoon',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.000015,
      offset: 0
    },
    // 15 mL
    // {name: 'cup', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000240, offset: 0}, // 240 mL  // not possible, we have already another cup
    drop: {
      name: 'drop',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 5e-8,
      offset: 0
    },
    // 0.05 mL = 5e-8 m3
    gtt: {
      name: 'gtt',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 5e-8,
      offset: 0
    },
    // 0.05 mL = 5e-8 m3
    // Liquid volume
    minim: {
      name: 'minim',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.00000006161152,
      offset: 0
    },
    // 0.06161152 mL
    fluiddram: {
      name: 'fluiddram',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0000036966911,
      offset: 0
    },
    // 3.696691 mL
    fluidounce: {
      name: 'fluidounce',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.00002957353,
      offset: 0
    },
    // 29.57353 mL
    gill: {
      name: 'gill',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0001182941,
      offset: 0
    },
    // 118.2941 mL
    cc: {
      name: 'cc',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 1e-6,
      offset: 0
    },
    // 1e-6 L
    cup: {
      name: 'cup',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0002365882,
      offset: 0
    },
    // 236.5882 mL
    pint: {
      name: 'pint',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0004731765,
      offset: 0
    },
    // 473.1765 mL
    quart: {
      name: 'quart',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0009463529,
      offset: 0
    },
    // 946.3529 mL
    gallon: {
      name: 'gallon',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.003785412,
      offset: 0
    },
    // 3.785412 L
    beerbarrel: {
      name: 'beerbarrel',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1173478,
      offset: 0
    },
    // 117.3478 L
    oilbarrel: {
      name: 'oilbarrel',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1589873,
      offset: 0
    },
    // 158.9873 L
    hogshead: {
      name: 'hogshead',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.2384810,
      offset: 0
    },
    // 238.4810 L
    // {name: 'min', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00000006161152, offset: 0}, // 0.06161152 mL // min is already in use as minute
    fldr: {
      name: 'fldr',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0000036966911,
      offset: 0
    },
    // 3.696691 mL
    floz: {
      name: 'floz',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.00002957353,
      offset: 0
    },
    // 29.57353 mL
    gi: {
      name: 'gi',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0001182941,
      offset: 0
    },
    // 118.2941 mL
    cp: {
      name: 'cp',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0002365882,
      offset: 0
    },
    // 236.5882 mL
    pt: {
      name: 'pt',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0004731765,
      offset: 0
    },
    // 473.1765 mL
    qt: {
      name: 'qt',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.0009463529,
      offset: 0
    },
    // 946.3529 mL
    gal: {
      name: 'gal',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.003785412,
      offset: 0
    },
    // 3.785412 L
    bbl: {
      name: 'bbl',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1173478,
      offset: 0
    },
    // 117.3478 L
    obl: {
      name: 'obl',
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1589873,
      offset: 0
    },
    // 158.9873 L
    // {name: 'hogshead', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.2384810, offset: 0}, // 238.4810 L // TODO: hh?
    // Mass
    g: {
      name: 'g',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.SHORT,
      value: 0.001,
      offset: 0
    },
    gram: {
      name: 'gram',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.LONG,
      value: 0.001,
      offset: 0
    },
    ton: {
      name: 'ton',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.SHORT,
      value: 907.18474,
      offset: 0
    },
    t: {
      name: 't',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.SHORT,
      value: 1000,
      offset: 0
    },
    tonne: {
      name: 'tonne',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.LONG,
      value: 1000,
      offset: 0
    },
    grain: {
      name: 'grain',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 64.79891e-6,
      offset: 0
    },
    dram: {
      name: 'dram',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 1.7718451953125e-3,
      offset: 0
    },
    ounce: {
      name: 'ounce',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 28.349523125e-3,
      offset: 0
    },
    poundmass: {
      name: 'poundmass',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 453.59237e-3,
      offset: 0
    },
    hundredweight: {
      name: 'hundredweight',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 45.359237,
      offset: 0
    },
    stick: {
      name: 'stick',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 115e-3,
      offset: 0
    },
    stone: {
      name: 'stone',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 6.35029318,
      offset: 0
    },
    gr: {
      name: 'gr',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 64.79891e-6,
      offset: 0
    },
    dr: {
      name: 'dr',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 1.7718451953125e-3,
      offset: 0
    },
    oz: {
      name: 'oz',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 28.349523125e-3,
      offset: 0
    },
    lbm: {
      name: 'lbm',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 453.59237e-3,
      offset: 0
    },
    cwt: {
      name: 'cwt',
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 45.359237,
      offset: 0
    },
    // Time
    s: {
      name: 's',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    min: {
      name: 'min',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 60,
      offset: 0
    },
    h: {
      name: 'h',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 3600,
      offset: 0
    },
    second: {
      name: 'second',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    sec: {
      name: 'sec',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    minute: {
      name: 'minute',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 60,
      offset: 0
    },
    hour: {
      name: 'hour',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 3600,
      offset: 0
    },
    day: {
      name: 'day',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 86400,
      offset: 0
    },
    week: {
      name: 'week',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 7 * 86400,
      offset: 0
    },
    month: {
      name: 'month',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 2629800,
      // 1/12th of Julian year
      offset: 0
    },
    year: {
      name: 'year',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 31557600,
      // Julian year
      offset: 0
    },
    decade: {
      name: 'decade',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 315576000,
      // Julian decade
      offset: 0
    },
    century: {
      name: 'century',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 3155760000,
      // Julian century
      offset: 0
    },
    millennium: {
      name: 'millennium',
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 31557600000,
      // Julian millennium
      offset: 0
    },
    // Frequency
    hertz: {
      name: 'Hertz',
      base: BASE_UNITS.FREQUENCY,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0,
      reciprocal: true
    },
    Hz: {
      name: 'Hz',
      base: BASE_UNITS.FREQUENCY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0,
      reciprocal: true
    },
    // Angle
    rad: {
      name: 'rad',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    radian: {
      name: 'radian',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // deg = rad / (2*pi) * 360 = rad / 0.017453292519943295769236907684888
    deg: {
      name: 'deg',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.SHORT,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    degree: {
      name: 'degree',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.LONG,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // grad = rad / (2*pi) * 400  = rad / 0.015707963267948966192313216916399
    grad: {
      name: 'grad',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.SHORT,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    gradian: {
      name: 'gradian',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.LONG,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // cycle = rad / (2*pi) = rad / 6.2831853071795864769252867665793
    cycle: {
      name: 'cycle',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.NONE,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // arcsec = rad / (3600 * (360 / 2 * pi)) = rad / 0.0000048481368110953599358991410235795
    arcsec: {
      name: 'arcsec',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.NONE,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // arcmin = rad / (60 * (360 / 2 * pi)) = rad / 0.00029088820866572159615394846141477
    arcmin: {
      name: 'arcmin',
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.NONE,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // Electric current
    A: {
      name: 'A',
      base: BASE_UNITS.CURRENT,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    ampere: {
      name: 'ampere',
      base: BASE_UNITS.CURRENT,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // Temperature
    // K(C) = Â°C + 273.15
    // K(F) = (Â°F + 459.67) / 1.8
    // K(R) = Â°R / 1.8
    K: {
      name: 'K',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1,
      offset: 0
    },
    degC: {
      name: 'degC',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1,
      offset: 273.15
    },
    degF: {
      name: 'degF',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1 / 1.8,
      offset: 459.67
    },
    degR: {
      name: 'degR',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1 / 1.8,
      offset: 0
    },
    kelvin: {
      name: 'kelvin',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1,
      offset: 0
    },
    celsius: {
      name: 'celsius',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1,
      offset: 273.15
    },
    fahrenheit: {
      name: 'fahrenheit',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1 / 1.8,
      offset: 459.67
    },
    rankine: {
      name: 'rankine',
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.NONE,
      value: 1 / 1.8,
      offset: 0
    },
    // amount of substance
    mol: {
      name: 'mol',
      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    mole: {
      name: 'mole',
      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // luminous intensity
    cd: {
      name: 'cd',
      base: BASE_UNITS.LUMINOUS_INTENSITY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    candela: {
      name: 'candela',
      base: BASE_UNITS.LUMINOUS_INTENSITY,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // TODO: units STERADIAN
    // {name: 'sr', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},
    // {name: 'steradian', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},
    // Force
    N: {
      name: 'N',
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    newton: {
      name: 'newton',
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    dyn: {
      name: 'dyn',
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.SHORT,
      value: 0.00001,
      offset: 0
    },
    dyne: {
      name: 'dyne',
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.LONG,
      value: 0.00001,
      offset: 0
    },
    lbf: {
      name: 'lbf',
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.NONE,
      value: 4.4482216152605,
      offset: 0
    },
    poundforce: {
      name: 'poundforce',
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.NONE,
      value: 4.4482216152605,
      offset: 0
    },
    kip: {
      name: 'kip',
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.LONG,
      value: 4448.2216,
      offset: 0
    },
    // Energy
    J: {
      name: 'J',
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    joule: {
      name: 'joule',
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    erg: {
      name: 'erg',
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.NONE,
      value: 1e-7,
      offset: 0
    },
    Wh: {
      name: 'Wh',
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORT,
      value: 3600,
      offset: 0
    },
    BTU: {
      name: 'BTU',
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.BTU,
      value: 1055.05585262,
      offset: 0
    },
    eV: {
      name: 'eV',
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORT,
      value: 1.602176565e-19,
      offset: 0
    },
    electronvolt: {
      name: 'electronvolt',
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.LONG,
      value: 1.602176565e-19,
      offset: 0
    },
    // Power
    W: {
      name: 'W',
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    watt: {
      name: 'watt',
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    hp: {
      name: 'hp',
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.NONE,
      value: 745.6998715386,
      offset: 0
    },
    // Electrical power units
    VAR: {
      name: 'VAR',
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.SHORT,
      value: Complex.I,
      offset: 0
    },
    VA: {
      name: 'VA',
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Pressure
    Pa: {
      name: 'Pa',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    psi: {
      name: 'psi',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 6894.75729276459,
      offset: 0
    },
    atm: {
      name: 'atm',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 101325,
      offset: 0
    },
    bar: {
      name: 'bar',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.SHORTLONG,
      value: 100000,
      offset: 0
    },
    torr: {
      name: 'torr',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 133.322,
      offset: 0
    },
    mmHg: {
      name: 'mmHg',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 133.322,
      offset: 0
    },
    mmH2O: {
      name: 'mmH2O',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 9.80665,
      offset: 0
    },
    cmH2O: {
      name: 'cmH2O',
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 98.0665,
      offset: 0
    },
    // Electric charge
    coulomb: {
      name: 'coulomb',
      base: BASE_UNITS.ELECTRIC_CHARGE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    C: {
      name: 'C',
      base: BASE_UNITS.ELECTRIC_CHARGE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric capacitance
    farad: {
      name: 'farad',
      base: BASE_UNITS.ELECTRIC_CAPACITANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    F: {
      name: 'F',
      base: BASE_UNITS.ELECTRIC_CAPACITANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric potential
    volt: {
      name: 'volt',
      base: BASE_UNITS.ELECTRIC_POTENTIAL,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    V: {
      name: 'V',
      base: BASE_UNITS.ELECTRIC_POTENTIAL,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric resistance
    ohm: {
      name: 'ohm',
      base: BASE_UNITS.ELECTRIC_RESISTANCE,
      prefixes: PREFIXES.SHORTLONG,
      // Both Mohm and megaohm are acceptable
      value: 1,
      offset: 0
    },

    /*
     * Unicode breaks in browsers if charset is not specified
    Î©: {
      name: 'Î©',
      base: BASE_UNITS.ELECTRIC_RESISTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    */
    // Electric inductance
    henry: {
      name: 'henry',
      base: BASE_UNITS.ELECTRIC_INDUCTANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    H: {
      name: 'H',
      base: BASE_UNITS.ELECTRIC_INDUCTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric conductance
    siemens: {
      name: 'siemens',
      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    S: {
      name: 'S',
      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Magnetic flux
    weber: {
      name: 'weber',
      base: BASE_UNITS.MAGNETIC_FLUX,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    Wb: {
      name: 'Wb',
      base: BASE_UNITS.MAGNETIC_FLUX,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Magnetic flux density
    tesla: {
      name: 'tesla',
      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    T: {
      name: 'T',
      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Binary
    b: {
      name: 'b',
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_SHORT,
      value: 1,
      offset: 0
    },
    bits: {
      name: 'bits',
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_LONG,
      value: 1,
      offset: 0
    },
    B: {
      name: 'B',
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_SHORT,
      value: 8,
      offset: 0
    },
    bytes: {
      name: 'bytes',
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_LONG,
      value: 8,
      offset: 0
    }
  }; // aliases (formerly plurals)

  var ALIASES = {
    meters: 'meter',
    inches: 'inch',
    feet: 'foot',
    yards: 'yard',
    miles: 'mile',
    links: 'link',
    rods: 'rod',
    chains: 'chain',
    angstroms: 'angstrom',
    lt: 'l',
    litres: 'litre',
    liter: 'litre',
    liters: 'litre',
    teaspoons: 'teaspoon',
    tablespoons: 'tablespoon',
    minims: 'minim',
    fluiddrams: 'fluiddram',
    fluidounces: 'fluidounce',
    gills: 'gill',
    cups: 'cup',
    pints: 'pint',
    quarts: 'quart',
    gallons: 'gallon',
    beerbarrels: 'beerbarrel',
    oilbarrels: 'oilbarrel',
    hogsheads: 'hogshead',
    gtts: 'gtt',
    grams: 'gram',
    tons: 'ton',
    tonnes: 'tonne',
    grains: 'grain',
    drams: 'dram',
    ounces: 'ounce',
    poundmasses: 'poundmass',
    hundredweights: 'hundredweight',
    sticks: 'stick',
    lb: 'lbm',
    lbs: 'lbm',
    kips: 'kip',
    acres: 'acre',
    hectares: 'hectare',
    sqfeet: 'sqft',
    sqyard: 'sqyd',
    sqmile: 'sqmi',
    sqmiles: 'sqmi',
    mmhg: 'mmHg',
    mmh2o: 'mmH2O',
    cmh2o: 'cmH2O',
    seconds: 'second',
    secs: 'second',
    minutes: 'minute',
    mins: 'minute',
    hours: 'hour',
    hr: 'hour',
    hrs: 'hour',
    days: 'day',
    weeks: 'week',
    months: 'month',
    years: 'year',
    decades: 'decade',
    centuries: 'century',
    millennia: 'millennium',
    hertz: 'hertz',
    radians: 'radian',
    degrees: 'degree',
    gradians: 'gradian',
    cycles: 'cycle',
    arcsecond: 'arcsec',
    arcseconds: 'arcsec',
    arcminute: 'arcmin',
    arcminutes: 'arcmin',
    BTUs: 'BTU',
    watts: 'watt',
    joules: 'joule',
    amperes: 'ampere',
    coulombs: 'coulomb',
    volts: 'volt',
    ohms: 'ohm',
    farads: 'farad',
    webers: 'weber',
    teslas: 'tesla',
    electronvolts: 'electronvolt',
    moles: 'mole',
    bit: 'bits',
    "byte": 'bytes'
  };
  /**
   * Calculate the values for the angle units.
   * Value is calculated as number or BigNumber depending on the configuration
   * @param {{number: 'number' | 'BigNumber'}} config
   */

  function calculateAngleValues(config) {
    if (config.number === 'BigNumber') {
      var pi = Object(_utils_bignumber_constants__WEBPACK_IMPORTED_MODULE_4__["createBigNumberPi"])(_BigNumber);
      UNITS.rad.value = new _BigNumber(1);
      UNITS.deg.value = pi.div(180); // 2 * pi / 360

      UNITS.grad.value = pi.div(200); // 2 * pi / 400

      UNITS.cycle.value = pi.times(2); // 2 * pi

      UNITS.arcsec.value = pi.div(648000); // 2 * pi / 360 / 3600

      UNITS.arcmin.value = pi.div(10800); // 2 * pi / 360 / 60
    } else {
      // number
      UNITS.rad.value = 1;
      UNITS.deg.value = Math.PI / 180; // 2 * pi / 360

      UNITS.grad.value = Math.PI / 200; // 2 * pi / 400

      UNITS.cycle.value = Math.PI * 2; // 2 * pi

      UNITS.arcsec.value = Math.PI / 648000; // 2 * pi / 360 / 3600

      UNITS.arcmin.value = Math.PI / 10800; // 2 * pi / 360 / 60
    } // copy to the full names of the angles


    UNITS.radian.value = UNITS.rad.value;
    UNITS.degree.value = UNITS.deg.value;
    UNITS.gradian.value = UNITS.grad.value;
  } // apply the angle values now


  calculateAngleValues(config);

  if (on) {
    // recalculate the values on change of configuration
    on('config', function (curr, prev) {
      if (curr.number !== prev.number) {
        calculateAngleValues(curr);
      }
    });
  }
  /**
   * A unit system is a set of dimensionally independent base units plus a set of derived units, formed by multiplication and division of the base units, that are by convention used with the unit system.
   * A user perhaps could issue a command to select a preferred unit system, or use the default (see below).
   * Auto unit system: The default unit system is updated on the fly anytime a unit is parsed. The corresponding unit in the default unit system is updated, so that answers are given in the same units the user supplies.
   */


  var UNIT_SYSTEMS = {
    si: {
      // Base units
      NONE: {
        unit: UNIT_NONE,
        prefix: PREFIXES.NONE['']
      },
      LENGTH: {
        unit: UNITS.m,
        prefix: PREFIXES.SHORT['']
      },
      MASS: {
        unit: UNITS.g,
        prefix: PREFIXES.SHORT.k
      },
      TIME: {
        unit: UNITS.s,
        prefix: PREFIXES.SHORT['']
      },
      CURRENT: {
        unit: UNITS.A,
        prefix: PREFIXES.SHORT['']
      },
      TEMPERATURE: {
        unit: UNITS.K,
        prefix: PREFIXES.SHORT['']
      },
      LUMINOUS_INTENSITY: {
        unit: UNITS.cd,
        prefix: PREFIXES.SHORT['']
      },
      AMOUNT_OF_SUBSTANCE: {
        unit: UNITS.mol,
        prefix: PREFIXES.SHORT['']
      },
      ANGLE: {
        unit: UNITS.rad,
        prefix: PREFIXES.SHORT['']
      },
      BIT: {
        unit: UNITS.bits,
        prefix: PREFIXES.SHORT['']
      },
      // Derived units
      FORCE: {
        unit: UNITS.N,
        prefix: PREFIXES.SHORT['']
      },
      ENERGY: {
        unit: UNITS.J,
        prefix: PREFIXES.SHORT['']
      },
      POWER: {
        unit: UNITS.W,
        prefix: PREFIXES.SHORT['']
      },
      PRESSURE: {
        unit: UNITS.Pa,
        prefix: PREFIXES.SHORT['']
      },
      ELECTRIC_CHARGE: {
        unit: UNITS.C,
        prefix: PREFIXES.SHORT['']
      },
      ELECTRIC_CAPACITANCE: {
        unit: UNITS.F,
        prefix: PREFIXES.SHORT['']
      },
      ELECTRIC_POTENTIAL: {
        unit: UNITS.V,
        prefix: PREFIXES.SHORT['']
      },
      ELECTRIC_RESISTANCE: {
        unit: UNITS.ohm,
        prefix: PREFIXES.SHORT['']
      },
      ELECTRIC_INDUCTANCE: {
        unit: UNITS.H,
        prefix: PREFIXES.SHORT['']
      },
      ELECTRIC_CONDUCTANCE: {
        unit: UNITS.S,
        prefix: PREFIXES.SHORT['']
      },
      MAGNETIC_FLUX: {
        unit: UNITS.Wb,
        prefix: PREFIXES.SHORT['']
      },
      MAGNETIC_FLUX_DENSITY: {
        unit: UNITS.T,
        prefix: PREFIXES.SHORT['']
      },
      FREQUENCY: {
        unit: UNITS.Hz,
        prefix: PREFIXES.SHORT['']
      }
    }
  }; // Clone to create the other unit systems

  UNIT_SYSTEMS.cgs = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));
  UNIT_SYSTEMS.cgs.LENGTH = {
    unit: UNITS.m,
    prefix: PREFIXES.SHORT.c
  };
  UNIT_SYSTEMS.cgs.MASS = {
    unit: UNITS.g,
    prefix: PREFIXES.SHORT['']
  };
  UNIT_SYSTEMS.cgs.FORCE = {
    unit: UNITS.dyn,
    prefix: PREFIXES.SHORT['']
  };
  UNIT_SYSTEMS.cgs.ENERGY = {
    unit: UNITS.erg,
    prefix: PREFIXES.NONE['']
  }; // there are wholly 4 unique cgs systems for electricity and magnetism,
  // so let's not worry about it unless somebody complains

  UNIT_SYSTEMS.us = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));
  UNIT_SYSTEMS.us.LENGTH = {
    unit: UNITS.ft,
    prefix: PREFIXES.NONE['']
  };
  UNIT_SYSTEMS.us.MASS = {
    unit: UNITS.lbm,
    prefix: PREFIXES.NONE['']
  };
  UNIT_SYSTEMS.us.TEMPERATURE = {
    unit: UNITS.degF,
    prefix: PREFIXES.NONE['']
  };
  UNIT_SYSTEMS.us.FORCE = {
    unit: UNITS.lbf,
    prefix: PREFIXES.NONE['']
  };
  UNIT_SYSTEMS.us.ENERGY = {
    unit: UNITS.BTU,
    prefix: PREFIXES.BTU['']
  };
  UNIT_SYSTEMS.us.POWER = {
    unit: UNITS.hp,
    prefix: PREFIXES.NONE['']
  };
  UNIT_SYSTEMS.us.PRESSURE = {
    unit: UNITS.psi,
    prefix: PREFIXES.NONE['']
  }; // Add additional unit systems here.
  // Choose a unit system to seed the auto unit system.

  UNIT_SYSTEMS.auto = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si)); // Set the current unit system

  var currentUnitSystem = UNIT_SYSTEMS.auto;
  /**
   * Set a unit system for formatting derived units.
   * @param {string} [name] The name of the unit system.
   */

  Unit.setUnitSystem = function (name) {
    if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNIT_SYSTEMS, name)) {
      currentUnitSystem = UNIT_SYSTEMS[name];
    } else {
      throw new Error('Unit system ' + name + ' does not exist. Choices are: ' + Object.keys(UNIT_SYSTEMS).join(', '));
    }
  };
  /**
   * Return the current unit system.
   * @return {string} The current unit system.
   */


  Unit.getUnitSystem = function () {
    for (var _key in UNIT_SYSTEMS) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNIT_SYSTEMS, _key)) {
        if (UNIT_SYSTEMS[_key] === currentUnitSystem) {
          return _key;
        }
      }
    }
  };
  /**
   * Converters to convert from number to an other numeric type like BigNumber
   * or Fraction
   */


  Unit.typeConverters = {
    BigNumber: function BigNumber(x) {
      return new _BigNumber(x + ''); // stringify to prevent constructor error
    },
    Fraction: function Fraction(x) {
      return new _Fraction(x);
    },
    Complex: function Complex(x) {
      return x;
    },
    number: function number(x) {
      return x;
    }
  };
  /**
   * Retrieve the right convertor function corresponding with the type
   * of provided exampleValue.
   *
   * @param {string} type   A string 'number', 'BigNumber', or 'Fraction'
   *                        In case of an unknown type,
   * @return {Function}
   */

  Unit._getNumberConverter = function (type) {
    if (!Unit.typeConverters[type]) {
      throw new TypeError('Unsupported type "' + type + '"');
    }

    return Unit.typeConverters[type];
  }; // Add dimensions to each built-in unit


  for (var _key2 in UNITS) {
    if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNITS, _key2)) {
      var unit = UNITS[_key2];
      unit.dimensions = unit.base.dimensions;
    }
  } // Create aliases


  for (var _name2 in ALIASES) {
    if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(ALIASES, _name2)) {
      var _unit2 = UNITS[ALIASES[_name2]];
      var alias = {};

      for (var _key3 in _unit2) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(_unit2, _key3)) {
          alias[_key3] = _unit2[_key3];
        }
      }

      alias.name = _name2;
      UNITS[_name2] = alias;
    }
  }

  function assertUnitNameIsValid(name) {
    for (var i = 0; i < name.length; i++) {
      var _c = name.charAt(i);

      var isValidAlpha = function isValidAlpha(p) {
        return /^[a-zA-Z]$/.test(p);
      };

      var _isDigit = function _isDigit(c) {
        return c >= '0' && c <= '9';
      };

      if (i === 0 && !isValidAlpha(_c)) {
        throw new Error('Invalid unit name (must begin with alpha character): "' + name + '"');
      }

      if (i > 0 && !(isValidAlpha(_c) || _isDigit(_c))) {
        throw new Error('Invalid unit name (only alphanumeric characters are allowed): "' + name + '"');
      }
    }
  }
  /**
   * Wrapper around createUnitSingle.
   * Example:
   *  createUnit({
   *    foo: { },
   *    bar: {
   *      definition: 'kg/foo',
   *      aliases: ['ba', 'barr', 'bars'],
   *      offset: 200
   *    },
   *    baz: '4 bar'
   *  },
   *  {
   *    override: true
   *  })
   * @param {object} obj      Object map. Each key becomes a unit which is defined by its value.
   * @param {object} options
   */


  Unit.createUnit = function (obj, options) {
    if (_typeof(obj) !== 'object') {
      throw new TypeError("createUnit expects first parameter to be of type 'Object'");
    } // Remove all units and aliases we are overriding


    if (options && options.override) {
      for (var _key4 in obj) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(obj, _key4)) {
          Unit.deleteUnit(_key4);
        }

        if (obj[_key4].aliases) {
          for (var i = 0; i < obj[_key4].aliases.length; i++) {
            Unit.deleteUnit(obj[_key4].aliases[i]);
          }
        }
      }
    } // TODO: traverse multiple times until all units have been added


    var lastUnit;

    for (var _key5 in obj) {
      if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(obj, _key5)) {
        lastUnit = Unit.createUnitSingle(_key5, obj[_key5]);
      }
    }

    return lastUnit;
  };
  /**
   * Create a user-defined unit and register it with the Unit type.
   * Example:
   *  createUnitSingle('knot', '0.514444444 m/s')
   *  createUnitSingle('acre', new Unit(43560, 'ft^2'))
   *
   * @param {string} name      The name of the new unit. Must be unique. Example: 'knot'
   * @param {string, Unit, Object} definition      Definition of the unit in terms
   * of existing units. For example, '0.514444444 m / s'. Can be a Unit, a string,
   * or an Object. If an Object, may have the following properties:
   *   - definition {string|Unit} The definition of this unit.
   *   - prefixes {string} "none", "short", "long", "binary_short", or "binary_long".
   *     The default is "none".
   *   - aliases {Array} Array of strings. Example: ['knots', 'kt', 'kts']
   *   - offset {Numeric} An offset to apply when converting from the unit. For
   *     example, the offset for celsius is 273.15 and the offset for farhenheit
   *     is 459.67. Default is 0.
   *   - baseName {string} If the unit's dimension does not match that of any other
   *     base unit, the name of the newly create base unit. Otherwise, this property
   *     has no effect.
   *
   * @param {Object} options   (optional) An object containing any of the following
   * properties:
   *   - override {boolean} Whether this unit should be allowed to override existing
   *     units.
   *
   * @return {Unit}
   */


  Unit.createUnitSingle = function (name, obj, options) {
    if (typeof obj === 'undefined' || obj === null) {
      obj = {};
    }

    if (typeof name !== 'string') {
      throw new TypeError("createUnitSingle expects first parameter to be of type 'string'");
    } // Check collisions with existing units


    if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNITS, name)) {
      throw new Error('Cannot create unit "' + name + '": a unit with that name already exists');
    } // TODO: Validate name for collisions with other built-in functions (like abs or cos, for example), and for acceptable variable names. For example, '42' is probably not a valid unit. Nor is '%', since it is also an operator.


    assertUnitNameIsValid(name);
    var defUnit = null; // The Unit from which the new unit will be created.

    var aliases = [];
    var offset = 0;
    var definition;
    var prefixes;
    var baseName;

    if (obj && obj.type === 'Unit') {
      defUnit = obj.clone();
    } else if (typeof obj === 'string') {
      if (obj !== '') {
        definition = obj;
      }
    } else if (_typeof(obj) === 'object') {
      definition = obj.definition;
      prefixes = obj.prefixes;
      offset = obj.offset;
      baseName = obj.baseName;

      if (obj.aliases) {
        aliases = obj.aliases.valueOf(); // aliases could be a Matrix, so convert to Array
      }
    } else {
      throw new TypeError('Cannot create unit "' + name + '" from "' + obj.toString() + '": expecting "string" or "Unit" or "Object"');
    }

    if (aliases) {
      for (var i = 0; i < aliases.length; i++) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(UNITS, aliases[i])) {
          throw new Error('Cannot create alias "' + aliases[i] + '": a unit with that name already exists');
        }
      }
    }

    if (definition && typeof definition === 'string' && !defUnit) {
      try {
        defUnit = Unit.parse(definition, {
          allowNoUnits: true
        });
      } catch (ex) {
        ex.message = 'Could not create unit "' + name + '" from "' + definition + '": ' + ex.message;
        throw ex;
      }
    } else if (definition && definition.type === 'Unit') {
      defUnit = definition.clone();
    }

    aliases = aliases || [];
    offset = offset || 0;

    if (prefixes && prefixes.toUpperCase) {
      prefixes = PREFIXES[prefixes.toUpperCase()] || PREFIXES.NONE;
    } else {
      prefixes = PREFIXES.NONE;
    } // If defUnit is null, it is because the user did not
    // specify a defintion. So create a new base dimension.


    var newUnit = {};

    if (!defUnit) {
      // Add a new base dimension
      baseName = baseName || name + '_STUFF'; // foo --> foo_STUFF, or the essence of foo

      if (BASE_DIMENSIONS.indexOf(baseName) >= 0) {
        throw new Error('Cannot create new base unit "' + name + '": a base unit with that name already exists (and cannot be overridden)');
      }

      BASE_DIMENSIONS.push(baseName); // Push 0 onto existing base units

      for (var b in BASE_UNITS) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(BASE_UNITS, b)) {
          BASE_UNITS[b].dimensions[BASE_DIMENSIONS.length - 1] = 0;
        }
      } // Add the new base unit


      var newBaseUnit = {
        dimensions: []
      };

      for (var _i6 = 0; _i6 < BASE_DIMENSIONS.length; _i6++) {
        newBaseUnit.dimensions[_i6] = 0;
      }

      newBaseUnit.dimensions[BASE_DIMENSIONS.length - 1] = 1;
      newBaseUnit.key = baseName;
      BASE_UNITS[baseName] = newBaseUnit;
      newUnit = {
        name: name,
        value: 1,
        dimensions: BASE_UNITS[baseName].dimensions.slice(0),
        prefixes: prefixes,
        offset: offset,
        base: BASE_UNITS[baseName]
      };
      currentUnitSystem[baseName] = {
        unit: newUnit,
        prefix: PREFIXES.NONE['']
      };
    } else {
      newUnit = {
        name: name,
        value: defUnit.value,
        dimensions: defUnit.dimensions.slice(0),
        prefixes: prefixes,
        offset: offset
      }; // Create a new base if no matching base exists

      var anyMatch = false;

      for (var _i7 in BASE_UNITS) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(BASE_UNITS, _i7)) {
          var match = true;

          for (var j = 0; j < BASE_DIMENSIONS.length; j++) {
            if (Math.abs((newUnit.dimensions[j] || 0) - (BASE_UNITS[_i7].dimensions[j] || 0)) > 1e-12) {
              match = false;
              break;
            }
          }

          if (match) {
            anyMatch = true;
            newUnit.base = BASE_UNITS[_i7];
            break;
          }
        }
      }

      if (!anyMatch) {
        baseName = baseName || name + '_STUFF'; // foo --> foo_STUFF, or the essence of foo
        // Add the new base unit

        var _newBaseUnit = {
          dimensions: defUnit.dimensions.slice(0)
        };
        _newBaseUnit.key = baseName;
        BASE_UNITS[baseName] = _newBaseUnit;
        currentUnitSystem[baseName] = {
          unit: newUnit,
          prefix: PREFIXES.NONE['']
        };
        newUnit.base = BASE_UNITS[baseName];
      }
    }

    Unit.UNITS[name] = newUnit;

    for (var _i8 = 0; _i8 < aliases.length; _i8++) {
      var aliasName = aliases[_i8];
      var _alias = {};

      for (var _key6 in newUnit) {
        if (Object(_utils_object__WEBPACK_IMPORTED_MODULE_3__["hasOwnProperty"])(newUnit, _key6)) {
          _alias[_key6] = newUnit[_key6];
        }
      }

      _alias.name = aliasName;
      Unit.UNITS[aliasName] = _alias;
    }

    return new Unit(null, name);
  };

  Unit.deleteUnit = function (name) {
    delete Unit.UNITS[name];
  }; // expose arrays with prefixes, dimensions, units, systems


  Unit.PREFIXES = PREFIXES;
  Unit.BASE_DIMENSIONS = BASE_DIMENSIONS;
  Unit.BASE_UNITS = BASE_UNITS;
  Unit.UNIT_SYSTEMS = UNIT_SYSTEMS;
  Unit.UNITS = UNITS;
  return Unit;
}, {
  isClass: true
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/unit/function/createUnit.js":
/*!******************************************************************!*\
  !*** ../node_modules/mathjs/es/type/unit/function/createUnit.js ***!
  \******************************************************************/
/*! exports provided: createCreateUnit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCreateUnit", function() { return createCreateUnit; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'createUnit';
var dependencies = ['typed', 'Unit'];
var createCreateUnit = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Unit = _ref.Unit;

  /**
   * Create a user-defined unit and register it with the Unit type.
   *
   * Syntax:
   *
   *     math.createUnit({
   *       baseUnit1: {
   *         aliases: [string, ...]
   *         prefixes: object
   *       },
   *       unit2: {
   *         definition: string,
   *         aliases: [string, ...]
   *         prefixes: object,
   *         offset: number
   *       },
   *       unit3: string    // Shortcut
   *     })
   *
   *     // Another shortcut:
   *     math.createUnit(string, unit : string, [object])
   *
   * Examples:
   *
   *     math.createUnit('foo')
   *     math.createUnit('knot', {definition: '0.514444444 m/s', aliases: ['knots', 'kt', 'kts']})
   *     math.createUnit('mph', '1 mile/hour')
   *
   * @param {string} name      The name of the new unit. Must be unique. Example: 'knot'
   * @param {string, Unit} definition      Definition of the unit in terms of existing units. For example, '0.514444444 m / s'.
   * @param {Object} options   (optional) An object containing any of the following properties:
   *     - `prefixes {string}` "none", "short", "long", "binary_short", or "binary_long". The default is "none".
   *     - `aliases {Array}` Array of strings. Example: ['knots', 'kt', 'kts']
   *     - `offset {Numeric}` An offset to apply when converting from the unit. For example, the offset for celsius is 273.15. Default is 0.
   *
   * See also:
   *
   *     unit
   *
   * @return {Unit} The new unit
   */
  return typed(name, {
    // General function signature. First parameter is an object where each property is the definition of a new unit. The object keys are the unit names and the values are the definitions. The values can be objects, strings, or Units. If a property is an empty object or an empty string, a new base unit is created. The second parameter is the options.
    'Object, Object': function ObjectObject(obj, options) {
      return Unit.createUnit(obj, options);
    },
    // Same as above but without the options.
    Object: function Object(obj) {
      return Unit.createUnit(obj, {});
    },
    // Shortcut method for creating one unit.
    'string, Unit | string | Object, Object': function stringUnitStringObjectObject(name, def, options) {
      var obj = {};
      obj[name] = def;
      return Unit.createUnit(obj, options);
    },
    // Same as above but without the options.
    'string, Unit | string | Object': function stringUnitStringObject(name, def) {
      var obj = {};
      obj[name] = def;
      return Unit.createUnit(obj, {});
    },
    // Without a definition, creates a base unit.
    string: function string(name) {
      var obj = {};
      obj[name] = {};
      return Unit.createUnit(obj, {});
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/unit/function/splitUnit.js":
/*!*****************************************************************!*\
  !*** ../node_modules/mathjs/es/type/unit/function/splitUnit.js ***!
  \*****************************************************************/
/*! exports provided: createSplitUnit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSplitUnit", function() { return createSplitUnit; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");

var name = 'splitUnit';
var dependencies = ['typed'];
var createSplitUnit = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed;

  /**
   * Split a unit in an array of units whose sum is equal to the original unit.
   *
   * Syntax:
   *
   *     splitUnit(unit: Unit, parts: Array.<Unit>)
   *
   * Example:
   *
   *     math.splitUnit(new Unit(1, 'm'), ['feet', 'inch'])
   *     // [ 3 feet, 3.3700787401575 inch ]
   *
   * See also:
   *
   *     unit
   *
   * @param {Array} [parts] An array of strings or valueless units.
   * @return {Array} An array of units.
   */
  return typed(name, {
    'Unit, Array': function UnitArray(unit, parts) {
      return unit.splitUnit(parts);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/unit/function/unit.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/type/unit/function/unit.js ***!
  \************************************************************/
/*! exports provided: createUnitFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnitFunction", function() { return createUnitFunction; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
/* harmony import */ var _utils_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection */ "../node_modules/mathjs/es/utils/collection.js");


var name = 'unit';
var dependencies = ['typed', 'Unit']; // This function is named createUnitFunction to prevent a naming conflict with createUnit

var createUnitFunction = /* #__PURE__ */Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
  var typed = _ref.typed,
      Unit = _ref.Unit;

  /**
   * Create a unit. Depending on the passed arguments, the function
   * will create and return a new math.Unit object.
   * When a matrix is provided, all elements will be converted to units.
   *
   * Syntax:
   *
   *     math.unit(unit : string)
   *     math.unit(value : number, unit : string)
   *
   * Examples:
   *
   *    const a = math.unit(5, 'cm')    // returns Unit 50 mm
   *    const b = math.unit('23 kg')    // returns Unit 23 kg
   *    a.to('m')                       // returns Unit 0.05 m
   *
   * See also:
   *
   *    bignumber, boolean, complex, index, matrix, number, string, createUnit
   *
   * @param {* | Array | Matrix} args   A number and unit.
   * @return {Unit | Array | Matrix}    The created unit
   */
  return typed(name, {
    Unit: function Unit(x) {
      return x.clone();
    },
    string: function string(x) {
      if (Unit.isValuelessUnit(x)) {
        return new Unit(null, x); // a pure unit
      }

      return Unit.parse(x, {
        allowNoUnits: true
      }); // a unit with value, like '5cm'
    },
    'number | BigNumber | Fraction | Complex, string': function numberBigNumberFractionComplexString(value, unit) {
      return new Unit(value, unit);
    },
    'Array | Matrix': function ArrayMatrix(x) {
      return Object(_utils_collection__WEBPACK_IMPORTED_MODULE_1__["deepMap"])(x, this);
    }
  });
});

/***/ }),

/***/ "../node_modules/mathjs/es/type/unit/physicalConstants.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/type/unit/physicalConstants.js ***!
  \****************************************************************/
/*! exports provided: createSpeedOfLight, createGravitationConstant, createPlanckConstant, createReducedPlanckConstant, createMagneticConstant, createElectricConstant, createVacuumImpedance, createCoulomb, createElementaryCharge, createBohrMagneton, createConductanceQuantum, createInverseConductanceQuantum, createMagneticFluxQuantum, createNuclearMagneton, createKlitzing, createJosephson, createBohrRadius, createClassicalElectronRadius, createElectronMass, createFermiCoupling, createFineStructure, createHartreeEnergy, createProtonMass, createDeuteronMass, createNeutronMass, createQuantumOfCirculation, createRydberg, createThomsonCrossSection, createWeakMixingAngle, createEfimovFactor, createAtomicMass, createAvogadro, createBoltzmann, createFaraday, createFirstRadiation, createLoschmidt, createGasConstant, createMolarPlanckConstant, createMolarVolume, createSackurTetrode, createSecondRadiation, createStefanBoltzmann, createWienDisplacement, createMolarMass, createMolarMassC12, createGravity, createPlanckLength, createPlanckMass, createPlanckTime, createPlanckCharge, createPlanckTemperature */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSpeedOfLight", function() { return createSpeedOfLight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGravitationConstant", function() { return createGravitationConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlanckConstant", function() { return createPlanckConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createReducedPlanckConstant", function() { return createReducedPlanckConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMagneticConstant", function() { return createMagneticConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElectricConstant", function() { return createElectricConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createVacuumImpedance", function() { return createVacuumImpedance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCoulomb", function() { return createCoulomb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElementaryCharge", function() { return createElementaryCharge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBohrMagneton", function() { return createBohrMagneton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConductanceQuantum", function() { return createConductanceQuantum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInverseConductanceQuantum", function() { return createInverseConductanceQuantum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMagneticFluxQuantum", function() { return createMagneticFluxQuantum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNuclearMagneton", function() { return createNuclearMagneton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createKlitzing", function() { return createKlitzing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createJosephson", function() { return createJosephson; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBohrRadius", function() { return createBohrRadius; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createClassicalElectronRadius", function() { return createClassicalElectronRadius; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElectronMass", function() { return createElectronMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFermiCoupling", function() { return createFermiCoupling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFineStructure", function() { return createFineStructure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createHartreeEnergy", function() { return createHartreeEnergy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createProtonMass", function() { return createProtonMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDeuteronMass", function() { return createDeuteronMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNeutronMass", function() { return createNeutronMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createQuantumOfCirculation", function() { return createQuantumOfCirculation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRydberg", function() { return createRydberg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createThomsonCrossSection", function() { return createThomsonCrossSection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWeakMixingAngle", function() { return createWeakMixingAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEfimovFactor", function() { return createEfimovFactor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAtomicMass", function() { return createAtomicMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAvogadro", function() { return createAvogadro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBoltzmann", function() { return createBoltzmann; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFaraday", function() { return createFaraday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFirstRadiation", function() { return createFirstRadiation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLoschmidt", function() { return createLoschmidt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGasConstant", function() { return createGasConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMolarPlanckConstant", function() { return createMolarPlanckConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMolarVolume", function() { return createMolarVolume; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSackurTetrode", function() { return createSackurTetrode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSecondRadiation", function() { return createSecondRadiation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStefanBoltzmann", function() { return createStefanBoltzmann; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWienDisplacement", function() { return createWienDisplacement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMolarMass", function() { return createMolarMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMolarMassC12", function() { return createMolarMassC12; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGravity", function() { return createGravity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlanckLength", function() { return createPlanckLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlanckMass", function() { return createPlanckMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlanckTime", function() { return createPlanckTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlanckCharge", function() { return createPlanckCharge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlanckTemperature", function() { return createPlanckTemperature; });
/* harmony import */ var _utils_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory */ "../node_modules/mathjs/es/utils/factory.js");
 // Source: https://en.wikipedia.org/wiki/Physical_constant
// Universal constants

var createSpeedOfLight = /* #__PURE__ */unitFactory('speedOfLight', '299792458', 'm s^-1');
var createGravitationConstant = /* #__PURE__ */unitFactory('gravitationConstant', '6.67430e-11', 'm^3 kg^-1 s^-2');
var createPlanckConstant = /* #__PURE__ */unitFactory('planckConstant', '6.62607015e-34', 'J s');
var createReducedPlanckConstant = /* #__PURE__ */unitFactory('reducedPlanckConstant', '1.0545718176461565e-34', 'J s'); // Electromagnetic constants

var createMagneticConstant = /* #__PURE__ */unitFactory('magneticConstant', '1.25663706212e-6', 'N A^-2');
var createElectricConstant = /* #__PURE__ */unitFactory('electricConstant', '8.8541878128e-12', 'F m^-1');
var createVacuumImpedance = /* #__PURE__ */unitFactory('vacuumImpedance', '376.730313667', 'ohm');
var createCoulomb = /* #__PURE__ */unitFactory('coulomb', '8.987551792261171e9', 'N m^2 C^-2');
var createElementaryCharge = /* #__PURE__ */unitFactory('elementaryCharge', '1.602176634e-19', 'C');
var createBohrMagneton = /* #__PURE__ */unitFactory('bohrMagneton', '9.2740100783e-24', 'J T^-1');
var createConductanceQuantum = /* #__PURE__ */unitFactory('conductanceQuantum', '7.748091729863649e-5', 'S');
var createInverseConductanceQuantum = /* #__PURE__ */unitFactory('inverseConductanceQuantum', '12906.403729652257', 'ohm');
var createMagneticFluxQuantum = /* #__PURE__ */unitFactory('magneticFluxQuantum', '2.0678338484619295e-15', 'Wb');
var createNuclearMagneton = /* #__PURE__ */unitFactory('nuclearMagneton', '5.0507837461e-27', 'J T^-1');
var createKlitzing = /* #__PURE__ */unitFactory('klitzing', '25812.807459304513', 'ohm');
var createJosephson = /* #__PURE__ */unitFactory('josephson', '4.835978484169836e14 Hz V', 'Hz V^-1'); // TODO: support for Hz needed
// Atomic and nuclear constants

var createBohrRadius = /* #__PURE__ */unitFactory('bohrRadius', '5.29177210903e-11', 'm');
var createClassicalElectronRadius = /* #__PURE__ */unitFactory('classicalElectronRadius', '2.8179403262e-15', 'm');
var createElectronMass = /* #__PURE__ */unitFactory('electronMass', '9.1093837015e-31', 'kg');
var createFermiCoupling = /* #__PURE__ */unitFactory('fermiCoupling', '1.1663787e-5', 'GeV^-2');
var createFineStructure = numberFactory('fineStructure', 7.2973525693e-3);
var createHartreeEnergy = /* #__PURE__ */unitFactory('hartreeEnergy', '4.3597447222071e-18', 'J');
var createProtonMass = /* #__PURE__ */unitFactory('protonMass', '1.67262192369e-27', 'kg');
var createDeuteronMass = /* #__PURE__ */unitFactory('deuteronMass', '3.3435830926e-27', 'kg');
var createNeutronMass = /* #__PURE__ */unitFactory('neutronMass', '1.6749271613e-27', 'kg');
var createQuantumOfCirculation = /* #__PURE__ */unitFactory('quantumOfCirculation', '3.6369475516e-4', 'm^2 s^-1');
var createRydberg = /* #__PURE__ */unitFactory('rydberg', '10973731.568160', 'm^-1');
var createThomsonCrossSection = /* #__PURE__ */unitFactory('thomsonCrossSection', '6.6524587321e-29', 'm^2');
var createWeakMixingAngle = numberFactory('weakMixingAngle', 0.22290);
var createEfimovFactor = numberFactory('efimovFactor', 22.7); // Physico-chemical constants

var createAtomicMass = /* #__PURE__ */unitFactory('atomicMass', '1.66053906660e-27', 'kg');
var createAvogadro = /* #__PURE__ */unitFactory('avogadro', '6.02214076e23', 'mol^-1');
var createBoltzmann = /* #__PURE__ */unitFactory('boltzmann', '1.380649e-23', 'J K^-1');
var createFaraday = /* #__PURE__ */unitFactory('faraday', '96485.33212331001', 'C mol^-1');
var createFirstRadiation = /* #__PURE__ */unitFactory('firstRadiation', '3.7417718521927573e-16', 'W m^2'); // export const createSpectralRadiance = /* #__PURE__ */ unitFactory('spectralRadiance', '1.1910429723971881e-16', 'W m^2 sr^-1') // TODO spectralRadiance

var createLoschmidt = /* #__PURE__ */unitFactory('loschmidt', '2.686780111798444e25', 'm^-3');
var createGasConstant = /* #__PURE__ */unitFactory('gasConstant', '8.31446261815324', 'J K^-1 mol^-1');
var createMolarPlanckConstant = /* #__PURE__ */unitFactory('molarPlanckConstant', '3.990312712893431e-10', 'J s mol^-1');
var createMolarVolume = /* #__PURE__ */unitFactory('molarVolume', '0.022413969545014137', 'm^3 mol^-1');
var createSackurTetrode = numberFactory('sackurTetrode', -1.16487052358);
var createSecondRadiation = /* #__PURE__ */unitFactory('secondRadiation', '0.014387768775039337', 'm K');
var createStefanBoltzmann = /* #__PURE__ */unitFactory('stefanBoltzmann', '5.67037441918443e-8', 'W m^-2 K^-4');
var createWienDisplacement = /* #__PURE__ */unitFactory('wienDisplacement', '2.897771955e-3', 'm K'); // Adopted values

var createMolarMass = /* #__PURE__ */unitFactory('molarMass', '0.99999999965e-3', 'kg mol^-1');
var createMolarMassC12 = /* #__PURE__ */unitFactory('molarMassC12', '11.9999999958e-3', 'kg mol^-1');
var createGravity = /* #__PURE__ */unitFactory('gravity', '9.80665', 'm s^-2'); // atm is defined in Unit.js
// Natural units

var createPlanckLength = /* #__PURE__ */unitFactory('planckLength', '1.616255e-35', 'm');
var createPlanckMass = /* #__PURE__ */unitFactory('planckMass', '2.176435e-8', 'kg');
var createPlanckTime = /* #__PURE__ */unitFactory('planckTime', '5.391245e-44', 's');
var createPlanckCharge = /* #__PURE__ */unitFactory('planckCharge', '1.87554603778e-18', 'C');
var createPlanckTemperature = /* #__PURE__ */unitFactory('planckTemperature', '1.416785e+32', 'K'); // helper function to create a factory function which creates a physical constant,
// a Unit with either a number value or a BigNumber value depending on the configuration

function unitFactory(name, valueStr, unitStr) {
  var dependencies = ['config', 'Unit', 'BigNumber'];
  return Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref) {
    var config = _ref.config,
        Unit = _ref.Unit,
        BigNumber = _ref.BigNumber;
    // Note that we can parse into number or BigNumber.
    // We do not parse into Fractions as that doesn't make sense: we would lose precision of the values
    // Therefore we dont use Unit.parse()
    var value = config.number === 'BigNumber' ? new BigNumber(valueStr) : parseFloat(valueStr);
    var unit = new Unit(value, unitStr);
    unit.fixPrefix = true;
    return unit;
  });
} // helper function to create a factory function which creates a numeric constant,
// either a number or BigNumber depending on the configuration


function numberFactory(name, value) {
  var dependencies = ['config', 'BigNumber'];
  return Object(_utils_factory__WEBPACK_IMPORTED_MODULE_0__["factory"])(name, dependencies, function (_ref2) {
    var config = _ref2.config,
        BigNumber = _ref2.BigNumber;
    return config.number === 'BigNumber' ? new BigNumber(value) : value;
  });
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/array.js":
/*!************************************************!*\
  !*** ../node_modules/mathjs/es/utils/array.js ***!
  \************************************************/
/*! exports provided: arraySize, validate, validateIndex, resize, reshape, squeeze, unsqueeze, flatten, map, forEach, filter, filterRegExp, join, identify, generalize, getArrayDataType, last, initial, contains */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arraySize", function() { return arraySize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validate", function() { return validate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateIndex", function() { return validateIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resize", function() { return resize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reshape", function() { return reshape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squeeze", function() { return squeeze; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unsqueeze", function() { return unsqueeze; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterRegExp", function() { return filterRegExp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "join", function() { return join; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identify", function() { return identify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generalize", function() { return generalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArrayDataType", function() { return getArrayDataType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return last; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initial", function() { return initial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return contains; });
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./string */ "../node_modules/mathjs/es/utils/string.js");
/* harmony import */ var _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/DimensionError */ "../node_modules/mathjs/es/error/DimensionError.js");
/* harmony import */ var _error_IndexError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/IndexError */ "../node_modules/mathjs/es/error/IndexError.js");





/**
 * Calculate the size of a multi dimensional array.
 * This function checks the size of the first entry, it does not validate
 * whether all dimensions match. (use function `validate` for that)
 * @param {Array} x
 * @Return {Number[]} size
 */

function arraySize(x) {
  var s = [];

  while (Array.isArray(x)) {
    s.push(x.length);
    x = x[0];
  }

  return s;
}
/**
 * Recursively validate whether each element in a multi dimensional array
 * has a size corresponding to the provided size array.
 * @param {Array} array    Array to be validated
 * @param {number[]} size  Array with the size of each dimension
 * @param {number} dim   Current dimension
 * @throws DimensionError
 * @private
 */

function _validate(array, size, dim) {
  var i;
  var len = array.length;

  if (len !== size[dim]) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"](len, size[dim]);
  }

  if (dim < size.length - 1) {
    // recursively validate each child array
    var dimNext = dim + 1;

    for (i = 0; i < len; i++) {
      var child = array[i];

      if (!Array.isArray(child)) {
        throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"](size.length - 1, size.length, '<');
      }

      _validate(array[i], size, dimNext);
    }
  } else {
    // last dimension. none of the childs may be an array
    for (i = 0; i < len; i++) {
      if (Array.isArray(array[i])) {
        throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"](size.length + 1, size.length, '>');
      }
    }
  }
}
/**
 * Validate whether each element in a multi dimensional array has
 * a size corresponding to the provided size array.
 * @param {Array} array    Array to be validated
 * @param {number[]} size  Array with the size of each dimension
 * @throws DimensionError
 */


function validate(array, size) {
  var isScalar = size.length === 0;

  if (isScalar) {
    // scalar
    if (Array.isArray(array)) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"](array.length, 0);
    }
  } else {
    // array
    _validate(array, size, 0);
  }
}
/**
 * Test whether index is an integer number with index >= 0 and index < length
 * when length is provided
 * @param {number} index    Zero-based index
 * @param {number} [length] Length of the array
 */

function validateIndex(index, length) {
  if (!Object(_is__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(index) || !Object(_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(index)) {
    throw new TypeError('Index must be an integer (value: ' + index + ')');
  }

  if (index < 0 || typeof length === 'number' && index >= length) {
    throw new _error_IndexError__WEBPACK_IMPORTED_MODULE_4__["IndexError"](index, length);
  }
}
/**
 * Resize a multi dimensional array. The resized array is returned.
 * @param {Array} array         Array to be resized
 * @param {Array.<number>} size Array with the size of each dimension
 * @param {*} [defaultValue=0]  Value to be filled in in new entries,
 *                              zero by default. Specify for example `null`,
 *                              to clearly see entries that are not explicitly
 *                              set.
 * @return {Array} array         The resized array
 */

function resize(array, size, defaultValue) {
  // TODO: add support for scalars, having size=[] ?
  // check the type of the arguments
  if (!Array.isArray(array) || !Array.isArray(size)) {
    throw new TypeError('Array expected');
  }

  if (size.length === 0) {
    throw new Error('Resizing to scalar is not supported');
  } // check whether size contains positive integers


  size.forEach(function (value) {
    if (!Object(_is__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(value) || !Object(_number__WEBPACK_IMPORTED_MODULE_0__["isInteger"])(value) || value < 0) {
      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + Object(_string__WEBPACK_IMPORTED_MODULE_2__["format"])(size) + ')');
    }
  }); // recursively resize the array

  var _defaultValue = defaultValue !== undefined ? defaultValue : 0;

  _resize(array, size, 0, _defaultValue);

  return array;
}
/**
 * Recursively resize a multi dimensional array
 * @param {Array} array         Array to be resized
 * @param {number[]} size       Array with the size of each dimension
 * @param {number} dim          Current dimension
 * @param {*} [defaultValue]    Value to be filled in in new entries,
 *                              undefined by default.
 * @private
 */

function _resize(array, size, dim, defaultValue) {
  var i;
  var elem;
  var oldLen = array.length;
  var newLen = size[dim];
  var minLen = Math.min(oldLen, newLen); // apply new length

  array.length = newLen;

  if (dim < size.length - 1) {
    // non-last dimension
    var dimNext = dim + 1; // resize existing child arrays

    for (i = 0; i < minLen; i++) {
      // resize child array
      elem = array[i];

      if (!Array.isArray(elem)) {
        elem = [elem]; // add a dimension

        array[i] = elem;
      }

      _resize(elem, size, dimNext, defaultValue);
    } // create new child arrays


    for (i = minLen; i < newLen; i++) {
      // get child array
      elem = [];
      array[i] = elem; // resize new child array

      _resize(elem, size, dimNext, defaultValue);
    }
  } else {
    // last dimension
    // remove dimensions of existing values
    for (i = 0; i < minLen; i++) {
      while (Array.isArray(array[i])) {
        array[i] = array[i][0];
      }
    } // fill new elements with the default value


    for (i = minLen; i < newLen; i++) {
      array[i] = defaultValue;
    }
  }
}
/**
 * Re-shape a multi dimensional array to fit the specified dimensions
 * @param {Array} array           Array to be reshaped
 * @param {Array.<number>} sizes  List of sizes for each dimension
 * @returns {Array}               Array whose data has been formatted to fit the
 *                                specified dimensions
 *
 * @throws {DimensionError}       If the product of the new dimension sizes does
 *                                not equal that of the old ones
 */


function reshape(array, sizes) {
  var flatArray = flatten(array);
  var newArray;

  function product(arr) {
    return arr.reduce(function (prev, curr) {
      return prev * curr;
    });
  }

  if (!Array.isArray(array) || !Array.isArray(sizes)) {
    throw new TypeError('Array expected');
  }

  if (sizes.length === 0) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"](0, product(arraySize(array)), '!=');
  }

  var totalSize = 1;

  for (var sizeIndex = 0; sizeIndex < sizes.length; sizeIndex++) {
    totalSize *= sizes[sizeIndex];
  }

  if (flatArray.length !== totalSize) {
    throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"](product(sizes), product(arraySize(array)), '!=');
  }

  try {
    newArray = _reshape(flatArray, sizes);
  } catch (e) {
    if (e instanceof _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"]) {
      throw new _error_DimensionError__WEBPACK_IMPORTED_MODULE_3__["DimensionError"](product(sizes), product(arraySize(array)), '!=');
    }

    throw e;
  }

  return newArray;
}
/**
 * Iteratively re-shape a multi dimensional array to fit the specified dimensions
 * @param {Array} array           Array to be reshaped
 * @param {Array.<number>} sizes  List of sizes for each dimension
 * @returns {Array}               Array whose data has been formatted to fit the
 *                                specified dimensions
 */

function _reshape(array, sizes) {
  // testing if there are enough elements for the requested shape
  var tmpArray = array;
  var tmpArray2; // for each dimensions starting by the last one and ignoring the first one

  for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {
    var size = sizes[sizeIndex];
    tmpArray2 = []; // aggregate the elements of the current tmpArray in elements of the requested size

    var length = tmpArray.length / size;

    for (var i = 0; i < length; i++) {
      tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size));
    } // set it as the new tmpArray for the next loop turn or for return


    tmpArray = tmpArray2;
  }

  return tmpArray;
}
/**
 * Squeeze a multi dimensional array
 * @param {Array} array
 * @param {Array} [size]
 * @returns {Array} returns the array itself
 */


function squeeze(array, size) {
  var s = size || arraySize(array); // squeeze outer dimensions

  while (Array.isArray(array) && array.length === 1) {
    array = array[0];
    s.shift();
  } // find the first dimension to be squeezed


  var dims = s.length;

  while (s[dims - 1] === 1) {
    dims--;
  } // squeeze inner dimensions


  if (dims < s.length) {
    array = _squeeze(array, dims, 0);
    s.length = dims;
  }

  return array;
}
/**
 * Recursively squeeze a multi dimensional array
 * @param {Array} array
 * @param {number} dims Required number of dimensions
 * @param {number} dim  Current dimension
 * @returns {Array | *} Returns the squeezed array
 * @private
 */

function _squeeze(array, dims, dim) {
  var i, ii;

  if (dim < dims) {
    var next = dim + 1;

    for (i = 0, ii = array.length; i < ii; i++) {
      array[i] = _squeeze(array[i], dims, next);
    }
  } else {
    while (Array.isArray(array)) {
      array = array[0];
    }
  }

  return array;
}
/**
 * Unsqueeze a multi dimensional array: add dimensions when missing
 *
 * Paramter `size` will be mutated to match the new, unqueezed matrix size.
 *
 * @param {Array} array
 * @param {number} dims       Desired number of dimensions of the array
 * @param {number} [outer]    Number of outer dimensions to be added
 * @param {Array} [size] Current size of array.
 * @returns {Array} returns the array itself
 * @private
 */


function unsqueeze(array, dims, outer, size) {
  var s = size || arraySize(array); // unsqueeze outer dimensions

  if (outer) {
    for (var i = 0; i < outer; i++) {
      array = [array];
      s.unshift(1);
    }
  } // unsqueeze inner dimensions


  array = _unsqueeze(array, dims, 0);

  while (s.length < dims) {
    s.push(1);
  }

  return array;
}
/**
 * Recursively unsqueeze a multi dimensional array
 * @param {Array} array
 * @param {number} dims Required number of dimensions
 * @param {number} dim  Current dimension
 * @returns {Array | *} Returns the squeezed array
 * @private
 */

function _unsqueeze(array, dims, dim) {
  var i, ii;

  if (Array.isArray(array)) {
    var next = dim + 1;

    for (i = 0, ii = array.length; i < ii; i++) {
      array[i] = _unsqueeze(array[i], dims, next);
    }
  } else {
    for (var d = dim; d < dims; d++) {
      array = [array];
    }
  }

  return array;
}
/**
 * Flatten a multi dimensional array, put all elements in a one dimensional
 * array
 * @param {Array} array   A multi dimensional array
 * @return {Array}        The flattened array (1 dimensional)
 */


function flatten(array) {
  if (!Array.isArray(array)) {
    // if not an array, return as is
    return array;
  }

  var flat = [];
  array.forEach(function callback(value) {
    if (Array.isArray(value)) {
      value.forEach(callback); // traverse through sub-arrays recursively
    } else {
      flat.push(value);
    }
  });
  return flat;
}
/**
 * A safe map
 * @param {Array} array
 * @param {function} callback
 */

function map(array, callback) {
  return Array.prototype.map.call(array, callback);
}
/**
 * A safe forEach
 * @param {Array} array
 * @param {function} callback
 */

function forEach(array, callback) {
  Array.prototype.forEach.call(array, callback);
}
/**
 * A safe filter
 * @param {Array} array
 * @param {function} callback
 */

function filter(array, callback) {
  if (arraySize(array).length !== 1) {
    throw new Error('Only one dimensional matrices supported');
  }

  return Array.prototype.filter.call(array, callback);
}
/**
 * Filter values in a callback given a regular expression
 * @param {Array} array
 * @param {RegExp} regexp
 * @return {Array} Returns the filtered array
 * @private
 */

function filterRegExp(array, regexp) {
  if (arraySize(array).length !== 1) {
    throw new Error('Only one dimensional matrices supported');
  }

  return Array.prototype.filter.call(array, function (entry) {
    return regexp.test(entry);
  });
}
/**
 * A safe join
 * @param {Array} array
 * @param {string} separator
 */

function join(array, separator) {
  return Array.prototype.join.call(array, separator);
}
/**
 * Assign a numeric identifier to every element of a sorted array
 * @param {Array} a  An array
 * @return {Array} An array of objects containing the original value and its identifier
 */

function identify(a) {
  if (!Array.isArray(a)) {
    throw new TypeError('Array input expected');
  }

  if (a.length === 0) {
    return a;
  }

  var b = [];
  var count = 0;
  b[0] = {
    value: a[0],
    identifier: 0
  };

  for (var i = 1; i < a.length; i++) {
    if (a[i] === a[i - 1]) {
      count++;
    } else {
      count = 0;
    }

    b.push({
      value: a[i],
      identifier: count
    });
  }

  return b;
}
/**
 * Remove the numeric identifier from the elements
 * @param {array} a  An array
 * @return {array} An array of values without identifiers
 */

function generalize(a) {
  if (!Array.isArray(a)) {
    throw new TypeError('Array input expected');
  }

  if (a.length === 0) {
    return a;
  }

  var b = [];

  for (var i = 0; i < a.length; i++) {
    b.push(a[i].value);
  }

  return b;
}
/**
 * Check the datatype of a given object
 * This is a low level implementation that should only be used by
 * parent Matrix classes such as SparseMatrix or DenseMatrix
 * This method does not validate Array Matrix shape
 * @param {Array} array
 * @param {function} typeOf   Callback function to use to determine the type of a value
 * @return string
 */

function getArrayDataType(array, typeOf) {
  var type; // to hold type info

  var length = 0; // to hold length value to ensure it has consistent sizes

  for (var i = 0; i < array.length; i++) {
    var item = array[i];
    var isArray = Array.isArray(item); // Saving the target matrix row size

    if (i === 0 && isArray) {
      length = item.length;
    } // If the current item is an array but the length does not equal the targetVectorSize


    if (isArray && item.length !== length) {
      return undefined;
    }

    var itemType = isArray ? getArrayDataType(item, typeOf) // recurse into a nested array
    : typeOf(item);

    if (type === undefined) {
      type = itemType; // first item
    } else if (type !== itemType) {
      return 'mixed';
    } else {// we're good, everything has the same type so far
    }
  }

  return type;
}
/**
 * Return the last item from an array
 * @param array
 * @returns {*}
 */

function last(array) {
  return array[array.length - 1];
}
/**
 * Get all but the last element of array.
 */

function initial(array) {
  return array.slice(0, array.length - 1);
}
/**
 * Test whether an array or string contains an item
 * @param {Array | string} array
 * @param {*} item
 * @return {boolean}
 */

function contains(array, item) {
  return array.indexOf(item) !== -1;
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/bignumber/bitwise.js":
/*!************************************************************!*\
  !*** ../node_modules/mathjs/es/utils/bignumber/bitwise.js ***!
  \************************************************************/
/*! exports provided: bitAndBigNumber, bitNotBigNumber, bitOrBigNumber, bitwise, bitXor, leftShiftBigNumber, rightArithShiftBigNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitAndBigNumber", function() { return bitAndBigNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitNotBigNumber", function() { return bitNotBigNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitOrBigNumber", function() { return bitOrBigNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitwise", function() { return bitwise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitXor", function() { return bitXor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "leftShiftBigNumber", function() { return leftShiftBigNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftBigNumber", function() { return rightArithShiftBigNumber; });
/**
 * Bitwise and for Bignumbers
 *
 * Special Cases:
 *   N &  n =  N
 *   n &  0 =  0
 *   n & -1 =  n
 *   n &  n =  n
 *   I &  I =  I
 *  -I & -I = -I
 *   I & -I =  0
 *   I &  n =  n
 *   I & -n =  I
 *  -I &  n =  0
 *  -I & -n = -I
 *
 * @param {BigNumber} x
 * @param {BigNumber} y
 * @return {BigNumber} Result of `x` & `y`, is fully precise
 * @private
 */
function bitAndBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error('Integers expected in function bitAnd');
  }

  var BigNumber = x.constructor;

  if (x.isNaN() || y.isNaN()) {
    return new BigNumber(NaN);
  }

  if (x.isZero() || y.eq(-1) || x.eq(y)) {
    return x;
  }

  if (y.isZero() || x.eq(-1)) {
    return y;
  }

  if (!x.isFinite() || !y.isFinite()) {
    if (!x.isFinite() && !y.isFinite()) {
      if (x.isNegative() === y.isNegative()) {
        return x;
      }

      return new BigNumber(0);
    }

    if (!x.isFinite()) {
      if (y.isNegative()) {
        return x;
      }

      if (x.isNegative()) {
        return new BigNumber(0);
      }

      return y;
    }

    if (!y.isFinite()) {
      if (x.isNegative()) {
        return y;
      }

      if (y.isNegative()) {
        return new BigNumber(0);
      }

      return x;
    }
  }

  return bitwise(x, y, function (a, b) {
    return a & b;
  });
}
/**
 * Bitwise not
 * @param {BigNumber} x
 * @return {BigNumber} Result of ~`x`, fully precise
 *
 */

function bitNotBigNumber(x) {
  if (x.isFinite() && !x.isInteger()) {
    throw new Error('Integer expected in function bitNot');
  }

  var BigNumber = x.constructor;
  var prevPrec = BigNumber.precision;
  BigNumber.config({
    precision: 1E9
  });
  var result = x.plus(new BigNumber(1));
  result.s = -result.s || null;
  BigNumber.config({
    precision: prevPrec
  });
  return result;
}
/**
 * Bitwise OR for BigNumbers
 *
 * Special Cases:
 *   N |  n =  N
 *   n |  0 =  n
 *   n | -1 = -1
 *   n |  n =  n
 *   I |  I =  I
 *  -I | -I = -I
 *   I | -n = -1
 *   I | -I = -1
 *   I |  n =  I
 *  -I |  n = -I
 *  -I | -n = -n
 *
 * @param {BigNumber} x
 * @param {BigNumber} y
 * @return {BigNumber} Result of `x` | `y`, fully precise
 */

function bitOrBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error('Integers expected in function bitOr');
  }

  var BigNumber = x.constructor;

  if (x.isNaN() || y.isNaN()) {
    return new BigNumber(NaN);
  }

  var negOne = new BigNumber(-1);

  if (x.isZero() || y.eq(negOne) || x.eq(y)) {
    return y;
  }

  if (y.isZero() || x.eq(negOne)) {
    return x;
  }

  if (!x.isFinite() || !y.isFinite()) {
    if (!x.isFinite() && !x.isNegative() && y.isNegative() || x.isNegative() && !y.isNegative() && !y.isFinite()) {
      return negOne;
    }

    if (x.isNegative() && y.isNegative()) {
      return x.isFinite() ? x : y;
    }

    return x.isFinite() ? y : x;
  }

  return bitwise(x, y, function (a, b) {
    return a | b;
  });
}
/**
 * Applies bitwise function to numbers
 * @param {BigNumber} x
 * @param {BigNumber} y
 * @param {function (a, b)} func
 * @return {BigNumber}
 */

function bitwise(x, y, func) {
  var BigNumber = x.constructor;
  var xBits, yBits;
  var xSign = +(x.s < 0);
  var ySign = +(y.s < 0);

  if (xSign) {
    xBits = decCoefficientToBinaryString(bitNotBigNumber(x));

    for (var i = 0; i < xBits.length; ++i) {
      xBits[i] ^= 1;
    }
  } else {
    xBits = decCoefficientToBinaryString(x);
  }

  if (ySign) {
    yBits = decCoefficientToBinaryString(bitNotBigNumber(y));

    for (var _i = 0; _i < yBits.length; ++_i) {
      yBits[_i] ^= 1;
    }
  } else {
    yBits = decCoefficientToBinaryString(y);
  }

  var minBits, maxBits, minSign;

  if (xBits.length <= yBits.length) {
    minBits = xBits;
    maxBits = yBits;
    minSign = xSign;
  } else {
    minBits = yBits;
    maxBits = xBits;
    minSign = ySign;
  }

  var shortLen = minBits.length;
  var longLen = maxBits.length;
  var expFuncVal = func(xSign, ySign) ^ 1;
  var outVal = new BigNumber(expFuncVal ^ 1);
  var twoPower = new BigNumber(1);
  var two = new BigNumber(2);
  var prevPrec = BigNumber.precision;
  BigNumber.config({
    precision: 1E9
  });

  while (shortLen > 0) {
    if (func(minBits[--shortLen], maxBits[--longLen]) === expFuncVal) {
      outVal = outVal.plus(twoPower);
    }

    twoPower = twoPower.times(two);
  }

  while (longLen > 0) {
    if (func(minSign, maxBits[--longLen]) === expFuncVal) {
      outVal = outVal.plus(twoPower);
    }

    twoPower = twoPower.times(two);
  }

  BigNumber.config({
    precision: prevPrec
  });

  if (expFuncVal === 0) {
    outVal.s = -outVal.s;
  }

  return outVal;
}
/* Extracted from decimal.js, and edited to specialize. */

function decCoefficientToBinaryString(x) {
  // Convert to string
  var a = x.d; // array with digits

  var r = a[0] + '';

  for (var i = 1; i < a.length; ++i) {
    var s = a[i] + '';

    for (var z = 7 - s.length; z--;) {
      s = '0' + s;
    }

    r += s;
  }

  var j = r.length;

  while (r.charAt(j) === '0') {
    j--;
  }

  var xe = x.e;
  var str = r.slice(0, j + 1 || 1);
  var strL = str.length;

  if (xe > 0) {
    if (++xe > strL) {
      // Append zeros.
      xe -= strL;

      while (xe--) {
        str += '0';
      }
    } else if (xe < strL) {
      str = str.slice(0, xe) + '.' + str.slice(xe);
    }
  } // Convert from base 10 (decimal) to base 2


  var arr = [0];

  for (var _i2 = 0; _i2 < str.length;) {
    var arrL = arr.length;

    while (arrL--) {
      arr[arrL] *= 10;
    }

    arr[0] += parseInt(str.charAt(_i2++)); // convert to int

    for (var _j = 0; _j < arr.length; ++_j) {
      if (arr[_j] > 1) {
        if (arr[_j + 1] === null || arr[_j + 1] === undefined) {
          arr[_j + 1] = 0;
        }

        arr[_j + 1] += arr[_j] >> 1;
        arr[_j] &= 1;
      }
    }
  }

  return arr.reverse();
}
/**
 * Bitwise XOR for BigNumbers
 *
 * Special Cases:
 *   N ^  n =  N
 *   n ^  0 =  n
 *   n ^  n =  0
 *   n ^ -1 = ~n
 *   I ^  n =  I
 *   I ^ -n = -I
 *   I ^ -I = -1
 *  -I ^  n = -I
 *  -I ^ -n =  I
 *
 * @param {BigNumber} x
 * @param {BigNumber} y
 * @return {BigNumber} Result of `x` ^ `y`, fully precise
 *
 */


function bitXor(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error('Integers expected in function bitXor');
  }

  var BigNumber = x.constructor;

  if (x.isNaN() || y.isNaN()) {
    return new BigNumber(NaN);
  }

  if (x.isZero()) {
    return y;
  }

  if (y.isZero()) {
    return x;
  }

  if (x.eq(y)) {
    return new BigNumber(0);
  }

  var negOne = new BigNumber(-1);

  if (x.eq(negOne)) {
    return bitNotBigNumber(y);
  }

  if (y.eq(negOne)) {
    return bitNotBigNumber(x);
  }

  if (!x.isFinite() || !y.isFinite()) {
    if (!x.isFinite() && !y.isFinite()) {
      return negOne;
    }

    return new BigNumber(x.isNegative() === y.isNegative() ? Infinity : -Infinity);
  }

  return bitwise(x, y, function (a, b) {
    return a ^ b;
  });
}
/**
 * Bitwise left shift
 *
 * Special Cases:
 *  n << -n = N
 *  n <<  N = N
 *  N <<  n = N
 *  n <<  0 = n
 *  0 <<  n = 0
 *  I <<  I = N
 *  I <<  n = I
 *  n <<  I = I
 *
 * @param {BigNumber} x
 * @param {BigNumber} y
 * @return {BigNumber} Result of `x` << `y`
 *
 */

function leftShiftBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error('Integers expected in function leftShift');
  }

  var BigNumber = x.constructor;

  if (x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()) {
    return new BigNumber(NaN);
  }

  if (x.isZero() || y.isZero()) {
    return x;
  }

  if (!x.isFinite() && !y.isFinite()) {
    return new BigNumber(NaN);
  } // Math.pow(2, y) is fully precise for y < 55, and fast


  if (y.lt(55)) {
    return x.times(Math.pow(2, y.toNumber()) + '');
  }

  return x.times(new BigNumber(2).pow(y));
}
/*
 * Special Cases:
 *   n >> -n =  N
 *   n >>  N =  N
 *   N >>  n =  N
 *   I >>  I =  N
 *   n >>  0 =  n
 *   I >>  n =  I
 *  -I >>  n = -I
 *  -I >>  I = -I
 *   n >>  I =  I
 *  -n >>  I = -1
 *   0 >>  n =  0
 *
 * @param {BigNumber} value
 * @param {BigNumber} value
 * @return {BigNumber} Result of `x` >> `y`
 *
 */

function rightArithShiftBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error('Integers expected in function rightArithShift');
  }

  var BigNumber = x.constructor;

  if (x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()) {
    return new BigNumber(NaN);
  }

  if (x.isZero() || y.isZero()) {
    return x;
  }

  if (!y.isFinite()) {
    if (x.isNegative()) {
      return new BigNumber(-1);
    }

    if (!x.isFinite()) {
      return new BigNumber(NaN);
    }

    return new BigNumber(0);
  } // Math.pow(2, y) is fully precise for y < 55, and fast


  if (y.lt(55)) {
    return x.div(Math.pow(2, y.toNumber()) + '').floor();
  }

  return x.div(new BigNumber(2).pow(y)).floor();
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/bignumber/constants.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/utils/bignumber/constants.js ***!
  \**************************************************************/
/*! exports provided: createBigNumberE, createBigNumberPhi, createBigNumberPi, createBigNumberTau */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBigNumberE", function() { return createBigNumberE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBigNumberPhi", function() { return createBigNumberPhi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBigNumberPi", function() { return createBigNumberPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBigNumberTau", function() { return createBigNumberTau; });
/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../function */ "../node_modules/mathjs/es/utils/function.js");

/**
 * Calculate BigNumber e
 * @param {function} BigNumber   BigNumber constructor
 * @returns {BigNumber} Returns e
 */

var createBigNumberE = Object(_function__WEBPACK_IMPORTED_MODULE_0__["memoize"])(function (BigNumber) {
  return new BigNumber(1).exp();
}, hasher);
/**
 * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2
 * @param {function} BigNumber   BigNumber constructor
 * @returns {BigNumber} Returns phi
 */

var createBigNumberPhi = Object(_function__WEBPACK_IMPORTED_MODULE_0__["memoize"])(function (BigNumber) {
  return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2);
}, hasher);
/**
 * Calculate BigNumber pi.
 * @param {function} BigNumber   BigNumber constructor
 * @returns {BigNumber} Returns pi
 */

var createBigNumberPi = Object(_function__WEBPACK_IMPORTED_MODULE_0__["memoize"])(function (BigNumber) {
  return BigNumber.acos(-1);
}, hasher);
/**
 * Calculate BigNumber tau, tau = 2 * pi
 * @param {function} BigNumber   BigNumber constructor
 * @returns {BigNumber} Returns tau
 */

var createBigNumberTau = Object(_function__WEBPACK_IMPORTED_MODULE_0__["memoize"])(function (BigNumber) {
  return createBigNumberPi(BigNumber).times(2);
}, hasher);
/**
 * Create a hash for a BigNumber constructor function. The created has is
 * the configured precision
 * @param {Array} args         Supposed to contain a single entry with
 *                             a BigNumber constructor
 * @return {number} precision
 * @private
 */

function hasher(args) {
  return args[0].precision;
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/bignumber/formatter.js":
/*!**************************************************************!*\
  !*** ../node_modules/mathjs/es/utils/bignumber/formatter.js ***!
  \**************************************************************/
/*! exports provided: format, toEngineering, toExponential, toFixed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toEngineering", function() { return toEngineering; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toExponential", function() { return toExponential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toFixed", function() { return toFixed; });
/**
 * Convert a BigNumber to a formatted string representation.
 *
 * Syntax:
 *
 *    format(value)
 *    format(value, options)
 *    format(value, precision)
 *    format(value, fn)
 *
 * Where:
 *
 *    {number} value   The value to be formatted
 *    {Object} options An object with formatting options. Available options:
 *                     {string} notation
 *                         Number notation. Choose from:
 *                         'fixed'          Always use regular number notation.
 *                                          For example '123.40' and '14000000'
 *                         'exponential'    Always use exponential notation.
 *                                          For example '1.234e+2' and '1.4e+7'
 *                         'auto' (default) Regular number notation for numbers
 *                                          having an absolute value between
 *                                          `lower` and `upper` bounds, and uses
 *                                          exponential notation elsewhere.
 *                                          Lower bound is included, upper bound
 *                                          is excluded.
 *                                          For example '123.4' and '1.4e7'.
 *                     {number} precision   A number between 0 and 16 to round
 *                                          the digits of the number.
 *                                          In case of notations 'exponential',
 *                                          'engineering', and 'auto',
 *                                          `precision` defines the total
 *                                          number of significant digits returned.
 *                                          In case of notation 'fixed',
 *                                          `precision` defines the number of
 *                                          significant digits after the decimal
 *                                          point.
 *                                          `precision` is undefined by default.
 *                     {number} lowerExp    Exponent determining the lower boundary
 *                                          for formatting a value with an exponent
 *                                          when `notation='auto`.
 *                                          Default value is `-3`.
 *                     {number} upperExp    Exponent determining the upper boundary
 *                                          for formatting a value with an exponent
 *                                          when `notation='auto`.
 *                                          Default value is `5`.
 *    {Function} fn    A custom formatting function. Can be used to override the
 *                     built-in notations. Function `fn` is called with `value` as
 *                     parameter and must return a string. Is useful for example to
 *                     format all values inside a matrix in a particular way.
 *
 * Examples:
 *
 *    format(6.4)                                        // '6.4'
 *    format(1240000)                                    // '1.24e6'
 *    format(1/3)                                        // '0.3333333333333333'
 *    format(1/3, 3)                                     // '0.333'
 *    format(21385, 2)                                   // '21000'
 *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'
 *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'
 *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'
 *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'
 *
 * @param {BigNumber} value
 * @param {Object | Function | number} [options]
 * @return {string} str The formatted value
 */
function format(value, options) {
  if (typeof options === 'function') {
    // handle format(value, fn)
    return options(value);
  } // handle special cases


  if (!value.isFinite()) {
    return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';
  } // default values for options


  var notation = 'auto';
  var precision;

  if (options !== undefined) {
    // determine notation from options
    if (options.notation) {
      notation = options.notation;
    } // determine precision from options


    if (typeof options === 'number') {
      precision = options;
    } else if (options.precision) {
      precision = options.precision;
    }
  } // handle the various notations


  switch (notation) {
    case 'fixed':
      return toFixed(value, precision);

    case 'exponential':
      return toExponential(value, precision);

    case 'engineering':
      return toEngineering(value, precision);

    case 'auto':
      {
        // determine lower and upper bound for exponential notation.
        // TODO: implement support for upper and lower to be BigNumbers themselves
        var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;
        var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero

        if (value.isZero()) return '0'; // determine whether or not to output exponential notation

        var str;
        var rounded = value.toSignificantDigits(precision);
        var exp = rounded.e;

        if (exp >= lowerExp && exp < upperExp) {
          // normal number notation
          str = rounded.toFixed();
        } else {
          // exponential notation
          str = toExponential(value, precision);
        } // remove trailing zeros after the decimal point


        return str.replace(/((\.\d*?)(0+))($|e)/, function () {
          var digits = arguments[2];
          var e = arguments[4];
          return digits !== '.' ? digits + e : e;
        });
      }

    default:
      throw new Error('Unknown notation "' + notation + '". ' + 'Choose "auto", "exponential", or "fixed".');
  }
}
/**
 * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'
 * @param {BigNumber | string} value
 * @param {number} [precision]        Optional number of significant figures to return.
 */

function toEngineering(value, precision) {
  // find nearest lower multiple of 3 for exponent
  var e = value.e;
  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3; // find difference in exponents, and calculate the value without exponent

  var valueWithoutExp = value.mul(Math.pow(10, -newExp));
  var valueStr = valueWithoutExp.toPrecision(precision);

  if (valueStr.indexOf('e') !== -1) {
    valueStr = valueWithoutExp.toString();
  }

  return valueStr + 'e' + (e >= 0 ? '+' : '') + newExp.toString();
}
/**
 * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'
 * @param {BigNumber} value
 * @param {number} [precision]  Number of digits in formatted output.
 *                              If not provided, the maximum available digits
 *                              is used.
 * @returns {string} str
 */

function toExponential(value, precision) {
  if (precision !== undefined) {
    return value.toExponential(precision - 1); // Note the offset of one
  } else {
    return value.toExponential();
  }
}
/**
 * Format a number with fixed notation.
 * @param {BigNumber} value
 * @param {number} [precision=undefined] Optional number of decimals after the
 *                                       decimal point. Undefined by default.
 */

function toFixed(value, precision) {
  return value.toFixed(precision);
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js":
/*!****************************************************************!*\
  !*** ../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js ***!
  \****************************************************************/
/*! exports provided: nearlyEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nearlyEqual", function() { return nearlyEqual; });
/**
 * Compares two BigNumbers.
 * @param {BigNumber} x       First value to compare
 * @param {BigNumber} y       Second value to compare
 * @param {number} [epsilon]  The maximum relative difference between x and y
 *                            If epsilon is undefined or null, the function will
 *                            test whether x and y are exactly equal.
 * @return {boolean} whether the two numbers are nearly equal
 */
function nearlyEqual(x, y, epsilon) {
  // if epsilon is null or undefined, test whether x and y are exactly equal
  if (epsilon === null || epsilon === undefined) {
    return x.eq(y);
  } // use "==" operator, handles infinities


  if (x.eq(y)) {
    return true;
  } // NaN


  if (x.isNaN() || y.isNaN()) {
    return false;
  } // at this point x and y should be finite


  if (x.isFinite() && y.isFinite()) {
    // check numbers are very close, needed when comparing numbers near zero
    var diff = x.minus(y).abs();

    if (diff.isZero()) {
      return true;
    } else {
      // use relative error
      var max = x.constructor.max(x.abs(), y.abs());
      return diff.lte(max.times(epsilon));
    }
  } // Infinite and Number or negative Infinite and positive Infinite cases


  return false;
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/collection.js":
/*!*****************************************************!*\
  !*** ../node_modules/mathjs/es/utils/collection.js ***!
  \*****************************************************/
/*! exports provided: containsCollections, deepForEach, deepMap, reduce, scatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsCollections", function() { return containsCollections; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepForEach", function() { return deepForEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepMap", function() { return deepMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scatter", function() { return scatter; });
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _error_IndexError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/IndexError */ "../node_modules/mathjs/es/error/IndexError.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array */ "../node_modules/mathjs/es/utils/array.js");



/**
 * Test whether an array contains collections
 * @param {Array} array
 * @returns {boolean} Returns true when the array contains one or multiple
 *                    collections (Arrays or Matrices). Returns false otherwise.
 */

function containsCollections(array) {
  for (var i = 0; i < array.length; i++) {
    if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isCollection"])(array[i])) {
      return true;
    }
  }

  return false;
}
/**
 * Recursively loop over all elements in a given multi dimensional array
 * and invoke the callback on each of the elements.
 * @param {Array | Matrix} array
 * @param {Function} callback     The callback method is invoked with one
 *                                parameter: the current element in the array
 */

function deepForEach(array, callback) {
  if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(array)) {
    array = array.valueOf();
  }

  for (var i = 0, ii = array.length; i < ii; i++) {
    var value = array[i];

    if (Array.isArray(value)) {
      deepForEach(value, callback);
    } else {
      callback(value);
    }
  }
}
/**
 * Execute the callback function element wise for each element in array and any
 * nested array
 * Returns an array with the results
 * @param {Array | Matrix} array
 * @param {Function} callback   The callback is called with two parameters:
 *                              value1 and value2, which contain the current
 *                              element of both arrays.
 * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.
 *
 * @return {Array | Matrix} res
 */

function deepMap(array, callback, skipZeros) {
  if (array && typeof array.map === 'function') {
    // TODO: replace array.map with a for loop to improve performance
    return array.map(function (x) {
      return deepMap(x, callback, skipZeros);
    });
  } else {
    return callback(array);
  }
}
/**
 * Reduce a given matrix or array to a new matrix or
 * array with one less dimension, applying the given
 * callback in the selected dimension.
 * @param {Array | Matrix} mat
 * @param {number} dim
 * @param {Function} callback
 * @return {Array | Matrix} res
 */

function reduce(mat, dim, callback) {
  var size = Array.isArray(mat) ? Object(_array__WEBPACK_IMPORTED_MODULE_2__["arraySize"])(mat) : mat.size();

  if (dim < 0 || dim >= size.length) {
    // TODO: would be more clear when throwing a DimensionError here
    throw new _error_IndexError__WEBPACK_IMPORTED_MODULE_1__["IndexError"](dim, size.length);
  }

  if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isMatrix"])(mat)) {
    return mat.create(_reduce(mat.valueOf(), dim, callback));
  } else {
    return _reduce(mat, dim, callback);
  }
}
/**
 * Recursively reduce a matrix
 * @param {Array} mat
 * @param {number} dim
 * @param {Function} callback
 * @returns {Array} ret
 * @private
 */

function _reduce(mat, dim, callback) {
  var i, ret, val, tran;

  if (dim <= 0) {
    if (!Array.isArray(mat[0])) {
      val = mat[0];

      for (i = 1; i < mat.length; i++) {
        val = callback(val, mat[i]);
      }

      return val;
    } else {
      tran = _switch(mat);
      ret = [];

      for (i = 0; i < tran.length; i++) {
        ret[i] = _reduce(tran[i], dim - 1, callback);
      }

      return ret;
    }
  } else {
    ret = [];

    for (i = 0; i < mat.length; i++) {
      ret[i] = _reduce(mat[i], dim - 1, callback);
    }

    return ret;
  }
}
/**
 * Transpose a matrix
 * @param {Array} mat
 * @returns {Array} ret
 * @private
 */


function _switch(mat) {
  var I = mat.length;
  var J = mat[0].length;
  var i, j;
  var ret = [];

  for (j = 0; j < J; j++) {
    var tmp = [];

    for (i = 0; i < I; i++) {
      tmp.push(mat[i][j]);
    }

    ret.push(tmp);
  }

  return ret;
} // TODO: document function scatter


function scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {
  // a arrays
  var avalues = a._values;
  var aindex = a._index;
  var aptr = a._ptr; // vars

  var k, k0, k1, i; // check we need to process values (pattern matrix)

  if (x) {
    // values in j
    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
      // row
      i = aindex[k]; // check value exists in current j

      if (w[i] !== mark) {
        // i is new entry in j
        w[i] = mark; // add i to pattern of C

        cindex.push(i); // x(i) = A, check we need to call function this time

        if (update) {
          // copy value to workspace calling callback function
          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]); // function was called on current row

          u[i] = mark;
        } else {
          // copy value to workspace
          x[i] = avalues[k];
        }
      } else {
        // i exists in C already
        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]); // function was called on current row

        u[i] = mark;
      }
    }
  } else {
    // values in j
    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
      // row
      i = aindex[k]; // check value exists in current j

      if (w[i] !== mark) {
        // i is new entry in j
        w[i] = mark; // add i to pattern of C

        cindex.push(i);
      } else {
        // indicate function was called on current row
        u[i] = mark;
      }
    }
  }
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/complex.js":
/*!**************************************************!*\
  !*** ../node_modules/mathjs/es/utils/complex.js ***!
  \**************************************************/
/*! exports provided: complexEquals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "complexEquals", function() { return complexEquals; });
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "../node_modules/mathjs/es/utils/number.js");

/**
 * Test whether two complex values are equal provided a given epsilon.
 * Does not use or change the global Complex.EPSILON setting
 * @param {Complex} x
 * @param {Complex} y
 * @param {number} epsilon
 * @returns {boolean}
 */

function complexEquals(x, y, epsilon) {
  return Object(_number__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x.re, y.re, epsilon) && Object(_number__WEBPACK_IMPORTED_MODULE_0__["nearlyEqual"])(x.im, y.im, epsilon);
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/customs.js":
/*!**************************************************!*\
  !*** ../node_modules/mathjs/es/utils/customs.js ***!
  \**************************************************/
/*! exports provided: getSafeProperty, setSafeProperty, isSafeProperty, validateSafeMethod, isSafeMethod, isPlainObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSafeProperty", function() { return getSafeProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSafeProperty", function() { return setSafeProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSafeProperty", function() { return isSafeProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateSafeMethod", function() { return validateSafeMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSafeMethod", function() { return isSafeMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlainObject", function() { return isPlainObject; });
/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object */ "../node_modules/mathjs/es/utils/object.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }


/**
 * Get a property of a plain object
 * Throws an error in case the object is not a plain object or the
 * property is not defined on the object itself
 * @param {Object} object
 * @param {string} prop
 * @return {*} Returns the property value when safe
 */

function getSafeProperty(object, prop) {
  // only allow getting safe properties of a plain object
  if (isPlainObject(object) && isSafeProperty(object, prop)) {
    return object[prop];
  }

  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {
    throw new Error('Cannot access method "' + prop + '" as a property');
  }

  throw new Error('No access to property "' + prop + '"');
}
/**
 * Set a property on a plain object.
 * Throws an error in case the object is not a plain object or the
 * property would override an inherited property like .constructor or .toString
 * @param {Object} object
 * @param {string} prop
 * @param {*} value
 * @return {*} Returns the value
 */
// TODO: merge this function into access.js?


function setSafeProperty(object, prop, value) {
  // only allow setting safe properties of a plain object
  if (isPlainObject(object) && isSafeProperty(object, prop)) {
    object[prop] = value;
    return value;
  }

  throw new Error('No access to property "' + prop + '"');
}
/**
 * Test whether a property is safe to use for an object.
 * For example .toString and .constructor are not safe
 * @param {string} prop
 * @return {boolean} Returns true when safe
 */


function isSafeProperty(object, prop) {
  if (!object || _typeof(object) !== 'object') {
    return false;
  } // SAFE: whitelisted
  // e.g length


  if (Object(_object__WEBPACK_IMPORTED_MODULE_0__["hasOwnProperty"])(safeNativeProperties, prop)) {
    return true;
  } // UNSAFE: inherited from Object prototype
  // e.g constructor


  if (prop in Object.prototype) {
    // 'in' is used instead of hasOwnProperty for nodejs v0.10
    // which is inconsistent on root prototypes. It is safe
    // here because Object.prototype is a root object
    return false;
  } // UNSAFE: inherited from Function prototype
  // e.g call, apply


  if (prop in Function.prototype) {
    // 'in' is used instead of hasOwnProperty for nodejs v0.10
    // which is inconsistent on root prototypes. It is safe
    // here because Function.prototype is a root object
    return false;
  }

  return true;
}
/**
 * Validate whether a method is safe.
 * Throws an error when that's not the case.
 * @param {Object} object
 * @param {string} method
 */
// TODO: merge this function into assign.js?


function validateSafeMethod(object, method) {
  if (!isSafeMethod(object, method)) {
    throw new Error('No access to method "' + method + '"');
  }
}
/**
 * Check whether a method is safe.
 * Throws an error when that's not the case (for example for `constructor`).
 * @param {Object} object
 * @param {string} method
 * @return {boolean} Returns true when safe, false otherwise
 */


function isSafeMethod(object, method) {
  if (object === null || object === undefined || typeof object[method] !== 'function') {
    return false;
  } // UNSAFE: ghosted
  // e.g overridden toString
  // Note that IE10 doesn't support __proto__ and we can't do this check there.


  if (Object(_object__WEBPACK_IMPORTED_MODULE_0__["hasOwnProperty"])(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {
    return false;
  } // SAFE: whitelisted
  // e.g toString


  if (Object(_object__WEBPACK_IMPORTED_MODULE_0__["hasOwnProperty"])(safeNativeMethods, method)) {
    return true;
  } // UNSAFE: inherited from Object prototype
  // e.g constructor


  if (method in Object.prototype) {
    // 'in' is used instead of hasOwnProperty for nodejs v0.10
    // which is inconsistent on root prototypes. It is safe
    // here because Object.prototype is a root object
    return false;
  } // UNSAFE: inherited from Function prototype
  // e.g call, apply


  if (method in Function.prototype) {
    // 'in' is used instead of hasOwnProperty for nodejs v0.10
    // which is inconsistent on root prototypes. It is safe
    // here because Function.prototype is a root object
    return false;
  }

  return true;
}

function isPlainObject(object) {
  return _typeof(object) === 'object' && object && object.constructor === Object;
}

var safeNativeProperties = {
  length: true,
  name: true
};
var safeNativeMethods = {
  toString: true,
  valueOf: true,
  toLocaleString: true
};







/***/ }),

/***/ "../node_modules/mathjs/es/utils/emitter.js":
/*!**************************************************!*\
  !*** ../node_modules/mathjs/es/utils/emitter.js ***!
  \**************************************************/
/*! exports provided: mixin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return mixin; });
/* harmony import */ var tiny_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-emitter */ "../node_modules/tiny-emitter/index.js");
/* harmony import */ var tiny_emitter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tiny_emitter__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Extend given object with emitter functions `on`, `off`, `once`, `emit`
 * @param {Object} obj
 * @return {Object} obj
 */

function mixin(obj) {
  // create event emitter
  var emitter = new tiny_emitter__WEBPACK_IMPORTED_MODULE_0___default.a(); // bind methods to obj (we don't want to expose the emitter.e Array...)

  obj.on = emitter.on.bind(emitter);
  obj.off = emitter.off.bind(emitter);
  obj.once = emitter.once.bind(emitter);
  obj.emit = emitter.emit.bind(emitter);
  return obj;
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/factory.js":
/*!**************************************************!*\
  !*** ../node_modules/mathjs/es/utils/factory.js ***!
  \**************************************************/
/*! exports provided: factory, sortFactories, create, isFactory, assertDependencies, isOptionalDependency, stripOptionalNotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "factory", function() { return factory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortFactories", function() { return sortFactories; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFactory", function() { return isFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assertDependencies", function() { return assertDependencies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOptionalDependency", function() { return isOptionalDependency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripOptionalNotation", function() { return stripOptionalNotation; });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "../node_modules/mathjs/es/utils/array.js");
/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object */ "../node_modules/mathjs/es/utils/object.js");


/**
 * Create a factory function, which can be used to inject dependencies.
 *
 * The created functions are memoized, a consecutive call of the factory
 * with the exact same inputs will return the same function instance.
 * The memoized cache is exposed on `factory.cache` and can be cleared
 * if needed.
 *
 * Example:
 *
 *     const name = 'log'
 *     const dependencies = ['config', 'typed', 'divideScalar', 'Complex']
 *
 *     export const createLog = factory(name, dependencies, ({ typed, config, divideScalar, Complex }) => {
 *       // ... create the function log here and return it
 *     }
 *
 * @param {string} name           Name of the function to be created
 * @param {string[]} dependencies The names of all required dependencies
 * @param {function} create       Callback function called with an object with all dependencies
 * @param {Object} [meta]         Optional object with meta information that will be attached
 *                                to the created factory function as property `meta`.
 * @returns {function}
 */

function factory(name, dependencies, create, meta) {
  function assertAndCreate(scope) {
    // we only pass the requested dependencies to the factory function
    // to prevent functions to rely on dependencies that are not explicitly
    // requested.
    var deps = Object(_object__WEBPACK_IMPORTED_MODULE_1__["pickShallow"])(scope, dependencies.map(stripOptionalNotation));
    assertDependencies(name, dependencies, scope);
    return create(deps);
  }

  assertAndCreate.isFactory = true;
  assertAndCreate.fn = name;
  assertAndCreate.dependencies = dependencies.slice().sort();

  if (meta) {
    assertAndCreate.meta = meta;
  }

  return assertAndCreate;
}
/**
 * Sort all factories such that when loading in order, the dependencies are resolved.
 *
 * @param {Array} factories
 * @returns {Array} Returns a new array with the sorted factories.
 */

function sortFactories(factories) {
  var factoriesByName = {};
  factories.forEach(function (factory) {
    factoriesByName[factory.fn] = factory;
  });

  function containsDependency(factory, dependency) {
    // TODO: detect circular references
    if (isFactory(factory)) {
      if (Object(_array__WEBPACK_IMPORTED_MODULE_0__["contains"])(factory.dependencies, dependency.fn || dependency.name)) {
        return true;
      }

      if (factory.dependencies.some(function (d) {
        return containsDependency(factoriesByName[d], dependency);
      })) {
        return true;
      }
    }

    return false;
  }

  var sorted = [];

  function addFactory(factory) {
    var index = 0;

    while (index < sorted.length && !containsDependency(sorted[index], factory)) {
      index++;
    }

    sorted.splice(index, 0, factory);
  } // sort regular factory functions


  factories.filter(isFactory).forEach(addFactory); // sort legacy factory functions AFTER the regular factory functions

  factories.filter(function (factory) {
    return !isFactory(factory);
  }).forEach(addFactory);
  return sorted;
} // TODO: comment or cleanup if unused in the end

function create(factories) {
  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  sortFactories(factories).forEach(function (factory) {
    return factory(scope);
  });
  return scope;
}
/**
 * Test whether an object is a factory. This is the case when it has
 * properties name, dependencies, and a function create.
 * @param {*} obj
 * @returns {boolean}
 */

function isFactory(obj) {
  return typeof obj === 'function' && typeof obj.fn === 'string' && Array.isArray(obj.dependencies);
}
/**
 * Assert that all dependencies of a list with dependencies are available in the provided scope.
 *
 * Will throw an exception when there are dependencies missing.
 *
 * @param {string} name   Name for the function to be created. Used to generate a useful error message
 * @param {string[]} dependencies
 * @param {Object} scope
 */

function assertDependencies(name, dependencies, scope) {
  var allDefined = dependencies.filter(function (dependency) {
    return !isOptionalDependency(dependency);
  }) // filter optionals
  .every(function (dependency) {
    return scope[dependency] !== undefined;
  });

  if (!allDefined) {
    var missingDependencies = dependencies.filter(function (dependency) {
      return scope[dependency] === undefined;
    }); // TODO: create a custom error class for this, a MathjsError or something like that

    throw new Error("Cannot create function \"".concat(name, "\", ") + "some dependencies are missing: ".concat(missingDependencies.map(function (d) {
      return "\"".concat(d, "\"");
    }).join(', '), "."));
  }
}
function isOptionalDependency(dependency) {
  return dependency && dependency[0] === '?';
}
function stripOptionalNotation(dependency) {
  return dependency && dependency[0] === '?' ? dependency.slice(1) : dependency;
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/function.js":
/*!***************************************************!*\
  !*** ../node_modules/mathjs/es/utils/function.js ***!
  \***************************************************/
/*! exports provided: memoize, memoizeCompare, maxArgumentCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "memoize", function() { return memoize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "memoizeCompare", function() { return memoizeCompare; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxArgumentCount", function() { return maxArgumentCount; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// function utils

/**
 * Memoize a given function by caching the computed result.
 * The cache of a memoized function can be cleared by deleting the `cache`
 * property of the function.
 *
 * @param {function} fn                     The function to be memoized.
 *                                          Must be a pure function.
 * @param {function(args: Array)} [hasher]  A custom hash builder.
 *                                          Is JSON.stringify by default.
 * @return {function}                       Returns the memoized function
 */
function memoize(fn, hasher) {
  return function memoize() {
    if (_typeof(memoize.cache) !== 'object') {
      memoize.cache = {};
    }

    var args = [];

    for (var i = 0; i < arguments.length; i++) {
      args[i] = arguments[i];
    }

    var hash = hasher ? hasher(args) : JSON.stringify(args);

    if (!(hash in memoize.cache)) {
      memoize.cache[hash] = fn.apply(fn, args);
    }

    return memoize.cache[hash];
  };
}
/**
 * Memoize a given function by caching all results and the arguments,
 * and comparing against the arguments of previous results before
 * executing again.
 * This is less performant than `memoize` which calculates a hash,
 * which is very fast to compare. Use `memoizeCompare` only when it is
 * not possible to create a unique serializable hash from the function
 * arguments.
 * The isEqual function must compare two sets of arguments
 * and return true when equal (can be a deep equality check for example).
 * @param {function} fn
 * @param {function(a: *, b: *) : boolean} isEqual
 * @returns {function}
 */

function memoizeCompare(fn, isEqual) {
  var memoize = function memoize() {
    var args = [];

    for (var i = 0; i < arguments.length; i++) {
      args[i] = arguments[i];
    }

    for (var c = 0; c < memoize.cache.length; c++) {
      var cached = memoize.cache[c];

      if (isEqual(args, cached.args)) {
        // TODO: move this cache entry to the top so recently used entries move up?
        return cached.res;
      }
    }

    var res = fn.apply(fn, args);
    memoize.cache.unshift({
      args: args,
      res: res
    });
    return res;
  };

  memoize.cache = [];
  return memoize;
}
/**
 * Find the maximum number of arguments expected by a typed function.
 * @param {function} fn   A typed function
 * @return {number} Returns the maximum number of expected arguments.
 *                  Returns -1 when no signatures where found on the function.
 */

function maxArgumentCount(fn) {
  return Object.keys(fn.signatures || {}).reduce(function (args, signature) {
    var count = (signature.match(/,/g) || []).length + 1;
    return Math.max(args, count);
  }, -1);
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/is.js":
/*!*********************************************!*\
  !*** ../node_modules/mathjs/es/utils/is.js ***!
  \*********************************************/
/*! exports provided: isNumber, isBigNumber, isComplex, isFraction, isUnit, isString, isArray, isMatrix, isCollection, isDenseMatrix, isSparseMatrix, isRange, isIndex, isBoolean, isResultSet, isHelp, isFunction, isDate, isRegExp, isObject, isNull, isUndefined, isAccessorNode, isArrayNode, isAssignmentNode, isBlockNode, isConditionalNode, isConstantNode, isFunctionAssignmentNode, isFunctionNode, isIndexNode, isNode, isObjectNode, isOperatorNode, isParenthesisNode, isRangeNode, isSymbolNode, isChain, typeOf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return isNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBigNumber", function() { return isBigNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isComplex", function() { return isComplex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFraction", function() { return isFraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUnit", function() { return isUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMatrix", function() { return isMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCollection", function() { return isCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDenseMatrix", function() { return isDenseMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSparseMatrix", function() { return isSparseMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRange", function() { return isRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIndex", function() { return isIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return isBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isResultSet", function() { return isResultSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHelp", function() { return isHelp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return isDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return isRegExp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return isNull; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return isUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAccessorNode", function() { return isAccessorNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayNode", function() { return isArrayNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAssignmentNode", function() { return isAssignmentNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBlockNode", function() { return isBlockNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConditionalNode", function() { return isConditionalNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConstantNode", function() { return isConstantNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunctionAssignmentNode", function() { return isFunctionAssignmentNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunctionNode", function() { return isFunctionNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIndexNode", function() { return isIndexNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNode", function() { return isNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObjectNode", function() { return isObjectNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOperatorNode", function() { return isOperatorNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isParenthesisNode", function() { return isParenthesisNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRangeNode", function() { return isRangeNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSymbolNode", function() { return isSymbolNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isChain", function() { return isChain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeOf", function() { return typeOf; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// type checks for all known types
//
// note that:
//
// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.
//   instanceof cannot be used because that would not allow to pass data from
//   one instance of math.js to another since each has it's own instance of Unit.
// - check the `isUnit` property via the constructor, so there will be no
//   matches for "fake" instances like plain objects with a property `isUnit`.
//   That is important for security reasons.
// - It must not be possible to override the type checks used internally,
//   for security reasons, so these functions are not exposed in the expression
//   parser.
function isNumber(x) {
  return typeof x === 'number';
}
function isBigNumber(x) {
  return x && x.constructor.prototype.isBigNumber === true || false;
}
function isComplex(x) {
  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isComplex === true || false;
}
function isFraction(x) {
  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isFraction === true || false;
}
function isUnit(x) {
  return x && x.constructor.prototype.isUnit === true || false;
}
function isString(x) {
  return typeof x === 'string';
}
var isArray = Array.isArray;
function isMatrix(x) {
  return x && x.constructor.prototype.isMatrix === true || false;
}
/**
 * Test whether a value is a collection: an Array or Matrix
 * @param {*} x
 * @returns {boolean} isCollection
 */

function isCollection(x) {
  return Array.isArray(x) || isMatrix(x);
}
function isDenseMatrix(x) {
  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;
}
function isSparseMatrix(x) {
  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;
}
function isRange(x) {
  return x && x.constructor.prototype.isRange === true || false;
}
function isIndex(x) {
  return x && x.constructor.prototype.isIndex === true || false;
}
function isBoolean(x) {
  return typeof x === 'boolean';
}
function isResultSet(x) {
  return x && x.constructor.prototype.isResultSet === true || false;
}
function isHelp(x) {
  return x && x.constructor.prototype.isHelp === true || false;
}
function isFunction(x) {
  return typeof x === 'function';
}
function isDate(x) {
  return x instanceof Date;
}
function isRegExp(x) {
  return x instanceof RegExp;
}
function isObject(x) {
  return !!(x && _typeof(x) === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));
}
function isNull(x) {
  return x === null;
}
function isUndefined(x) {
  return x === undefined;
}
function isAccessorNode(x) {
  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;
}
function isArrayNode(x) {
  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;
}
function isAssignmentNode(x) {
  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;
}
function isBlockNode(x) {
  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;
}
function isConditionalNode(x) {
  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;
}
function isConstantNode(x) {
  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;
}
function isFunctionAssignmentNode(x) {
  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;
}
function isFunctionNode(x) {
  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;
}
function isIndexNode(x) {
  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;
}
function isNode(x) {
  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;
}
function isObjectNode(x) {
  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;
}
function isOperatorNode(x) {
  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;
}
function isParenthesisNode(x) {
  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;
}
function isRangeNode(x) {
  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;
}
function isSymbolNode(x) {
  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;
}
function isChain(x) {
  return x && x.constructor.prototype.isChain === true || false;
}
function typeOf(x) {
  var t = _typeof(x);

  if (t === 'object') {
    // JavaScript types
    if (x === null) return 'null';
    if (Array.isArray(x)) return 'Array';
    if (x instanceof Date) return 'Date';
    if (x instanceof RegExp) return 'RegExp'; // math.js types

    if (isBigNumber(x)) return 'BigNumber';
    if (isComplex(x)) return 'Complex';
    if (isFraction(x)) return 'Fraction';
    if (isMatrix(x)) return 'Matrix';
    if (isUnit(x)) return 'Unit';
    if (isIndex(x)) return 'Index';
    if (isRange(x)) return 'Range';
    if (isResultSet(x)) return 'ResultSet';
    if (isNode(x)) return x.type;
    if (isChain(x)) return 'Chain';
    if (isHelp(x)) return 'Help';
    return 'Object';
  }

  if (t === 'function') return 'Function';
  return t; // can be 'string', 'number', 'boolean', ...
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/latex.js":
/*!************************************************!*\
  !*** ../node_modules/mathjs/es/utils/latex.js ***!
  \************************************************/
/*! exports provided: latexSymbols, latexOperators, latexFunctions, defaultTemplate, escapeLatex, toSymbol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "latexSymbols", function() { return latexSymbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "latexOperators", function() { return latexOperators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "latexFunctions", function() { return latexFunctions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTemplate", function() { return defaultTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escapeLatex", function() { return escapeLatex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSymbol", function() { return toSymbol; });
/* harmony import */ var escape_latex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! escape-latex */ "../node_modules/escape-latex/dist/index.js");
/* harmony import */ var escape_latex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(escape_latex__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object */ "../node_modules/mathjs/es/utils/object.js");
/* eslint no-template-curly-in-string: "off" */


var latexSymbols = {
  // GREEK LETTERS
  Alpha: 'A',
  alpha: '\\alpha',
  Beta: 'B',
  beta: '\\beta',
  Gamma: '\\Gamma',
  gamma: '\\gamma',
  Delta: '\\Delta',
  delta: '\\delta',
  Epsilon: 'E',
  epsilon: '\\epsilon',
  varepsilon: '\\varepsilon',
  Zeta: 'Z',
  zeta: '\\zeta',
  Eta: 'H',
  eta: '\\eta',
  Theta: '\\Theta',
  theta: '\\theta',
  vartheta: '\\vartheta',
  Iota: 'I',
  iota: '\\iota',
  Kappa: 'K',
  kappa: '\\kappa',
  varkappa: '\\varkappa',
  Lambda: '\\Lambda',
  lambda: '\\lambda',
  Mu: 'M',
  mu: '\\mu',
  Nu: 'N',
  nu: '\\nu',
  Xi: '\\Xi',
  xi: '\\xi',
  Omicron: 'O',
  omicron: 'o',
  Pi: '\\Pi',
  pi: '\\pi',
  varpi: '\\varpi',
  Rho: 'P',
  rho: '\\rho',
  varrho: '\\varrho',
  Sigma: '\\Sigma',
  sigma: '\\sigma',
  varsigma: '\\varsigma',
  Tau: 'T',
  tau: '\\tau',
  Upsilon: "\\Upsilon",
  upsilon: "\\upsilon",
  Phi: '\\Phi',
  phi: '\\phi',
  varphi: '\\varphi',
  Chi: 'X',
  chi: '\\chi',
  Psi: '\\Psi',
  psi: '\\psi',
  Omega: '\\Omega',
  omega: '\\omega',
  // logic
  "true": '\\mathrm{True}',
  "false": '\\mathrm{False}',
  // other
  i: 'i',
  // TODO use \i ??
  inf: '\\infty',
  Inf: '\\infty',
  infinity: '\\infty',
  Infinity: '\\infty',
  oo: '\\infty',
  lim: '\\lim',
  undefined: '\\mathbf{?}'
};
var latexOperators = {
  transpose: '^\\top',
  ctranspose: '^H',
  factorial: '!',
  pow: '^',
  dotPow: '.^\\wedge',
  // TODO find ideal solution
  unaryPlus: '+',
  unaryMinus: '-',
  bitNot: '\\~',
  // TODO find ideal solution
  not: '\\neg',
  multiply: '\\cdot',
  divide: '\\frac',
  // TODO how to handle that properly?
  dotMultiply: '.\\cdot',
  // TODO find ideal solution
  dotDivide: '.:',
  // TODO find ideal solution
  mod: '\\mod',
  add: '+',
  subtract: '-',
  to: '\\rightarrow',
  leftShift: '<<',
  rightArithShift: '>>',
  rightLogShift: '>>>',
  equal: '=',
  unequal: '\\neq',
  smaller: '<',
  larger: '>',
  smallerEq: '\\leq',
  largerEq: '\\geq',
  bitAnd: '\\&',
  bitXor: "\\underline{|}",
  bitOr: '|',
  and: '\\wedge',
  xor: '\\veebar',
  or: '\\vee'
};
var latexFunctions = {
  // arithmetic
  abs: {
    1: '\\left|${args[0]}\\right|'
  },
  add: {
    2: "\\left(${args[0]}".concat(latexOperators.add, "${args[1]}\\right)")
  },
  cbrt: {
    1: '\\sqrt[3]{${args[0]}}'
  },
  ceil: {
    1: '\\left\\lceil${args[0]}\\right\\rceil'
  },
  cube: {
    1: '\\left(${args[0]}\\right)^3'
  },
  divide: {
    2: '\\frac{${args[0]}}{${args[1]}}'
  },
  dotDivide: {
    2: "\\left(${args[0]}".concat(latexOperators.dotDivide, "${args[1]}\\right)")
  },
  dotMultiply: {
    2: "\\left(${args[0]}".concat(latexOperators.dotMultiply, "${args[1]}\\right)")
  },
  dotPow: {
    2: "\\left(${args[0]}".concat(latexOperators.dotPow, "${args[1]}\\right)")
  },
  exp: {
    1: '\\exp\\left(${args[0]}\\right)'
  },
  expm1: "\\left(e".concat(latexOperators.pow, "{${args[0]}}-1\\right)"),
  fix: {
    1: '\\mathrm{${name}}\\left(${args[0]}\\right)'
  },
  floor: {
    1: '\\left\\lfloor${args[0]}\\right\\rfloor'
  },
  gcd: '\\gcd\\left(${args}\\right)',
  hypot: '\\hypot\\left(${args}\\right)',
  log: {
    1: '\\ln\\left(${args[0]}\\right)',
    2: '\\log_{${args[1]}}\\left(${args[0]}\\right)'
  },
  log10: {
    1: '\\log_{10}\\left(${args[0]}\\right)'
  },
  log1p: {
    1: '\\ln\\left(${args[0]}+1\\right)',
    2: '\\log_{${args[1]}}\\left(${args[0]}+1\\right)'
  },
  log2: '\\log_{2}\\left(${args[0]}\\right)',
  mod: {
    2: "\\left(${args[0]}".concat(latexOperators.mod, "${args[1]}\\right)")
  },
  multiply: {
    2: "\\left(${args[0]}".concat(latexOperators.multiply, "${args[1]}\\right)")
  },
  norm: {
    1: '\\left\\|${args[0]}\\right\\|',
    2: undefined // use default template

  },
  nthRoot: {
    2: '\\sqrt[${args[1]}]{${args[0]}}'
  },
  nthRoots: {
    2: '\\{y : $y^{args[1]} = {${args[0]}}\\}'
  },
  pow: {
    2: "\\left(${args[0]}\\right)".concat(latexOperators.pow, "{${args[1]}}")
  },
  round: {
    1: '\\left\\lfloor${args[0]}\\right\\rceil',
    2: undefined // use default template

  },
  sign: {
    1: '\\mathrm{${name}}\\left(${args[0]}\\right)'
  },
  sqrt: {
    1: '\\sqrt{${args[0]}}'
  },
  square: {
    1: '\\left(${args[0]}\\right)^2'
  },
  subtract: {
    2: "\\left(${args[0]}".concat(latexOperators.subtract, "${args[1]}\\right)")
  },
  unaryMinus: {
    1: "".concat(latexOperators.unaryMinus, "\\left(${args[0]}\\right)")
  },
  unaryPlus: {
    1: "".concat(latexOperators.unaryPlus, "\\left(${args[0]}\\right)")
  },
  // bitwise
  bitAnd: {
    2: "\\left(${args[0]}".concat(latexOperators.bitAnd, "${args[1]}\\right)")
  },
  bitNot: {
    1: latexOperators.bitNot + '\\left(${args[0]}\\right)'
  },
  bitOr: {
    2: "\\left(${args[0]}".concat(latexOperators.bitOr, "${args[1]}\\right)")
  },
  bitXor: {
    2: "\\left(${args[0]}".concat(latexOperators.bitXor, "${args[1]}\\right)")
  },
  leftShift: {
    2: "\\left(${args[0]}".concat(latexOperators.leftShift, "${args[1]}\\right)")
  },
  rightArithShift: {
    2: "\\left(${args[0]}".concat(latexOperators.rightArithShift, "${args[1]}\\right)")
  },
  rightLogShift: {
    2: "\\left(${args[0]}".concat(latexOperators.rightLogShift, "${args[1]}\\right)")
  },
  // combinatorics
  bellNumbers: {
    1: '\\mathrm{B}_{${args[0]}}'
  },
  catalan: {
    1: '\\mathrm{C}_{${args[0]}}'
  },
  stirlingS2: {
    2: '\\mathrm{S}\\left(${args}\\right)'
  },
  // complex
  arg: {
    1: '\\arg\\left(${args[0]}\\right)'
  },
  conj: {
    1: '\\left(${args[0]}\\right)^*'
  },
  im: {
    1: '\\Im\\left\\lbrace${args[0]}\\right\\rbrace'
  },
  re: {
    1: '\\Re\\left\\lbrace${args[0]}\\right\\rbrace'
  },
  // logical
  and: {
    2: "\\left(${args[0]}".concat(latexOperators.and, "${args[1]}\\right)")
  },
  not: {
    1: latexOperators.not + '\\left(${args[0]}\\right)'
  },
  or: {
    2: "\\left(${args[0]}".concat(latexOperators.or, "${args[1]}\\right)")
  },
  xor: {
    2: "\\left(${args[0]}".concat(latexOperators.xor, "${args[1]}\\right)")
  },
  // matrix
  cross: {
    2: '\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)'
  },
  ctranspose: {
    1: "\\left(${args[0]}\\right)".concat(latexOperators.ctranspose)
  },
  det: {
    1: '\\det\\left(${args[0]}\\right)'
  },
  dot: {
    2: '\\left(${args[0]}\\cdot${args[1]}\\right)'
  },
  expm: {
    1: '\\exp\\left(${args[0]}\\right)'
  },
  inv: {
    1: '\\left(${args[0]}\\right)^{-1}'
  },
  sqrtm: {
    1: "{${args[0]}}".concat(latexOperators.pow, "{\\frac{1}{2}}")
  },
  trace: {
    1: '\\mathrm{tr}\\left(${args[0]}\\right)'
  },
  transpose: {
    1: "\\left(${args[0]}\\right)".concat(latexOperators.transpose)
  },
  // probability
  combinations: {
    2: '\\binom{${args[0]}}{${args[1]}}'
  },
  combinationsWithRep: {
    2: '\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)'
  },
  factorial: {
    1: "\\left(${args[0]}\\right)".concat(latexOperators.factorial)
  },
  gamma: {
    1: '\\Gamma\\left(${args[0]}\\right)'
  },
  // relational
  equal: {
    2: "\\left(${args[0]}".concat(latexOperators.equal, "${args[1]}\\right)")
  },
  larger: {
    2: "\\left(${args[0]}".concat(latexOperators.larger, "${args[1]}\\right)")
  },
  largerEq: {
    2: "\\left(${args[0]}".concat(latexOperators.largerEq, "${args[1]}\\right)")
  },
  smaller: {
    2: "\\left(${args[0]}".concat(latexOperators.smaller, "${args[1]}\\right)")
  },
  smallerEq: {
    2: "\\left(${args[0]}".concat(latexOperators.smallerEq, "${args[1]}\\right)")
  },
  unequal: {
    2: "\\left(${args[0]}".concat(latexOperators.unequal, "${args[1]}\\right)")
  },
  // special
  erf: {
    1: 'erf\\left(${args[0]}\\right)'
  },
  // statistics
  max: '\\max\\left(${args}\\right)',
  min: '\\min\\left(${args}\\right)',
  variance: '\\mathrm{Var}\\left(${args}\\right)',
  // trigonometry
  acos: {
    1: '\\cos^{-1}\\left(${args[0]}\\right)'
  },
  acosh: {
    1: '\\cosh^{-1}\\left(${args[0]}\\right)'
  },
  acot: {
    1: '\\cot^{-1}\\left(${args[0]}\\right)'
  },
  acoth: {
    1: '\\coth^{-1}\\left(${args[0]}\\right)'
  },
  acsc: {
    1: '\\csc^{-1}\\left(${args[0]}\\right)'
  },
  acsch: {
    1: '\\mathrm{csch}^{-1}\\left(${args[0]}\\right)'
  },
  asec: {
    1: '\\sec^{-1}\\left(${args[0]}\\right)'
  },
  asech: {
    1: '\\mathrm{sech}^{-1}\\left(${args[0]}\\right)'
  },
  asin: {
    1: '\\sin^{-1}\\left(${args[0]}\\right)'
  },
  asinh: {
    1: '\\sinh^{-1}\\left(${args[0]}\\right)'
  },
  atan: {
    1: '\\tan^{-1}\\left(${args[0]}\\right)'
  },
  atan2: {
    2: '\\mathrm{atan2}\\left(${args}\\right)'
  },
  atanh: {
    1: '\\tanh^{-1}\\left(${args[0]}\\right)'
  },
  cos: {
    1: '\\cos\\left(${args[0]}\\right)'
  },
  cosh: {
    1: '\\cosh\\left(${args[0]}\\right)'
  },
  cot: {
    1: '\\cot\\left(${args[0]}\\right)'
  },
  coth: {
    1: '\\coth\\left(${args[0]}\\right)'
  },
  csc: {
    1: '\\csc\\left(${args[0]}\\right)'
  },
  csch: {
    1: '\\mathrm{csch}\\left(${args[0]}\\right)'
  },
  sec: {
    1: '\\sec\\left(${args[0]}\\right)'
  },
  sech: {
    1: '\\mathrm{sech}\\left(${args[0]}\\right)'
  },
  sin: {
    1: '\\sin\\left(${args[0]}\\right)'
  },
  sinh: {
    1: '\\sinh\\left(${args[0]}\\right)'
  },
  tan: {
    1: '\\tan\\left(${args[0]}\\right)'
  },
  tanh: {
    1: '\\tanh\\left(${args[0]}\\right)'
  },
  // unit
  to: {
    2: "\\left(${args[0]}".concat(latexOperators.to, "${args[1]}\\right)")
  },
  // utils
  numeric: function numeric(node, options) {
    // Not sure if this is strictly right but should work correctly for the vast majority of use cases.
    return node.args[0].toTex();
  },
  // type
  number: {
    0: '0',
    1: '\\left(${args[0]}\\right)',
    2: '\\left(\\left(${args[0]}\\right)${args[1]}\\right)'
  },
  string: {
    0: '\\mathtt{""}',
    1: '\\mathrm{string}\\left(${args[0]}\\right)'
  },
  bignumber: {
    0: '0',
    1: '\\left(${args[0]}\\right)'
  },
  complex: {
    0: '0',
    1: '\\left(${args[0]}\\right)',
    2: "\\left(\\left(${args[0]}\\right)+".concat(latexSymbols.i, "\\cdot\\left(${args[1]}\\right)\\right)")
  },
  matrix: {
    0: '\\begin{bmatrix}\\end{bmatrix}',
    1: '\\left(${args[0]}\\right)',
    2: '\\left(${args[0]}\\right)'
  },
  sparse: {
    0: '\\begin{bsparse}\\end{bsparse}',
    1: '\\left(${args[0]}\\right)'
  },
  unit: {
    1: '\\left(${args[0]}\\right)',
    2: '\\left(\\left(${args[0]}\\right)${args[1]}\\right)'
  }
};
var defaultTemplate = '\\mathrm{${name}}\\left(${args}\\right)';
var latexUnits = {
  deg: '^\\circ'
};
function escapeLatex(string) {
  return escape_latex__WEBPACK_IMPORTED_MODULE_0___default()(string, {
    preserveFormatting: true
  });
} // @param {string} name
// @param {boolean} isUnit

function toSymbol(name, isUnit) {
  isUnit = typeof isUnit === 'undefined' ? false : isUnit;

  if (isUnit) {
    if (Object(_object__WEBPACK_IMPORTED_MODULE_1__["hasOwnProperty"])(latexUnits, name)) {
      return latexUnits[name];
    }

    return '\\mathrm{' + escapeLatex(name) + '}';
  }

  if (Object(_object__WEBPACK_IMPORTED_MODULE_1__["hasOwnProperty"])(latexSymbols, name)) {
    return latexSymbols[name];
  }

  return escapeLatex(name);
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/noop.js":
/*!***********************************************!*\
  !*** ../node_modules/mathjs/es/utils/noop.js ***!
  \***********************************************/
/*! exports provided: noBignumber, noFraction, noMatrix, noIndex, noSubset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noBignumber", function() { return noBignumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noFraction", function() { return noFraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noMatrix", function() { return noMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noIndex", function() { return noIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noSubset", function() { return noSubset; });
function noBignumber() {
  throw new Error('No "bignumber" implementation available');
}
function noFraction() {
  throw new Error('No "fraction" implementation available');
}
function noMatrix() {
  throw new Error('No "matrix" implementation available');
}
function noIndex() {
  throw new Error('No "index" implementation available');
}
function noSubset() {
  throw new Error('No "matrix" implementation available');
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/number.js":
/*!*************************************************!*\
  !*** ../node_modules/mathjs/es/utils/number.js ***!
  \*************************************************/
/*! exports provided: isInteger, sign, log2, log10, log1p, cbrt, expm1, format, splitNumber, toEngineering, toFixed, toExponential, toPrecision, roundDigits, digits, DBL_EPSILON, nearlyEqual, acosh, asinh, atanh, cosh, sinh, tanh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInteger", function() { return isInteger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return sign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log2", function() { return log2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log10", function() { return log10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log1p", function() { return log1p; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cbrt", function() { return cbrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expm1", function() { return expm1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitNumber", function() { return splitNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toEngineering", function() { return toEngineering; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toFixed", function() { return toFixed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toExponential", function() { return toExponential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toPrecision", function() { return toPrecision; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "roundDigits", function() { return roundDigits; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "digits", function() { return digits; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DBL_EPSILON", function() { return DBL_EPSILON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nearlyEqual", function() { return nearlyEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acosh", function() { return acosh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asinh", function() { return asinh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atanh", function() { return atanh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cosh", function() { return cosh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinh", function() { return sinh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanh", function() { return tanh; });
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ "../node_modules/mathjs/es/utils/is.js");

/**
 * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue
 */

/**
 * Check if a number is integer
 * @param {number | boolean} value
 * @return {boolean} isInteger
 */

function isInteger(value) {
  if (typeof value === 'boolean') {
    return true;
  }

  return isFinite(value) ? value === Math.round(value) : false; // Note: we use ==, not ===, as we can have Booleans as well
}
/**
 * Calculate the sign of a number
 * @param {number} x
 * @returns {number}
 */

var sign = /* #__PURE__ */Math.sign || function (x) {
  if (x > 0) {
    return 1;
  } else if (x < 0) {
    return -1;
  } else {
    return 0;
  }
};
/**
 * Calculate the base-2 logarithm of a number
 * @param {number} x
 * @returns {number}
 */

var log2 = /* #__PURE__ */Math.log2 || function log2(x) {
  return Math.log(x) / Math.LN2;
};
/**
 * Calculate the base-10 logarithm of a number
 * @param {number} x
 * @returns {number}
 */

var log10 = /* #__PURE__ */Math.log10 || function log10(x) {
  return Math.log(x) / Math.LN10;
};
/**
 * Calculate the natural logarithm of a number + 1
 * @param {number} x
 * @returns {number}
 */

var log1p = /* #__PURE__ */Math.log1p || function (x) {
  return Math.log(x + 1);
};
/**
 * Calculate cubic root for a number
 *
 * Code from es6-shim.js:
 *   https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1564-L1577
 *
 * @param {number} x
 * @returns {number} Returns the cubic root of x
 */

var cbrt = /* #__PURE__ */Math.cbrt || function cbrt(x) {
  if (x === 0) {
    return x;
  }

  var negate = x < 0;
  var result;

  if (negate) {
    x = -x;
  }

  if (isFinite(x)) {
    result = Math.exp(Math.log(x) / 3); // from https://en.wikipedia.org/wiki/Cube_root#Numerical_methods

    result = (x / (result * result) + 2 * result) / 3;
  } else {
    result = x;
  }

  return negate ? -result : result;
};
/**
 * Calculates exponentiation minus 1
 * @param {number} x
 * @return {number} res
 */

var expm1 = /* #__PURE__ */Math.expm1 || function expm1(x) {
  return x >= 2e-4 || x <= -2e-4 ? Math.exp(x) - 1 : x + x * x / 2 + x * x * x / 6;
};
/**
 * Convert a number to a formatted string representation.
 *
 * Syntax:
 *
 *    format(value)
 *    format(value, options)
 *    format(value, precision)
 *    format(value, fn)
 *
 * Where:
 *
 *    {number} value   The value to be formatted
 *    {Object} options An object with formatting options. Available options:
 *                     {string} notation
 *                         Number notation. Choose from:
 *                         'fixed'          Always use regular number notation.
 *                                          For example '123.40' and '14000000'
 *                         'exponential'    Always use exponential notation.
 *                                          For example '1.234e+2' and '1.4e+7'
 *                         'engineering'    Always use engineering notation.
 *                                          For example '123.4e+0' and '14.0e+6'
 *                         'auto' (default) Regular number notation for numbers
 *                                          having an absolute value between
 *                                          `lowerExp` and `upperExp` bounds, and
 *                                          uses exponential notation elsewhere.
 *                                          Lower bound is included, upper bound
 *                                          is excluded.
 *                                          For example '123.4' and '1.4e7'.
 *                     {number} precision   A number between 0 and 16 to round
 *                                          the digits of the number.
 *                                          In case of notations 'exponential',
 *                                          'engineering', and 'auto',
 *                                          `precision` defines the total
 *                                          number of significant digits returned.
 *                                          In case of notation 'fixed',
 *                                          `precision` defines the number of
 *                                          significant digits after the decimal
 *                                          point.
 *                                          `precision` is undefined by default,
 *                                          not rounding any digits.
 *                     {number} lowerExp    Exponent determining the lower boundary
 *                                          for formatting a value with an exponent
 *                                          when `notation='auto`.
 *                                          Default value is `-3`.
 *                     {number} upperExp    Exponent determining the upper boundary
 *                                          for formatting a value with an exponent
 *                                          when `notation='auto`.
 *                                          Default value is `5`.
 *    {Function} fn    A custom formatting function. Can be used to override the
 *                     built-in notations. Function `fn` is called with `value` as
 *                     parameter and must return a string. Is useful for example to
 *                     format all values inside a matrix in a particular way.
 *
 * Examples:
 *
 *    format(6.4)                                        // '6.4'
 *    format(1240000)                                    // '1.24e6'
 *    format(1/3)                                        // '0.3333333333333333'
 *    format(1/3, 3)                                     // '0.333'
 *    format(21385, 2)                                   // '21000'
 *    format(12.071, {notation: 'fixed'})                // '12'
 *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'
 *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'
 *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'
 *
 * @param {number} value
 * @param {Object | Function | number} [options]
 * @return {string} str The formatted value
 */

function format(value, options) {
  if (typeof options === 'function') {
    // handle format(value, fn)
    return options(value);
  } // handle special cases


  if (value === Infinity) {
    return 'Infinity';
  } else if (value === -Infinity) {
    return '-Infinity';
  } else if (isNaN(value)) {
    return 'NaN';
  } // default values for options


  var notation = 'auto';
  var precision;

  if (options) {
    // determine notation from options
    if (options.notation) {
      notation = options.notation;
    } // determine precision from options


    if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(options)) {
      precision = options;
    } else if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(options.precision)) {
      precision = options.precision;
    }
  } // handle the various notations


  switch (notation) {
    case 'fixed':
      return toFixed(value, precision);

    case 'exponential':
      return toExponential(value, precision);

    case 'engineering':
      return toEngineering(value, precision);

    case 'auto':
      // remove trailing zeros after the decimal point
      return toPrecision(value, precision, options && options).replace(/((\.\d*?)(0+))($|e)/, function () {
        var digits = arguments[2];
        var e = arguments[4];
        return digits !== '.' ? digits + e : e;
      });

    default:
      throw new Error('Unknown notation "' + notation + '". ' + 'Choose "auto", "exponential", or "fixed".');
  }
}
/**
 * Split a number into sign, coefficients, and exponent
 * @param {number | string} value
 * @return {SplitValue}
 *              Returns an object containing sign, coefficients, and exponent
 */

function splitNumber(value) {
  // parse the input value
  var match = String(value).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);

  if (!match) {
    throw new SyntaxError('Invalid number ' + value);
  }

  var sign = match[1];
  var digits = match[2];
  var exponent = parseFloat(match[4] || '0');
  var dot = digits.indexOf('.');
  exponent += dot !== -1 ? dot - 1 : digits.length - 1;
  var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)
  .replace(/^0*/, function (zeros) {
    // remove leading zeros, add their count to the exponent
    exponent -= zeros.length;
    return '';
  }).replace(/0*$/, '') // remove trailing zeros
  .split('').map(function (d) {
    return parseInt(d);
  });

  if (coefficients.length === 0) {
    coefficients.push(0);
    exponent++;
  }

  return {
    sign: sign,
    coefficients: coefficients,
    exponent: exponent
  };
}
/**
 * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'
 * @param {number | string} value
 * @param {number} [precision]        Optional number of significant figures to return.
 */

function toEngineering(value, precision) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  }

  var split = splitNumber(value);
  var rounded = roundDigits(split, precision);
  var e = rounded.exponent;
  var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent

  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;

  if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(precision)) {
    // add zeroes to give correct sig figs
    while (precision > c.length || e - newExp + 1 > c.length) {
      c.push(0);
    }
  } else {
    // concatenate coefficients with necessary zeros
    // add zeros if necessary (for example: 1e+8 -> 100e+6)
    var missingZeros = Math.abs(e - newExp) - (c.length - 1);

    for (var i = 0; i < missingZeros; i++) {
      c.push(0);
    }
  } // find difference in exponents


  var expDiff = Math.abs(e - newExp);
  var decimalIdx = 1; // push decimal index over by expDiff times

  while (expDiff > 0) {
    decimalIdx++;
    expDiff--;
  } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.
  // otherwise concat with the rest of the coefficients


  var decimals = c.slice(decimalIdx).join('');
  var decimalVal = Object(_is__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';
  var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();
  return rounded.sign + str;
}
/**
 * Format a number with fixed notation.
 * @param {number | string} value
 * @param {number} [precision=undefined]  Optional number of decimals after the
 *                                        decimal point. null by default.
 */

function toFixed(value, precision) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  }

  var splitValue = splitNumber(value);
  var rounded = typeof precision === 'number' ? roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;
  var c = rounded.coefficients;
  var p = rounded.exponent + 1; // exponent may have changed
  // append zeros if needed

  var pp = p + (precision || 0);

  if (c.length < pp) {
    c = c.concat(zeros(pp - c.length));
  } // prepend zeros if needed


  if (p < 0) {
    c = zeros(-p + 1).concat(c);
    p = 1;
  } // insert a dot if needed


  if (p < c.length) {
    c.splice(p, 0, p === 0 ? '0.' : '.');
  }

  return rounded.sign + c.join('');
}
/**
 * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'
 * @param {number | string} value
 * @param {number} [precision]  Number of digits in formatted output.
 *                              If not provided, the maximum available digits
 *                              is used.
 */

function toExponential(value, precision) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  } // round if needed, else create a clone


  var split = splitNumber(value);
  var rounded = precision ? roundDigits(split, precision) : split;
  var c = rounded.coefficients;
  var e = rounded.exponent; // append zeros if needed

  if (c.length < precision) {
    c = c.concat(zeros(precision - c.length));
  } // format as `C.CCCe+EEE` or `C.CCCe-EEE`


  var first = c.shift();
  return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;
}
/**
 * Format a number with a certain precision
 * @param {number | string} value
 * @param {number} [precision=undefined] Optional number of digits.
 * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]
 *                                       By default:
 *                                         lowerExp = -3 (incl)
 *                                         upper = +5 (excl)
 * @return {string}
 */

function toPrecision(value, precision, options) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  } // determine lower and upper bound for exponential notation.


  var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;
  var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;
  var split = splitNumber(value);
  var rounded = precision ? roundDigits(split, precision) : split;

  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {
    // exponential notation
    return toExponential(value, precision);
  } else {
    var c = rounded.coefficients;
    var e = rounded.exponent; // append trailing zeros

    if (c.length < precision) {
      c = c.concat(zeros(precision - c.length));
    } // append trailing zeros
    // TODO: simplify the next statement


    c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros

    c = zeros(-e).concat(c);
    var dot = e > 0 ? e : 0;

    if (dot < c.length - 1) {
      c.splice(dot + 1, 0, '.');
    }

    return rounded.sign + c.join('');
  }
}
/**
 * Round the number of digits of a number *
 * @param {SplitValue} split       A value split with .splitNumber(value)
 * @param {number} precision  A positive integer
 * @return {SplitValue}
 *              Returns an object containing sign, coefficients, and exponent
 *              with rounded digits
 */

function roundDigits(split, precision) {
  // create a clone
  var rounded = {
    sign: split.sign,
    coefficients: split.coefficients,
    exponent: split.exponent
  };
  var c = rounded.coefficients; // prepend zeros if needed

  while (precision <= 0) {
    c.unshift(0);
    rounded.exponent++;
    precision++;
  }

  if (c.length > precision) {
    var removed = c.splice(precision, c.length - precision);

    if (removed[0] >= 5) {
      var i = precision - 1;
      c[i]++;

      while (c[i] === 10) {
        c.pop();

        if (i === 0) {
          c.unshift(0);
          rounded.exponent++;
          i++;
        }

        i--;
        c[i]++;
      }
    }
  }

  return rounded;
}
/**
 * Create an array filled with zeros.
 * @param {number} length
 * @return {Array}
 */

function zeros(length) {
  var arr = [];

  for (var i = 0; i < length; i++) {
    arr.push(0);
  }

  return arr;
}
/**
 * Count the number of significant digits of a number.
 *
 * For example:
 *   2.34 returns 3
 *   0.0034 returns 2
 *   120.5e+30 returns 4
 *
 * @param {number} value
 * @return {number} digits   Number of significant digits
 */


function digits(value) {
  return value.toExponential().replace(/e.*$/, '') // remove exponential notation
  .replace(/^0\.?0*|\./, '') // remove decimal point and leading zeros
  .length;
}
/**
 * Minimum number added to one that makes the result different than one
 */

var DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;
/**
 * Compares two floating point numbers.
 * @param {number} x          First value to compare
 * @param {number} y          Second value to compare
 * @param {number} [epsilon]  The maximum relative difference between x and y
 *                            If epsilon is undefined or null, the function will
 *                            test whether x and y are exactly equal.
 * @return {boolean} whether the two numbers are nearly equal
*/

function nearlyEqual(x, y, epsilon) {
  // if epsilon is null or undefined, test whether x and y are exactly equal
  if (epsilon === null || epsilon === undefined) {
    return x === y;
  }

  if (x === y) {
    return true;
  } // NaN


  if (isNaN(x) || isNaN(y)) {
    return false;
  } // at this point x and y should be finite


  if (isFinite(x) && isFinite(y)) {
    // check numbers are very close, needed when comparing numbers near zero
    var diff = Math.abs(x - y);

    if (diff < DBL_EPSILON) {
      return true;
    } else {
      // use relative error
      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;
    }
  } // Infinite and Number or negative Infinite and positive Infinite cases


  return false;
}
/**
 * Calculate the hyperbolic arccos of a number
 * @param {number} x
 * @return {number}
 */

var acosh = Math.acosh || function (x) {
  return Math.log(Math.sqrt(x * x - 1) + x);
};
var asinh = Math.asinh || function (x) {
  return Math.log(Math.sqrt(x * x + 1) + x);
};
/**
 * Calculate the hyperbolic arctangent of a number
 * @param {number} x
 * @return {number}
 */

var atanh = Math.atanh || function (x) {
  return Math.log((1 + x) / (1 - x)) / 2;
};
/**
 * Calculate the hyperbolic cosine of a number
 * @param {number} x
 * @returns {number}
 */

var cosh = Math.cosh || function (x) {
  return (Math.exp(x) + Math.exp(-x)) / 2;
};
/**
 * Calculate the hyperbolic sine of a number
 * @param {number} x
 * @returns {number}
 */

var sinh = Math.sinh || function (x) {
  return (Math.exp(x) - Math.exp(-x)) / 2;
};
/**
 * Calculate the hyperbolic tangent of a number
 * @param {number} x
 * @returns {number}
 */

var tanh = Math.tanh || function (x) {
  var e = Math.exp(2 * x);
  return (e - 1) / (e + 1);
};

/***/ }),

/***/ "../node_modules/mathjs/es/utils/object.js":
/*!*************************************************!*\
  !*** ../node_modules/mathjs/es/utils/object.js ***!
  \*************************************************/
/*! exports provided: clone, mapObject, extend, deepExtend, deepStrictEqual, deepFlatten, canDefineProperty, lazy, traverse, hasOwnProperty, isLegacyFactory, get, set, pick, pickShallow, values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapObject", function() { return mapObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepExtend", function() { return deepExtend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepStrictEqual", function() { return deepStrictEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepFlatten", function() { return deepFlatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canDefineProperty", function() { return canDefineProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lazy", function() { return lazy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "traverse", function() { return traverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasOwnProperty", function() { return hasOwnProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLegacyFactory", function() { return isLegacyFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return pick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickShallow", function() { return pickShallow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ "../node_modules/mathjs/es/utils/is.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }


/**
 * Clone an object
 *
 *     clone(x)
 *
 * Can clone any primitive type, array, and object.
 * If x has a function clone, this function will be invoked to clone the object.
 *
 * @param {*} x
 * @return {*} clone
 */

function clone(x) {
  var type = _typeof(x); // immutable primitive types


  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {
    return x;
  } // use clone function of the object when available


  if (typeof x.clone === 'function') {
    return x.clone();
  } // array


  if (Array.isArray(x)) {
    return x.map(function (value) {
      return clone(value);
    });
  }

  if (x instanceof Date) return new Date(x.valueOf());
  if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(x)) return x; // bignumbers are immutable

  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp
  // object

  return mapObject(x, clone);
}
/**
 * Apply map to all properties of an object
 * @param {Object} object
 * @param {function} callback
 * @return {Object} Returns a copy of the object with mapped properties
 */

function mapObject(object, callback) {
  var clone = {};

  for (var key in object) {
    if (hasOwnProperty(object, key)) {
      clone[key] = callback(object[key]);
    }
  }

  return clone;
}
/**
 * Extend object a with the properties of object b
 * @param {Object} a
 * @param {Object} b
 * @return {Object} a
 */

function extend(a, b) {
  for (var prop in b) {
    if (hasOwnProperty(b, prop)) {
      a[prop] = b[prop];
    }
  }

  return a;
}
/**
 * Deep extend an object a with the properties of object b
 * @param {Object} a
 * @param {Object} b
 * @returns {Object}
 */

function deepExtend(a, b) {
  // TODO: add support for Arrays to deepExtend
  if (Array.isArray(b)) {
    throw new TypeError('Arrays are not supported by deepExtend');
  }

  for (var prop in b) {
    if (hasOwnProperty(b, prop)) {
      if (b[prop] && b[prop].constructor === Object) {
        if (a[prop] === undefined) {
          a[prop] = {};
        }

        if (a[prop] && a[prop].constructor === Object) {
          deepExtend(a[prop], b[prop]);
        } else {
          a[prop] = b[prop];
        }
      } else if (Array.isArray(b[prop])) {
        throw new TypeError('Arrays are not supported by deepExtend');
      } else {
        a[prop] = b[prop];
      }
    }
  }

  return a;
}
/**
 * Deep test equality of all fields in two pairs of arrays or objects.
 * Compares values and functions strictly (ie. 2 is not the same as '2').
 * @param {Array | Object} a
 * @param {Array | Object} b
 * @returns {boolean}
 */

function deepStrictEqual(a, b) {
  var prop, i, len;

  if (Array.isArray(a)) {
    if (!Array.isArray(b)) {
      return false;
    }

    if (a.length !== b.length) {
      return false;
    }

    for (i = 0, len = a.length; i < len; i++) {
      if (!deepStrictEqual(a[i], b[i])) {
        return false;
      }
    }

    return true;
  } else if (typeof a === 'function') {
    return a === b;
  } else if (a instanceof Object) {
    if (Array.isArray(b) || !(b instanceof Object)) {
      return false;
    }

    for (prop in a) {
      // noinspection JSUnfilteredForInLoop
      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {
        return false;
      }
    }

    for (prop in b) {
      // noinspection JSUnfilteredForInLoop
      if (!(prop in a) || !deepStrictEqual(a[prop], b[prop])) {
        return false;
      }
    }

    return true;
  } else {
    return a === b;
  }
}
/**
 * Recursively flatten a nested object.
 * @param {Object} nestedObject
 * @return {Object} Returns the flattened object
 */

function deepFlatten(nestedObject) {
  var flattenedObject = {};

  _deepFlatten(nestedObject, flattenedObject);

  return flattenedObject;
} // helper function used by deepFlatten

function _deepFlatten(nestedObject, flattenedObject) {
  for (var prop in nestedObject) {
    if (hasOwnProperty(nestedObject, prop)) {
      var value = nestedObject[prop];

      if (_typeof(value) === 'object' && value !== null) {
        _deepFlatten(value, flattenedObject);
      } else {
        flattenedObject[prop] = value;
      }
    }
  }
}
/**
 * Test whether the current JavaScript engine supports Object.defineProperty
 * @returns {boolean} returns true if supported
 */


function canDefineProperty() {
  // test needed for broken IE8 implementation
  try {
    if (Object.defineProperty) {
      Object.defineProperty({}, 'x', {
        get: function get() {}
      });
      return true;
    }
  } catch (e) {}

  return false;
}
/**
 * Attach a lazy loading property to a constant.
 * The given function `fn` is called once when the property is first requested.
 *
 * @param {Object} object         Object where to add the property
 * @param {string} prop           Property name
 * @param {Function} valueResolver Function returning the property value. Called
 *                                without arguments.
 */

function lazy(object, prop, valueResolver) {
  var _uninitialized = true;

  var _value;

  Object.defineProperty(object, prop, {
    get: function get() {
      if (_uninitialized) {
        _value = valueResolver();
        _uninitialized = false;
      }

      return _value;
    },
    set: function set(value) {
      _value = value;
      _uninitialized = false;
    },
    configurable: true,
    enumerable: true
  });
}
/**
 * Traverse a path into an object.
 * When a namespace is missing, it will be created
 * @param {Object} object
 * @param {string | string[]} path   A dot separated string like 'name.space'
 * @return {Object} Returns the object at the end of the path
 */

function traverse(object, path) {
  if (path && typeof path === 'string') {
    return traverse(object, path.split('.'));
  }

  var obj = object;

  if (path) {
    for (var i = 0; i < path.length; i++) {
      var key = path[i];

      if (!(key in obj)) {
        obj[key] = {};
      }

      obj = obj[key];
    }
  }

  return obj;
}
/**
 * A safe hasOwnProperty
 * @param {Object} object
 * @param {string} property
 */

function hasOwnProperty(object, property) {
  return object && Object.hasOwnProperty.call(object, property);
}
/**
 * Test whether an object is a factory. a factory has fields:
 *
 * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)
 * - name: string (optional)
 * - path: string    A dot separated path (optional)
 * - math: boolean   If true (false by default), the math namespace is passed
 *                   as fifth argument of the factory function
 *
 * @param {*} object
 * @returns {boolean}
 */

function isLegacyFactory(object) {
  return object && typeof object.factory === 'function';
}
/**
 * Get a nested property from an object
 * @param {Object} object
 * @param {string | string[]} path
 * @returns {Object}
 */

function get(object, path) {
  if (typeof path === 'string') {
    if (isPath(path)) {
      return get(object, path.split('.'));
    } else {
      return object[path];
    }
  }

  var child = object;

  for (var i = 0; i < path.length; i++) {
    var key = path[i];
    child = child ? child[key] : undefined;
  }

  return child;
}
/**
 * Set a nested property in an object
 * Mutates the object itself
 * If the path doesn't exist, it will be created
 * @param {Object} object
 * @param {string | string[]} path
 * @param {*} value
 * @returns {Object}
 */

function set(object, path, value) {
  if (typeof path === 'string') {
    if (isPath(path)) {
      return set(object, path.split('.'), value);
    } else {
      object[path] = value;
      return object;
    }
  }

  var child = object;

  for (var i = 0; i < path.length - 1; i++) {
    var key = path[i];

    if (child[key] === undefined) {
      child[key] = {};
    }

    child = child[key];
  }

  if (path.length > 0) {
    var lastKey = path[path.length - 1];
    child[lastKey] = value;
  }

  return object;
}
/**
 * Create an object composed of the picked object properties
 * @param {Object} object
 * @param {string[]} properties
 * @param {function} [transform] Optional value to transform a value when picking it
 * @return {Object}
 */

function pick(object, properties, transform) {
  var copy = {};

  for (var i = 0; i < properties.length; i++) {
    var key = properties[i];
    var value = get(object, key);

    if (value !== undefined) {
      set(copy, key, transform ? transform(value, key) : value);
    }
  }

  return copy;
}
/**
 * Shallow version of pick, creating an object composed of the picked object properties
 * but not for nested properties
 * @param {Object} object
 * @param {string[]} properties
 * @return {Object}
 */

function pickShallow(object, properties) {
  var copy = {};

  for (var i = 0; i < properties.length; i++) {
    var key = properties[i];
    var value = object[key];

    if (value !== undefined) {
      copy[key] = value;
    }
  }

  return copy;
}
function values(object) {
  return Object.keys(object).map(function (key) {
    return object[key];
  });
} // helper function to test whether a string contains a path like 'user.name'

function isPath(str) {
  return str.indexOf('.') !== -1;
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/polyfills.js":
/*!****************************************************!*\
  !*** ../node_modules/mathjs/es/utils/polyfills.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// TODO: remove these polyfills as soon as we have a build process that transpiles the code to ES5
// Polyfill for IE 11 (Number.isFinite is used in `complex.js`)
// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite
Number.isFinite = Number.isFinite || function (value) {
  return typeof value === 'number' && isFinite(value);
}; // Polyfill for IE 11
// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN


Number.isNaN = Number.isNaN || function (value) {
  return value !== value; // eslint-disable-line no-self-compare
};

/***/ }),

/***/ "../node_modules/mathjs/es/utils/product.js":
/*!**************************************************!*\
  !*** ../node_modules/mathjs/es/utils/product.js ***!
  \**************************************************/
/*! exports provided: product */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "product", function() { return product; });
/** @param {number} i
 *  @param {number} n
 *  @returns {number} product of i to n
 */
function product(i, n) {
  if (n < i) {
    return 1;
  }

  if (n === i) {
    return n;
  }

  var half = n + i >> 1; // divide (n + i) by 2 and truncate to integer

  return product(i, half) * product(half + 1, n);
}

/***/ }),

/***/ "../node_modules/mathjs/es/utils/string.js":
/*!*************************************************!*\
  !*** ../node_modules/mathjs/es/utils/string.js ***!
  \*************************************************/
/*! exports provided: endsWith, format, stringify, escape, compareText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "endsWith", function() { return endsWith; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escape", function() { return escape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareText", function() { return compareText; });
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ "../node_modules/mathjs/es/utils/is.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "../node_modules/mathjs/es/utils/number.js");
/* harmony import */ var _bignumber_formatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bignumber/formatter */ "../node_modules/mathjs/es/utils/bignumber/formatter.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }




/**
 * Check if a text ends with a certain string.
 * @param {string} text
 * @param {string} search
 */

function endsWith(text, search) {
  var start = text.length - search.length;
  var end = text.length;
  return text.substring(start, end) === search;
}
/**
 * Format a value of any type into a string.
 *
 * Usage:
 *     math.format(value)
 *     math.format(value, precision)
 *
 * When value is a function:
 *
 * - When the function has a property `syntax`, it returns this
 *   syntax description.
 * - In other cases, a string `'function'` is returned.
 *
 * When `value` is an Object:
 *
 * - When the object contains a property `format` being a function, this
 *   function is invoked as `value.format(options)` and the result is returned.
 * - When the object has its own `toString` method, this method is invoked
 *   and the result is returned.
 * - In other cases the function will loop over all object properties and
 *   return JSON object notation like '{"a": 2, "b": 3}'.
 *
 * Example usage:
 *     math.format(2/7)                // '0.2857142857142857'
 *     math.format(math.pi, 3)         // '3.14'
 *     math.format(new Complex(2, 3))  // '2 + 3i'
 *     math.format('hello')            // '"hello"'
 *
 * @param {*} value             Value to be stringified
 * @param {Object | number | Function} [options]  Formatting options. See
 *                                                lib/utils/number:format for a
 *                                                description of the available
 *                                                options.
 * @return {string} str
 */

function format(value, options) {
  if (typeof value === 'number') {
    return Object(_number__WEBPACK_IMPORTED_MODULE_1__["format"])(value, options);
  }

  if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"])(value)) {
    return Object(_bignumber_formatter__WEBPACK_IMPORTED_MODULE_2__["format"])(value, options);
  } // note: we use unsafe duck-typing here to check for Fractions, this is
  // ok here since we're only invoking toString or concatenating its values


  if (looksLikeFraction(value)) {
    if (!options || options.fraction !== 'decimal') {
      // output as ratio, like '1/3'
      return value.s * value.n + '/' + value.d;
    } else {
      // output as decimal, like '0.(3)'
      return value.toString();
    }
  }

  if (Array.isArray(value)) {
    return formatArray(value, options);
  }

  if (Object(_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(value)) {
    return '"' + value + '"';
  }

  if (typeof value === 'function') {
    return value.syntax ? String(value.syntax) : 'function';
  }

  if (value && _typeof(value) === 'object') {
    if (typeof value.format === 'function') {
      return value.format(options);
    } else if (value && value.toString(options) !== {}.toString()) {
      // this object has a non-native toString method, use that one
      return value.toString(options);
    } else {
      var entries = Object.keys(value).map(function (key) {
        return '"' + key + '": ' + format(value[key], options);
      });
      return '{' + entries.join(', ') + '}';
    }
  }

  return String(value);
}
/**
 * Stringify a value into a string enclosed in double quotes.
 * Unescaped double quotes and backslashes inside the value are escaped.
 * @param {*} value
 * @return {string}
 */

function stringify(value) {
  var text = String(value);
  var escaped = '';
  var i = 0;

  while (i < text.length) {
    var c = text.charAt(i);

    if (c === '\\') {
      escaped += c;
      i++;
      c = text.charAt(i);

      if (c === '' || '"\\/bfnrtu'.indexOf(c) === -1) {
        escaped += '\\'; // no valid escape character -> escape it
      }

      escaped += c;
    } else if (c === '"') {
      escaped += '\\"';
    } else {
      escaped += c;
    }

    i++;
  }

  return '"' + escaped + '"';
}
/**
 * Escape special HTML characters
 * @param {*} value
 * @return {string}
 */

function escape(value) {
  var text = String(value);
  text = text.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  return text;
}
/**
 * Recursively format an n-dimensional matrix
 * Example output: "[[1, 2], [3, 4]]"
 * @param {Array} array
 * @param {Object | number | Function} [options]  Formatting options. See
 *                                                lib/utils/number:format for a
 *                                                description of the available
 *                                                options.
 * @returns {string} str
 */

function formatArray(array, options) {
  if (Array.isArray(array)) {
    var str = '[';
    var len = array.length;

    for (var i = 0; i < len; i++) {
      if (i !== 0) {
        str += ', ';
      }

      str += formatArray(array[i], options);
    }

    str += ']';
    return str;
  } else {
    return format(array, options);
  }
}
/**
 * Check whether a value looks like a Fraction (unsafe duck-type check)
 * @param {*} value
 * @return {boolean}
 */


function looksLikeFraction(value) {
  return value && _typeof(value) === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;
}
/**
 * Compare two strings
 * @param {string} x
 * @param {string} y
 * @returns {number}
 */


function compareText(x, y) {
  // we don't want to convert numbers to string, only accept string input
  if (!Object(_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(x)) {
    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + Object(_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(x) + ', index: 0)');
  }

  if (!Object(_is__WEBPACK_IMPORTED_MODULE_0__["isString"])(y)) {
    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + Object(_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(y) + ', index: 1)');
  }

  return x === y ? 0 : x > y ? 1 : -1;
}

/***/ }),

/***/ "../node_modules/mathjs/es/version.js":
/*!********************************************!*\
  !*** ../node_modules/mathjs/es/version.js ***!
  \********************************************/
/*! exports provided: version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
var version = '7.2.0'; // Note: This file is automatically generated when building math.js.
// Changes made in this file will be overwritten.

/***/ }),

/***/ "../node_modules/mathjs/main/esm/index.js":
/*!************************************************!*\
  !*** ../node_modules/mathjs/main/esm/index.js ***!
  \************************************************/
/*! exports provided: config, ResultSet, Complex, Range, _false, _null, _true, BigNumber, Matrix, replacer, i, LN10, LOG10E, _NaN, pi, SQRT1_2, tau, efimovFactor, fineStructure, sackurTetrode, weakMixingAngle, Fraction, e, _Infinity, LOG2E, version, DenseMatrix, phi, typed, isInteger, isNumeric, isPositive, isNaN, equalScalar, number, boolean, complex, splitUnit, unaryPlus, apply, cube, expm1, log10, multiplyScalar, sign, square, bitNot, arg, im, not, filter, forEach, map, erf, format, isPrime, acos, acot, acsc, asec, asin, atan, atanh, cosh, coth, csch, sech, sinh, tanh, combinations, pickRandom, randomInt, LN2, clone, hasNumericValue, typeOf, string, fraction, unaryMinus, addScalar, exp, log2, sqrt, conj, getMatrixDataType, mode, print, acosh, acsch, asinh, cos, csc, sin, combinationsWithRep, random, SQRT2, isNegative, SparseMatrix, matrix, cbrt, gcd, mod, nthRoot, xgcd, bitAnd, bitXor, or, concat, diag, identity, ones, reshape, size, subset, zeros, to, round, leftShift, rightLogShift, compare, compareText, smaller, larger, unequal, ImmutableDenseMatrix, FibonacciHeap, sparse, acoth, atan2, sec, add, dot, composition, isZero, abs, floor, multiply, dotMultiply, re, flatten, resize, squeeze, pow, dotPow, rightArithShift, compareNatural, equalText, largerEq, partitionSelect, Index, asech, tan, setDifference, setIntersect, setMultiplicity, setSize, trace, quantileSeq, gamma, bignumber, lcm, bitOr, kron, transpose, numeric, and, smallerEq, sort, min, cot, setDistinct, setPowerset, index, sum, factorial, permutations, ceil, subtract, cross, range, ctranspose, divideScalar, nthRoots, lsolve, equal, max, setCartesian, setSymDifference, hypot, qr, distance, stirlingS2, catalan, fix, column, row, log, dotDivide, deepEqual, Unit, createUnit, setUnion, slu, intersect, bellNumbers, atomicMass, bohrMagneton, boltzmann, conductanceQuantum, deuteronMass, electronMass, faraday, firstRadiation, gravitationConstant, hartreeEnergy, klitzing, magneticConstant, molarMass, molarPlanckConstant, neutronMass, planckCharge, planckLength, planckTemperature, protonMass, reducedPlanckConstant, secondRadiation, stefanBoltzmann, vacuumImpedance, xor, prod, usolve, unit, avogadro, classicalElectronRadius, electricConstant, fermiCoupling, gravity, loschmidt, molarMassC12, nuclearMagneton, planckMass, quantumOfCirculation, speedOfLight, wienDisplacement, diff, Spa, lup, det, bohrRadius, elementaryCharge, inverseConductanceQuantum, molarVolume, planckTime, thomsonCrossSection, log1p, lusolve, inv, expm, divide, median, variance, kldivergence, gasConstant, planckConstant, setIsSubset, sqrtm, mad, multinomial, coulomb, rydberg, mean, eigs, magneticFluxQuantum, norm, std, Node, ArrayNode, BlockNode, ConstantNode, ObjectNode, ParenthesisNode, RelationalNode, Chain, reviver, ConditionalNode, OperatorNode, RangeNode, FunctionAssignmentNode, chain, AccessorNode, IndexNode, AssignmentNode, SymbolNode, FunctionNode, parse, evaluate, Help, compile, simplify, rationalize, Parser, help, parser, derivative, docs, isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigNumber, isBlockNode, isBoolean, isChain, isCollection, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMatrix, isNode, isNull, isNumber, isString, isUndefined, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isResultSet, isSparseMatrix, isSymbolNode, isUnit, IndexError, DimensionError, ArgumentsError, typedDependencies, ResultSetDependencies, BigNumberDependencies, ComplexDependencies, FractionDependencies, RangeDependencies, MatrixDependencies, DenseMatrixDependencies, cloneDependencies, isIntegerDependencies, isNegativeDependencies, isNumericDependencies, hasNumericValueDependencies, isPositiveDependencies, isZeroDependencies, isNaNDependencies, typeOfDependencies, equalScalarDependencies, SparseMatrixDependencies, numberDependencies, stringDependencies, booleanDependencies, bignumberDependencies, complexDependencies, fractionDependencies, matrixDependencies, splitUnitDependencies, unaryMinusDependencies, unaryPlusDependencies, absDependencies, applyDependencies, addScalarDependencies, cbrtDependencies, ceilDependencies, cubeDependencies, expDependencies, expm1Dependencies, fixDependencies, floorDependencies, gcdDependencies, lcmDependencies, log10Dependencies, log2Dependencies, modDependencies, multiplyScalarDependencies, multiplyDependencies, nthRootDependencies, signDependencies, sqrtDependencies, squareDependencies, subtractDependencies, xgcdDependencies, dotMultiplyDependencies, bitAndDependencies, bitNotDependencies, bitOrDependencies, bitXorDependencies, argDependencies, conjDependencies, imDependencies, reDependencies, notDependencies, orDependencies, xorDependencies, concatDependencies, columnDependencies, crossDependencies, diagDependencies, filterDependencies, flattenDependencies, forEachDependencies, getMatrixDataTypeDependencies, identityDependencies, kronDependencies, mapDependencies, diffDependencies, onesDependencies, rangeDependencies, reshapeDependencies, resizeDependencies, rowDependencies, sizeDependencies, squeezeDependencies, subsetDependencies, transposeDependencies, ctransposeDependencies, zerosDependencies, erfDependencies, modeDependencies, prodDependencies, formatDependencies, printDependencies, toDependencies, isPrimeDependencies, numericDependencies, divideScalarDependencies, powDependencies, roundDependencies, logDependencies, log1pDependencies, nthRootsDependencies, dotPowDependencies, dotDivideDependencies, lsolveDependencies, usolveDependencies, leftShiftDependencies, rightArithShiftDependencies, rightLogShiftDependencies, andDependencies, compareDependencies, compareNaturalDependencies, compareTextDependencies, equalDependencies, equalTextDependencies, smallerDependencies, smallerEqDependencies, largerDependencies, largerEqDependencies, deepEqualDependencies, unequalDependencies, partitionSelectDependencies, sortDependencies, maxDependencies, minDependencies, ImmutableDenseMatrixDependencies, IndexDependencies, FibonacciHeapDependencies, SpaDependencies, UnitDependencies, unitDependencies, sparseDependencies, createUnitDependencies, acosDependencies, acoshDependencies, acotDependencies, acothDependencies, acscDependencies, acschDependencies, asecDependencies, asechDependencies, asinDependencies, asinhDependencies, atanDependencies, atan2Dependencies, atanhDependencies, cosDependencies, coshDependencies, cotDependencies, cothDependencies, cscDependencies, cschDependencies, secDependencies, sechDependencies, sinDependencies, sinhDependencies, tanDependencies, tanhDependencies, setCartesianDependencies, setDifferenceDependencies, setDistinctDependencies, setIntersectDependencies, setIsSubsetDependencies, setMultiplicityDependencies, setPowersetDependencies, setSizeDependencies, setSymDifferenceDependencies, setUnionDependencies, addDependencies, hypotDependencies, normDependencies, dotDependencies, traceDependencies, indexDependencies, NodeDependencies, AccessorNodeDependencies, ArrayNodeDependencies, AssignmentNodeDependencies, BlockNodeDependencies, ConditionalNodeDependencies, ConstantNodeDependencies, FunctionAssignmentNodeDependencies, IndexNodeDependencies, ObjectNodeDependencies, OperatorNodeDependencies, ParenthesisNodeDependencies, RangeNodeDependencies, RelationalNodeDependencies, SymbolNodeDependencies, FunctionNodeDependencies, parseDependencies, compileDependencies, evaluateDependencies, ParserDependencies, parserDependencies, lupDependencies, qrDependencies, sluDependencies, lusolveDependencies, HelpDependencies, ChainDependencies, helpDependencies, chainDependencies, detDependencies, invDependencies, eigsDependencies, expmDependencies, sqrtmDependencies, divideDependencies, distanceDependencies, intersectDependencies, sumDependencies, meanDependencies, medianDependencies, madDependencies, varianceDependencies, quantileSeqDependencies, stdDependencies, combinationsDependencies, combinationsWithRepDependencies, gammaDependencies, factorialDependencies, kldivergenceDependencies, multinomialDependencies, permutationsDependencies, pickRandomDependencies, randomDependencies, randomIntDependencies, stirlingS2Dependencies, bellNumbersDependencies, catalanDependencies, compositionDependencies, simplifyDependencies, derivativeDependencies, rationalizeDependencies, reviverDependencies, replacerDependencies, eDependencies, EDependencies, falseDependencies, iDependencies, InfinityDependencies, LN10Dependencies, LN2Dependencies, LOG10EDependencies, LOG2EDependencies, NaNDependencies, nullDependencies, phiDependencies, piDependencies, PIDependencies, SQRT1_2Dependencies, SQRT2Dependencies, tauDependencies, trueDependencies, versionDependencies, atomicMassDependencies, avogadroDependencies, bohrMagnetonDependencies, bohrRadiusDependencies, boltzmannDependencies, classicalElectronRadiusDependencies, conductanceQuantumDependencies, coulombDependencies, deuteronMassDependencies, efimovFactorDependencies, electricConstantDependencies, electronMassDependencies, elementaryChargeDependencies, faradayDependencies, fermiCouplingDependencies, fineStructureDependencies, firstRadiationDependencies, gasConstantDependencies, gravitationConstantDependencies, gravityDependencies, hartreeEnergyDependencies, inverseConductanceQuantumDependencies, klitzingDependencies, loschmidtDependencies, magneticConstantDependencies, magneticFluxQuantumDependencies, molarMassDependencies, molarMassC12Dependencies, molarPlanckConstantDependencies, molarVolumeDependencies, neutronMassDependencies, nuclearMagnetonDependencies, planckChargeDependencies, planckConstantDependencies, planckLengthDependencies, planckMassDependencies, planckTemperatureDependencies, planckTimeDependencies, protonMassDependencies, quantumOfCirculationDependencies, reducedPlanckConstantDependencies, rydbergDependencies, sackurTetrodeDependencies, secondRadiationDependencies, speedOfLightDependencies, stefanBoltzmannDependencies, thomsonCrossSectionDependencies, vacuumImpedanceDependencies, weakMixingAngleDependencies, wienDisplacementDependencies, applyTransformDependencies, columnTransformDependencies, filterTransformDependencies, forEachTransformDependencies, indexTransformDependencies, mapTransformDependencies, maxTransformDependencies, meanTransformDependencies, minTransformDependencies, rangeTransformDependencies, rowTransformDependencies, subsetTransformDependencies, concatTransformDependencies, diffTransformDependencies, stdTransformDependencies, sumTransformDependencies, varianceTransformDependencies, all, createTyped, createResultSet, createBigNumberClass, createComplexClass, createFractionClass, createRangeClass, createMatrixClass, createDenseMatrixClass, createClone, createIsInteger, createIsNegative, createIsNumeric, createHasNumericValue, createIsPositive, createIsZero, createIsNaN, createTypeOf, createEqualScalar, createSparseMatrixClass, createNumber, createString, createBoolean, createBignumber, createComplex, createFraction, createMatrix, createSplitUnit, createUnaryMinus, createUnaryPlus, createAbs, createApply, createAddScalar, createCbrt, createCeil, createCube, createExp, createExpm1, createFix, createFloor, createGcd, createLcm, createLog10, createLog2, createMod, createMultiplyScalar, createMultiply, createNthRoot, createSign, createSqrt, createSquare, createSubtract, createXgcd, createDotMultiply, createBitAnd, createBitNot, createBitOr, createBitXor, createArg, createConj, createIm, createRe, createNot, createOr, createXor, createConcat, createColumn, createCross, createDiag, createFilter, createFlatten, createForEach, createGetMatrixDataType, createIdentity, createKron, createMap, createDiff, createOnes, createRange, createReshape, createResize, createRow, createSize, createSqueeze, createSubset, createTranspose, createCtranspose, createZeros, createErf, createMode, createProd, createFormat, createPrint, createTo, createIsPrime, createNumeric, createDivideScalar, createPow, createRound, createLog, createLog1p, createNthRoots, createDotPow, createDotDivide, createLsolve, createUsolve, createLeftShift, createRightArithShift, createRightLogShift, createAnd, createCompare, createCompareNatural, createCompareText, createEqual, createEqualText, createSmaller, createSmallerEq, createLarger, createLargerEq, createDeepEqual, createUnequal, createPartitionSelect, createSort, createMax, createMin, createImmutableDenseMatrixClass, createIndexClass, createFibonacciHeapClass, createSpaClass, createUnitClass, createUnitFunction, createSparse, createCreateUnit, createAcos, createAcosh, createAcot, createAcoth, createAcsc, createAcsch, createAsec, createAsech, createAsin, createAsinh, createAtan, createAtan2, createAtanh, createCos, createCosh, createCot, createCoth, createCsc, createCsch, createSec, createSech, createSin, createSinh, createTan, createTanh, createSetCartesian, createSetDifference, createSetDistinct, createSetIntersect, createSetIsSubset, createSetMultiplicity, createSetPowerset, createSetSize, createSetSymDifference, createSetUnion, createAdd, createHypot, createNorm, createDot, createTrace, createIndex, createNode, createAccessorNode, createArrayNode, createAssignmentNode, createBlockNode, createConditionalNode, createConstantNode, createFunctionAssignmentNode, createIndexNode, createObjectNode, createOperatorNode, createParenthesisNode, createRangeNode, createRelationalNode, createSymbolNode, createFunctionNode, createParse, createCompile, createEvaluate, createParserClass, createParser, createLup, createQr, createSlu, createLusolve, createHelpClass, createChainClass, createHelp, createChain, createDet, createInv, createEigs, createExpm, createSqrtm, createDivide, createDistance, createIntersect, createSum, createMean, createMedian, createMad, createVariance, createQuantileSeq, createStd, createCombinations, createCombinationsWithRep, createGamma, createFactorial, createKldivergence, createMultinomial, createPermutations, createPickRandom, createRandom, createRandomInt, createStirlingS2, createBellNumbers, createCatalan, createComposition, createSimplify, createDerivative, createRationalize, createReviver, createReplacer, createE, createUppercaseE, createFalse, createI, createInfinity, createLN10, createLN2, createLOG10E, createLOG2E, createNaN, createNull, createPhi, createPi, createUppercasePi, createSQRT1_2, createSQRT2, createTau, createTrue, createVersion, createAtomicMass, createAvogadro, createBohrMagneton, createBohrRadius, createBoltzmann, createClassicalElectronRadius, createConductanceQuantum, createCoulomb, createDeuteronMass, createEfimovFactor, createElectricConstant, createElectronMass, createElementaryCharge, createFaraday, createFermiCoupling, createFineStructure, createFirstRadiation, createGasConstant, createGravitationConstant, createGravity, createHartreeEnergy, createInverseConductanceQuantum, createKlitzing, createLoschmidt, createMagneticConstant, createMagneticFluxQuantum, createMolarMass, createMolarMassC12, createMolarPlanckConstant, createMolarVolume, createNeutronMass, createNuclearMagneton, createPlanckCharge, createPlanckConstant, createPlanckLength, createPlanckMass, createPlanckTemperature, createPlanckTime, createProtonMass, createQuantumOfCirculation, createReducedPlanckConstant, createRydberg, createSackurTetrode, createSecondRadiation, createSpeedOfLight, createStefanBoltzmann, createThomsonCrossSection, createVacuumImpedance, createWeakMixingAngle, createWienDisplacement, createApplyTransform, createColumnTransform, createFilterTransform, createForEachTransform, createIndexTransform, createMapTransform, createMaxTransform, createMeanTransform, createMinTransform, createRangeTransform, createRowTransform, createSubsetTransform, createConcatTransform, createDiffTransform, createStdTransform, createSumTransform, createVarianceTransform, create, factory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../es/entry/mainAny */ "../node_modules/mathjs/es/entry/mainAny.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["config"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResultSet", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ResultSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Complex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_false", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["_false"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_null", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["_null"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_true", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["_true"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BigNumber", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["BigNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Matrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Matrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replacer", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["replacer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "i", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["i"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN10", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LN10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG10E", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LOG10E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_NaN", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["_NaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["pi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT1_2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SQRT1_2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["tau"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "efimovFactor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["efimovFactor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fineStructure", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fineStructure"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sackurTetrode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sackurTetrode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "weakMixingAngle", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["weakMixingAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Fraction", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Fraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "e", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["e"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_Infinity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["_Infinity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG2E", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LOG2E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["version"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DenseMatrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["DenseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["phi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typed", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["typed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isInteger", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNumeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPositive", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isPositive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["equalScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "number", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["number"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["boolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "complex", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["complex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitUnit", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["splitUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryPlus", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unaryPlus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "apply", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["apply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cube", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cube"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm1", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["expm1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log10", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["log10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["multiplyScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sign"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "square", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["square"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitNot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitNot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arg", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["arg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "im", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["im"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "not", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["not"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["filter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["forEach"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["map"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "erf", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["erf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrime", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isPrime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acsc", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acsc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asec", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cosh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coth", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["coth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csch", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["csch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sech", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["tanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinations", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["combinations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pickRandom", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["pickRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomInt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["randomInt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LN2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["clone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasNumericValue", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["hasNumericValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeOf", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["typeOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "string", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["string"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fraction", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryMinus", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unaryMinus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["addScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["exp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["log2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conj", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["conj"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataType", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["getMatrixDataType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["mode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "print", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["print"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acosh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acsch", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acsch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csc", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["csc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRep", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["combinationsWithRep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["random"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SQRT2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNegative", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNegative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SparseMatrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SparseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["matrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cbrt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cbrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gcd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mod", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["mod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRoot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["nthRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xgcd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["xgcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitAnd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitAnd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitXor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitXor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "or", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["or"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["concat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diag", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["diag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ones", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ones"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reshape", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["reshape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "size", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subset", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["subset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zeros", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["zeros"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "to", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["to"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "round", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["round"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leftShift", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["leftShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightLogShift", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rightLogShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareText", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compareText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smaller", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["smaller"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "larger", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["larger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unequal", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unequal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImmutableDenseMatrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ImmutableDenseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FibonacciHeap", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["FibonacciHeap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sparse", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sparse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acoth", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acoth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atan2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sec", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "add", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["add"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "composition", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["composition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isZero", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isZero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["abs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["floor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["multiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotMultiply", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dotMultiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "re", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["re"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["flatten"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resize", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["resize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squeeze", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["squeeze"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["pow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotPow", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dotPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightArithShift", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rightArithShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareNatural", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compareNatural"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalText", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["equalText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerEq", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["largerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partitionSelect", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["partitionSelect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asech", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["tan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDifference", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIntersect", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setIntersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMultiplicity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setMultiplicity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSize", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trace", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["trace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantileSeq", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["quantileSeq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gamma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bignumber", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bignumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lcm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lcm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitOr", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kron", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["kron"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["transpose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numeric", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["numeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "and", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["and"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerEq", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["smallerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sort", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sort"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["min"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDistinct", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setDistinct"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setPowerset", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setPowerset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "index", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "factorial", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["factorial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permutations", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["permutations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ceil"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["subtract"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ctranspose", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ctranspose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["divideScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRoots", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["nthRoots"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lsolve", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lsolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equal", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["equal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["max"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCartesian", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setCartesian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSymDifference", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setSymDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hypot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["hypot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "qr", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["qr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["distance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stirlingS2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["stirlingS2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catalan", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["catalan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "column", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["column"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "row", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["row"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["log"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDivide", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dotDivide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deepEqual", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["deepEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Unit", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Unit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnit", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setUnion", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setUnion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "slu", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["slu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["intersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bellNumbers", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bellNumbers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atomicMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atomicMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrMagneton", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bohrMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boltzmann", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["boltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conductanceQuantum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["conductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deuteronMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["deuteronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electronMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["electronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "faraday", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["faraday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "firstRadiation", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["firstRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravitationConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gravitationConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hartreeEnergy", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["hartreeEnergy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "klitzing", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["klitzing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["magneticConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarPlanckConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neutronMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["neutronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckCharge", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckLength", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTemperature", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckTemperature"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "protonMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["protonMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reducedPlanckConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["reducedPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secondRadiation", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["secondRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stefanBoltzmann", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["stefanBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vacuumImpedance", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["vacuumImpedance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["xor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prod", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["prod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "usolve", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["usolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unit", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "avogadro", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["avogadro"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classicalElectronRadius", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["classicalElectronRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electricConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["electricConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fermiCoupling", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fermiCoupling"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gravity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loschmidt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["loschmidt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassC12", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarMassC12"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nuclearMagneton", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["nuclearMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantumOfCirculation", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["quantumOfCirculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "speedOfLight", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["speedOfLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wienDisplacement", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["wienDisplacement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diff", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["diff"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Spa", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Spa"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lup", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "det", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["det"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrRadius", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bohrRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementaryCharge", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["elementaryCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inverseConductanceQuantum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["inverseConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarVolume", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarVolume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTime", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thomsonCrossSection", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["thomsonCrossSection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log1p", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["log1p"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lusolve", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lusolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inv", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["inv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["expm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["divide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["median"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["variance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kldivergence", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["kldivergence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gasConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gasConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIsSubset", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setIsSubset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sqrtm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mad", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["mad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multinomial", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["multinomial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coulomb", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["coulomb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rydberg", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rydberg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["mean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eigs", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["eigs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticFluxQuantum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["magneticFluxQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "norm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["norm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "std", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["std"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Node", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Node"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ArrayNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["BlockNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConstantNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ConstantNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ObjectNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParenthesisNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ParenthesisNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RelationalNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["RelationalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chain", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Chain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reviver", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["reviver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConditionalNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ConditionalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OperatorNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["OperatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["RangeNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionAssignmentNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["FunctionAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["chain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccessorNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["AccessorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["IndexNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssignmentNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["AssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SymbolNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SymbolNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["FunctionNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["parse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "evaluate", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["evaluate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Help", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Help"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simplify", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["simplify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rationalize", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rationalize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Parser", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["Parser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "help", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["help"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parser", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["parser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "derivative", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["derivative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "docs", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["docs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAccessorNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isAccessorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isArrayNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAssignmentNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBigNumber", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isBigNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBlockNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isBlockNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isChain", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isChain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCollection", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isComplex", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isComplex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isConditionalNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isConditionalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isConstantNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isConstantNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDenseMatrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isDenseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFraction", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isFraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunctionAssignmentNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isFunctionAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunctionNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isFunctionNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isHelp", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isHelp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIndex", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIndexNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isIndexNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isObjectNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isOperatorNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isOperatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isParenthesisNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isParenthesisNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRange", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRangeNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isRangeNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isRegExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isResultSet", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isResultSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSparseMatrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isSparseMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbolNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isSymbolNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUnit", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexError", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["IndexError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DimensionError", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["DimensionError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArgumentsError", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ArgumentsError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typedDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["typedDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResultSetDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ResultSetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BigNumberDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["BigNumberDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComplexDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ComplexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FractionDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["FractionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["RangeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MatrixDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["MatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DenseMatrixDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["DenseMatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cloneDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isIntegerDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isIntegerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNegativeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNegativeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumericDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNumericDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasNumericValueDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["hasNumericValueDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPositiveDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isPositiveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isZeroDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isZeroDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaNDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isNaNDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeOfDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["typeOfDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalScalarDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["equalScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SparseMatrixDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SparseMatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numberDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["numberDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["stringDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "booleanDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["booleanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bignumberDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bignumberDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "complexDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["complexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fractionDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fractionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matrixDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["matrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitUnitDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["splitUnitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryMinusDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unaryMinusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unaryPlusDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unaryPlusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "absDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["absDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["applyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addScalarDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["addScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cbrtDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cbrtDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceilDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ceilDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cubeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["expDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expm1Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["expm1Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fixDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floorDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["floorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gcdDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gcdDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lcmDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lcmDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log10Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["log10Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log2Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["log2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["modDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["multiplyScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiplyDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["multiplyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRootDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["nthRootDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["signDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sqrtDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squareDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["squareDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtractDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["subtractDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xgcdDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["xgcdDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotMultiplyDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dotMultiplyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitAndDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitAndDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitNotDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitNotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitOrDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitOrDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bitXorDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bitXorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "argDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["argDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conjDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["conjDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "imDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["imDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["reDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "notDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["notDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["orDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["xorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["concatDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "columnDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["columnDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "crossDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["crossDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diagDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["diagDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["filterDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flattenDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["flattenDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["forEachDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMatrixDataTypeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["getMatrixDataTypeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identityDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["identityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kronDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["kronDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["mapDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diffDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["diffDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onesDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["onesDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rangeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reshapeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["reshapeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resizeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["resizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rowDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rowDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sizeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "squeezeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["squeezeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subsetDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["subsetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transposeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["transposeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ctransposeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ctransposeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zerosDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["zerosDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "erfDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["erfDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["modeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prodDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["prodDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["formatDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "printDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["printDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["toDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrimeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["isPrimeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "numericDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["numericDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideScalarDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["divideScalarDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "powDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["powDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["roundDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["logDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log1pDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["log1pDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthRootsDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["nthRootsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotPowDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dotPowDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDivideDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dotDivideDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lsolveDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lsolveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "usolveDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["usolveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leftShiftDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["leftShiftDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightArithShiftDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rightArithShiftDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightLogShiftDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rightLogShiftDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "andDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["andDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compareDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareNaturalDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compareNaturalDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareTextDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compareTextDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["equalDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equalTextDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["equalTextDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["smallerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smallerEqDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["smallerEqDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["largerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "largerEqDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["largerEqDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deepEqualDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["deepEqualDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unequalDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unequalDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partitionSelectDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["partitionSelectDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sortDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["maxDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["minDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImmutableDenseMatrixDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ImmutableDenseMatrixDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["IndexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FibonacciHeapDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["FibonacciHeapDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpaDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SpaDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnitDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["UnitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unitDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["unitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sparseDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sparseDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUnitDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acosDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acosDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acoshDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acoshDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acotDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acothDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acothDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acscDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acscDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "acschDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["acschDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asecDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asecDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asechDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asechDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asinDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asinhDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["asinhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atan2Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atan2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atanhDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atanhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cosDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cosDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coshDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["coshDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cotDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cothDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cothDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cscDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cscDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cschDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["cschDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["secDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sechDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sechDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sinDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sinhDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sinhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["tanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanhDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["tanhDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCartesianDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setCartesianDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDifferenceDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setDifferenceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDistinctDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setDistinctDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIntersectDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setIntersectDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setIsSubsetDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setIsSubsetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMultiplicityDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setMultiplicityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setPowersetDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setPowersetDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSizeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setSizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSymDifferenceDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setSymDifferenceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setUnionDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["setUnionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["addDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hypotDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["hypotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "normDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["normDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["dotDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "traceDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["traceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["indexDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["NodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccessorNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["AccessorNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ArrayNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssignmentNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["AssignmentNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["BlockNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConditionalNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ConditionalNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConstantNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ConstantNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionAssignmentNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["FunctionAssignmentNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["IndexNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ObjectNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OperatorNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["OperatorNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParenthesisNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ParenthesisNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["RangeNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RelationalNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["RelationalNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SymbolNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SymbolNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunctionNodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["FunctionNodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["parseDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compileDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compileDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "evaluateDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["evaluateDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParserDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ParserDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parserDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["parserDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lupDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lupDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "qrDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["qrDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sluDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sluDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lusolveDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["lusolveDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HelpDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["HelpDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChainDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["ChainDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "helpDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["helpDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chainDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["chainDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["detDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["invDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eigsDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["eigsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expmDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["expmDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sqrtmDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sqrtmDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divideDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["divideDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distanceDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["distanceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["intersectDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["meanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "medianDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["medianDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "madDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["madDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "varianceDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["varianceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantileSeqDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["quantileSeqDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stdDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["stdDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["combinationsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combinationsWithRepDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["combinationsWithRepDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gammaDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gammaDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "factorialDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["factorialDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kldivergenceDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["kldivergenceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multinomialDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["multinomialDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permutationsDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["permutationsDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pickRandomDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["pickRandomDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["randomDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomIntDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["randomIntDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stirlingS2Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["stirlingS2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bellNumbersDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bellNumbersDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catalanDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["catalanDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compositionDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["compositionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simplifyDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["simplifyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "derivativeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["derivativeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rationalizeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rationalizeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reviverDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["reviverDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replacerDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["replacerDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["eDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["EDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "falseDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["falseDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["iDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InfinityDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["InfinityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN10Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LN10Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LN2Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LN2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG10EDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LOG10EDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOG2EDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["LOG2EDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NaNDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["NaNDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["nullDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "phiDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["phiDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["piDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PIDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["PIDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT1_2Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SQRT1_2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SQRT2Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["SQRT2Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tauDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["tauDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trueDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["trueDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "versionDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["versionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atomicMassDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["atomicMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "avogadroDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["avogadroDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrMagnetonDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bohrMagnetonDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bohrRadiusDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["bohrRadiusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boltzmannDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["boltzmannDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classicalElectronRadiusDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["classicalElectronRadiusDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conductanceQuantumDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["conductanceQuantumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coulombDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["coulombDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deuteronMassDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["deuteronMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "efimovFactorDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["efimovFactorDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electricConstantDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["electricConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "electronMassDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["electronMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementaryChargeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["elementaryChargeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "faradayDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["faradayDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fermiCouplingDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fermiCouplingDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fineStructureDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["fineStructureDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "firstRadiationDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["firstRadiationDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gasConstantDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gasConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravitationConstantDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gravitationConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gravityDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["gravityDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hartreeEnergyDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["hartreeEnergyDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inverseConductanceQuantumDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["inverseConductanceQuantumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "klitzingDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["klitzingDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loschmidtDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["loschmidtDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticConstantDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["magneticConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "magneticFluxQuantumDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["magneticFluxQuantumDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarMassC12Dependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarMassC12Dependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarPlanckConstantDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarPlanckConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "molarVolumeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["molarVolumeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neutronMassDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["neutronMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nuclearMagnetonDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["nuclearMagnetonDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckChargeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckChargeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckConstantDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckLengthDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckLengthDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckMassDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTemperatureDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckTemperatureDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planckTimeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["planckTimeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "protonMassDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["protonMassDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantumOfCirculationDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["quantumOfCirculationDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reducedPlanckConstantDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["reducedPlanckConstantDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rydbergDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rydbergDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sackurTetrodeDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sackurTetrodeDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "secondRadiationDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["secondRadiationDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "speedOfLightDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["speedOfLightDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stefanBoltzmannDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["stefanBoltzmannDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thomsonCrossSectionDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["thomsonCrossSectionDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vacuumImpedanceDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["vacuumImpedanceDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "weakMixingAngleDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["weakMixingAngleDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wienDisplacementDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["wienDisplacementDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["applyTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "columnTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["columnTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["filterTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["forEachTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["indexTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["mapTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["maxTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["meanTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["minTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rangeTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rowTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["rowTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subsetTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["subsetTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["concatTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "diffTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["diffTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stdTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["stdTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["sumTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "varianceTransformDependencies", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["varianceTransformDependencies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "all", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["all"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTyped", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTyped"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createResultSet", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createResultSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBigNumberClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBigNumberClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComplexClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createComplexClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFractionClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFractionClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRangeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMatrixClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDenseMatrixClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDenseMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createClone", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createClone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsInteger", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIsInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNegative", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIsNegative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNumeric", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIsNumeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHasNumericValue", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createHasNumericValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsPositive", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIsPositive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsZero", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIsZero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsNaN", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIsNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTypeOf", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTypeOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqualScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createEqualScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSparseMatrixClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSparseMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNumber", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createString", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBoolean", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBignumber", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBignumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComplex", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createComplex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFraction", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMatrix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSplitUnit", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSplitUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnaryMinus", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUnaryMinus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnaryPlus", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUnaryPlus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAbs", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAbs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createApply", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createApply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAddScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAddScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCbrt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCbrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCeil", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCeil"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCube", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCube"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExp", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExpm1", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createExpm1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFix", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFloor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFloor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGcd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createGcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLcm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLcm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog10", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLog10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLog2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMod", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultiplyScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMultiplyScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultiply", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMultiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNthRoot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNthRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSign", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSign"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqrt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSquare", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSquare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubtract", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSubtract"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createXgcd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createXgcd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotMultiply", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDotMultiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitAnd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBitAnd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitNot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBitNot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitOr", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBitOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBitXor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBitXor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createArg", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createArg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConj", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createConj"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRe", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOr", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createXor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createXor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConcat", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createConcat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createColumn", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createColumn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCross", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiag", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDiag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFilter", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFlatten", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFlatten"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createForEach", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createForEach"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGetMatrixDataType", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createGetMatrixDataType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIdentity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIdentity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKron", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createKron"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMap", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiff", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDiff"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOnes", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createOnes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRange", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReshape", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createReshape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createResize", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createResize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRow", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSize", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqueeze", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSqueeze"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubset", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSubset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTranspose", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTranspose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCtranspose", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCtranspose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createZeros", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createZeros"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createErf", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createErf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createProd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createProd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFormat", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPrint", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPrint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTo", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIsPrime", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIsPrime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNumeric", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNumeric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDivideScalar", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDivideScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPow", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRound", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLog1p", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLog1p"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNthRoots", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNthRoots"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotPow", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDotPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDotDivide", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDotDivide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLsolve", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLsolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUsolve", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUsolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLeftShift", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLeftShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRightArithShift", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRightArithShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRightLogShift", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRightLogShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAnd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAnd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompare", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCompare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompareNatural", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCompareNatural"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompareText", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCompareText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqual", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEqualText", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createEqualText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSmaller", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSmaller"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSmallerEq", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSmallerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLarger", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLarger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLargerEq", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLargerEq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDeepEqual", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDeepEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnequal", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUnequal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPartitionSelect", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPartitionSelect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSort", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSort"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMax", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMax"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMin", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createImmutableDenseMatrixClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createImmutableDenseMatrixClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIndexClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFibonacciHeapClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFibonacciHeapClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSpaClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSpaClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUnitClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUnitFunction", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUnitFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSparse", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSparse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCreateUnit", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCreateUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcos", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAcos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcosh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAcosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAcot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcoth", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAcoth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcsc", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAcsc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAcsch", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAcsch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsec", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAsec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsech", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAsech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsin", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAsin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsinh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAsinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtan", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAtan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtan2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAtan2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtanh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAtanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCos", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCosh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCosh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCoth", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCoth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCsc", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCsc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCsch", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCsch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSec", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSech", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSech"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSin", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSinh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSinh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTan", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTanh", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTanh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetCartesian", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetCartesian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetDifference", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetDistinct", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetDistinct"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetIntersect", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetIntersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetIsSubset", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetIsSubset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetMultiplicity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetMultiplicity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetPowerset", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetPowerset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetSize", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetSymDifference", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetSymDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSetUnion", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSetUnion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAdd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAdd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHypot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createHypot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNorm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNorm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDot", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTrace", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTrace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndex", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAccessorNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAccessorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createArrayNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createArrayNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAssignmentNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBlockNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBlockNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConditionalNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createConditionalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConstantNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createConstantNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFunctionAssignmentNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFunctionAssignmentNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIndexNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createObjectNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createObjectNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createOperatorNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createOperatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParenthesisNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createParenthesisNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRangeNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRelationalNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRelationalNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSymbolNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSymbolNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFunctionNode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFunctionNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParse", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCompile", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCompile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEvaluate", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createEvaluate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParserClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createParserClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createParser", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createParser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLup", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQr", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createQr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSlu", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSlu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLusolve", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLusolve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHelpClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createHelpClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createChainClass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createChainClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHelp", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createHelp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createChain", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createChain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDet", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInv", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createInv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEigs", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createEigs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExpm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createExpm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSqrtm", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSqrtm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDivide", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDivide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDistance", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDistance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIntersect", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIntersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMean", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMedian", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMedian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMad", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVariance", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createVariance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQuantileSeq", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createQuantileSeq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStd", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createStd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCombinations", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCombinations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCombinationsWithRep", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCombinationsWithRep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGamma", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createGamma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFactorial", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFactorial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKldivergence", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createKldivergence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMultinomial", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMultinomial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPermutations", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPermutations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPickRandom", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPickRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRandom", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRandomInt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRandomInt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStirlingS2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createStirlingS2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBellNumbers", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBellNumbers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCatalan", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCatalan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createComposition", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createComposition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSimplify", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSimplify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDerivative", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDerivative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRationalize", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRationalize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReviver", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createReviver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReplacer", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createReplacer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createE", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUppercaseE", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUppercaseE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFalse", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFalse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createI", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInfinity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createInfinity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLN10", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLN10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLN2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLN2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLOG10E", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLOG10E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLOG2E", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLOG2E"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNaN", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNull", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPhi", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPhi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPi", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createUppercasePi", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createUppercasePi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSQRT1_2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSQRT1_2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSQRT2", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSQRT2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTau", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTau"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTrue", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createTrue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVersion", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createVersion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAtomicMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAtomicMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAvogadro", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createAvogadro"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBohrMagneton", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBohrMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBohrRadius", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBohrRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBoltzmann", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createClassicalElectronRadius", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createClassicalElectronRadius"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConductanceQuantum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCoulomb", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createCoulomb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDeuteronMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDeuteronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEfimovFactor", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createEfimovFactor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElectricConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createElectricConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElectronMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createElectronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElementaryCharge", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createElementaryCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFaraday", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFaraday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFermiCoupling", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFermiCoupling"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFineStructure", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFineStructure"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFirstRadiation", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFirstRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGasConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createGasConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGravitationConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createGravitationConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createGravity", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createGravity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHartreeEnergy", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createHartreeEnergy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInverseConductanceQuantum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createInverseConductanceQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createKlitzing", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createKlitzing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createLoschmidt", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createLoschmidt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMagneticConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMagneticConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMagneticFluxQuantum", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMagneticFluxQuantum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMolarMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarMassC12", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMolarMassC12"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarPlanckConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMolarPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMolarVolume", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMolarVolume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNeutronMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNeutronMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createNuclearMagneton", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createNuclearMagneton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckCharge", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPlanckCharge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckLength", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPlanckLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPlanckMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckTemperature", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPlanckTemperature"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createPlanckTime", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createPlanckTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createProtonMass", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createProtonMass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createQuantumOfCirculation", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createQuantumOfCirculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReducedPlanckConstant", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createReducedPlanckConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRydberg", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRydberg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSackurTetrode", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSackurTetrode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSecondRadiation", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSecondRadiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSpeedOfLight", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSpeedOfLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStefanBoltzmann", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createStefanBoltzmann"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createThomsonCrossSection", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createThomsonCrossSection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVacuumImpedance", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createVacuumImpedance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createWeakMixingAngle", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createWeakMixingAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createWienDisplacement", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createWienDisplacement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createApplyTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createApplyTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createColumnTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createColumnTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFilterTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createFilterTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createForEachTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createForEachTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIndexTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createIndexTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMapTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMapTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMaxTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMaxTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMeanTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMeanTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMinTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createMinTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRangeTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRangeTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRowTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createRowTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSubsetTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSubsetTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createConcatTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createConcatTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDiffTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createDiffTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStdTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createStdTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSumTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createSumTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createVarianceTransform", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["createVarianceTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["create"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "factory", function() { return _es_entry_mainAny__WEBPACK_IMPORTED_MODULE_0__["factory"]; });




/***/ }),

/***/ "../node_modules/seed-random/index.js":
/*!********************************************!*\
  !*** ../node_modules/seed-random/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var width = 256;// each RC4 output is 0 <= x < 256
var chunks = 6;// at least six RC4 outputs for each double
var digits = 52;// there are 52 significant digits in a double
var pool = [];// pool: entropy pool starts empty
var GLOBAL = typeof global === 'undefined' ? window : global;

//
// The following constants are related to IEEE 754 limits.
//
var startdenom = Math.pow(width, chunks),
    significance = Math.pow(2, digits),
    overflow = significance * 2,
    mask = width - 1;


var oldRandom = Math.random;

//
// seedrandom()
// This is the seedrandom function described above.
//
module.exports = function(seed, options) {
  if (options && options.global === true) {
    options.global = false;
    Math.random = module.exports(seed, options);
    options.global = true;
    return Math.random;
  }
  var use_entropy = (options && options.entropy) || false;
  var key = [];

  // Flatten the seed string or build one from local entropy if needed.
  var shortseed = mixkey(flatten(
    use_entropy ? [seed, tostring(pool)] :
    0 in arguments ? seed : autoseed(), 3), key);

  // Use the seed to initialize an ARC4 generator.
  var arc4 = new ARC4(key);

  // Mix the randomness into accumulated entropy.
  mixkey(tostring(arc4.S), pool);

  // Override Math.random

  // This function returns a random double in [0, 1) that contains
  // randomness in every bit of the mantissa of the IEEE 754 value.

  return function() {         // Closure to return a random double:
    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48
        d = startdenom,                 //   and denominator d = 2 ^ 48.
        x = 0;                          //   and no 'extra last byte'.
    while (n < significance) {          // Fill up all significant digits by
      n = (n + x) * width;              //   shifting numerator and
      d *= width;                       //   denominator and generating a
      x = arc4.g(1);                    //   new least-significant-byte.
    }
    while (n >= overflow) {             // To avoid rounding up, before adding
      n /= 2;                           //   last byte, shift everything
      d /= 2;                           //   right using integer Math until
      x >>>= 1;                         //   we have exactly the desired bits.
    }
    return (n + x) / d;                 // Form the number within [0, 1).
  };
};

module.exports.resetGlobal = function () {
  Math.random = oldRandom;
};

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
/** @constructor */
function ARC4(key) {
  var t, keylen = key.length,
      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];

  // The empty key [] is treated as [0].
  if (!keylen) { key = [keylen++]; }

  // Set up S using the standard key scheduling algorithm.
  while (i < width) {
    s[i] = i++;
  }
  for (i = 0; i < width; i++) {
    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];
    s[j] = t;
  }

  // The "g" method returns the next (count) outputs as one number.
  (me.g = function(count) {
    // Using instance members instead of closure state nearly doubles speed.
    var t, r = 0,
        i = me.i, j = me.j, s = me.S;
    while (count--) {
      t = s[i = mask & (i + 1)];
      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];
    }
    me.i = i; me.j = j;
    return r;
    // For robust unpredictability discard an initial batch of values.
    // See http://www.rsa.com/rsalabs/node.asp?id=2009
  })(width);
}

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
function flatten(obj, depth) {
  var result = [], typ = (typeof obj)[0], prop;
  if (depth && typ == 'o') {
    for (prop in obj) {
      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
    }
  }
  return (result.length ? result : typ == 's' ? obj : obj + '\0');
}

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
function mixkey(seed, key) {
  var stringseed = seed + '', smear, j = 0;
  while (j < stringseed.length) {
    key[mask & j] =
      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));
  }
  return tostring(key);
}

//
// autoseed()
// Returns an object for autoseeding, using window.crypto if available.
//
/** @param {Uint8Array=} seed */
function autoseed(seed) {
  try {
    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));
    return tostring(seed);
  } catch (e) {
    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,
            GLOBAL.screen, tostring(pool)];
  }
}

//
// tostring()
// Converts an array of charcodes to a string
//
function tostring(a) {
  return String.fromCharCode.apply(0, a);
}

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to intefere with determinstic PRNG state later,
// seedrandom will not call Math.random on its own again after
// initialization.
//
mixkey(Math.random(), pool);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/tiny-emitter/index.js":
/*!*********************************************!*\
  !*** ../node_modules/tiny-emitter/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function E () {
  // Keep this empty so it's easier to inherit from
  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)
}

E.prototype = {
  on: function (name, callback, ctx) {
    var e = this.e || (this.e = {});

    (e[name] || (e[name] = [])).push({
      fn: callback,
      ctx: ctx
    });

    return this;
  },

  once: function (name, callback, ctx) {
    var self = this;
    function listener () {
      self.off(name, listener);
      callback.apply(ctx, arguments);
    };

    listener._ = callback
    return this.on(name, listener, ctx);
  },

  emit: function (name) {
    var data = [].slice.call(arguments, 1);
    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
    var i = 0;
    var len = evtArr.length;

    for (i; i < len; i++) {
      evtArr[i].fn.apply(evtArr[i].ctx, data);
    }

    return this;
  },

  off: function (name, callback) {
    var e = this.e || (this.e = {});
    var evts = e[name];
    var liveEvents = [];

    if (evts && callback) {
      for (var i = 0, len = evts.length; i < len; i++) {
        if (evts[i].fn !== callback && evts[i].fn._ !== callback)
          liveEvents.push(evts[i]);
      }
    }

    // Remove event from queue to prevent memory leak
    // Suggested by https://github.com/lazd
    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910

    (liveEvents.length)
      ? e[name] = liveEvents
      : delete e[name];

    return this;
  }
};

module.exports = E;
module.exports.TinyEmitter = E;


/***/ }),

/***/ "../node_modules/typed-function/typed-function.js":
/*!********************************************************!*\
  !*** ../node_modules/typed-function/typed-function.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * typed-function
 *
 * Type checking for JavaScript functions
 *
 * https://github.com/josdejong/typed-function
 */


(function (root, factory) {
  if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, function () {

  function ok () {
    return true;
  }

  function notOk () {
    return false;
  }

  function undef () {
    return undefined;
  }

  /**
   * @typedef {{
   *   params: Param[],
   *   fn: function
   * }} Signature
   *
   * @typedef {{
   *   types: Type[],
   *   restParam: boolean
   * }} Param
   *
   * @typedef {{
   *   name: string,
   *   typeIndex: number,
   *   test: function,
   *   conversion?: ConversionDef,
   *   conversionIndex: number,
   * }} Type
   *
   * @typedef {{
   *   from: string,
   *   to: string,
   *   convert: function (*) : *
   * }} ConversionDef
   *
   * @typedef {{
   *   name: string,
   *   test: function(*) : boolean
   * }} TypeDef
   */

  // create a new instance of typed-function
  function create () {
    // data type tests
    var _types = [
      { name: 'number',    test: function (x) { return typeof x === 'number' } },
      { name: 'string',    test: function (x) { return typeof x === 'string' } },
      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },
      { name: 'Function',  test: function (x) { return typeof x === 'function'} },
      { name: 'Array',     test: Array.isArray },
      { name: 'Date',      test: function (x) { return x instanceof Date } },
      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },
      { name: 'Object',    test: function (x) {
        return typeof x === 'object' && x !== null && x.constructor === Object
      }},
      { name: 'null',      test: function (x) { return x === null } },
      { name: 'undefined', test: function (x) { return x === undefined } }
    ];

    var anyType = {
      name: 'any',
      test: ok
    }

    // types which need to be ignored
    var _ignore = [];

    // type conversions
    var _conversions = [];

    // This is a temporary object, will be replaced with a typed function at the end
    var typed = {
      types: _types,
      conversions: _conversions,
      ignore: _ignore
    };

    /**
     * Find the test function for a type
     * @param {String} typeName
     * @return {TypeDef} Returns the type definition when found,
     *                    Throws a TypeError otherwise
     */
    function findTypeByName (typeName) {
      var entry = findInArray(typed.types, function (entry) {
        return entry.name === typeName;
      });

      if (entry) {
        return entry;
      }

      if (typeName === 'any') { // special baked-in case 'any'
        return anyType;
      }

      var hint = findInArray(typed.types, function (entry) {
        return entry.name.toLowerCase() === typeName.toLowerCase();
      });

      throw new TypeError('Unknown type "' + typeName + '"' +
          (hint ? ('. Did you mean "' + hint.name + '"?') : ''));
    }

    /**
     * Find the index of a type definition. Handles special case 'any'
     * @param {TypeDef} type
     * @return {number}
     */
    function findTypeIndex(type) {
      if (type === anyType) {
        return 999;
      }

      return typed.types.indexOf(type);
    }

    /**
     * Find a type that matches a value.
     * @param {*} value
     * @return {string} Returns the name of the first type for which
     *                  the type test matches the value.
     */
    function findTypeName(value) {
      var entry = findInArray(typed.types, function (entry) {
        return entry.test(value);
      });

      if (entry) {
        return entry.name;
      }

      throw new TypeError('Value has unknown type. Value: ' + value);
    }

    /**
     * Find a specific signature from a (composed) typed function, for example:
     *
     *   typed.find(fn, ['number', 'string'])
     *   typed.find(fn, 'number, string')
     *
     * Function find only only works for exact matches.
     *
     * @param {Function} fn                   A typed-function
     * @param {string | string[]} signature   Signature to be found, can be
     *                                        an array or a comma separated string.
     * @return {Function}                     Returns the matching signature, or
     *                                        throws an error when no signature
     *                                        is found.
     */
    function find (fn, signature) {
      if (!fn.signatures) {
        throw new TypeError('Function is no typed-function');
      }

      // normalize input
      var arr;
      if (typeof signature === 'string') {
        arr = signature.split(',');
        for (var i = 0; i < arr.length; i++) {
          arr[i] = arr[i].trim();
        }
      }
      else if (Array.isArray(signature)) {
        arr = signature;
      }
      else {
        throw new TypeError('String array or a comma separated string expected');
      }

      var str = arr.join(',');

      // find an exact match
      var match = fn.signatures[str];
      if (match) {
        return match;
      }

      // TODO: extend find to match non-exact signatures

      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');
    }

    /**
     * Convert a given value to another data type.
     * @param {*} value
     * @param {string} type
     */
    function convert (value, type) {
      var from = findTypeName(value);

      // check conversion is needed
      if (type === from) {
        return value;
      }

      for (var i = 0; i < typed.conversions.length; i++) {
        var conversion = typed.conversions[i];
        if (conversion.from === from && conversion.to === type) {
          return conversion.convert(value);
        }
      }

      throw new Error('Cannot convert from ' + from + ' to ' + type);
    }
    
    /**
     * Stringify parameters in a normalized way
     * @param {Param[]} params
     * @return {string}
     */
    function stringifyParams (params) {
      return params
          .map(function (param) {
            var typeNames = param.types.map(getTypeName);

            return (param.restParam ? '...' : '') + typeNames.join('|');
          })
          .join(',');
    }

    /**
     * Parse a parameter, like "...number | boolean"
     * @param {string} param
     * @param {ConversionDef[]} conversions
     * @return {Param} param
     */
    function parseParam (param, conversions) {
      var restParam = param.indexOf('...') === 0;
      var types = (!restParam)
          ? param
          : (param.length > 3)
              ? param.slice(3)
              : 'any';

      var typeNames = types.split('|').map(trim)
          .filter(notEmpty)
          .filter(notIgnore);

      var matchingConversions = filterConversions(conversions, typeNames);

      var exactTypes = typeNames.map(function (typeName) {
        var type = findTypeByName(typeName);

        return {
          name: typeName,
          typeIndex: findTypeIndex(type),
          test: type.test,
          conversion: null,
          conversionIndex: -1
        };
      });

      var convertibleTypes = matchingConversions.map(function (conversion) {
        var type = findTypeByName(conversion.from);

        return {
          name: conversion.from,
          typeIndex: findTypeIndex(type),
          test: type.test,
          conversion: conversion,
          conversionIndex: conversions.indexOf(conversion)
        };
      });

      return {
        types: exactTypes.concat(convertibleTypes),
        restParam: restParam
      };
    }

    /**
     * Parse a signature with comma separated parameters,
     * like "number | boolean, ...string"
     * @param {string} signature
     * @param {function} fn
     * @param {ConversionDef[]} conversions
     * @return {Signature | null} signature
     */
    function parseSignature (signature, fn, conversions) {
      var params = [];

      if (signature.trim() !== '') {
        params = signature
            .split(',')
            .map(trim)
            .map(function (param, index, array) {
              var parsedParam = parseParam(param, conversions);

              if (parsedParam.restParam && (index !== array.length - 1)) {
                throw new SyntaxError('Unexpected rest parameter "' + param + '": ' +
                    'only allowed for the last parameter');
              }

              return parsedParam;
          });
      }

      if (params.some(isInvalidParam)) {
        // invalid signature: at least one parameter has no types
        // (they may have been filtered)
        return null;
      }

      return {
        params: params,
        fn: fn
      };
    }

    /**
     * Test whether a set of params contains a restParam
     * @param {Param[]} params
     * @return {boolean} Returns true when the last parameter is a restParam
     */
    function hasRestParam(params) {
      var param = last(params)
      return param ? param.restParam : false;
    }

    /**
     * Test whether a parameter contains conversions
     * @param {Param} param
     * @return {boolean} Returns true when at least one of the parameters
     *                   contains a conversion.
     */
    function hasConversions(param) {
      return param.types.some(function (type) {
        return type.conversion != null;
      });
    }

    /**
     * Create a type test for a single parameter, which can have one or multiple
     * types.
     * @param {Param} param
     * @return {function(x: *) : boolean} Returns a test function
     */
    function compileTest(param) {
      if (!param || param.types.length === 0) {
        // nothing to do
        return ok;
      }
      else if (param.types.length === 1) {
        return findTypeByName(param.types[0].name).test;
      }
      else if (param.types.length === 2) {
        var test0 = findTypeByName(param.types[0].name).test;
        var test1 = findTypeByName(param.types[1].name).test;
        return function or(x) {
          return test0(x) || test1(x);
        }
      }
      else { // param.types.length > 2
        var tests = param.types.map(function (type) {
          return findTypeByName(type.name).test;
        })
        return function or(x) {
          for (var i = 0; i < tests.length; i++) {
            if (tests[i](x)) {
              return true;
            }
          }
          return false;
        }
      }
    }

    /**
     * Create a test for all parameters of a signature
     * @param {Param[]} params
     * @return {function(args: Array<*>) : boolean}
     */
    function compileTests(params) {
      var tests, test0, test1;

      if (hasRestParam(params)) {
        // variable arguments like '...number'
        tests = initial(params).map(compileTest);
        var varIndex = tests.length;
        var lastTest = compileTest(last(params));
        var testRestParam = function (args) {
          for (var i = varIndex; i < args.length; i++) {
            if (!lastTest(args[i])) {
              return false;
            }
          }
          return true;
        }

        return function testArgs(args) {
          for (var i = 0; i < tests.length; i++) {
            if (!tests[i](args[i])) {
              return false;
            }
          }
          return testRestParam(args) && (args.length >= varIndex + 1);
        };
      }
      else {
        // no variable arguments
        if (params.length === 0) {
          return function testArgs(args) {
            return args.length === 0;
          };
        }
        else if (params.length === 1) {
          test0 = compileTest(params[0]);
          return function testArgs(args) {
            return test0(args[0]) && args.length === 1;
          };
        }
        else if (params.length === 2) {
          test0 = compileTest(params[0]);
          test1 = compileTest(params[1]);
          return function testArgs(args) {
            return test0(args[0]) && test1(args[1]) && args.length === 2;
          };
        }
        else { // arguments.length > 2
          tests = params.map(compileTest);
          return function testArgs(args) {
            for (var i = 0; i < tests.length; i++) {
              if (!tests[i](args[i])) {
                return false;
              }
            }
            return args.length === tests.length;
          };
        }
      }
    }

    /**
     * Find the parameter at a specific index of a signature.
     * Handles rest parameters.
     * @param {Signature} signature
     * @param {number} index
     * @return {Param | null} Returns the matching parameter when found,
     *                        null otherwise.
     */
    function getParamAtIndex(signature, index) {
      return index < signature.params.length
          ? signature.params[index]
          : hasRestParam(signature.params)
              ? last(signature.params)
              : null
    }

    /**
     * Get all type names of a parameter
     * @param {Signature} signature
     * @param {number} index
     * @param {boolean} excludeConversions
     * @return {string[]} Returns an array with type names
     */
    function getExpectedTypeNames (signature, index, excludeConversions) {
      var param = getParamAtIndex(signature, index);
      var types = param
          ? excludeConversions
                  ? param.types.filter(isExactType)
                  : param.types
          : [];

      return types.map(getTypeName);
    }

    /**
     * Returns the name of a type
     * @param {Type} type
     * @return {string} Returns the type name
     */
    function getTypeName(type) {
      return type.name;
    }

    /**
     * Test whether a type is an exact type or conversion
     * @param {Type} type
     * @return {boolean} Returns true when
     */
    function isExactType(type) {
      return type.conversion === null || type.conversion === undefined;
    }

    /**
     * Helper function for creating error messages: create an array with
     * all available types on a specific argument index.
     * @param {Signature[]} signatures
     * @param {number} index
     * @return {string[]} Returns an array with available types
     */
    function mergeExpectedParams(signatures, index) {
      var typeNames = uniq(flatMap(signatures, function (signature) {
        return getExpectedTypeNames(signature, index, false);
      }));

      return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;
    }

    /**
     * Create
     * @param {string} name             The name of the function
     * @param {array.<*>} args          The actual arguments passed to the function
     * @param {Signature[]} signatures  A list with available signatures
     * @return {TypeError} Returns a type error with additional data
     *                     attached to it in the property `data`
     */
    function createError(name, args, signatures) {
      var err, expected;
      var _name = name || 'unnamed';

      // test for wrong type at some index
      var matchingSignatures = signatures;
      var index;
      for (index = 0; index < args.length; index++) {
        var nextMatchingDefs = matchingSignatures.filter(function (signature) {
          var test = compileTest(getParamAtIndex(signature, index));
          return (index < signature.params.length || hasRestParam(signature.params)) &&
              test(args[index]);
        });

        if (nextMatchingDefs.length === 0) {
          // no matching signatures anymore, throw error "wrong type"
          expected = mergeExpectedParams(matchingSignatures, index);
          if (expected.length > 0) {
            var actualType = findTypeName(args[index]);

            err = new TypeError('Unexpected type of argument in function ' + _name +
                ' (expected: ' + expected.join(' or ') +
                ', actual: ' + actualType + ', index: ' + index + ')');
            err.data = {
              category: 'wrongType',
              fn: _name,
              index: index,
              actual: actualType,
              expected: expected
            }
            return err;
          }
        }
        else {
          matchingSignatures = nextMatchingDefs;
        }
      }

      // test for too few arguments
      var lengths = matchingSignatures.map(function (signature) {
        return hasRestParam(signature.params) ? Infinity : signature.params.length;
      });
      if (args.length < Math.min.apply(null, lengths)) {
        expected = mergeExpectedParams(matchingSignatures, index);
        err = new TypeError('Too few arguments in function ' + _name +
            ' (expected: ' + expected.join(' or ') +
            ', index: ' + args.length + ')');
        err.data = {
          category: 'tooFewArgs',
          fn: _name,
          index: args.length,
          expected: expected
        }
        return err;
      }

      // test for too many arguments
      var maxLength = Math.max.apply(null, lengths);
      if (args.length > maxLength) {
        err = new TypeError('Too many arguments in function ' + _name +
            ' (expected: ' + maxLength + ', actual: ' + args.length + ')');
        err.data = {
          category: 'tooManyArgs',
          fn: _name,
          index: args.length,
          expectedLength: maxLength
        }
        return err;
      }

      err = new TypeError('Arguments of type "' + args.join(', ') +
          '" do not match any of the defined signatures of function ' + _name + '.');
      err.data = {
        category: 'mismatch',
        actual: args.map(findTypeName)
      }
      return err;
    }

    /**
     * Find the lowest index of all exact types of a parameter (no conversions)
     * @param {Param} param
     * @return {number} Returns the index of the lowest type in typed.types
     */
    function getLowestTypeIndex (param) {
      var min = 999;

      for (var i = 0; i < param.types.length; i++) {
        if (isExactType(param.types[i])) {
          min = Math.min(min, param.types[i].typeIndex);
        }
      }

      return min;
    }

    /**
     * Find the lowest index of the conversion of all types of the parameter
     * having a conversion
     * @param {Param} param
     * @return {number} Returns the lowest index of the conversions of this type
     */
    function getLowestConversionIndex (param) {
      var min = 999;

      for (var i = 0; i < param.types.length; i++) {
        if (!isExactType(param.types[i])) {
          min = Math.min(min, param.types[i].conversionIndex);
        }
      }

      return min;
    }

    /**
     * Compare two params
     * @param {Param} param1
     * @param {Param} param2
     * @return {number} returns a negative number when param1 must get a lower
     *                  index than param2, a positive number when the opposite,
     *                  or zero when both are equal
     */
    function compareParams (param1, param2) {
      var c;

      // compare having a rest parameter or not
      c = param1.restParam - param2.restParam;
      if (c !== 0) {
        return c;
      }

      // compare having conversions or not
      c = hasConversions(param1) - hasConversions(param2);
      if (c !== 0) {
        return c;
      }

      // compare the index of the types
      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);
      if (c !== 0) {
        return c;
      }

      // compare the index of any conversion
      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);
    }

    /**
     * Compare two signatures
     * @param {Signature} signature1
     * @param {Signature} signature2
     * @return {number} returns a negative number when param1 must get a lower
     *                  index than param2, a positive number when the opposite,
     *                  or zero when both are equal
     */
    function compareSignatures (signature1, signature2) {
      var len = Math.min(signature1.params.length, signature2.params.length);
      var i;
      var c;

      // compare whether the params have conversions at all or not
      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions)
      if (c !== 0) {
        return c;
      }

      // next compare whether the params have conversions one by one
      for (i = 0; i < len; i++) {
        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);
        if (c !== 0) {
          return c;
        }
      }

      // compare the types of the params one by one
      for (i = 0; i < len; i++) {
        c = compareParams(signature1.params[i], signature2.params[i]);
        if (c !== 0) {
          return c;
        }
      }

      // compare the number of params
      return signature1.params.length - signature2.params.length;
    }

    /**
     * Get params containing all types that can be converted to the defined types.
     *
     * @param {ConversionDef[]} conversions
     * @param {string[]} typeNames
     * @return {ConversionDef[]} Returns the conversions that are available
     *                        for every type (if any)
     */
    function filterConversions(conversions, typeNames) {
      var matches = {};

      conversions.forEach(function (conversion) {
        if (typeNames.indexOf(conversion.from) === -1 &&
            typeNames.indexOf(conversion.to) !== -1 &&
            !matches[conversion.from]) {
          matches[conversion.from] = conversion;
        }
      });

      return Object.keys(matches).map(function (from) {
        return matches[from];
      });
    }

    /**
     * Preprocess arguments before calling the original function:
     * - if needed convert the parameters
     * - in case of rest parameters, move the rest parameters into an Array
     * @param {Param[]} params
     * @param {function} fn
     * @return {function} Returns a wrapped function
     */
    function compileArgsPreprocessing(params, fn) {
      var fnConvert = fn;

      // TODO: can we make this wrapper function smarter/simpler?

      if (params.some(hasConversions)) {
        var restParam = hasRestParam(params);
        var compiledConversions = params.map(compileArgConversion)

        fnConvert = function convertArgs() {
          var args = [];
          var last = restParam ? arguments.length - 1 : arguments.length;
          for (var i = 0; i < last; i++) {
            args[i] = compiledConversions[i](arguments[i]);
          }
          if (restParam) {
            args[last] = arguments[last].map(compiledConversions[last]);
          }

          return fn.apply(this, args);
        }
      }

      var fnPreprocess = fnConvert;
      if (hasRestParam(params)) {
        var offset = params.length - 1;

        fnPreprocess = function preprocessRestParams () {
          return fnConvert.apply(this,
              slice(arguments, 0, offset).concat([slice(arguments, offset)]));
        }
      }

      return fnPreprocess;
    }

    /**
     * Compile conversion for a parameter to the right type
     * @param {Param} param
     * @return {function} Returns the wrapped function that will convert arguments
     *
     */
    function compileArgConversion(param) {
      var test0, test1, conversion0, conversion1;
      var tests = [];
      var conversions = [];

      param.types.forEach(function (type) {
        if (type.conversion) {
          tests.push(findTypeByName(type.conversion.from).test);
          conversions.push(type.conversion.convert);
        }
      });

      // create optimized conversion functions depending on the number of conversions
      switch (conversions.length) {
        case 0:
          return function convertArg(arg) {
            return arg;
          }

        case 1:
          test0 = tests[0]
          conversion0 = conversions[0];
          return function convertArg(arg) {
            if (test0(arg)) {
              return conversion0(arg)
            }
            return arg;
          }

        case 2:
          test0 = tests[0]
          test1 = tests[1]
          conversion0 = conversions[0];
          conversion1 = conversions[1];
          return function convertArg(arg) {
            if (test0(arg)) {
              return conversion0(arg)
            }
            if (test1(arg)) {
              return conversion1(arg)
            }
            return arg;
          }

        default:
          return function convertArg(arg) {
            for (var i = 0; i < conversions.length; i++) {
              if (tests[i](arg)) {
                return conversions[i](arg);
              }
            }
            return arg;
          }
      }
    }

    /**
     * Convert an array with signatures into a map with signatures,
     * where signatures with union types are split into separate signatures
     *
     * Throws an error when there are conflicting types
     *
     * @param {Signature[]} signatures
     * @return {Object.<string, function>}  Returns a map with signatures
     *                                      as key and the original function
     *                                      of this signature as value.
     */
    function createSignaturesMap(signatures) {
      var signaturesMap = {};
      signatures.forEach(function (signature) {
        if (!signature.params.some(hasConversions)) {
          splitParams(signature.params, true).forEach(function (params) {
            signaturesMap[stringifyParams(params)] = signature.fn;
          });
        }
      });

      return signaturesMap;
    }

    /**
     * Split params with union types in to separate params.
     *
     * For example:
     *
     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])
     *     // returns:
     *     // [
     *     //   ['Array', 'string'],
     *     //   ['Array', 'RegExp'],
     *     //   ['Object', 'string'],
     *     //   ['Object', 'RegExp']
     *     // ]
     *
     * @param {Param[]} params
     * @param {boolean} ignoreConversionTypes
     * @return {Param[]}
     */
    function splitParams(params, ignoreConversionTypes) {
      function _splitParams(params, index, types) {
        if (index < params.length) {
          var param = params[index]
          var filteredTypes = ignoreConversionTypes
              ? param.types.filter(isExactType)
              : param.types;
          var typeGroups

          if (param.restParam) {
            // split the types of a rest parameter in two:
            // one with only exact types, and one with exact types and conversions
            var exactTypes = filteredTypes.filter(isExactType)
            typeGroups = exactTypes.length < filteredTypes.length
                ? [exactTypes, filteredTypes]
                : [filteredTypes]

          }
          else {
            // split all the types of a regular parameter into one type per group
            typeGroups = filteredTypes.map(function (type) {
              return [type]
            })
          }

          // recurse over the groups with types
          return flatMap(typeGroups, function (typeGroup) {
            return _splitParams(params, index + 1, types.concat([typeGroup]));
          });

        }
        else {
          // we've reached the end of the parameters. Now build a new Param
          var splittedParams = types.map(function (type, typeIndex) {
            return {
              types: type,
              restParam: (typeIndex === params.length - 1) && hasRestParam(params)
            }
          });

          return [splittedParams];
        }
      }

      return _splitParams(params, 0, []);
    }

    /**
     * Test whether two signatures have a conflicting signature
     * @param {Signature} signature1
     * @param {Signature} signature2
     * @return {boolean} Returns true when the signatures conflict, false otherwise.
     */
    function hasConflictingParams(signature1, signature2) {
      var ii = Math.max(signature1.params.length, signature2.params.length);

      for (var i = 0; i < ii; i++) {
        var typesNames1 = getExpectedTypeNames(signature1, i, true);
        var typesNames2 = getExpectedTypeNames(signature2, i, true);

        if (!hasOverlap(typesNames1, typesNames2)) {
          return false;
        }
      }

      var len1 = signature1.params.length;
      var len2 = signature2.params.length;
      var restParam1 = hasRestParam(signature1.params);
      var restParam2 = hasRestParam(signature2.params);

      return restParam1
          ? restParam2 ? (len1 === len2) : (len2 >= len1)
          : restParam2 ? (len1 >= len2)  : (len1 === len2)
    }

    /**
     * Create a typed function
     * @param {String} name               The name for the typed function
     * @param {Object.<string, function>} signaturesMap
     *                                    An object with one or
     *                                    multiple signatures as key, and the
     *                                    function corresponding to the
     *                                    signature as value.
     * @return {function}  Returns the created typed function.
     */
    function createTypedFunction(name, signaturesMap) {
      if (Object.keys(signaturesMap).length === 0) {
        throw new SyntaxError('No signatures provided');
      }

      // parse the signatures, and check for conflicts
      var parsedSignatures = [];
      Object.keys(signaturesMap)
          .map(function (signature) {
            return parseSignature(signature, signaturesMap[signature], typed.conversions);
          })
          .filter(notNull)
          .forEach(function (parsedSignature) {
            // check whether this parameter conflicts with already parsed signatures
            var conflictingSignature = findInArray(parsedSignatures, function (s) {
              return hasConflictingParams(s, parsedSignature)
            });
            if (conflictingSignature) {
              throw new TypeError('Conflicting signatures "' +
                  stringifyParams(conflictingSignature.params) + '" and "' +
                  stringifyParams(parsedSignature.params) + '".');
            }

            parsedSignatures.push(parsedSignature);
          });

      // split and filter the types of the signatures, and then order them
      var signatures = flatMap(parsedSignatures, function (parsedSignature) {
        var params = parsedSignature ? splitParams(parsedSignature.params, false) : []

        return params.map(function (params) {
          return {
            params: params,
            fn: parsedSignature.fn
          };
        });
      }).filter(notNull);

      signatures.sort(compareSignatures);

      // we create a highly optimized checks for the first couple of signatures with max 2 arguments
      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);
      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);
      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);
      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);
      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);
      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);
      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;

      // compile the tests
      var tests = signatures.map(function (signature) {
        return compileTests(signature.params);
      });

      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;
      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;
      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;
      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;
      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;
      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;

      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;
      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;
      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;
      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;
      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;
      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;

      // compile the functions
      var fns = signatures.map(function(signature) {
        return compileArgsPreprocessing(signature.params, signature.fn);
      });

      var fn0 = ok0 ? fns[0] : undef;
      var fn1 = ok1 ? fns[1] : undef;
      var fn2 = ok2 ? fns[2] : undef;
      var fn3 = ok3 ? fns[3] : undef;
      var fn4 = ok4 ? fns[4] : undef;
      var fn5 = ok5 ? fns[5] : undef;

      var len0 = ok0 ? signatures[0].params.length : -1;
      var len1 = ok1 ? signatures[1].params.length : -1;
      var len2 = ok2 ? signatures[2].params.length : -1;
      var len3 = ok3 ? signatures[3].params.length : -1;
      var len4 = ok4 ? signatures[4].params.length : -1;
      var len5 = ok5 ? signatures[5].params.length : -1;

      // simple and generic, but also slow
      var iStart = allOk ? 6 : 0;
      var iEnd = signatures.length;
      var generic = function generic() {
        'use strict';

        for (var i = iStart; i < iEnd; i++) {
          if (tests[i](arguments)) {
            return fns[i].apply(this, arguments);
          }
        }

        throw createError(name, arguments, signatures);
      }

      // create the typed function
      // fast, specialized version. Falls back to the slower, generic one if needed
      var fn = function fn(arg0, arg1) {
        'use strict';

        if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(fn, arguments); }
        if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(fn, arguments); }
        if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(fn, arguments); }
        if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(fn, arguments); }
        if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(fn, arguments); }
        if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(fn, arguments); }

        return generic.apply(fn, arguments);
      }

      // attach name the typed function
      try {
        Object.defineProperty(fn, 'name', {value: name});
      }
      catch (err) {
        // old browsers do not support Object.defineProperty and some don't support setting the name property
        // the function name is not essential for the functioning, it's mostly useful for debugging,
        // so it's fine to have unnamed functions.
      }

      // attach signatures to the function
      fn.signatures = createSignaturesMap(signatures);

      return fn;
    }

    /**
     * Test whether a type should be NOT be ignored
     * @param {string} typeName
     * @return {boolean}
     */
    function notIgnore(typeName) {
      return typed.ignore.indexOf(typeName) === -1;
    }

    /**
     * trim a string
     * @param {string} str
     * @return {string}
     */
    function trim(str) {
      return str.trim();
    }

    /**
     * Test whether a string is not empty
     * @param {string} str
     * @return {boolean}
     */
    function notEmpty(str) {
      return !!str;
    }

    /**
     * test whether a value is not strict equal to null
     * @param {*} value
     * @return {boolean}
     */
    function notNull(value) {
      return value !== null;
    }

    /**
     * Test whether a parameter has no types defined
     * @param {Param} param
     * @return {boolean}
     */
    function isInvalidParam (param) {
      return param.types.length === 0;
    }

    /**
     * Return all but the last items of an array
     * @param {Array} arr
     * @return {Array}
     */
    function initial(arr) {
      return arr.slice(0, arr.length - 1);
    }

    /**
     * return the last item of an array
     * @param {Array} arr
     * @return {*}
     */
    function last(arr) {
      return arr[arr.length - 1];
    }

    /**
     * Slice an array or function Arguments
     * @param {Array | Arguments | IArguments} arr
     * @param {number} start
     * @param {number} [end]
     * @return {Array}
     */
    function slice(arr, start, end) {
      return Array.prototype.slice.call(arr, start, end);
    }

    /**
     * Test whether an array contains some item
     * @param {Array} array
     * @param {*} item
     * @return {boolean} Returns true if array contains item, false if not.
     */
    function contains(array, item) {
      return array.indexOf(item) !== -1;
    }

    /**
     * Test whether two arrays have overlapping items
     * @param {Array} array1
     * @param {Array} array2
     * @return {boolean} Returns true when at least one item exists in both arrays
     */
    function hasOverlap(array1, array2) {
      for (var i = 0; i < array1.length; i++) {
        if (contains(array2, array1[i])) {
          return true;
        }
      }

      return false;
    }

    /**
     * Return the first item from an array for which test(arr[i]) returns true
     * @param {Array} arr
     * @param {function} test
     * @return {* | undefined} Returns the first matching item
     *                         or undefined when there is no match
     */
    function findInArray(arr, test) {
      for (var i = 0; i < arr.length; i++) {
        if (test(arr[i])) {
          return arr[i];
        }
      }
      return undefined;
    }

    /**
     * Filter unique items of an array with strings
     * @param {string[]} arr
     * @return {string[]}
     */
    function uniq(arr) {
      var entries = {}
      for (var i = 0; i < arr.length; i++) {
        entries[arr[i]] = true;
      }
      return Object.keys(entries);
    }

    /**
     * Flat map the result invoking a callback for every item in an array.
     * https://gist.github.com/samgiles/762ee337dff48623e729
     * @param {Array} arr
     * @param {function} callback
     * @return {Array}
     */
    function flatMap(arr, callback) {
      return Array.prototype.concat.apply([], arr.map(callback));
    }

    /**
     * Retrieve the function name from a set of typed functions,
     * and check whether the name of all functions match (if given)
     * @param {function[]} fns
     */
    function getName (fns) {
      var name = '';

      for (var i = 0; i < fns.length; i++) {
        var fn = fns[i];

        // check whether the names are the same when defined
        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {
          if (name === '') {
            name = fn.name;
          }
          else if (name !== fn.name) {
            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');
            err.data = {
              actual: fn.name,
              expected: name
            };
            throw err;
          }
        }
      }

      return name;
    }

    // extract and merge all signatures of a list with typed functions
    function extractSignatures(fns) {
      var err;
      var signaturesMap = {};

      function validateUnique(_signature, _fn) {
        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {
          err = new Error('Signature "' + _signature + '" is defined twice');
          err.data = {signature: _signature};
          throw err;
          // else: both signatures point to the same function, that's fine
        }
      }

      for (var i = 0; i < fns.length; i++) {
        var fn = fns[i];

        // test whether this is a typed-function
        if (typeof fn.signatures === 'object') {
          // merge the signatures
          for (var signature in fn.signatures) {
            if (fn.signatures.hasOwnProperty(signature)) {
              validateUnique(signature, fn.signatures[signature]);
              signaturesMap[signature] = fn.signatures[signature];
            }
          }
        }
        else if (typeof fn.signature === 'string') {
          validateUnique(fn.signature, fn);
          signaturesMap[fn.signature] = fn;
        }
        else {
          err = new TypeError('Function is no typed-function (index: ' + i + ')');
          err.data = {index: i};
          throw err;
        }
      }

      return signaturesMap;
    }

    typed = createTypedFunction('typed', {
      'string, Object': createTypedFunction,
      'Object': function (signaturesMap) {
        // find existing name
        var fns = [];
        for (var signature in signaturesMap) {
          if (signaturesMap.hasOwnProperty(signature)) {
            fns.push(signaturesMap[signature]);
          }
        }
        var name = getName(fns);
        return createTypedFunction(name, signaturesMap);
      },
      '...Function': function (fns) {
        return createTypedFunction(getName(fns), extractSignatures(fns));
      },
      'string, ...Function': function (name, fns) {
        return createTypedFunction(name, extractSignatures(fns));
      }
    });

    typed.create = create;
    typed.types = _types;
    typed.conversions = _conversions;
    typed.ignore = _ignore;
    typed.convert = convert;
    typed.find = find;

    /**
     * add a type
     * @param {{name: string, test: function}} type
     * @param {boolean} [beforeObjectTest=true]
     *                          If true, the new test will be inserted before
     *                          the test with name 'Object' (if any), since
     *                          tests for Object match Array and classes too.
     */
    typed.addType = function (type, beforeObjectTest) {
      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {
        throw new TypeError('Object with properties {name: string, test: function} expected');
      }

      if (beforeObjectTest !== false) {
        for (var i = 0; i < typed.types.length; i++) {
          if (typed.types[i].name === 'Object') {
            typed.types.splice(i, 0, type);
            return
          }
        }
      }

      typed.types.push(type);
    };

    // add a conversion
    typed.addConversion = function (conversion) {
      if (!conversion
          || typeof conversion.from !== 'string'
          || typeof conversion.to !== 'string'
          || typeof conversion.convert !== 'function') {
        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');
      }

      typed.conversions.push(conversion);
    };

    return typed;
  }

  return create();
}));


/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "../src/BeholderStyles.css":
/*!*********************************!*\
  !*** ../src/BeholderStyles.css ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "../node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default.a);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "#beholder-overlay {\n  top: 0;\n  left: 0;\n  position: absolute;\n}\n\n#beholder-video {\n  display: none;\n}\n\n.hidden {\n  display: none;\n}\n\n#detection-panel {\n  width: min(90vw, 800px);\n  height: 90vh;\n  margin: 5vh calc(50vw - 0.5 * min(90vw, 800px));\n  box-sizing: border-box;\n  z-index: 999;\n  /* display: none; */\n  background: black;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  color: white;\n  \n  font-family: monospace;\n  font-size: 12px;\n  position: relative;\n}\n\n#detection-panel #full-video-div {\n  position: relative;\n  float: left;\n  width: 100%;\n}\n\n#full-video-div canvas {\n  position: relative;\n  width: 100%;\n}\n\n#full-video-div #detection-area {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  border: 1px solid #00FF00;\n}\n\n#detection-panel #detection-video-div {\n  position: relative;\n  float: left;\n  width: 100%;\n}\n\n#detection-video-div #detection-canvas {\n  position: relative;\n  width: 100%;\n}\n\n#area-buttons {\n  position: relative;\n  float: left;\n  width: 100%;\n  height: 5em;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n#area-buttons button {\n  padding: 0.5em 1em;\n  margin: 1em;\n}\n\n#detection-video-div #debug-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n#detection-panel #parameters-menu {\n  position: relative;\n  float: left;\n  clear: both;\n  margin: 1em 0 1em 0em;\n  padding: 1em 1.5em 1em 1.5em;\n  background: black;\n}\n\n#detection-panel #parameters-menu .parameter-item {\n  position: relative;\n  float: left;\n  clear: both;\n  margin: 0.25em 0 0.25em 0;\n}\n\n#detection-panel #parameters-menu .parameter-item span {\n  position: relative;\n  float: left;\n  width: 18em;\n  font-weight: 600;\n  color: white;\n}\n\n\n#toggle-screen {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  width: 60px;\n  height: 60px;\n  background: #000;\n  z-index: 9999;\n  color: white;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 400;\n  padding: 18px 0;\n  border-radius: 30px;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition: all 100ms ease-in;\n}\n\n#toggle-screen:hover, #toggle-screen:active {\n  background: white;\n  color: black;\n}\n\n#beholder-video {\n  display: none;\n}\n", "",{"version":3,"sources":["webpack://./../src/BeholderStyles.css"],"names":[],"mappings":"AAAA;EACE,MAAM;EACN,OAAO;EACP,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,+CAA+C;EAC/C,sBAAsB;EACtB,YAAY;EACZ,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,YAAY;;EAEZ,sBAAsB;EACtB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,qBAAqB;EACrB,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,gBAAgB;EAChB,YAAY;AACd;;;AAGA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,gBAAgB;EAChB,eAAe;EACf,mBAAmB;EACnB,sBAAsB;EACtB,eAAe;EACf,6BAA6B;AAC/B;;AAEA;EACE,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,aAAa;AACf","sourcesContent":["#beholder-overlay {\n  top: 0;\n  left: 0;\n  position: absolute;\n}\n\n#beholder-video {\n  display: none;\n}\n\n.hidden {\n  display: none;\n}\n\n#detection-panel {\n  width: min(90vw, 800px);\n  height: 90vh;\n  margin: 5vh calc(50vw - 0.5 * min(90vw, 800px));\n  box-sizing: border-box;\n  z-index: 999;\n  /* display: none; */\n  background: black;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  color: white;\n  \n  font-family: monospace;\n  font-size: 12px;\n  position: relative;\n}\n\n#detection-panel #full-video-div {\n  position: relative;\n  float: left;\n  width: 100%;\n}\n\n#full-video-div canvas {\n  position: relative;\n  width: 100%;\n}\n\n#full-video-div #detection-area {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  border: 1px solid #00FF00;\n}\n\n#detection-panel #detection-video-div {\n  position: relative;\n  float: left;\n  width: 100%;\n}\n\n#detection-video-div #detection-canvas {\n  position: relative;\n  width: 100%;\n}\n\n#area-buttons {\n  position: relative;\n  float: left;\n  width: 100%;\n  height: 5em;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n#area-buttons button {\n  padding: 0.5em 1em;\n  margin: 1em;\n}\n\n#detection-video-div #debug-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n#detection-panel #parameters-menu {\n  position: relative;\n  float: left;\n  clear: both;\n  margin: 1em 0 1em 0em;\n  padding: 1em 1.5em 1em 1.5em;\n  background: black;\n}\n\n#detection-panel #parameters-menu .parameter-item {\n  position: relative;\n  float: left;\n  clear: both;\n  margin: 0.25em 0 0.25em 0;\n}\n\n#detection-panel #parameters-menu .parameter-item span {\n  position: relative;\n  float: left;\n  width: 18em;\n  font-weight: 600;\n  color: white;\n}\n\n\n#toggle-screen {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  width: 60px;\n  height: 60px;\n  background: #000;\n  z-index: 9999;\n  color: white;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 400;\n  padding: 18px 0;\n  border-radius: 30px;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition: all 100ms ease-in;\n}\n\n#toggle-screen:hover, #toggle-screen:active {\n  background: white;\n  color: black;\n}\n\n#beholder-video {\n  display: none;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../src/DetectionManager.js":
/*!**********************************!*\
  !*** ../src/DetectionManager.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _aruco_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aruco/index.js */ "../src/aruco/index.js");


class DetectionManager {
  constructor(canvas, video) {
    this.canvas = canvas;
    this.ctx = this.canvas.getContext('2d');
    this.video = video;
    this.detector = new _aruco_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].Detector();
  }

  detect(dt, feedParams, detectionParams) {
    if (this.video && this.video.readyState === 4) {
      const areaWidth = detectionParams.area.end.x - detectionParams.area.start.x;
      const areaHeight = detectionParams.area.end.y - detectionParams.area.start.y;

      if (this.video.width > 20 && this.canvas.width !== this.video.width * areaWidth) {
        // base it off of the actual area
        this.canvas.width = this.video.width * areaWidth;
        this.canvas.height = this.video.height * areaHeight;
      } // apply filter here


      this.ctx.filter = `contrast(${(100 + Math.floor(feedParams.contrast)) / 100})
      brightness(${(100 + Math.floor(feedParams.brightness)) / 100})
      grayscale(${Math.floor(feedParams.grayscale) / 100})`;

      if (feedParams.flip) {
        this.ctx.save();
        this.ctx.translate(this.canvas.width, 0);
        this.ctx.scale(-1, 1); // Render video frame
        // this is where we draw sub image stuff

        this.ctx.drawImage(this.video, detectionParams.area.start.x * this.video.width, detectionParams.area.start.y * this.video.height, this.canvas.width, this.canvas.height, 0, 0, this.canvas.width, this.canvas.height);
        this.ctx.restore();
      } else {
        // Render video frame
        // this is where we draw sub image stuff
        this.ctx.drawImage(this.video, detectionParams.area.start.x * this.video.width, detectionParams.area.start.y * this.video.height, this.canvas.width, this.canvas.height, 0, 0, this.canvas.width, this.canvas.height);
      } // i think this uses dx and dy :()


      let imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);
      let m = [this.detector.detect(imageData, detectionParams), dt, this.canvas.width, this.canvas.height];
      return m;
    } else {
      return [[], dt, this.canvas.width, this.canvas.height];
    }
  }

}

/* harmony default export */ __webpack_exports__["default"] = (DetectionManager);

/***/ }),

/***/ "../src/HTMLOverlay.js":
/*!*****************************!*\
  !*** ../src/HTMLOverlay.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Beholder HTML
/* harmony default export */ __webpack_exports__["default"] = ((config, styles) => `
<div id="beholder-overlay" class="active">
  <style type="text/css">
  ${styles}
  </style>

  <div id="toggle-screen">
  â˜°
  </div>

  <div id="detection-panel" ${config.overlay_params.hide ? 'class="hidden"' : ''}>
    
    <div id="full-video-div">
      <video id="beholder-video" playsinline="true"></video>
      <canvas id="detection-canvas-overlay"></canvas>
    </div>
    
    <div id="area-buttons">
      <button id="set-area" class="parameter-item">Set Detection Area</button>
      <div id="set-area-instructions"></div>
      <button id="clear-area" class="parameter-item">Clear Detection Area</button>
    </div>
    
    <div id="detection-video-div">
      <canvas id="detection-canvas"></canvas>
      <canvas id="debug-canvas"></canvas>
    </div>

    <div id="parameters-menu" >
      <div class="parameter-item">
        <span>Camera Feed ID</span>
        <select name="CAMERA_INDEX" id="camera_param_id" class="param-input">
          <option value="0" label="0" selected></option>
        </select>
      </div>

      <div class="parameter-item">
        <span>Video Size</span>
        <select name="VIDEO_SIZE_INDEX" id="camera_param_videoSize" class="param-input">
          <option value="0" label="320&times;240" ${config.camera_params.videoSize == 0 ? 'selected' : ''}></option>
          <option value="1" label="640&times;480" ${config.camera_params.videoSize == 1 ? 'selected' : ''}></option>
          <option value="2" label="1280&times;720" ${config.camera_params.videoSize == 2 ? 'selected' : ''}></option>
          <option value="2" label="1920&times;1080" ${config.camera_params.videoSize == 3 ? 'selected' : ''}></option>
        </select>
      </div>

      <div class="parameter-item">
        <span>Min Marker Distance</span>
        <input
          id="detection_params-minMarkerDistance"
          class="param-input"
          type="number"
          name="MIN_MARKER_DISTANCE"
          min="1"
          max="50"
          value="${config.detection_params.minMarkerDistance}"
          step="1"
        />
      </div>

      <div class="parameter-item">
        <span>Min Marker Perimeter</span>
        <input
          id="detection_params-minMarkerPerimeter"
          class="param-input"
          type="number"
          name="MIN_MARKER_PERIMETER"
          min="0.01"
          max="0.99"
          value="${config.detection_params.minMarkerPerimeter}"
          step="0.01"
        />
      </div>
      <div class="parameter-item">
        <span>Max Marker Perimeter</span>
        <input
          id="detection_params-maxMarkerPerimeter"
          class="param-input"
          type="number"
          name="MAX_MARKER_PERIMETER"
          min="0.01"
          max="4.00"
          value="${config.detection_params.maxMarkerPerimeter}"
          step="0.01"
        />
      </div>

      <div class="parameter-item">
        <span>Size After Perspective Removal</span>
        <input
          id="detection_params-sizeAfterPerspectiveRemoval"
          class="param-input"
          type="number"
          name="SIZE_AFTER_PERSPECTIVE_REMOVAL"
          min="1"
          max="200"
          value="${config.detection_params.sizeAfterPerspectiveRemoval}"
          step="1"
        />
      </div>

      <div class="parameter-item">
        <span>Contrast</span>
        <input
          id="detection_params-contrast"
          class="param-input"
          type="number"
          name="IMAGE_CONTRAST"
          min="-100"
          max="100"
          value="${config.feed_params.contrast}"
          step="1"
        />
      </div>

      <div class="parameter-item">
        <span>Brightness</span>
        <input
          id="detection_params-brightness"
          class="param-input"
          type="number"
          name="IMAGE_BRIGHTNESS"
          min="-100"
          max="100"
          value="${config.feed_params.brightness}"
          step="1"
        />
      </div>

      <div class="parameter-item">
        <span>Grayscale</span>
        <input
          id="detection_params-grayscale"
          class="param-input"
          type="number"
          name="IMAGE_GRAYSCALE"
          min="0"
          max="100"
          value="${config.feed_params.grayscale}"
          step="1"
        />
      </div>

      <div class="parameter-item">
        <span>Torch</span>
        <input
          id="detection_params-torch"
          class="param-input isCheck"
          type="checkbox"
          name="torch"
          ${config.camera_params.torch ? 'checked' : ''}
        />
      </div>

      <div class="parameter-item">
        <span>Mirror Camera</span>
        <input
          id="detection_params-flip"
          class="param-input isCheck"
          type="checkbox"
          name="Mirror"
          ${config.feed_params.flip ? 'checked' : ''}
        />
      </div>
    </div>
  </div>
</div>`);

/***/ }),

/***/ "../src/Marker.js":
/*!************************!*\
  !*** ../src/Marker.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/Vec2.js */ "../src/utils/Vec2.js");

const MARKER_TIMEOUT_DEFAULT = 1000 / 20;
const AXIS_VEC = new _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"](1, 0);

class Marker {
  constructor(ID) {
    this.timeout = MARKER_TIMEOUT_DEFAULT;
    this.timestamp = this.timeout;
    this.present = false;
    this.center = new _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"](0, 0);
    this.position = new _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"](0, 0);
    this.rawPosition = new _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"](0, 0);
    this.deltaPosition = new _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"](0, 0);
    this.corners = [];
    this.rawRotation = 0;
    this.rotation = 0;
    this.deltaRotation = 0;
    this.scale = 29 / 640; // Default based on my markers and camera default of 640

    this.enable3D = false;
    this.avgSideLength = 0;
    this.deltaAvgSideLength = 0;
    this.id = ID;
    this.positionSmoothing = 0; // Percent of previous position carried over into the new one, must be btw 0 and 1

    this.rotationSmoothing = 0; // Percent of previous rotation carried over into the new one, must be btw 0 and 1
  }

  setScale(markerSize, cameraWidth) {
    this.scale = markerSize / cameraWidth;
  }

  update(m) {
    this.timestamp = 0;
    this.present = true;
    this.deltaPosition.copy(this.position); // console.log(this.position.x);

    let prevCenter = this.center.clone();
    this.center.x = this.center.x * this.positionSmoothing + m.center.x * (1 - this.positionSmoothing);
    this.center.y = this.center.y * this.positionSmoothing + m.center.y * (1 - this.positionSmoothing);
    this.position.copy(this.center);
    this.rawPosition.copy(m.center);
    this.deltaPosition.sub(this.position).scale(-1); // bc we changed center this should be cool now
    // For some reason it broke. This will just fix it real quick

    if (isNaN(this.center.x) || isNaN(this.center.y)) {
      this.center.set(prevCenter.x, prevCenter.y);
      this.position.set(prevCenter.x, prevCenter.y);
      this.deltaPosition.set(0, 0);
      this.rawP;
      console.warn('BEHOLDER: Detection Broke Momentarily');
    } // WASTED MEMORY


    this.corners = m.corners.map(c => c); // wtf, seems like a lazy way to copy, but whatever
    // Rotation stuff, now with smoothing!

    this.rawRotation = AXIS_VEC.angleBetween(_utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"].sub(this.corners[0], this.corners[1]));
    const prevRotationVec = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"].fromAngle(this.rotation);
    const newRotationVec = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"].fromAngle(this.rawRotation);
    const smoothedRotationVec = new _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"](prevRotationVec.x * this.rotationSmoothing + (newRotationVec.x * 1 - this.rotationSmoothing), prevRotationVec.y * this.rotationSmoothing + (newRotationVec.y * 1 - this.rotationSmoothing));
    this.rotation = smoothedRotationVec.getAngle();
    this.deltaRotation = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_0__["default"].angleBetween(prevRotationVec, smoothedRotationVec); // could save memory with regular for loop here, or maybe a reduce?

    const sides = this.corners.map((c, i, arr) => {
      const dx = c.x - arr[(i + 1) % arr.length].x;
      const dy = c.y - arr[(i + 1) % arr.length].y;
      return Math.sqrt(dx * dx + dy * dy);
    });
    this.deltaAvgSideLength = -this.avgSideLength;
    this.avgSideLength = (sides[0] + sides[1] + sides[2] + sides[3]) / 4;
    this.deltaAvgSideLength += this.avgSideLength; // TODO: what the heck is this?

    if (this.enable3D) {
      this.center.z = this.avgPerim / this.scale;
    }
  }

  updatePresence(dt) {
    // throttle max timeout to 50
    this.timestamp += dt > 30 ? 30 : dt;
    this.present = this.timestamp >= this.timeout ? false : true;
  }

}

/* harmony default export */ __webpack_exports__["default"] = (Marker);

/***/ }),

/***/ "../src/MarkerPair.js":
/*!****************************!*\
  !*** ../src/MarkerPair.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "../node_modules/mathjs/main/esm/index.js");
/* harmony import */ var _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/Vec2.js */ "../src/utils/Vec2.js");
/* harmony import */ var _utils_Distortion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Distortion.js */ "../src/utils/Distortion.js");




class MarkerPair {
  constructor(markerA, markerB) {
    this.markerA = markerA;
    this.markerB = markerB;
  }

  get isPresent() {
    return this.markerA.present && this.markerB.present;
  }

  get angleBetween() {
    return this.markerA.rotation - this.markerB.rotation;
  }

  get distance() {
    return _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(this.markerA.center, this.markerB.center).mag();
  }

  getRelativePosition(markerSize) {
    //actual physical width of markerA
    if (this.isPresent()) {
      const physCorners = [{
        x: -markerSize / 2,
        y: -markerSize / 2
      }, {
        x: markerSize / 2,
        y: -markerSize / 2
      }, {
        x: markerSize / 2,
        y: markerSize / 2
      }, {
        x: -markerSize / 2,
        y: markerSize / 2
      }];
      const matrixRect2Quad = Object(_utils_Distortion_js__WEBPACK_IMPORTED_MODULE_2__["calDistortionMatrices"])(this.markerA.corners[0], this.markerA.corners[1], this.markerA.corners[2], this.markerA.corners[3], physCorners[0], physCorners[1], physCorners[2], physCorners[3]);
      const matrixQuad2Rect = mathjs__WEBPACK_IMPORTED_MODULE_0__["inv"](matrixRect2Quad);

      const q2r = v => Object(_utils_Distortion_js__WEBPACK_IMPORTED_MODULE_2__["matrixTransform"])(matrixQuad2Rect, v);

      const centerA = q2r(this.markerA.center);
      const centerB = q2r(this.markerB.center);
      const cornerA0 = q2r(this.markerA.corners[0]);
      const cornerA1 = q2r(this.markerA.corners[1]);
      const cornerB0 = q2r(this.markerB.corners[0]);
      const cornerB1 = q2r(this.markerB.corners[1]);
      const vecAB = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(centerA, centerB);
      const vecA01 = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(cornerA0, cornerA1);
      const d = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__["default"].mag(vecAB);
      const head = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__["default"].angleBetween(vecA01, vecAB);
      const angle = _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__["default"].angleBetween(vecA01, _utils_Vec2_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(cornerB0, cornerB1));
      return {
        distance: d,
        heading: head,
        rotation: angle
      };
    }

    return {
      distance: undefined,
      heading: undefined,
      rotation: undefined
    }; // Maybe return something else if not present?
  }

}

/* harmony default export */ __webpack_exports__["default"] = (MarkerPair);

/***/ }),

/***/ "../src/Webcam.js":
/*!************************!*\
  !*** ../src/Webcam.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const VIDEO_SIZES = [{
  width: 320,
  height: 240
}, {
  width: 640,
  height: 360
}, {
  width: 1280,
  height: 720
}, {
  width: 1920,
  height: 1080
}];

class WebcamManager {
  constructor(video) {
    this.video = video;
    this.vStream = null;
    this.videoLoaded = false; // set up camera feeds

    const cameraSelect = document.querySelector('#camera_param_id');
    cameraSelect.innerHTML = "";
    navigator.mediaDevices.enumerateDevices().then(feeds => {
      feeds.forEach((f, i) => {
        if (f.kind === "videoinput") {
          const opt = document.createElement("option");
          opt.value = f.deviceId;
          opt.label = f.label ? f.label : i;
          if (i === 0) opt.selected = true;
          cameraSelect.appendChild(opt);
        }
      });
    });
  }

  startCameraFeed({
    videoSize: videoSizeIndex,
    camID,
    rearCamera,
    torch
  }) {
    const videoSize = VIDEO_SIZES[videoSizeIndex];
    this.videoLoaded = false;

    if (this.vStream) {
      this.vStream.getTracks().forEach(track => {
        track.stop();
      });
    } // I don't really understand this part but it needs to be done every time


    if (navigator.mediaDevices.getUserMedia === undefined) {
      navigator.mediaDevices.getUserMedia = function (constraints) {
        var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

        if (!getUserMedia) {
          return Promise.reject(new Error("getUserMedia is not implemented in this browser"));
        }

        return new Promise(function (res, rej) {
          getUserMedia.call(navigator, constraints, res, rej);
        });
      };
    } // I guess we are returning the whole promise.


    return navigator.mediaDevices.getUserMedia({
      video: {
        // solve for portrait vs landscape?
        width: window.innerWidth > window.innerHeight ? videoSize.width : videoSize.height,
        height: window.innerWidth > window.innerHeight ? videoSize.width : videoSize.height,
        deviceId: camID !== 0 && !rearCamera ? {
          exact: camID
        } : {},
        facingMode: rearCamera ? {
          exact: 'environment'
        } : {}
      }
    }).then(s => {
      if ("srcObject" in this.video) {
        this.video.srcObject = s;
      } else {
        this.video.src = window.URL.createObjectURL(s);
      } // For if we ever need to figure out the actual size of the thing we are using
      // console.log(s.getVideoTracks()[0].getSettings().height, s.getVideoTracks()[0].getSettings().width);


      this.video.width = s.getVideoTracks()[0].getSettings().width;
      this.video.height = s.getVideoTracks()[0].getSettings().height;
      this.video.play();
      this.vStream = s;
      this.videoLoaded = true;
      console.log('BEHOLDER: new video stream established');

      if (torch) {
        if (ImageCapture) {
          // Clements turn on the flashlight code, feels hacky
          const track = s.getVideoTracks()[0]; //Create image capture object and get camera capabilities

          const imageCapture = new ImageCapture(track);
          const photoCapabilities = imageCapture.getPhotoCapabilities().then(() => {
            //todo: check if camera has a torch
            if (track.getCapabilities().torch !== undefined) {
              track.applyConstraints({
                advanced: [{
                  torch
                }]
              });
            }
          });
        } else {
          console.warn('**BEHOLDER WARNING** Flahslight/Torch functionality is not supported on this device or platform');
        }
      }
    }); // PROBABLY NEED ERROR HANDLING HERE
  }

}

/* harmony default export */ __webpack_exports__["default"] = (WebcamManager);

/***/ }),

/***/ "../src/aruco/cv.js":
/*!**************************!*\
  !*** ../src/aruco/cv.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
Copyright (c) 2011 Juan Mellado

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/*
SOME changes by Peter Gyory
*/

/*
References:
- "OpenCV: Open Computer Vision Library"
  http://sourceforge.net/projects/opencvlibrary/
- "Stack Blur: Fast But Goodlooking"
  http://incubator.quasimondo.com/processing/fast_blur_deluxe.php
*/
var CV = CV || {};

CV.Image = function (width, height, data) {
  this.width = width || 0;
  this.height = height || 0;
  this.data = data || [];
};

CV.grayscale = function (imageSrc, imageDst) {
  var src = imageSrc.data,
      dst = imageDst.data,
      len = src.length,
      i = 0,
      j = 0;

  for (; i < len; i += 4) {
    dst[j++] = src[i] * 0.299 + src[i + 1] * 0.587 + src[i + 2] * 0.114 + 0.5 & 0xff;
  }

  imageDst.width = imageSrc.width;
  imageDst.height = imageSrc.height;
  return imageDst;
};

CV.threshold = function (imageSrc, imageDst, threshold) {
  var src = imageSrc.data,
      dst = imageDst.data,
      len = src.length,
      tab = [],
      i;

  for (i = 0; i < 256; ++i) {
    tab[i] = i <= threshold ? 0 : 255;
  }

  for (i = 0; i < len; ++i) {
    dst[i] = tab[src[i]];
  }

  imageDst.width = imageSrc.width;
  imageDst.height = imageSrc.height;
  return imageDst;
};

CV.adaptiveThreshold = function (imageSrc, imageDst, kernelSize, threshold) {
  var src = imageSrc.data,
      dst = imageDst.data,
      len = src.length,
      tab = [],
      i;
  CV.stackBoxBlur(imageSrc, imageDst, kernelSize);

  for (i = 0; i < 768; ++i) {
    tab[i] = i - 255 <= -threshold ? 255 : 0;
  }

  for (i = 0; i < len; ++i) {
    dst[i] = tab[src[i] - dst[i] + 255];
  }

  imageDst.width = imageSrc.width;
  imageDst.height = imageSrc.height;
  return imageDst;
};

CV.otsu = function (imageSrc) {
  var src = imageSrc.data,
      len = src.length,
      hist = [],
      threshold = 0,
      sum = 0,
      sumB = 0,
      wB = 0,
      wF = 0,
      max = 0,
      mu,
      between,
      i;

  for (i = 0; i < 256; ++i) {
    hist[i] = 0;
  }

  for (i = 0; i < len; ++i) {
    hist[src[i]]++;
  }

  for (i = 0; i < 256; ++i) {
    sum += hist[i] * i;
  }

  for (i = 0; i < 256; ++i) {
    wB += hist[i];

    if (0 !== wB) {
      wF = len - wB;

      if (0 === wF) {
        break;
      }

      sumB += hist[i] * i;
      mu = sumB / wB - (sum - sumB) / wF;
      between = wB * wF * mu * mu;

      if (between > max) {
        max = between;
        threshold = i;
      }
    }
  }

  return threshold;
};

CV.stackBoxBlurMult = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265];
CV.stackBoxBlurShift = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13];

CV.BlurStack = function () {
  this.color = 0;
  this.next = null;
};

CV.stackBoxBlur = function (imageSrc, imageDst, kernelSize) {
  var src = imageSrc.data,
      dst = imageDst.data,
      height = imageSrc.height,
      width = imageSrc.width,
      heightMinus1 = height - 1,
      widthMinus1 = width - 1,
      size = kernelSize + kernelSize + 1,
      radius = kernelSize + 1,
      mult = CV.stackBoxBlurMult[kernelSize],
      shift = CV.stackBoxBlurShift[kernelSize],
      stack,
      stackStart,
      color,
      sum,
      pos,
      start,
      p,
      x,
      y,
      i;
  stack = stackStart = new CV.BlurStack();

  for (i = 1; i < size; ++i) {
    stack = stack.next = new CV.BlurStack();
  }

  stack.next = stackStart;
  pos = 0;

  for (y = 0; y < height; ++y) {
    start = pos;
    color = src[pos];
    sum = radius * color;
    stack = stackStart;

    for (i = 0; i < radius; ++i) {
      stack.color = color;
      stack = stack.next;
    }

    for (i = 1; i < radius; ++i) {
      stack.color = src[pos + i];
      sum += stack.color;
      stack = stack.next;
    }

    stack = stackStart;

    for (x = 0; x < width; ++x) {
      dst[pos++] = sum * mult >>> shift;
      p = x + radius;
      p = start + (p < widthMinus1 ? p : widthMinus1);
      sum -= stack.color - src[p];
      stack.color = src[p];
      stack = stack.next;
    }
  }

  for (x = 0; x < width; ++x) {
    pos = x;
    start = pos + width;
    color = dst[pos];
    sum = radius * color;
    stack = stackStart;

    for (i = 0; i < radius; ++i) {
      stack.color = color;
      stack = stack.next;
    }

    for (i = 1; i < radius; ++i) {
      stack.color = dst[start];
      sum += stack.color;
      stack = stack.next;
      start += width;
    }

    stack = stackStart;

    for (y = 0; y < height; ++y) {
      dst[pos] = sum * mult >>> shift;
      p = y + radius;
      p = x + (p < heightMinus1 ? p : heightMinus1) * width;
      sum -= stack.color - dst[p];
      stack.color = dst[p];
      stack = stack.next;
      pos += width;
    }
  }

  return imageDst;
};

CV.gaussianBlur = function (imageSrc, imageDst, imageMean, kernelSize) {
  var kernel = CV.gaussianKernel(kernelSize);
  imageDst.width = imageSrc.width;
  imageDst.height = imageSrc.height;
  imageMean.width = imageSrc.width;
  imageMean.height = imageSrc.height;
  CV.gaussianBlurFilter(imageSrc, imageMean, kernel, true);
  CV.gaussianBlurFilter(imageMean, imageDst, kernel, false);
  return imageDst;
};

CV.findContours = function (imageSrc, binary) {
  var width = imageSrc.width,
      height = imageSrc.height,
      contours = [],
      src,
      deltas,
      pos,
      pix,
      nbd,
      outer,
      hole,
      i,
      j;
  src = CV.binaryBorder(imageSrc, binary);
  deltas = CV.neighborhoodDeltas(width + 2);
  pos = width + 3;
  nbd = 1;

  for (i = 0; i < height; ++i, pos += 2) {
    for (j = 0; j < width; ++j, ++pos) {
      pix = src[pos];

      if (0 !== pix) {
        outer = hole = false;

        if (1 === pix && 0 === src[pos - 1]) {
          outer = true;
        } else if (pix >= 1 && 0 === src[pos + 1]) {
          hole = true;
        }

        if (outer || hole) {
          ++nbd;
          contours.push(CV.borderFollowing(src, pos, nbd, {
            x: j,
            y: i
          }, hole, deltas));
        }
      }
    }
  }

  return contours;
};

CV.borderFollowing = function (src, pos, nbd, point, hole, deltas) {
  var contour = [],
      pos1,
      pos3,
      pos4,
      s,
      s_end,
      s_prev;
  contour.hole = hole;
  s = s_end = hole ? 0 : 4;

  do {
    s = s - 1 & 7;
    pos1 = pos + deltas[s];

    if (src[pos1] !== 0) {
      break;
    }
  } while (s !== s_end);

  if (s === s_end) {
    src[pos] = -nbd;
    contour.push({
      x: point.x,
      y: point.y
    });
  } else {
    pos3 = pos;
    s_prev = s ^ 4;

    while (true) {
      s_end = s;

      do {
        pos4 = pos3 + deltas[++s];
      } while (src[pos4] === 0);

      s &= 7;

      if (s - 1 >>> 0 < s_end >>> 0) {
        src[pos3] = -nbd;
      } else if (src[pos3] === 1) {
        src[pos3] = nbd;
      }

      contour.push({
        x: point.x,
        y: point.y
      });
      s_prev = s;
      point.x += CV.neighborhood[s][0];
      point.y += CV.neighborhood[s][1];

      if (pos4 === pos && pos3 === pos1) {
        break;
      }

      pos3 = pos4;
      s = s + 4 & 7;
    }
  }

  return contour;
};

CV.neighborhood = [[1, 0], [1, -1], [0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1]];

CV.neighborhoodDeltas = function (width) {
  var deltas = [],
      len = CV.neighborhood.length,
      i = 0;

  for (; i < len; ++i) {
    deltas[i] = CV.neighborhood[i][0] + CV.neighborhood[i][1] * width;
  }

  return deltas.concat(deltas);
};

CV.approxPolyDP = function (contour, epsilon) {
  var slice = {
    start_index: 0,
    end_index: 0
  },
      right_slice = {
    start_index: 0,
    end_index: 0
  },
      poly = [],
      stack = [],
      len = contour.length,
      pt,
      start_pt,
      end_pt,
      dist,
      max_dist,
      le_eps,
      dx,
      dy,
      i,
      j,
      k;
  epsilon *= epsilon;
  k = 0;

  for (i = 0; i < 3; ++i) {
    max_dist = 0;
    k = (k + right_slice.start_index) % len;
    start_pt = contour[k];

    if (++k === len) {
      k = 0;
    }

    for (j = 1; j < len; ++j) {
      pt = contour[k];

      if (++k === len) {
        k = 0;
      }

      dx = pt.x - start_pt.x;
      dy = pt.y - start_pt.y;
      dist = dx * dx + dy * dy;

      if (dist > max_dist) {
        max_dist = dist;
        right_slice.start_index = j;
      }
    }
  }

  if (max_dist <= epsilon) {
    poly.push({
      x: start_pt.x,
      y: start_pt.y
    });
  } else {
    slice.start_index = k;
    slice.end_index = right_slice.start_index += slice.start_index;
    right_slice.start_index -= right_slice.start_index >= len ? len : 0;
    right_slice.end_index = slice.start_index;

    if (right_slice.end_index < right_slice.start_index) {
      right_slice.end_index += len;
    }

    stack.push({
      start_index: right_slice.start_index,
      end_index: right_slice.end_index
    });
    stack.push({
      start_index: slice.start_index,
      end_index: slice.end_index
    });
  }

  while (stack.length !== 0) {
    slice = stack.pop();
    end_pt = contour[slice.end_index % len];
    start_pt = contour[k = slice.start_index % len];

    if (++k === len) {
      k = 0;
    }

    if (slice.end_index <= slice.start_index + 1) {
      le_eps = true;
    } else {
      max_dist = 0;
      dx = end_pt.x - start_pt.x;
      dy = end_pt.y - start_pt.y;

      for (i = slice.start_index + 1; i < slice.end_index; ++i) {
        pt = contour[k];

        if (++k === len) {
          k = 0;
        }

        dist = Math.abs((pt.y - start_pt.y) * dx - (pt.x - start_pt.x) * dy);

        if (dist > max_dist) {
          max_dist = dist;
          right_slice.start_index = i;
        }
      }

      le_eps = max_dist * max_dist <= epsilon * (dx * dx + dy * dy);
    }

    if (le_eps) {
      poly.push({
        x: start_pt.x,
        y: start_pt.y
      });
    } else {
      right_slice.end_index = slice.end_index;
      slice.end_index = right_slice.start_index;
      stack.push({
        start_index: right_slice.start_index,
        end_index: right_slice.end_index
      });
      stack.push({
        start_index: slice.start_index,
        end_index: slice.end_index
      });
    }
  }

  return poly;
};

CV.warp = function (imageSrc, imageDst, contour, warpSize) {
  var src = imageSrc.data,
      dst = imageDst.data,
      width = imageSrc.width,
      height = imageSrc.height,
      pos = 0,
      sx1,
      sx2,
      dx1,
      dx2,
      sy1,
      sy2,
      dy1,
      dy2,
      p1,
      p2,
      p3,
      p4,
      m,
      r,
      s,
      t,
      u,
      v,
      w,
      x,
      y,
      i,
      j;
  m = CV.getPerspectiveTransform(contour, warpSize - 1);
  r = m[8];
  s = m[2];
  t = m[5];

  for (i = 0; i < warpSize; ++i) {
    r += m[7];
    s += m[1];
    t += m[4];
    u = r;
    v = s;
    w = t;

    for (j = 0; j < warpSize; ++j) {
      u += m[6];
      v += m[0];
      w += m[3];
      x = v / u;
      y = w / u;
      sx1 = x >>> 0;
      sx2 = sx1 === width - 1 ? sx1 : sx1 + 1;
      dx1 = x - sx1;
      dx2 = 1.0 - dx1;
      sy1 = y >>> 0;
      sy2 = sy1 === height - 1 ? sy1 : sy1 + 1;
      dy1 = y - sy1;
      dy2 = 1.0 - dy1;
      p1 = p2 = sy1 * width;
      p3 = p4 = sy2 * width;
      dst[pos++] = dy2 * (dx2 * src[p1 + sx1] + dx1 * src[p2 + sx2]) + dy1 * (dx2 * src[p3 + sx1] + dx1 * src[p4 + sx2]) & 0xff;
    }
  }

  imageDst.width = warpSize;
  imageDst.height = warpSize;
  return imageDst;
};

CV.getPerspectiveTransform = function (src, size) {
  var rq = CV.square2quad(src);
  rq[0] /= size;
  rq[1] /= size;
  rq[3] /= size;
  rq[4] /= size;
  rq[6] /= size;
  rq[7] /= size;
  return rq;
};

CV.square2quad = function (src) {
  var sq = [],
      px,
      py,
      dx1,
      dx2,
      dy1,
      dy2,
      den;
  px = src[0].x - src[1].x + src[2].x - src[3].x;
  py = src[0].y - src[1].y + src[2].y - src[3].y;

  if (0 === px && 0 === py) {
    sq[0] = src[1].x - src[0].x;
    sq[1] = src[2].x - src[1].x;
    sq[2] = src[0].x;
    sq[3] = src[1].y - src[0].y;
    sq[4] = src[2].y - src[1].y;
    sq[5] = src[0].y;
    sq[6] = 0;
    sq[7] = 0;
    sq[8] = 1;
  } else {
    dx1 = src[1].x - src[2].x;
    dx2 = src[3].x - src[2].x;
    dy1 = src[1].y - src[2].y;
    dy2 = src[3].y - src[2].y;
    den = dx1 * dy2 - dx2 * dy1;
    sq[6] = (px * dy2 - dx2 * py) / den;
    sq[7] = (dx1 * py - px * dy1) / den;
    sq[8] = 1;
    sq[0] = src[1].x - src[0].x + sq[6] * src[1].x;
    sq[1] = src[3].x - src[0].x + sq[7] * src[3].x;
    sq[2] = src[0].x;
    sq[3] = src[1].y - src[0].y + sq[6] * src[1].y;
    sq[4] = src[3].y - src[0].y + sq[7] * src[3].y;
    sq[5] = src[0].y;
  }

  return sq;
};

CV.isContourConvex = function (contour) {
  var orientation = 0,
      convex = true,
      len = contour.length,
      i = 0,
      j = 0,
      cur_pt,
      prev_pt,
      dxdy0,
      dydx0,
      dx0,
      dy0,
      dx,
      dy;
  prev_pt = contour[len - 1];
  cur_pt = contour[0];
  dx0 = cur_pt.x - prev_pt.x;
  dy0 = cur_pt.y - prev_pt.y;

  for (; i < len; ++i) {
    if (++j === len) {
      j = 0;
    }

    prev_pt = cur_pt;
    cur_pt = contour[j];
    dx = cur_pt.x - prev_pt.x;
    dy = cur_pt.y - prev_pt.y;
    dxdy0 = dx * dy0;
    dydx0 = dy * dx0;
    orientation |= dydx0 > dxdy0 ? 1 : dydx0 < dxdy0 ? 2 : 3;

    if (3 === orientation) {
      convex = false;
      break;
    }

    dx0 = dx;
    dy0 = dy;
  }

  return convex;
};

CV.perimeter = function (poly) {
  var len = poly.length,
      i = 0,
      j = len - 1,
      p = 0.0,
      dx,
      dy;

  for (; i < len; j = i++) {
    dx = poly[i].x - poly[j].x;
    dy = poly[i].y - poly[j].y;
    p += Math.sqrt(dx * dx + dy * dy);
  }

  return p;
};

CV.minEdgeLength = function (poly) {
  var len = poly.length,
      i = 0,
      j = len - 1,
      min = Infinity,
      d,
      dx,
      dy;

  for (; i < len; j = i++) {
    dx = poly[i].x - poly[j].x;
    dy = poly[i].y - poly[j].y;
    d = dx * dx + dy * dy;

    if (d < min) {
      min = d;
    }
  }

  return Math.sqrt(min);
};

CV.countNonZero = function (imageSrc, square) {
  var src = imageSrc.data,
      height = square.height,
      width = square.width,
      pos = square.x + square.y * imageSrc.width,
      span = imageSrc.width - width,
      nz = 0,
      i,
      j;

  for (i = 0; i < height; ++i) {
    for (j = 0; j < width; ++j) {
      if (0 !== src[pos++]) {
        ++nz;
      }
    }

    pos += span;
  }

  return nz;
};

CV.binaryBorder = function (imageSrc, dst) {
  var src = imageSrc.data,
      height = imageSrc.height,
      width = imageSrc.width,
      posSrc = 0,
      posDst = 0,
      i,
      j;

  for (j = -2; j < width; ++j) {
    dst[posDst++] = 0;
  }

  for (i = 0; i < height; ++i) {
    dst[posDst++] = 0;

    for (j = 0; j < width; ++j) {
      dst[posDst++] = 0 === src[posSrc++] ? 0 : 1;
    }

    dst[posDst++] = 0;
  }

  for (j = -2; j < width; ++j) {
    dst[posDst++] = 0;
  }

  return dst;
};

/* harmony default export */ __webpack_exports__["default"] = (CV);

/***/ }),

/***/ "../src/aruco/index.js":
/*!*****************************!*\
  !*** ../src/aruco/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cv */ "../src/aruco/cv.js");
/*
Copyright (c) 2011 Juan Mellado

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/*
References:
- "ArUco: a minimal library for Augmented Reality applications based on OpenCv"
  http://www.uco.es/investiga/grupos/ava/node/26
*/

const AR = {};
let cameraParams = {
  MIN_MARKER_DISTANCE: 10,
  MIN_MARKER_PERIMETER: 0.2,
  MAX_MARKER_PERIMETER: 0.8,
  SIZE_AFTER_PERSPECTIVE_REMOVAL: 49
};

AR.setCameraParams = params => {
  cameraParams = { ...cameraParams,
    ...params
  };
};

function xIntercept(m0, m1, p0, p1) {
  return (p0.y - p1.y + m1 * p1.x - m0 * p0.x) / (m1 - m0);
} // find y for given x of a line with slope m that intersects with point p


function lineY(p, m, x) {
  return m * (x - p.x) + p.y;
}

AR.Marker = (id, corners) => {
  const m0 = (corners[0].y - corners[2].y) / (corners[0].x - corners[2].x);
  const m1 = (corners[1].y - corners[3].y) / (corners[1].x - corners[3].x);
  const center = {
    x: 0,
    y: 0
  };
  center.x = xIntercept(m0, m1, corners[0], corners[1]);
  center.y = lineY(corners[0], m0, center.x);
  return {
    id,
    corners,
    center
  };
};

AR.Detector = function () {
  this.grey = new _cv__WEBPACK_IMPORTED_MODULE_0__["default"].Image();
  this.thres = new _cv__WEBPACK_IMPORTED_MODULE_0__["default"].Image();
  this.homography = new _cv__WEBPACK_IMPORTED_MODULE_0__["default"].Image();
  this.binary = [];
  this.contours = [];
  this.polys = [];
  this.candidates = [];
};

AR.Detector.prototype.detect = function (image, detectionParams) {
  _cv__WEBPACK_IMPORTED_MODULE_0__["default"].grayscale(image, this.grey);
  _cv__WEBPACK_IMPORTED_MODULE_0__["default"].adaptiveThreshold(this.grey, this.thres, 2, 7);
  this.contours = _cv__WEBPACK_IMPORTED_MODULE_0__["default"].findContours(this.thres, this.binary);
  this.candidates = this.findCandidates(this.contours, image.width * detectionParams.minMarkerPerimeter, image.width * detectionParams.maxMarkerPerimeter, 0.05, 10);
  this.candidates = this.clockwiseCorners(this.candidates);
  this.candidates = this.notTooNear(this.candidates, detectionParams.minMarkerDistance);
  return this.findMarkers(this.grey, this.candidates, detectionParams.sizeAfterPerspectiveRemoval);
};

AR.Detector.prototype.findCandidates = function (contours, minSize, maxSize, epsilon, minLength) {
  var candidates = [],
      len = contours.length,
      contour,
      poly,
      i;
  this.polys = [];

  for (i = 0; i < len; ++i) {
    contour = contours[i];

    if (contour.length >= minSize && contour.length <= maxSize) {
      poly = _cv__WEBPACK_IMPORTED_MODULE_0__["default"].approxPolyDP(contour, contour.length * epsilon);
      this.polys.push(poly);

      if (4 === poly.length && _cv__WEBPACK_IMPORTED_MODULE_0__["default"].isContourConvex(poly)) {
        if (_cv__WEBPACK_IMPORTED_MODULE_0__["default"].minEdgeLength(poly) >= minLength) {
          candidates.push(poly);
        }
      }
    }
  }

  return candidates;
};

AR.Detector.prototype.clockwiseCorners = function (candidates) {
  var len = candidates.length,
      dx1,
      dx2,
      dy1,
      dy2,
      swap,
      i;

  for (i = 0; i < len; ++i) {
    dx1 = candidates[i][1].x - candidates[i][0].x;
    dy1 = candidates[i][1].y - candidates[i][0].y;
    dx2 = candidates[i][2].x - candidates[i][0].x;
    dy2 = candidates[i][2].y - candidates[i][0].y;

    if (dx1 * dy2 - dy1 * dx2 < 0) {
      swap = candidates[i][1];
      candidates[i][1] = candidates[i][3];
      candidates[i][3] = swap;
    }
  }

  return candidates;
};

AR.Detector.prototype.notTooNear = function (candidates, minDist) {
  var notTooNear = [],
      len = candidates.length,
      dist,
      dx,
      dy,
      i,
      j,
      k;

  for (i = 0; i < len; ++i) {
    for (j = i + 1; j < len; ++j) {
      dist = 0;

      for (k = 0; k < 4; ++k) {
        dx = candidates[i][k].x - candidates[j][k].x;
        dy = candidates[i][k].y - candidates[j][k].y;
        dist += dx * dx + dy * dy;
      }

      if (dist / 4 < minDist * minDist) {
        if (_cv__WEBPACK_IMPORTED_MODULE_0__["default"].perimeter(candidates[i]) < _cv__WEBPACK_IMPORTED_MODULE_0__["default"].perimeter(candidates[j])) {
          candidates[i].tooNear = true;
        } else {
          candidates[j].tooNear = true;
        }
      }
    }
  }

  for (i = 0; i < len; ++i) {
    if (!candidates[i].tooNear) {
      notTooNear.push(candidates[i]);
    }
  }

  return notTooNear;
};

AR.Detector.prototype.findMarkers = function (imageSrc, candidates, warpSize) {
  var markers = [],
      len = candidates.length,
      candidate,
      marker,
      i;

  for (i = 0; i < len; ++i) {
    candidate = candidates[i];
    _cv__WEBPACK_IMPORTED_MODULE_0__["default"].warp(imageSrc, this.homography, candidate, warpSize);
    _cv__WEBPACK_IMPORTED_MODULE_0__["default"].threshold(this.homography, this.homography, _cv__WEBPACK_IMPORTED_MODULE_0__["default"].otsu(this.homography));
    marker = this.getMarker(this.homography, candidate);

    if (marker) {
      markers.push(marker);
    }
  }

  return markers;
};

AR.Detector.prototype.getMarker = function (imageSrc, candidate) {
  var width = imageSrc.width / 7 >>> 0,
      minZero = width * width >> 1,
      bits = [],
      rotations = [],
      distances = [],
      square,
      pair,
      inc,
      i,
      j;

  for (i = 0; i < 7; ++i) {
    inc = 0 === i || 6 === i ? 1 : 6;

    for (j = 0; j < 7; j += inc) {
      square = {
        x: j * width,
        y: i * width,
        width: width,
        height: width
      };

      if (_cv__WEBPACK_IMPORTED_MODULE_0__["default"].countNonZero(imageSrc, square) > minZero) {
        return null;
      }
    }
  }

  for (i = 0; i < 5; ++i) {
    bits[i] = [];

    for (j = 0; j < 5; ++j) {
      square = {
        x: (j + 1) * width,
        y: (i + 1) * width,
        width: width,
        height: width
      };
      bits[i][j] = _cv__WEBPACK_IMPORTED_MODULE_0__["default"].countNonZero(imageSrc, square) > minZero ? 1 : 0;
    }
  }

  rotations[0] = bits;
  distances[0] = this.hammingDistance(rotations[0]);
  pair = {
    first: distances[0],
    second: 0
  };

  for (i = 1; i < 4; ++i) {
    rotations[i] = this.rotate(rotations[i - 1]);
    distances[i] = this.hammingDistance(rotations[i]);

    if (distances[i] < pair.first) {
      pair.first = distances[i];
      pair.second = i;
    }
  }

  if (0 !== pair.first) {
    return null;
  }

  return AR.Marker(this.mat2id(rotations[pair.second]), this.rotate2(candidate, 4 - pair.second));
};

AR.Detector.prototype.hammingDistance = function (bits) {
  var ids = [[1, 0, 0, 0, 0], [1, 0, 1, 1, 1], [0, 1, 0, 0, 1], [0, 1, 1, 1, 0]],
      dist = 0,
      sum,
      minSum,
      i,
      j,
      k;

  for (i = 0; i < 5; ++i) {
    minSum = Infinity;

    for (j = 0; j < 4; ++j) {
      sum = 0;

      for (k = 0; k < 5; ++k) {
        sum += bits[i][k] === ids[j][k] ? 0 : 1;
      }

      if (sum < minSum) {
        minSum = sum;
      }
    }

    dist += minSum;
  }

  return dist;
};

AR.Detector.prototype.mat2id = function (bits) {
  var id = 0,
      i;

  for (i = 0; i < 5; ++i) {
    id <<= 1;
    id |= bits[i][1];
    id <<= 1;
    id |= bits[i][3];
  }

  return id;
};

AR.Detector.prototype.rotate = function (src) {
  var dst = [],
      len = src.length,
      i,
      j;

  for (i = 0; i < len; ++i) {
    dst[i] = [];

    for (j = 0; j < src[i].length; ++j) {
      dst[i][j] = src[src[i].length - j - 1][i];
    }
  }

  return dst;
};

AR.Detector.prototype.rotate2 = function (src, rotation) {
  var dst = [],
      len = src.length,
      i;

  for (i = 0; i < len; ++i) {
    dst[i] = src[(rotation + i) % len];
  }

  return dst;
};

const DEFAULT_DEFECTION_PARAMS = {};

class ArucoDetector {
  constructor() {
    this.grey = new _cv__WEBPACK_IMPORTED_MODULE_0__["default"].Image();
    this.thres = new _cv__WEBPACK_IMPORTED_MODULE_0__["default"].Image();
    this.homography = new _cv__WEBPACK_IMPORTED_MODULE_0__["default"].Image();
    this.binary = [];
    this.contours = [];
    this.polys = [];
    this.candidates = [];
    this.detectionParams = { ...DEFAULT_DEFECTION_PARAMS,
      ...newParams
    };
  }

  updateParams(newParams) {
    this.detectionParams = { ...this.detectionParams,
      ...newParams
    };
  }

}

/* harmony default export */ __webpack_exports__["default"] = (AR);

/***/ }),

/***/ "../src/index.js":
/*!***********************!*\
  !*** ../src/index.js ***!
  \***********************/
/*! exports provided: update, getAllMarkers, getMarker, getMarkerPair, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "update", function() { return update; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllMarkers", function() { return getAllMarkers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMarker", function() { return getMarker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMarkerPair", function() { return getMarkerPair; });
/* harmony import */ var _Webcam_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Webcam.js */ "../src/Webcam.js");
/* harmony import */ var _DetectionManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DetectionManager.js */ "../src/DetectionManager.js");
/* harmony import */ var _Marker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Marker.js */ "../src/Marker.js");
/* harmony import */ var _MarkerPair_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MarkerPair.js */ "../src/MarkerPair.js");
/* harmony import */ var _HTMLOverlay_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HTMLOverlay.js */ "../src/HTMLOverlay.js");
/* harmony import */ var _BeholderStyles_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BeholderStyles.css */ "../src/BeholderStyles.css");






const defaultConfig = {
  camera_params: {
    camID: undefined,
    videoSize: 1,
    torch: false,
    rearCamera: false
  },
  detection_params: {
    minMarkerDistance: 10,
    minMarkerPerimeter: 0.02,
    maxMarkerPerimeter: 0.8,
    sizeAfterPerspectiveRemoval: 49,
    area: {
      start: {
        x: 0,
        y: 0
      },
      end: {
        x: 1,
        y: 1
      }
    }
  },
  feed_params: {
    contrast: 0,
    brightness: 0,
    grayscale: 0,
    flip: false
  },
  // TODO: These are not implemented atm, should default to hidden or no?
  overlay_params: {
    present: true,
    // if false, will set the overlay to not have any visible elements, but it will still exist in the html for detection
    hide: true // sets the overlay to hide on the left of the screen with a button on top

  }
}; // some stuff for detection area

let isSettingDetectionArea = false;
let detectionAreaClicks = [];
let isPanelHidden = false;
const MARKER_COUNT = 100;
const MARKERS = []; // pass this to html function

let config = {};
let webcamMan, detectionMan; // This has side effects to the MARKERS array so users can access it
// which markers changed, overlay canvas, overlay ctx

let overlayCanvas, overlayCtx, videoElement, videoCanvas, videoCtx, debugCanvas, debugCtx;

const updateMarkers = markerChange => {
  const [markers, dt] = markerChange;

  if (videoCanvas.width !== videoElement.width) {
    videoCanvas.width = videoElement.width;
    videoCanvas.height = videoElement.height;
  } // only draw when panel visible


  if (!isPanelHidden) {
    videoCtx.drawImage(videoElement, 0, 0, videoCanvas.width, videoCanvas.height); // detection area!

    videoCtx.strokeStyle = "#00FF00";
    videoCtx.beginPath();
    videoCtx.moveTo(videoCanvas.width * config.detection_params.area.start.x, videoCanvas.height * config.detection_params.area.start.y);
    videoCtx.lineTo(videoCanvas.width * config.detection_params.area.end.x, videoCanvas.height * config.detection_params.area.start.y);
    videoCtx.lineTo(videoCanvas.width * config.detection_params.area.end.x, videoCanvas.height * config.detection_params.area.end.y);
    videoCtx.lineTo(videoCanvas.width * config.detection_params.area.start.x, videoCanvas.height * config.detection_params.area.end.y);
    videoCtx.closePath();
    videoCtx.stroke();
  } // const offsetX = config.detection_params.area.start.x * overlayCanvas.width;
  // const offsetY = config.detection_params.area.start.y * overlayCanvas.height;
  // overlayCtx.save();
  // overlayCtx.translate(offsetX, offsetY);


  debugCanvas.width = overlayCanvas.width;
  debugCanvas.height = overlayCanvas.height;
  if (!isPanelHidden) debugCtx.clearRect(0, 0, debugCanvas.width, debugCanvas.height);
  markers.forEach(detectedMarker => {
    const m = MARKERS.find(x => x.id === detectedMarker.id);
    if (m === undefined) return;
    m.update(detectedMarker); // this is all draw code, bail if panel hidden

    if (isPanelHidden) return;
    const center = m.center;
    const corners = m.corners;
    const angle = m.rotation;
    debugCtx.strokeStyle = "#FF00AA";
    debugCtx.beginPath();
    corners.forEach((c, i) => {
      debugCtx.moveTo(c.x, c.y);
      let c2 = corners[(i + 1) % corners.length];
      debugCtx.lineTo(c2.x, c2.y);
    });
    debugCtx.stroke();
    debugCtx.closePath(); // draw first corner

    debugCtx.strokeStyle = "blue";
    debugCtx.strokeRect(corners[0].x - 2, corners[0].y - 2, 4, 4);
    debugCtx.strokeStyle = "#FF00AA";
    debugCtx.strokeRect(center.x - 1, center.y - 1, 2, 2);
    debugCtx.font = "12px monospace";
    debugCtx.textAlign = "center";
    debugCtx.fillStyle = "#FF55AA";
    debugCtx.fillText(`ID=${m.id}`, center.x, center.y - 7);
    debugCtx.fillText(angle.toFixed(2), center.x, center.y + 15);
  }); // overlayCtx.restore();

  MARKERS.forEach(m => m.updatePresence(dt));
};

const init = (domRoot, userConfig, markerList) => {
  if (markerList) {
    if (markerList.length <= 0) console.warn('BEHOLDER WARNING: your provided list of markers is empty, no markers will be tracked');
    markerList.forEach(id => MARKERS.push(new _Marker_js__WEBPACK_IMPORTED_MODULE_2__["default"](id)));
  } else {
    for (let i = 0; i < MARKER_COUNT; i++) {
      MARKERS.push(new _Marker_js__WEBPACK_IMPORTED_MODULE_2__["default"](i));
    }
  }

  const root = document.querySelector(domRoot); // If it's undefined just intialize with an empty config

  config = defaultConfig; // Merge default and user config

  if (userConfig) {
    if (userConfig.camera_params) config.camera_params = { ...config.camera_params,
      ...userConfig.camera_params
    };
    if (userConfig.detection_params) config.detection_params = { ...config.detection_params,
      ...userConfig.detection_params
    };
    if (userConfig.feed_params) config.feed_params = { ...config.feed_params,
      ...userConfig.feed_params
    };
    if (userConfig.overlay_params) config.overlay_params = { ...config.overlay_params,
      ...userConfig.overlay_params
    };
  }

  root.innerHTML = Object(_HTMLOverlay_js__WEBPACK_IMPORTED_MODULE_4__["default"])(config, _BeholderStyles_css__WEBPACK_IMPORTED_MODULE_5__["default"]);
  videoElement = root.querySelector('#beholder-video');
  videoElement.setAttribute("playsinline", "playsinline"); // IOS HACK HERE

  document.querySelector('#set-area-instructions').innerHTML = `
          start=x:${config.detection_params.area.start.x.toFixed(2)},y:${config.detection_params.area.start.y.toFixed(2)}&nbsp;&nbsp;&nbsp;
          end=x:${config.detection_params.area.end.x.toFixed(2)},y:${config.detection_params.area.end.y.toFixed(2)}
          `; // Set up all of the dom events

  root.querySelector('#toggle-screen').addEventListener('click', () => {
    if (isPanelHidden) root.querySelector('#detection-panel').classList.remove('hidden');else root.querySelector('#detection-panel').classList.add('hidden');
    isPanelHidden = !isPanelHidden;
  });
  isPanelHidden = config.overlay_params.hide;
  if (isPanelHidden) root.querySelector('#detection-panel').classList.add('hidden'); // set detection area code

  root.querySelector('#set-area').addEventListener('click', () => {
    isSettingDetectionArea = true;
    detectionAreaClicks = [];
    document.querySelector('#set-area-instructions').innerHTML = `Select top-left corner.`;
  });
  root.querySelector('#detection-canvas-overlay').addEventListener('click', e => {
    if (isSettingDetectionArea) {
      detectionAreaClicks.push({
        x: e.offsetX / e.target.clientWidth,
        y: e.offsetY / e.target.clientHeight
      }); // NEED TO SOLVE FOR EDGE CASE WHERE THE 2ND POINT IS ABOVE/BEHIND THE 1ST

      if (detectionAreaClicks.length > 1) {
        isSettingDetectionArea = false;
        config.detection_params.area = {
          start: {
            x: Math.min(detectionAreaClicks[0].x, detectionAreaClicks[1].x),
            y: Math.min(detectionAreaClicks[0].y, detectionAreaClicks[1].y)
          },
          end: {
            x: Math.max(detectionAreaClicks[0].x, detectionAreaClicks[1].x),
            y: Math.max(detectionAreaClicks[0].y, detectionAreaClicks[1].y)
          }
        };
        document.querySelector('#set-area-instructions').innerHTML = `
          start=x:${config.detection_params.area.start.x.toFixed(2)},y:${config.detection_params.area.start.y.toFixed(2)}&nbsp;&nbsp;&nbsp;
          end=x:${config.detection_params.area.end.x.toFixed(2)},y:${config.detection_params.area.end.y.toFixed(2)}
          `;
      } else if (detectionAreaClicks.length === 1) {
        document.querySelector('#set-area-instructions').innerHTML = `Select bottom-right corner.`;
      }
    }
  }); // reset detection area

  root.querySelector('#clear-area').addEventListener('click', () => {
    config.detection_params.area = {
      start: {
        x: 0,
        y: 0
      },
      end: {
        x: 1,
        y: 1
      }
    };
    document.querySelector('#set-area-instructions').innerHTML = `
          start=x:${config.detection_params.area.start.x.toFixed(2)},y:${config.detection_params.area.start.y.toFixed(2)}&nbsp;&nbsp;&nbsp;
          end=x:${config.detection_params.area.end.x.toFixed(2)},y:${config.detection_params.area.end.y.toFixed(2)}
          `;
  }); // camera stream change events

  root.querySelector('#camera_param_id').addEventListener('change', e => {
    config.camera_params.camID = e.target.value; // re-attach camera stream

    webcamMan.startCameraFeed(config.camera_params);
  });
  root.querySelector('#camera_param_videoSize').addEventListener('change', e => {
    config.camera_params.videoSize = e.target.value; // re-attach camera stream

    webcamMan.startCameraFeed(config.camera_params);
  });
  root.querySelector('#detection_params-minMarkerDistance').addEventListener('change', e => config.detection_params.minMarkerDistance = e.target.value);
  root.querySelector('#detection_params-minMarkerPerimeter').addEventListener('change', e => config.detection_params.minMarkerPerimeter = e.target.value);
  root.querySelector('#detection_params-maxMarkerPerimeter').addEventListener('change', e => config.detection_params.maxMarkerPerimeter = e.target.value);
  root.querySelector('#detection_params-sizeAfterPerspectiveRemoval').addEventListener('change', e => config.detection_params.sizeAfterPerspectiveRemoval = e.target.value);
  root.querySelector('#detection_params-contrast').addEventListener('change', e => config.feed_params.contrast = e.target.value);
  root.querySelector('#detection_params-brightness').addEventListener('change', e => config.feed_params.brightness = e.target.value);
  root.querySelector('#detection_params-grayscale').addEventListener('change', e => config.feed_params.grayscale = e.target.value);
  root.querySelector('#detection_params-flip').addEventListener('change', e => config.feed_params.flip = e.target.checked);
  root.querySelector('#detection_params-torch').addEventListener('change', e => {
    config.camera_params.torch = e.target.checked;
    webcamMan.startCameraFeed(config.camera_params);
  }); // set up service managers

  webcamMan = new _Webcam_js__WEBPACK_IMPORTED_MODULE_0__["default"](root.querySelector('#beholder-video'));
  detectionMan = new _DetectionManager_js__WEBPACK_IMPORTED_MODULE_1__["default"](root.querySelector('#detection-canvas'), root.querySelector('#beholder-video'));
  videoCanvas = root.querySelector('#detection-canvas-overlay');
  videoCtx = videoCanvas.getContext('2d');
  overlayCanvas = root.querySelector('#detection-canvas');
  overlayCtx = overlayCanvas.getContext('2d');
  debugCanvas = root.querySelector('#debug-canvas');
  debugCtx = debugCanvas.getContext('2d'); // fix camera on resize

  window.addEventListener('resize', () => webcamMan.startCameraFeed(config.camera_params));
  webcamMan.startCameraFeed(config.camera_params);
  return;
};

let prevTime = Date.now();
const update = () => {
  const currentTime = Date.now();
  const dt = currentTime - prevTime;
  prevTime = currentTime; // check to see that we do indeed have video?
  // run detection only if we are not requesting a new video

  if (webcamMan.videoLoaded) {
    const detectedMarkers = detectionMan.detect(dt, config.feed_params, config.detection_params); // update and draw markers

    updateMarkers(detectedMarkers);
  }
};

const hide = () => {
  document.querySelector('#detection-panel').classList.add('hidden');
};

const show = () => {
  document.querySelector('#detection-panel').classList.remove('hidden');
};

const getAllMarkers = () => {
  return MARKERS;
};
const getMarker = id => {
  // Maybe have this error if you are looking for an untracked marker
  return MARKERS.find(x => x.id === id);
};
const getMarkerPair = (idA, idB) => {
  // throw error here
  return new _MarkerPair_js__WEBPACK_IMPORTED_MODULE_3__["default"](MARKERS[idA], MARKERS[idB]);
};
/* harmony default export */ __webpack_exports__["default"] = ({
  init,
  update,
  getMarker,
  getMarkerPair,
  getAllMarkers,
  hide,
  show,
  getVideo: () => webcamMan.video
});

/***/ }),

/***/ "../src/utils/Distortion.js":
/*!**********************************!*\
  !*** ../src/utils/Distortion.js ***!
  \**********************************/
/*! exports provided: calDistortionMatrices, matrixTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calDistortionMatrices", function() { return calDistortionMatrices; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrixTransform", function() { return matrixTransform; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "../node_modules/mathjs/main/esm/index.js");

function calDistortionMatrices(q1, q2, q3, q4, r1, r2, r3, r4) {
  const matrixA = mathjs__WEBPACK_IMPORTED_MODULE_0__["matrix"]([[r1.x, r1.y, 1, 0, 0, 0, -q1.x * r1.x, -q1.x * r1.y], [0, 0, 0, r1.x, r1.y, 1, -q1.y * r1.x, -q1.y * r1.y], [r2.x, r2.y, 1, 0, 0, 0, -q2.x * r2.x, -q2.x * r2.y], [0, 0, 0, r2.x, r2.y, 1, -q2.y * r2.x, -q2.y * r2.y], [r3.x, r3.y, 1, 0, 0, 0, -q3.x * r3.x, -q3.x * r3.y], [0, 0, 0, r3.x, r3.y, 1, -q3.y * r3.x, -q3.y * r3.y], [r4.x, r4.y, 1, 0, 0, 0, -q4.x * r4.x, -q4.x * r4.y], [0, 0, 0, r4.x, r4.y, 1, -q4.y * r4.x, -q4.y * r4.y]]);
  const matrixB = mathjs__WEBPACK_IMPORTED_MODULE_0__["matrix"]([[q1.x], [q1.y], [q2.x], [q2.y], [q3.x], [q3.y], [q4.x], [q4.y]]);
  const s = mathjs__WEBPACK_IMPORTED_MODULE_0__["lusolve"](matrixA, matrixB);
  return mathjs__WEBPACK_IMPORTED_MODULE_0__["matrix"]([[mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](0, 0)), mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](1, 0)), mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](2, 0))], [mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](3, 0)), mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](4, 0)), mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](5, 0))], [mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](6, 0)), mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](s, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](7, 0)), 1]]);
} // transformation of v using matrix m
// v = 2D vector of the format {x:X, y:Y}

function matrixTransform(m, v) {
  const matrixV = mathjs__WEBPACK_IMPORTED_MODULE_0__["matrix"]([[v.x], [v.y], [1]]);
  const result = mathjs__WEBPACK_IMPORTED_MODULE_0__["multiply"](m, matrixV);
  return {
    x: mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](result, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](0, 0)) / mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](result, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](2, 0)),
    y: mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](result, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](1, 0)) / mathjs__WEBPACK_IMPORTED_MODULE_0__["subset"](result, mathjs__WEBPACK_IMPORTED_MODULE_0__["index"](2, 0))
  };
}

/***/ }),

/***/ "../src/utils/Vec2.js":
/*!****************************!*\
  !*** ../src/utils/Vec2.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Vec2; });
class Vec2 {
  // Static stuff
  static sub(v1, v2) {
    return new Vec2(v2.x - v1.x, v2.y - v1.y);
  }

  static fromAngle(a) {
    return new Vec2(Math.cos(a), Math.sin(a));
  }

  static add(v1, v2) {
    return new Vec2(v2.x + v1.x, v2.y + v1.y);
  }

  static addScalar(v1, v2, s) {
    const x = v1.x + v2.x * s;
    const y = v1.y + v2.y * s;
    return new Vec2(x, y);
  }

  static mag(v) {
    return Math.sqrt(v.x * v.x + v.y * v.y);
  }

  static angleBetween(v1, v2) {
    return Math.atan2(v1.x * v2.y - v1.y * v2.x, v1.x * v2.x + v1.y * v2.y);
  }

  static rotate(v, angle) {
    const x = v.x * Math.cos(angle) - v.y * Math.sin(angle);
    const y = v.x * Math.sin(angle) + v.y * Math.cos(angle);
    return new Vec2(x, y);
  }

  static scale(v, s) {
    return new Vec2(v.x * s, v.y * s);
  }

  static dist(v1, v2) {
    return new Vec2(v2.x - v1.x, v2.y - v1.y).mag();
  }

  static dist2(v1, v2) {
    return new Vec2(v2.x - v1.x, v2.y - v1.y).mag2();
  }

  static normalize(v) {
    const m = v.mag();
    return new Vec2(v.x / m, v.y / m);
  }

  static copy(v) {
    return new Vec2(v.x, v.y);
  } // Instance methods


  constructor(x, y) {
    this.x = x;
    this.y = y;
  }

  clone() {
    return new Vec2(this.x, this.y);
  }

  copy(v) {
    this.x = v.x;
    this.y = v.y;
    return this;
  }

  add(v) {
    this.x += v.x;
    this.y += v.y;
    return this;
  }

  addScalar(v, s) {
    this.x += v.x * s;
    this.y += v.y * s;
    return this;
  }

  set(x, y) {
    this.x = x;
    this.y = y;
    return this;
  }

  sub(v) {
    this.x -= v.x;
    this.y -= v.y;
    return this;
  }

  scale(s) {
    this.x *= s;
    this.y *= s;
    return this;
  }

  mag() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }

  mag2() {
    return this.x * this.x + this.y * this.y;
  }

  dist(v) {
    return Vec2.sub(this, v).mag();
  }

  dist2(v) {
    return Vec2.sub(this, v).mag2();
  }

  normalize() {
    const m = this.mag();
    this.x /= m;
    this.y /= m;
    return this;
  }

  getAngle() {
    return Math.atan2(this.y, this.x);
  }

  rotate(angle) {
    const x = this.x * Math.cos(angle) - this.y * Math.sin(angle);
    const y = this.x * Math.sin(angle) + this.y * Math.cos(angle);
    this.x = x;
    this.y = y;
    return this;
  }

  dot(v) {
    return this.x * v.x + this.y * v.y;
  }

  angleBetween(v) {
    return Math.atan2(this.x * v.y - this.y * v.x, this.x * v.x + this.y * v.y);
  }

}

/***/ }),

/***/ "./canvas_test.js":
/*!************************!*\
  !*** ./canvas_test.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/index */ "../src/index.js");

let canvas, ctx;

function onLoad() {
  _src_index__WEBPACK_IMPORTED_MODULE_0__["default"].init('#beholder-root', {
    camera_params: {
      videoSize: 1,
      torch: false,
      rearCamera: false
    },
    detection_params: {
      minMarkerDistance: 10,
      minMarkerPerimeter: 0.02,
      maxMarkerPerimeter: 0.8,
      sizeAfterPerspectiveRemoval: 49
    },
    feed_params: {
      contrast: 0,
      brightness: 0,
      grayscale: 0,
      flip: false
    },
    overlay_params: {
      present: true,
      // if false, will set the overlay to not have any visible elements, but it will still exist in the html for detection
      hide: true // sets the overlay to hide on the left of the screen with a button on top

    }
  }); // optional params?

  canvas = document.querySelector('#example-canvas');
  canvas.width = 640;
  canvas.height = 480;
  ctx = canvas.getContext('2d');
  _src_index__WEBPACK_IMPORTED_MODULE_0__["default"].getMarker(4).positionSmoothing = 0.4;
  _src_index__WEBPACK_IMPORTED_MODULE_0__["default"].getMarker(4).rotationSmoothing = 0.4;
  requestAnimationFrame(update);
}

let prevTime = Date.now();

function update() {
  const currentTime = Date.now();
  const dt = currentTime - prevTime;
  prevTime = currentTime;
  _src_index__WEBPACK_IMPORTED_MODULE_0__["default"].update();
  ctx.clearRect(0, 0, 640, 480);
  _src_index__WEBPACK_IMPORTED_MODULE_0__["default"].getAllMarkers().forEach(m => {
    if (!m.present) return;
    const c = m.corners;
    ctx.lineWidth = 2;
    ctx.strokeStyle = '#000';
    ctx.beginPath();
    ctx.moveTo(c[0].x, c[0].y);
    ctx.lineTo(c[1].x, c[1].y);
    ctx.lineTo(c[2].x, c[2].y);
    ctx.lineTo(c[3].x, c[3].y);
    ctx.lineTo(c[0].x, c[0].y);
    ctx.stroke();
  });
  requestAnimationFrame(update);
}

window.onload = onLoad;

/***/ }),

/***/ 1:
/*!******************************!*\
  !*** multi ./canvas_test.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./canvas_test.js */"./canvas_test.js");


/***/ })

/******/ });
//# sourceMappingURL=canvas_test.js.map